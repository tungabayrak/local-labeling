(self.webpackChunkstatic = self.webpackChunkstatic || []).push([[99961], {
    79217: (e, t, n) => {
        "use strict";
        n.d(t, {
            Qc: () => B,
            qu: () => $
        });
        var r = n(938302)
          , i = n(224952)
          , s = n.n(i);
        function o() {
            return o = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n)
                        ({}).hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            }
            ,
            o.apply(null, arguments)
        }
        (0,
        r.Cy)("@khanacademy/kas", "0.4.1");
        !function() {
            var e = function(e, t, n, r) {
                for (n = n || {},
                r = e.length; r--; n[e[r]] = t)
                    ;
                return n
            }
              , t = [1, 11]
              , n = [1, 9]
              , r = [8, 17]
              , i = [6, 11]
              , s = [6, 11, 13, 17]
              , o = {
                trace: function() {},
                yy: {},
                symbols_: {
                    error: 2,
                    unitvalue: 3,
                    magnitude: 4,
                    unit: 5,
                    EOF: 6,
                    float: 7,
                    POW: 8,
                    int: 9,
                    multatoms: 10,
                    DIV: 11,
                    expatom: 12,
                    MUL: 13,
                    atom: 14,
                    "^": 15,
                    nat: 16,
                    ATOM: 17,
                    FLOAT: 18,
                    NAT: 19,
                    NEG: 20,
                    $accept: 0,
                    $end: 1
                },
                terminals_: {
                    2: "error",
                    6: "EOF",
                    8: "POW",
                    11: "DIV",
                    13: "MUL",
                    15: "^",
                    17: "ATOM",
                    18: "FLOAT",
                    19: "NAT",
                    20: "NEG"
                },
                productions_: [0, [3, 3], [3, 2], [4, 3], [4, 1], [5, 3], [5, 1], [10, 3], [10, 2], [10, 1], [12, 3], [12, 1], [14, 1], [7, 1], [7, 1], [16, 1], [9, 2], [9, 1]],
                performAction: function(e, t, n, r, i, s, o) {
                    var a = s.length - 1;
                    switch (i) {
                    case 1:
                        return {
                            type: "unitMagnitude",
                            magnitude: s[a - 2],
                            unit: s[a - 1]
                        };
                    case 2:
                        return {
                            type: "unitStandalone",
                            unit: s[a - 1]
                        };
                    case 3:
                        this.$ = s[a - 2] + "e" + s[a];
                        break;
                    case 4:
                    case 13:
                    case 14:
                    case 15:
                    case 17:
                        this.$ = s[a];
                        break;
                    case 5:
                        this.$ = {
                            num: s[a - 2],
                            denom: s[a]
                        };
                        break;
                    case 6:
                        this.$ = {
                            num: s[a],
                            denom: null
                        };
                        break;
                    case 7:
                        this.$ = [s[a - 2]].concat(s[a]);
                        break;
                    case 8:
                        this.$ = [s[a - 1]].concat(s[a]);
                        break;
                    case 9:
                        this.$ = [s[a]];
                        break;
                    case 10:
                        this.$ = {
                            name: s[a - 2],
                            pow: s[a]
                        };
                        break;
                    case 11:
                        this.$ = {
                            name: s[a],
                            pow: 1
                        };
                        break;
                    case 12:
                        this.$ = e;
                        break;
                    case 16:
                        this.$ = "-" + s[a]
                    }
                },
                table: [{
                    3: 1,
                    4: 2,
                    5: 3,
                    7: 4,
                    10: 5,
                    12: 8,
                    14: 10,
                    16: 7,
                    17: t,
                    18: [1, 6],
                    19: n
                }, {
                    1: [3]
                }, {
                    5: 12,
                    10: 5,
                    12: 8,
                    14: 10,
                    17: t
                }, {
                    6: [1, 13]
                }, {
                    8: [1, 14],
                    17: [2, 4]
                }, {
                    6: [2, 6],
                    11: [1, 15]
                }, e(r, [2, 13]), e(r, [2, 14]), e(i, [2, 9], {
                    12: 8,
                    14: 10,
                    10: 17,
                    13: [1, 16],
                    17: t
                }), e([6, 8, 11, 13, 17], [2, 15]), e(s, [2, 11], {
                    15: [1, 18]
                }), e([6, 11, 13, 15, 17], [2, 12]), {
                    6: [1, 19]
                }, {
                    1: [2, 2]
                }, {
                    9: 20,
                    19: [1, 22],
                    20: [1, 21]
                }, {
                    10: 23,
                    12: 8,
                    14: 10,
                    17: t
                }, {
                    10: 24,
                    12: 8,
                    14: 10,
                    17: t
                }, e(i, [2, 8]), {
                    16: 25,
                    19: n
                }, {
                    1: [2, 1]
                }, {
                    17: [2, 3]
                }, {
                    19: [1, 26]
                }, {
                    17: [2, 17]
                }, {
                    6: [2, 5]
                }, e(i, [2, 7]), e(s, [2, 10]), {
                    17: [2, 16]
                }],
                defaultActions: {
                    13: [2, 2],
                    19: [2, 1],
                    20: [2, 3],
                    22: [2, 17],
                    23: [2, 5],
                    26: [2, 16]
                },
                parseError: function(e, t) {
                    if (!t.recoverable)
                        throw new Error(e);
                    this.trace(e)
                },
                parse: function(e) {
                    var t = this
                      , n = [0]
                      , r = [null]
                      , i = []
                      , s = this.table
                      , o = ""
                      , a = 0
                      , l = 0
                      , c = i.slice.call(arguments, 1)
                      , h = Object.create(this.lexer)
                      , p = {
                        yy: {}
                    };
                    for (var u in this.yy)
                        Object.prototype.hasOwnProperty.call(this.yy, u) && (p.yy[u] = this.yy[u]);
                    h.setInput(e, p.yy),
                    p.yy.lexer = h,
                    p.yy.parser = this,
                    void 0 === h.yylloc && (h.yylloc = {});
                    var d = h.yylloc;
                    i.push(d);
                    var m = h.options && h.options.ranges;
                    "function" == typeof p.yy.parseError ? this.parseError = p.yy.parseError : this.parseError = Object.getPrototypeOf(this).parseError;
                    for (var f, g, v, y, b, x, w, k, S, E = {}; ; ) {
                        if (g = n[n.length - 1],
                        this.defaultActions[g] ? v = this.defaultActions[g] : (null == f && (S = void 0,
                        "number" != typeof (S = h.lex() || 1) && (S = t.symbols_[S] || S),
                        f = S),
                        v = s[g] && s[g][f]),
                        void 0 === v || !v.length || !v[0]) {
                            var M = "";
                            for (b in k = [],
                            s[g])
                                this.terminals_[b] && b > 2 && k.push("'" + this.terminals_[b] + "'");
                            M = h.showPosition ? "Parse error on line " + (a + 1) + ":\n" + h.showPosition() + "\nExpecting " + k.join(", ") + ", got '" + (this.terminals_[f] || f) + "'" : "Parse error on line " + (a + 1) + ": Unexpected " + (1 == f ? "end of input" : "'" + (this.terminals_[f] || f) + "'"),
                            this.parseError(M, {
                                text: h.match,
                                token: this.terminals_[f] || f,
                                line: h.yylineno,
                                loc: d,
                                expected: k
                            })
                        }
                        if (v[0]instanceof Array && v.length > 1)
                            throw new Error("Parse Error: multiple actions possible at state: " + g + ", token: " + f);
                        switch (v[0]) {
                        case 1:
                            n.push(f),
                            r.push(h.yytext),
                            i.push(h.yylloc),
                            n.push(v[1]),
                            f = null,
                            l = h.yyleng,
                            o = h.yytext,
                            a = h.yylineno,
                            d = h.yylloc;
                            break;
                        case 2:
                            if (x = this.productions_[v[1]][1],
                            E.$ = r[r.length - x],
                            E._$ = {
                                first_line: i[i.length - (x || 1)].first_line,
                                last_line: i[i.length - 1].last_line,
                                first_column: i[i.length - (x || 1)].first_column,
                                last_column: i[i.length - 1].last_column
                            },
                            m && (E._$.range = [i[i.length - (x || 1)].range[0], i[i.length - 1].range[1]]),
                            void 0 !== (y = this.performAction.apply(E, [o, l, a, p.yy, v[1], r, i].concat(c))))
                                return y;
                            x && (n = n.slice(0, -1 * x * 2),
                            r = r.slice(0, -1 * x),
                            i = i.slice(0, -1 * x)),
                            n.push(this.productions_[v[1]][0]),
                            r.push(E.$),
                            i.push(E._$),
                            w = s[n[n.length - 2]][n[n.length - 1]],
                            n.push(w);
                            break;
                        case 3:
                            return !0
                        }
                    }
                    return !0
                }
            }
              , a = {
                EOF: 1,
                parseError: function(e, t) {
                    if (!this.yy.parser)
                        throw new Error(e);
                    this.yy.parser.parseError(e, t)
                },
                setInput: function(e, t) {
                    return this.yy = t || this.yy || {},
                    this._input = e,
                    this._more = this._backtrack = this.done = !1,
                    this.yylineno = this.yyleng = 0,
                    this.yytext = this.matched = this.match = "",
                    this.conditionStack = ["INITIAL"],
                    this.yylloc = {
                        first_line: 1,
                        first_column: 0,
                        last_line: 1,
                        last_column: 0
                    },
                    this.options.ranges && (this.yylloc.range = [0, 0]),
                    this.offset = 0,
                    this
                },
                input: function() {
                    var e = this._input[0];
                    return this.yytext += e,
                    this.yyleng++,
                    this.offset++,
                    this.match += e,
                    this.matched += e,
                    e.match(/(?:\r\n?|\n).*/g) ? (this.yylineno++,
                    this.yylloc.last_line++) : this.yylloc.last_column++,
                    this.options.ranges && this.yylloc.range[1]++,
                    this._input = this._input.slice(1),
                    e
                },
                unput: function(e) {
                    var t = e.length
                      , n = e.split(/(?:\r\n?|\n)/g);
                    this._input = e + this._input,
                    this.yytext = this.yytext.substr(0, this.yytext.length - t),
                    this.offset -= t;
                    var r = this.match.split(/(?:\r\n?|\n)/g);
                    this.match = this.match.substr(0, this.match.length - 1),
                    this.matched = this.matched.substr(0, this.matched.length - 1),
                    n.length - 1 && (this.yylineno -= n.length - 1);
                    var i = this.yylloc.range;
                    return this.yylloc = {
                        first_line: this.yylloc.first_line,
                        last_line: this.yylineno + 1,
                        first_column: this.yylloc.first_column,
                        last_column: n ? (n.length === r.length ? this.yylloc.first_column : 0) + r[r.length - n.length].length - n[0].length : this.yylloc.first_column - t
                    },
                    this.options.ranges && (this.yylloc.range = [i[0], i[0] + this.yyleng - t]),
                    this.yyleng = this.yytext.length,
                    this
                },
                more: function() {
                    return this._more = !0,
                    this
                },
                reject: function() {
                    return this.options.backtrack_lexer ? (this._backtrack = !0,
                    this) : this.parseError("Lexical error on line " + (this.yylineno + 1) + ". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n" + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    })
                },
                less: function(e) {
                    this.unput(this.match.slice(e))
                },
                pastInput: function() {
                    var e = this.matched.substr(0, this.matched.length - this.match.length);
                    return (e.length > 20 ? "..." : "") + e.substr(-20).replace(/\n/g, "")
                },
                upcomingInput: function() {
                    var e = this.match;
                    return e.length < 20 && (e += this._input.substr(0, 20 - e.length)),
                    (e.substr(0, 20) + (e.length > 20 ? "..." : "")).replace(/\n/g, "")
                },
                showPosition: function() {
                    var e = this.pastInput()
                      , t = new Array(e.length + 1).join("-");
                    return e + this.upcomingInput() + "\n" + t + "^"
                },
                test_match: function(e, t) {
                    var n, r, i;
                    if (this.options.backtrack_lexer && (i = {
                        yylineno: this.yylineno,
                        yylloc: {
                            first_line: this.yylloc.first_line,
                            last_line: this.last_line,
                            first_column: this.yylloc.first_column,
                            last_column: this.yylloc.last_column
                        },
                        yytext: this.yytext,
                        match: this.match,
                        matches: this.matches,
                        matched: this.matched,
                        yyleng: this.yyleng,
                        offset: this.offset,
                        _more: this._more,
                        _input: this._input,
                        yy: this.yy,
                        conditionStack: this.conditionStack.slice(0),
                        done: this.done
                    },
                    this.options.ranges && (i.yylloc.range = this.yylloc.range.slice(0))),
                    (r = e[0].match(/(?:\r\n?|\n).*/g)) && (this.yylineno += r.length),
                    this.yylloc = {
                        first_line: this.yylloc.last_line,
                        last_line: this.yylineno + 1,
                        first_column: this.yylloc.last_column,
                        last_column: r ? r[r.length - 1].length - r[r.length - 1].match(/\r?\n?/)[0].length : this.yylloc.last_column + e[0].length
                    },
                    this.yytext += e[0],
                    this.match += e[0],
                    this.matches = e,
                    this.yyleng = this.yytext.length,
                    this.options.ranges && (this.yylloc.range = [this.offset, this.offset += this.yyleng]),
                    this._more = !1,
                    this._backtrack = !1,
                    this._input = this._input.slice(e[0].length),
                    this.matched += e[0],
                    n = this.performAction.call(this, this.yy, this, t, this.conditionStack[this.conditionStack.length - 1]),
                    this.done && this._input && (this.done = !1),
                    n)
                        return n;
                    if (this._backtrack) {
                        for (var s in i)
                            this[s] = i[s];
                        return !1
                    }
                    return !1
                },
                next: function() {
                    if (this.done)
                        return this.EOF;
                    var e, t, n, r;
                    this._input || (this.done = !0),
                    this._more || (this.yytext = "",
                    this.match = "");
                    for (var i = this._currentRules(), s = 0; s < i.length; s++)
                        if ((n = this._input.match(this.rules[i[s]])) && (!t || n[0].length > t[0].length)) {
                            if (t = n,
                            r = s,
                            this.options.backtrack_lexer) {
                                if (!1 !== (e = this.test_match(n, i[s])))
                                    return e;
                                if (this._backtrack) {
                                    t = !1;
                                    continue
                                }
                                return !1
                            }
                            if (!this.options.flex)
                                break
                        }
                    return t ? !1 !== (e = this.test_match(t, i[r])) && e : "" === this._input ? this.EOF : this.parseError("Lexical error on line " + (this.yylineno + 1) + ". Unrecognized text.\n" + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    })
                },
                lex: function() {
                    var e = this.next();
                    return e || this.lex()
                },
                begin: function(e) {
                    this.conditionStack.push(e)
                },
                popState: function() {
                    return this.conditionStack.length - 1 > 0 ? this.conditionStack.pop() : this.conditionStack[0]
                },
                _currentRules: function() {
                    return this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1] ? this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules : this.conditions.INITIAL.rules
                },
                topState: function(e) {
                    return (e = this.conditionStack.length - 1 - Math.abs(e || 0)) >= 0 ? this.conditionStack[e] : "INITIAL"
                },
                pushState: function(e) {
                    this.begin(e)
                },
                stateStackSize: function() {
                    return this.conditionStack.length
                },
                options: {},
                performAction: function(e, t, n, r) {
                    switch (n) {
                    case 0:
                        return 11;
                    case 1:
                        return "(";
                    case 2:
                        return ")";
                    case 3:
                        return 8;
                    case 4:
                        return 15;
                    case 5:
                        return 13;
                    case 6:
                        return 18;
                    case 7:
                        return 19;
                    case 8:
                        return 20;
                    case 9:
                    case 10:
                    case 11:
                        return 17;
                    case 12:
                        break;
                    case 13:
                        return 6
                    }
                },
                rules: [/^(?:\/)/, /^(?:\()/, /^(?:\))/, /^(?:(\*|x|\u00d7|\u2219|\u22c5|\u00b7)\s*10\s*\^)/, /^(?:\^)/, /^(?:\*)/, /^(?:[0-9]+\.[0-9]+)/, /^(?:[0-9]+)/, /^(?:-)/, /^(?:\u00b0( ?)[cCfF])/, /^(?:fl\.? oz\.?)/, /^(?:[\u00b5]?([A-Za-z-]+|[\u2103\u2109\u212b]))/, /^(?:\s+)/, /^(?:$)/],
                conditions: {
                    INITIAL: {
                        rules: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],
                        inclusive: !0
                    }
                }
            };
            function l() {
                this.yy = {}
            }
            o.lexer = a,
            l.prototype = o,
            o.Parser = l,
            new l
        }();
        var a, l, c = function() {
            var e = function(e, t, n, r) {
                for (n = n || {},
                r = e.length; r--; n[e[r]] = t)
                    ;
                return n
            }
              , t = [1, 7]
              , n = [1, 17]
              , r = [1, 13]
              , i = [1, 14]
              , s = [1, 15]
              , o = [1, 32]
              , a = [1, 22]
              , l = [1, 23]
              , c = [1, 24]
              , h = [1, 25]
              , p = [1, 26]
              , u = [1, 33]
              , d = [1, 27]
              , m = [1, 28]
              , f = [1, 29]
              , g = [1, 30]
              , v = [1, 20]
              , y = [1, 36]
              , b = [1, 37]
              , x = [5, 6, 8, 10, 33, 35, 41, 43, 45]
              , w = [1, 39]
              , k = [1, 40]
              , S = [5, 6, 8, 10, 12, 14, 16, 19, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 42, 43, 44, 45, 46]
              , E = [10, 16, 19, 21, 22, 28, 29, 30, 31, 32, 34, 37, 39, 42, 43, 44, 46]
              , M = [5, 6, 8, 10, 12, 14, 16, 18, 19, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 42, 43, 44, 45, 46]
              , C = {
                trace: function() {},
                yy: {},
                symbols_: {
                    error: 2,
                    equation: 3,
                    expression: 4,
                    SIGN: 5,
                    EOF: 6,
                    additive: 7,
                    "+": 8,
                    multiplicative: 9,
                    "-": 10,
                    triglog: 11,
                    "*": 12,
                    negative: 13,
                    "/": 14,
                    trig: 15,
                    TRIG: 16,
                    trigfunc: 17,
                    "^": 18,
                    TRIGINV: 19,
                    logbase: 20,
                    ln: 21,
                    log: 22,
                    _: 23,
                    subscriptable: 24,
                    power: 25,
                    primitive: 26,
                    variable: 27,
                    VAR: 28,
                    CONST: 29,
                    INT: 30,
                    FLOAT: 31,
                    "{": 32,
                    "}": 33,
                    "(": 34,
                    ")": 35,
                    function: 36,
                    FUNC: 37,
                    invocation: 38,
                    sqrt: 39,
                    "[": 40,
                    "]": 41,
                    abs: 42,
                    "|": 43,
                    "LEFT|": 44,
                    "RIGHT|": 45,
                    FRAC: 46,
                    $accept: 0,
                    $end: 1
                },
                terminals_: {
                    2: "error",
                    5: "SIGN",
                    6: "EOF",
                    8: "+",
                    10: "-",
                    12: "*",
                    14: "/",
                    16: "TRIG",
                    18: "^",
                    19: "TRIGINV",
                    21: "ln",
                    22: "log",
                    23: "_",
                    28: "VAR",
                    29: "CONST",
                    30: "INT",
                    31: "FLOAT",
                    32: "{",
                    33: "}",
                    34: "(",
                    35: ")",
                    37: "FUNC",
                    39: "sqrt",
                    40: "[",
                    41: "]",
                    42: "abs",
                    43: "|",
                    44: "LEFT|",
                    45: "RIGHT|",
                    46: "FRAC"
                },
                productions_: [0, [3, 4], [3, 2], [3, 1], [4, 1], [7, 3], [7, 3], [7, 1], [9, 2], [9, 3], [9, 3], [9, 1], [13, 2], [13, 1], [15, 1], [17, 1], [17, 3], [17, 1], [20, 1], [20, 1], [20, 3], [11, 2], [11, 2], [11, 1], [25, 3], [25, 1], [27, 1], [24, 3], [24, 1], [24, 1], [24, 1], [24, 1], [24, 3], [24, 3], [36, 1], [38, 4], [38, 4], [38, 7], [38, 4], [38, 3], [38, 3], [38, 4], [26, 1], [26, 1], [26, 7]],
                performAction: function(e, t, n, r, i, s, o) {
                    var a = s.length - 1;
                    switch (i) {
                    case 1:
                        return new r.Eq(s[a - 3],s[a - 2],s[a - 1]);
                    case 2:
                        return s[a - 1];
                    case 3:
                        return new r.Add([]);
                    case 4:
                    case 7:
                    case 11:
                    case 13:
                    case 15:
                    case 20:
                    case 23:
                    case 25:
                    case 42:
                    case 43:
                        this.$ = s[a];
                        break;
                    case 5:
                        this.$ = r.Add.createOrAppend(s[a - 2], s[a]);
                        break;
                    case 6:
                        this.$ = r.Add.createOrAppend(s[a - 2], r.Mul.handleNegative(s[a], "subtract"));
                        break;
                    case 8:
                        this.$ = r.Mul.fold(r.Mul.createOrAppend(s[a - 1], s[a]));
                        break;
                    case 9:
                        this.$ = r.Mul.fold(r.Mul.createOrAppend(s[a - 2], s[a]));
                        break;
                    case 10:
                        this.$ = r.Mul.fold(r.Mul.handleDivide(s[a - 2], s[a]));
                        break;
                    case 12:
                        this.$ = r.Mul.handleNegative(s[a]);
                        break;
                    case 14:
                    case 17:
                        this.$ = [e];
                        break;
                    case 16:
                        this.$ = s[a - 2].concat(s[a]);
                        break;
                    case 18:
                        this.$ = r.Log.natural();
                        break;
                    case 19:
                        this.$ = r.Log.common();
                        break;
                    case 21:
                        this.$ = r.Trig.create(s[a - 1], s[a]);
                        break;
                    case 22:
                        this.$ = r.Log.create(s[a - 1], s[a]);
                        break;
                    case 24:
                        this.$ = new r.Pow(s[a - 2],s[a]);
                        break;
                    case 26:
                    case 34:
                        this.$ = e;
                        break;
                    case 27:
                        this.$ = new r.Var(s[a - 2],s[a]);
                        break;
                    case 28:
                        this.$ = new r.Var(s[a]);
                        break;
                    case 29:
                        this.$ = new r.Const(e.toLowerCase());
                        break;
                    case 30:
                        this.$ = r.Int.create(Number(e));
                        break;
                    case 31:
                        this.$ = r.Float.create(Number(e));
                        break;
                    case 32:
                        this.$ = s[a - 1].completeParse();
                        break;
                    case 33:
                        this.$ = s[a - 1].completeParse().addHint("parens");
                        break;
                    case 35:
                    case 36:
                        this.$ = r.Pow.sqrt(s[a - 1]);
                        break;
                    case 37:
                        this.$ = new r.Pow.nthroot(s[a - 1],s[a - 4]);
                        break;
                    case 38:
                    case 39:
                    case 40:
                        this.$ = new r.Abs(s[a - 1]);
                        break;
                    case 41:
                        this.$ = new r.Func(s[a - 3],s[a - 1]);
                        break;
                    case 44:
                        this.$ = r.Mul.handleDivide(s[a - 4], s[a - 1])
                    }
                },
                table: [{
                    3: 1,
                    4: 2,
                    6: [1, 3],
                    7: 4,
                    9: 5,
                    10: t,
                    11: 8,
                    13: 6,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, {
                    1: [3]
                }, {
                    5: [1, 34],
                    6: [1, 35]
                }, {
                    1: [2, 3]
                }, e([5, 6], [2, 4], {
                    8: y,
                    10: b
                }), e(x, [2, 7], {
                    17: 9,
                    20: 10,
                    25: 11,
                    15: 12,
                    26: 16,
                    24: 18,
                    38: 19,
                    27: 21,
                    36: 31,
                    11: 38,
                    12: w,
                    14: k,
                    16: n,
                    19: r,
                    21: i,
                    22: s,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    37: u,
                    39: d,
                    42: m,
                    44: g,
                    46: v
                }), e(S, [2, 11]), {
                    10: t,
                    11: 8,
                    13: 41,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, e(S, [2, 13]), {
                    10: t,
                    11: 8,
                    13: 42,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, {
                    10: t,
                    11: 8,
                    13: 43,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, e(S, [2, 23]), e(E, [2, 15], {
                    18: [1, 44]
                }), e(E, [2, 17]), e(E, [2, 18]), e(E, [2, 19], {
                    23: [1, 45]
                }), e(S, [2, 25], {
                    18: [1, 46]
                }), e([10, 16, 18, 19, 21, 22, 28, 29, 30, 31, 32, 34, 37, 39, 42, 43, 44, 46], [2, 14]), e(M, [2, 42]), e(M, [2, 43]), {
                    32: [1, 47]
                }, e(M, [2, 28], {
                    23: [1, 48]
                }), e(M, [2, 29]), e(M, [2, 30]), e(M, [2, 31]), {
                    7: 49,
                    9: 5,
                    10: t,
                    11: 8,
                    13: 6,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, {
                    7: 50,
                    9: 5,
                    10: t,
                    11: 8,
                    13: 6,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, {
                    32: [1, 52],
                    34: [1, 51],
                    40: [1, 53]
                }, {
                    34: [1, 54]
                }, {
                    7: 55,
                    9: 5,
                    10: t,
                    11: 8,
                    13: 6,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, {
                    7: 56,
                    9: 5,
                    10: t,
                    11: 8,
                    13: 6,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, {
                    34: [1, 57]
                }, e([5, 6, 8, 10, 12, 14, 16, 18, 19, 21, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 42, 43, 44, 45, 46], [2, 26]), {
                    34: [2, 34]
                }, {
                    4: 58,
                    7: 4,
                    9: 5,
                    10: t,
                    11: 8,
                    13: 6,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, {
                    1: [2, 2]
                }, {
                    9: 59,
                    10: t,
                    11: 8,
                    13: 6,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, {
                    9: 60,
                    10: t,
                    11: 8,
                    13: 6,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, e(S, [2, 8]), {
                    10: t,
                    11: 8,
                    13: 61,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, {
                    10: t,
                    11: 8,
                    13: 62,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, e(S, [2, 12]), e(S, [2, 21]), e(S, [2, 22]), {
                    10: t,
                    11: 8,
                    13: 63,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, {
                    24: 64,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p
                }, {
                    10: t,
                    11: 8,
                    13: 65,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, {
                    7: 66,
                    9: 5,
                    10: t,
                    11: 8,
                    13: 6,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, {
                    24: 67,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p
                }, {
                    8: y,
                    10: b,
                    33: [1, 68]
                }, {
                    8: y,
                    10: b,
                    35: [1, 69]
                }, {
                    7: 70,
                    9: 5,
                    10: t,
                    11: 8,
                    13: 6,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, {
                    7: 71,
                    9: 5,
                    10: t,
                    11: 8,
                    13: 6,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, {
                    7: 72,
                    9: 5,
                    10: t,
                    11: 8,
                    13: 6,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, {
                    7: 73,
                    9: 5,
                    10: t,
                    11: 8,
                    13: 6,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, {
                    8: y,
                    10: b,
                    43: [1, 74]
                }, {
                    8: y,
                    10: b,
                    45: [1, 75]
                }, {
                    7: 76,
                    9: 5,
                    10: t,
                    11: 8,
                    13: 6,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, {
                    6: [1, 77]
                }, e(x, [2, 5], {
                    17: 9,
                    20: 10,
                    25: 11,
                    15: 12,
                    26: 16,
                    24: 18,
                    38: 19,
                    27: 21,
                    36: 31,
                    11: 38,
                    12: w,
                    14: k,
                    16: n,
                    19: r,
                    21: i,
                    22: s,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    37: u,
                    39: d,
                    42: m,
                    44: g,
                    46: v
                }), e(x, [2, 6], {
                    17: 9,
                    20: 10,
                    25: 11,
                    15: 12,
                    26: 16,
                    24: 18,
                    38: 19,
                    27: 21,
                    36: 31,
                    11: 38,
                    12: w,
                    14: k,
                    16: n,
                    19: r,
                    21: i,
                    22: s,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    37: u,
                    39: d,
                    42: m,
                    44: g,
                    46: v
                }), e(S, [2, 9]), e(S, [2, 10]), e(E, [2, 16]), e(E, [2, 20]), e(S, [2, 24]), {
                    8: y,
                    10: b,
                    33: [1, 78]
                }, e(M, [2, 27]), e(M, [2, 32]), e(M, [2, 33]), {
                    8: y,
                    10: b,
                    35: [1, 79]
                }, {
                    8: y,
                    10: b,
                    33: [1, 80]
                }, {
                    8: y,
                    10: b,
                    41: [1, 81]
                }, {
                    8: y,
                    10: b,
                    35: [1, 82]
                }, e(M, [2, 39]), e(M, [2, 40]), {
                    8: y,
                    10: b,
                    35: [1, 83]
                }, {
                    1: [2, 1]
                }, {
                    32: [1, 84]
                }, e(M, [2, 35]), e(M, [2, 36]), {
                    32: [1, 85]
                }, e(M, [2, 38]), e(M, [2, 41]), {
                    7: 86,
                    9: 5,
                    10: t,
                    11: 8,
                    13: 6,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, {
                    7: 87,
                    9: 5,
                    10: t,
                    11: 8,
                    13: 6,
                    15: 12,
                    16: n,
                    17: 9,
                    19: r,
                    20: 10,
                    21: i,
                    22: s,
                    24: 18,
                    25: 11,
                    26: 16,
                    27: 21,
                    28: o,
                    29: a,
                    30: l,
                    31: c,
                    32: h,
                    34: p,
                    36: 31,
                    37: u,
                    38: 19,
                    39: d,
                    42: m,
                    43: f,
                    44: g,
                    46: v
                }, {
                    8: y,
                    10: b,
                    33: [1, 88]
                }, {
                    8: y,
                    10: b,
                    33: [1, 89]
                }, e(M, [2, 44]), e(M, [2, 37])],
                defaultActions: {
                    3: [2, 3],
                    33: [2, 34],
                    35: [2, 2],
                    77: [2, 1]
                },
                parseError: function(e, t) {
                    if (!t.recoverable)
                        throw new Error(e);
                    this.trace(e)
                },
                parse: function(e) {
                    var t = this
                      , n = [0]
                      , r = [null]
                      , i = []
                      , s = this.table
                      , o = ""
                      , a = 0
                      , l = 0
                      , c = i.slice.call(arguments, 1)
                      , h = Object.create(this.lexer)
                      , p = {
                        yy: {}
                    };
                    for (var u in this.yy)
                        Object.prototype.hasOwnProperty.call(this.yy, u) && (p.yy[u] = this.yy[u]);
                    h.setInput(e, p.yy),
                    p.yy.lexer = h,
                    p.yy.parser = this,
                    void 0 === h.yylloc && (h.yylloc = {});
                    var d = h.yylloc;
                    i.push(d);
                    var m = h.options && h.options.ranges;
                    "function" == typeof p.yy.parseError ? this.parseError = p.yy.parseError : this.parseError = Object.getPrototypeOf(this).parseError;
                    for (var f, g, v, y, b, x, w, k, S, E = {}; ; ) {
                        if (g = n[n.length - 1],
                        this.defaultActions[g] ? v = this.defaultActions[g] : (null == f && (S = void 0,
                        "number" != typeof (S = h.lex() || 1) && (S = t.symbols_[S] || S),
                        f = S),
                        v = s[g] && s[g][f]),
                        void 0 === v || !v.length || !v[0]) {
                            var M = "";
                            for (b in k = [],
                            s[g])
                                this.terminals_[b] && b > 2 && k.push("'" + this.terminals_[b] + "'");
                            M = h.showPosition ? "Parse error on line " + (a + 1) + ":\n" + h.showPosition() + "\nExpecting " + k.join(", ") + ", got '" + (this.terminals_[f] || f) + "'" : "Parse error on line " + (a + 1) + ": Unexpected " + (1 == f ? "end of input" : "'" + (this.terminals_[f] || f) + "'"),
                            this.parseError(M, {
                                text: h.match,
                                token: this.terminals_[f] || f,
                                line: h.yylineno,
                                loc: d,
                                expected: k
                            })
                        }
                        if (v[0]instanceof Array && v.length > 1)
                            throw new Error("Parse Error: multiple actions possible at state: " + g + ", token: " + f);
                        switch (v[0]) {
                        case 1:
                            n.push(f),
                            r.push(h.yytext),
                            i.push(h.yylloc),
                            n.push(v[1]),
                            f = null,
                            l = h.yyleng,
                            o = h.yytext,
                            a = h.yylineno,
                            d = h.yylloc;
                            break;
                        case 2:
                            if (x = this.productions_[v[1]][1],
                            E.$ = r[r.length - x],
                            E._$ = {
                                first_line: i[i.length - (x || 1)].first_line,
                                last_line: i[i.length - 1].last_line,
                                first_column: i[i.length - (x || 1)].first_column,
                                last_column: i[i.length - 1].last_column
                            },
                            m && (E._$.range = [i[i.length - (x || 1)].range[0], i[i.length - 1].range[1]]),
                            void 0 !== (y = this.performAction.apply(E, [o, l, a, p.yy, v[1], r, i].concat(c))))
                                return y;
                            x && (n = n.slice(0, -1 * x * 2),
                            r = r.slice(0, -1 * x),
                            i = i.slice(0, -1 * x)),
                            n.push(this.productions_[v[1]][0]),
                            r.push(E.$),
                            i.push(E._$),
                            w = s[n[n.length - 2]][n[n.length - 1]],
                            n.push(w);
                            break;
                        case 3:
                            return !0
                        }
                    }
                    return !0
                }
            }
              , T = {
                EOF: 1,
                parseError: function(e, t) {
                    if (!this.yy.parser)
                        throw new Error(e);
                    this.yy.parser.parseError(e, t)
                },
                setInput: function(e, t) {
                    return this.yy = t || this.yy || {},
                    this._input = e,
                    this._more = this._backtrack = this.done = !1,
                    this.yylineno = this.yyleng = 0,
                    this.yytext = this.matched = this.match = "",
                    this.conditionStack = ["INITIAL"],
                    this.yylloc = {
                        first_line: 1,
                        first_column: 0,
                        last_line: 1,
                        last_column: 0
                    },
                    this.options.ranges && (this.yylloc.range = [0, 0]),
                    this.offset = 0,
                    this
                },
                input: function() {
                    var e = this._input[0];
                    return this.yytext += e,
                    this.yyleng++,
                    this.offset++,
                    this.match += e,
                    this.matched += e,
                    e.match(/(?:\r\n?|\n).*/g) ? (this.yylineno++,
                    this.yylloc.last_line++) : this.yylloc.last_column++,
                    this.options.ranges && this.yylloc.range[1]++,
                    this._input = this._input.slice(1),
                    e
                },
                unput: function(e) {
                    var t = e.length
                      , n = e.split(/(?:\r\n?|\n)/g);
                    this._input = e + this._input,
                    this.yytext = this.yytext.substr(0, this.yytext.length - t),
                    this.offset -= t;
                    var r = this.match.split(/(?:\r\n?|\n)/g);
                    this.match = this.match.substr(0, this.match.length - 1),
                    this.matched = this.matched.substr(0, this.matched.length - 1),
                    n.length - 1 && (this.yylineno -= n.length - 1);
                    var i = this.yylloc.range;
                    return this.yylloc = {
                        first_line: this.yylloc.first_line,
                        last_line: this.yylineno + 1,
                        first_column: this.yylloc.first_column,
                        last_column: n ? (n.length === r.length ? this.yylloc.first_column : 0) + r[r.length - n.length].length - n[0].length : this.yylloc.first_column - t
                    },
                    this.options.ranges && (this.yylloc.range = [i[0], i[0] + this.yyleng - t]),
                    this.yyleng = this.yytext.length,
                    this
                },
                more: function() {
                    return this._more = !0,
                    this
                },
                reject: function() {
                    return this.options.backtrack_lexer ? (this._backtrack = !0,
                    this) : this.parseError("Lexical error on line " + (this.yylineno + 1) + ". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n" + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    })
                },
                less: function(e) {
                    this.unput(this.match.slice(e))
                },
                pastInput: function() {
                    var e = this.matched.substr(0, this.matched.length - this.match.length);
                    return (e.length > 20 ? "..." : "") + e.substr(-20).replace(/\n/g, "")
                },
                upcomingInput: function() {
                    var e = this.match;
                    return e.length < 20 && (e += this._input.substr(0, 20 - e.length)),
                    (e.substr(0, 20) + (e.length > 20 ? "..." : "")).replace(/\n/g, "")
                },
                showPosition: function() {
                    var e = this.pastInput()
                      , t = new Array(e.length + 1).join("-");
                    return e + this.upcomingInput() + "\n" + t + "^"
                },
                test_match: function(e, t) {
                    var n, r, i;
                    if (this.options.backtrack_lexer && (i = {
                        yylineno: this.yylineno,
                        yylloc: {
                            first_line: this.yylloc.first_line,
                            last_line: this.last_line,
                            first_column: this.yylloc.first_column,
                            last_column: this.yylloc.last_column
                        },
                        yytext: this.yytext,
                        match: this.match,
                        matches: this.matches,
                        matched: this.matched,
                        yyleng: this.yyleng,
                        offset: this.offset,
                        _more: this._more,
                        _input: this._input,
                        yy: this.yy,
                        conditionStack: this.conditionStack.slice(0),
                        done: this.done
                    },
                    this.options.ranges && (i.yylloc.range = this.yylloc.range.slice(0))),
                    (r = e[0].match(/(?:\r\n?|\n).*/g)) && (this.yylineno += r.length),
                    this.yylloc = {
                        first_line: this.yylloc.last_line,
                        last_line: this.yylineno + 1,
                        first_column: this.yylloc.last_column,
                        last_column: r ? r[r.length - 1].length - r[r.length - 1].match(/\r?\n?/)[0].length : this.yylloc.last_column + e[0].length
                    },
                    this.yytext += e[0],
                    this.match += e[0],
                    this.matches = e,
                    this.yyleng = this.yytext.length,
                    this.options.ranges && (this.yylloc.range = [this.offset, this.offset += this.yyleng]),
                    this._more = !1,
                    this._backtrack = !1,
                    this._input = this._input.slice(e[0].length),
                    this.matched += e[0],
                    n = this.performAction.call(this, this.yy, this, t, this.conditionStack[this.conditionStack.length - 1]),
                    this.done && this._input && (this.done = !1),
                    n)
                        return n;
                    if (this._backtrack) {
                        for (var s in i)
                            this[s] = i[s];
                        return !1
                    }
                    return !1
                },
                next: function() {
                    if (this.done)
                        return this.EOF;
                    var e, t, n, r;
                    this._input || (this.done = !0),
                    this._more || (this.yytext = "",
                    this.match = "");
                    for (var i = this._currentRules(), s = 0; s < i.length; s++)
                        if ((n = this._input.match(this.rules[i[s]])) && (!t || n[0].length > t[0].length)) {
                            if (t = n,
                            r = s,
                            this.options.backtrack_lexer) {
                                if (!1 !== (e = this.test_match(n, i[s])))
                                    return e;
                                if (this._backtrack) {
                                    t = !1;
                                    continue
                                }
                                return !1
                            }
                            if (!this.options.flex)
                                break
                        }
                    return t ? !1 !== (e = this.test_match(t, i[r])) && e : "" === this._input ? this.EOF : this.parseError("Lexical error on line " + (this.yylineno + 1) + ". Unrecognized text.\n" + this.showPosition(), {
                        text: "",
                        token: null,
                        line: this.yylineno
                    })
                },
                lex: function() {
                    var e = this.next();
                    return e || this.lex()
                },
                begin: function(e) {
                    this.conditionStack.push(e)
                },
                popState: function() {
                    return this.conditionStack.length - 1 > 0 ? this.conditionStack.pop() : this.conditionStack[0]
                },
                _currentRules: function() {
                    return this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1] ? this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules : this.conditions.INITIAL.rules
                },
                topState: function(e) {
                    return (e = this.conditionStack.length - 1 - Math.abs(e || 0)) >= 0 ? this.conditionStack[e] : "INITIAL"
                },
                pushState: function(e) {
                    this.begin(e)
                },
                stateStackSize: function() {
                    return this.conditionStack.length
                },
                options: {
                    flex: !0
                },
                performAction: function(e, t, n, r) {
                    switch (n) {
                    case 0:
                    case 1:
                    case 2:
                        break;
                    case 3:
                        return "INT";
                    case 4:
                        return "FLOAT";
                    case 5:
                    case 15:
                        return "^";
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                        return "*";
                    case 10:
                    case 11:
                        return "/";
                    case 12:
                    case 13:
                        return "-";
                    case 14:
                        return "+";
                    case 16:
                    case 18:
                        return "(";
                    case 17:
                    case 19:
                        return ")";
                    case 20:
                        return "[";
                    case 21:
                        return "]";
                    case 22:
                    case 24:
                        return "{";
                    case 23:
                    case 25:
                        return "}";
                    case 26:
                        return "_";
                    case 27:
                        return "|";
                    case 28:
                        return "LEFT|";
                    case 29:
                        return "RIGHT|";
                    case 30:
                        return "!";
                    case 31:
                        return "SIGN";
                    case 32:
                    case 34:
                    case 40:
                        return t.yytext = "<=",
                        "SIGN";
                    case 33:
                    case 35:
                    case 41:
                        return t.yytext = ">=",
                        "SIGN";
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                        return t.yytext = "<>",
                        "SIGN";
                    case 42:
                    case 43:
                        return "FRAC";
                    case 44:
                        return "sqrt";
                    case 45:
                        return "abs";
                    case 46:
                        return "ln";
                    case 47:
                        return "log";
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                        return "TRIG";
                    case 52:
                        return t.yytext = "sin",
                        "TRIG";
                    case 53:
                        return t.yytext = "cos",
                        "TRIG";
                    case 54:
                        return t.yytext = "tan",
                        "TRIG";
                    case 55:
                        return t.yytext = "csc",
                        "TRIG";
                    case 56:
                        return t.yytext = "sec",
                        "TRIG";
                    case 57:
                        return t.yytext = "cot",
                        "TRIG";
                    case 58:
                        return t.yytext = "arcsin",
                        "TRIG";
                    case 59:
                        return t.yytext = "arccos",
                        "TRIG";
                    case 60:
                        return t.yytext = "arctan",
                        "TRIG";
                    case 61:
                        return t.yytext = "arccsc",
                        "TRIG";
                    case 62:
                        return t.yytext = "arcsec",
                        "TRIG";
                    case 63:
                        return t.yytext = "arccot",
                        "TRIG";
                    case 64:
                    case 65:
                        return "TRIGINV";
                    case 66:
                        return t.yytext = "sinh",
                        "TRIG";
                    case 67:
                        return t.yytext = "cosh",
                        "TRIG";
                    case 68:
                    case 71:
                        return t.yytext = "tanh",
                        "TRIG";
                    case 69:
                        return t.yytext = "csch",
                        "TRIG";
                    case 70:
                        return t.yytext = "sech",
                        "TRIG";
                    case 72:
                        return "CONST";
                    case 73:
                    case 74:
                        return t.yytext = "pi",
                        "CONST";
                    case 75:
                    case 78:
                        return "VAR";
                    case 76:
                    case 77:
                        return t.yytext = "theta",
                        "VAR";
                    case 79:
                    case 80:
                        return t.yytext = "phi",
                        "VAR";
                    case 81:
                        return e.symbolLexer(t.yytext);
                    case 82:
                        return "EOF";
                    case 83:
                        return "INVALID";
                    case 84:
                        console.log(t.yytext)
                    }
                },
                rules: [/^(?:\s+)/, /^(?:\\space)/, /^(?:\\ )/, /^(?:[0-9]+\.?)/, /^(?:([0-9]+)?\.[0-9]+)/, /^(?:\*\*)/, /^(?:\*)/, /^(?:\\cdot|·)/, /^(?:\\times|×)/, /^(?:\\ast)/, /^(?:\/)/, /^(?:\\div|÷)/, /^(?:-)/, /^(?:−)/, /^(?:\+)/, /^(?:\^)/, /^(?:\()/, /^(?:\))/, /^(?:\\left\()/, /^(?:\\right\))/, /^(?:\[)/, /^(?:\])/, /^(?:\{)/, /^(?:\})/, /^(?:\\left\{)/, /^(?:\\right\})/, /^(?:_)/, /^(?:\|)/, /^(?:\\left\|)/, /^(?:\\right\|)/, /^(?:\!)/, /^(?:<=|>=|<>|<|>|=)/, /^(?:\\le)/, /^(?:\\ge)/, /^(?:\\leq)/, /^(?:\\geq)/, /^(?:=\/=)/, /^(?:\\ne)/, /^(?:\\neq)/, /^(?:≠)/, /^(?:≤)/, /^(?:≥)/, /^(?:\\frac)/, /^(?:\\dfrac)/, /^(?:sqrt|\\sqrt)/, /^(?:abs|\\abs)/, /^(?:ln|\\ln)/, /^(?:log|\\log)/, /^(?:sin|cos|tan)/, /^(?:csc|sec|cot)/, /^(?:sinh|cosh|tanh)/, /^(?:csch|sech|coth)/, /^(?:\\sin)/, /^(?:\\cos)/, /^(?:\\tan)/, /^(?:\\csc)/, /^(?:\\sec)/, /^(?:\\cot)/, /^(?:\\arcsin)/, /^(?:\\arccos)/, /^(?:\\arctan)/, /^(?:\\arccsc)/, /^(?:\\arcsec)/, /^(?:\\arccot)/, /^(?:arcsin|arccos|arctan)/, /^(?:arccsc|arcsec|arccot)/, /^(?:\\sinh)/, /^(?:\\cosh)/, /^(?:\\tanh)/, /^(?:\\csch)/, /^(?:\\sech)/, /^(?:\\coth)/, /^(?:pi)/, /^(?:π)/, /^(?:\\pi)/, /^(?:theta)/, /^(?:θ)/, /^(?:\\theta)/, /^(?:phi)/, /^(?:φ)/, /^(?:\\phi)/, /^(?:[a-zA-Z])/, /^(?:$)/, /^(?:.)/, /^(?:.)/],
                conditions: {
                    INITIAL: {
                        rules: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84],
                        inclusive: !0
                    }
                }
            };
            function _() {
                this.yy = {}
            }
            return C.lexer = T,
            _.prototype = C,
            C.Parser = _,
            new _
        }();
        const h = function(e) {
            return e != e
        };
        function p(e, t) {
            const n = []
              , r = [];
            return s().forEach(e, ( (e, i, s) => {
                t(e, i, s) ? n.push(e) : r.push(e)
            }
            )),
            [n, r]
        }
        function u(e) {
            return e instanceof f
        }
        const d = function(e) {
            return e instanceof v
        };
        function m(e) {
            return e instanceof y ? e.terms : [e]
        }
        class f {
            constructor() {
                this.hints = void 0,
                this.hints = {
                    parens: !1
                }
            }
            construct(e) {
                const t = new (0,
                this.func)(...e);
                if (void 0 === t)
                    throw new Error("constructor function returning undefined");
                return t
            }
            recurse(e, ...t) {
                var n = this.args().map((function(n) {
                    return s().isString(n) || s().isNumber(n) ? n : null == n ? void 0 : n[e].apply(n, t)
                }
                ));
                return this.construct(n)
            }
            eval(e={}, t) {
                throw new Error("Abstract method - must override for expr: " + this.print())
            }
            codegen() {
                throw new Error("Abstract method - must override for expr: " + this.print())
            }
            compile() {
                var e = this.codegen();
                try {
                    return new Function("vars","return " + e + ";")
                } catch (t) {
                    throw new Error("Function did not compile: " + e)
                }
            }
            asTex(e) {
                e = e || {},
                s().defaults(e, {
                    display: !0,
                    dynamic: !0,
                    times: !1
                });
                let t = this.tex();
                return e.display && (t = "\\displaystyle " + t),
                e.dynamic && (t = t.replace(/\(/g, "\\left("),
                t = t.replace(/\)/g, "\\right)")),
                e.times && (t = t.replace(/\\cdot/g, "\\times")),
                t
            }
            name() {
                return this.func.name
            }
            repr() {
                return this.name() + "(" + this.args().map((function(e) {
                    return s().isString(e) || s().isNumber(e) ? e : null == e ? void 0 : e.repr()
                }
                )).join(",") + ")"
            }
            strip() {
                return this.recurse("strip")
            }
            normalize() {
                return this.recurse("normalize")
            }
            expand() {
                return this.recurse("expand")
            }
            factor(e) {
                return this.recurse("factor", e)
            }
            collect(e) {
                return this.recurse("collect", e)
            }
            equals(e) {
                return this.normalize().print() === e.normalize().print()
            }
            simplify(e) {
                e = o({
                    once: !1
                }, e);
                var t = this.factor(e)
                  , n = t.collect(e);
                t.equals(n) && (n = this.collect(e));
                var r = n.expand()
                  , i = r.collect(e);
                r.equals(i) && (i = n.collect(e));
                var s = i;
                return e.once || this.equals(s) ? s : s.simplify(e)
            }
            isSimplified() {
                return this.equals(this.simplify())
            }
            exprArgs() {
                return this.args().filter(u)
            }
            getVars(e) {
                return s().uniq(s().flatten(s().invoke(this.exprArgs(), "getVars", e))).sort()
            }
            getConsts() {
                return s().uniq(s().flatten(s().invoke(this.exprArgs(), "getConsts"))).sort()
            }
            getUnits() {
                return s().flatten(s().invoke(this.exprArgs(), "getUnits"))
            }
            is(e) {
                return this instanceof e
            }
            has(e) {
                return this instanceof e || s().any(this.exprArgs(), (function(t) {
                    return t.has(e)
                }
                ))
            }
            raiseToThe(e, t) {
                return new b(this,e)
            }
            isSubtract() {
                return !1
            }
            isDivide() {
                return !1
            }
            isRoot() {
                return !1
            }
            needsExplicitMul() {
                return this.exprArgs()[0].needsExplicitMul()
            }
            sameVars(e) {
                var t = this.getVars()
                  , n = e.getVars()
                  , r = function(e, t) {
                    return !s().difference(e, t).length
                }
                  , i = function(e) {
                    return s().uniq(s().invoke(e, "toLowerCase")).sort()
                };
                return {
                    equal: r(t, n),
                    equalIgnoringCase: r(i(t), i(n))
                }
            }
            compare(e) {
                if (e instanceof S)
                    return !1;
                var t = s().union(this.getVars(!0), e.getVars(!0))
                  , n = function(e, t) {
                    var n = function(e, t) {
                        return Math.abs(e) < 1 || Math.abs(t) < 1 ? Math.abs(e - t) : Math.abs(1 - e / t)
                    }(e, t);
                    return e === t || h(e) && h(t) || n < Math.pow(10, -9)
                };
                if (!t.length && !this.has(q) && !e.has(q))
                    return n(this.eval(), e.eval());
                var r = this.collect()
                  , i = e.collect()
                  , o = this.getUnits()
                  , a = e.getUnits();
                if (!s().isEqual(o, a))
                    return !1;
                for (var l = 0; l < 12; l++) {
                    var c = {}
                      , p = Math.pow(10, 1 + Math.floor(3 * l / 12))
                      , u = l % 2 == 0;
                    let e;
                    if (s().each(t, (function(e) {
                        var t, n;
                        c[e] = u ? (n = p - (t = -p),
                        Math.random() * n + t) : s().random(-p, p)
                    }
                    )),
                    r.has(M) || i.has(M) || r.has(q) || i.has(q)) {
                        const t = r.partialEval(c)
                          , n = i.partialEval(c);
                        e = t.simplify().equals(n.simplify())
                    } else {
                        e = n(r.eval(c), i.eval(c))
                    }
                    if (!e)
                        return !1
                }
                return !0
            }
            partialEval(e) {
                return this instanceof q ? this : this.has(M) ? this instanceof M ? new M(this.symbol,this.arg.partialEval(e)) : this.recurse("partialEval", e) : new R(+this.eval(e).toFixed(9)).collect()
            }
            sameForm(e) {
                return this.strip().equals(e.strip())
            }
            findGCD(e) {
                return this.equals(e) ? e : F
            }
            getDenominator() {
                return F
            }
            asMul() {
                return new y(F,this)
            }
            isPositive() {
                throw new Error("Abstract method - must override for expr: " + this.print())
            }
            isNegative() {
                return !1
            }
            asPositiveFactor() {
                return this.isPositive() ? this : F
            }
            addHint(e) {
                if (!e)
                    return this;
                var t = this.construct(this.args());
                return t.hints = s().clone(this.hints),
                t.hints[e] = !0,
                t
            }
            completeParse() {
                return this.recurse("completeParse")
            }
            abs() {
                throw new Error("Abstract method - must override for expr: " + this.print())
            }
            negate() {
                return new y(N,this)
            }
        }
        class g extends f {
            constructor(...e) {
                super(),
                this.terms = void 0,
                1 === e.length ? this.terms = e[0] : this.terms = e
            }
            args() {
                return this.terms
            }
            normalize() {
                var e = s().sortBy(s().invoke(this.terms, "normalize"), (e => e.print()));
                return new this.func(e)
            }
            expand() {
                return this.recurse("expand").flatten()
            }
            partition() {
                var [e,t] = p(this.terms, (e => e instanceof _));
                return [new this.func(e), new this.func(t)]
            }
            flatten() {
                var e = this
                  , t = s().reject(this.terms, (t => t.equals(e.identity)));
                if (0 === t.length)
                    return e.identity;
                if (1 === t.length)
                    return t[0];
                const [n,r] = p(t, (t => t instanceof e.func));
                var i = r.concat(s().flatten(s().pluck(n, "terms"), !0));
                return new e.func(i)
            }
            isPositive() {
                var e = s().invoke(this.terms, "collect");
                return s().all(s().invoke(e, "isPositive"))
            }
            replace(e, t) {
                const n = e instanceof f ? s().indexOf(this.terms, e) : e;
                var r = [];
                Array.isArray(t) ? r = t : t && (r = [t]);
                var i = this.terms.slice(0, n).concat(r).concat(this.terms.slice(n + 1));
                return new this.func(i)
            }
            remove(e) {
                return this.replace(e)
            }
            getDenominator() {
                return new y(s().invoke(this.terms, "getDenominator")).flatten()
            }
        }
        class v extends g {
            constructor(...e) {
                super(...e),
                this.identity = D,
                this.func = v
            }
            eval(e={}, t) {
                return s().reduce(this.terms, ( (n, r) => n + r.eval(e, t)), 0)
            }
            codegen() {
                return s().map(this.terms, (e => "(" + e.codegen() + ")")).join(" + ") || "0"
            }
            print() {
                return s().invoke(this.terms, "print").join("+")
            }
            tex() {
                let e = "";
                return s().each(this.terms, (t => {
                    !e || t.isSubtract() ? e += t.tex() : e += "+" + t.tex()
                }
                )),
                e
            }
            collect(e) {
                var t = s().invoke(this.terms, "collect", e)
                  , n = [];
                s().each(t, (t => {
                    if (t instanceof y) {
                        var r = t.partition();
                        n.push([r[1].flatten(), r[0].reduce(e)])
                    } else
                        t instanceof _ ? n.push([F, t]) : n.push([t, F])
                }
                ));
                var r = s().groupBy(n, (e => e[0].normalize().print()))
                  , i = s().compact(s().map(r, (t => {
                    var n = t[0][0]
                      , r = new v(s().zip.apply(s(), t)[1]).reduce(e);
                    return new y(r,n).collect(e)
                }
                )));
                return new v(i).flatten()
            }
            factor(e={
                keepNegative: !1
            }) {
                const t = this.terms.map((e => e.collect()));
                let n;
                n = t[0]instanceof y ? t[0].terms : [t[0]],
                s().each(s().rest(this.terms), (e => {
                    n = s().map(n, (t => e.findGCD(t)))
                }
                )),
                !e.keepNegative && this.isNegative() && n.push(N);
                const r = new y(n).flatten().collect()
                  , i = t.map((e => y.handleDivide(e, r).simplify()))
                  , o = new v(i).flatten();
                return y.createOrAppend(r, o).flatten()
            }
            reduce(e) {
                return s().reduce(this.terms, ( (t, n) => t.add(n, e)), this.identity)
            }
            needsExplicitMul() {
                return !1
            }
            isNegative() {
                var e = s().invoke(this.terms, "collect");
                return s().all(s().invoke(e, "isNegative"))
            }
            negate() {
                return new v(s().invoke(this.terms, "negate"))
            }
            static createOrAppend(e, t) {
                return e instanceof v ? new v(e.terms.concat(t)) : new v(e,t)
            }
        }
        class y extends g {
            constructor(...e) {
                super(...e),
                this.identity = F,
                this.func = y
            }
            eval(e={}, t) {
                return s().reduce(this.terms, ( (n, r) => n * r.eval(e, t)), 1)
            }
            codegen() {
                return s().map(this.terms, (e => "(" + e.codegen() + ")")).join(" * ") || "0"
            }
            print() {
                return s().map(this.terms, (e => e instanceof v ? "(" + e.print() + ")" : e.print())).join("*")
            }
            getUnits() {
                var e = s()(this.terms).chain().map((e => e.getUnits())).flatten().value();
                return e.sort(( (e, t) => e.unit.localeCompare(t.unit))),
                e
            }
            tex() {
                for (var e, t = " \\cdot ", n = s().groupBy(this.terms, (e => e.isDivide() ? "inverse" : e instanceof _ ? "number" : "other")), r = n.inverse || [], i = n.number || [], o = n.other || [], a = "", l = 0; l < i.length; l++) {
                    if (i[l]instanceof A && !(i[l]instanceof I) && o.length > 0 && r.length > 0) {
                        var c = i.slice();
                        c.splice(l, 1);
                        var h = c.concat(r).concat(o);
                        return i[l].tex() + new y(h).tex()
                    }
                }
                if (0 === (i = s().compact(s().map(i, (e => {
                    var t = !e.hints.fraction || r.length > 0;
                    if (e instanceof A && !(e instanceof I) && t) {
                        r.push(new b(new I(e.d),O));
                        var n = new I(e.n);
                        return n.hints = e.hints,
                        s().any(e.hints) ? n : null
                    }
                    return e
                }
                )))).length && 1 === o.length)
                    e = o[0].tex();
                else {
                    var p = "";
                    s().each(i, (e => {
                        e.hints.subtract && e.hints.entered ? (a += "-",
                        p += (p ? t : "") + e.abs().tex()) : e instanceof I && -1 === e.n && (e.hints.negate || e.hints.subtract) ? a += "-" : p += (p ? t : "") + e.tex()
                    }
                    )),
                    s().each(o, (e => {
                        e.needsExplicitMul() ? p += (p ? t : "") + e.tex() : p += e instanceof v ? "(" + e.tex() + ")" : e.tex()
                    }
                    )),
                    e = p || "1"
                }
                if (r.length) {
                    var u = new y(s().invoke(r, "asDivide")).flatten().tex();
                    return a + "\\frac{" + e + "}{" + u + "}"
                }
                return a + e
            }
            strip() {
                var e = s().map(this.terms, (e => e instanceof _ ? e.abs() : e.strip()));
                return new y(e).flatten()
            }
            expand() {
                const e = function(e) {
                    return e instanceof b && e.exp.isNegative()
                }
                  , t = this.recurse("expand").flatten()
                  , n = m(t)
                  , r = s().any(n, d)
                  , i = s().any(n, (function(t) {
                    return e(t) && d(t.base)
                }
                ));
                if (!r && !i)
                    return t;
                let[o,a] = p(n, e);
                if (r) {
                    const [e,t] = p(a, d)
                      , n = s().reduce(e, (function(e, t) {
                        return s().reduce(e, (function(e, n) {
                            return e.concat(s().map(t.terms, (e => n.concat(e))))
                        }
                        ), [])
                    }
                    ), [[]])
                      , r = s().map(n, (function(e) {
                        return new y(t.concat(e)).flatten()
                    }
                    ));
                    a = [new v(r)]
                }
                if (i) {
                    const e = new y(s().invoke(o, "getDenominator")).flatten();
                    o = [new b(e.expand(),O)]
                }
                return new y(a.concat(o)).flatten()
            }
            factor(e) {
                var t = this.recurse("factor", e).flatten();
                if (!(t instanceof y))
                    return t;
                var [n,r] = p(t.terms, (e => e instanceof A));
                const i = s().reduce(n, ( (e, t) => ({
                    n: e.n * t.n,
                    d: e.d * t.d
                })), {
                    n: 1,
                    d: 1
                })
                  , o = 1 === i.d ? new I(i.n) : new A(i.n,i.d);
                return new y(r.concat(o)).flatten()
            }
            collect(e) {
                var t = this.recurse("collect", e).partition()
                  , n = t[0].reduce(e);
                if (0 === n.eval())
                    return D;
                const r = t[1].flatten();
                if (!(r instanceof y))
                    return new y(n,r).flatten();
                const i = r.terms;
                var o = [];
                s().each(i, (e => {
                    e instanceof b ? o.push([e.base, e.exp]) : o.push([e, F])
                }
                ));
                var a = s().groupBy(o, (e => e[0].normalize().print()))
                  , l = s().compact(s().map(a, (t => {
                    var n = t[0][0]
                      , r = new v(s().zip.apply(s(), t)[1]).collect(e);
                    return r instanceof _ && 0 === r.eval() ? null : [n, r]
                }
                )));
                const c = s().groupBy(l, (e => e[0]instanceof w && e[0].isBasic() ? "trig" : e[0]instanceof x ? "log" : "expr"));
                let h = c.trig || []
                  , p = c.log || [];
                const u = c.expr || [];
                if (h.length > 1) {
                    var d = s().groupBy(h, (e => e[0].arg.normalize().print()));
                    h = [],
                    s().each(d, (t => {
                        const n = t[0][0].arg;
                        let r = {
                            sin: D,
                            cos: D
                        };
                        s().each(t, (e => {
                            r[e[0].type] = e[1]
                        }
                        )),
                        y.handleNegative(r.sin).collect(e).equals(r.cos) && (r = r.cos.isNegative() ? {
                            tan: r.sin
                        } : {
                            cot: r.cos
                        }),
                        s().each(r, ( (e, t) => {
                            h.push([new w(t,n), e])
                        }
                        ))
                    }
                    ))
                }
                if (p.length > 1) {
                    var m = s().groupBy(p, (e => e[0].base.normalize().print()));
                    p = [],
                    s().each(m, (t => {
                        2 === t.length && y.handleNegative(t[0][1]).collect(e).equals(t[1][1]) ? t[0][1].isNegative() ? p.push([new x(t[0][0].power,t[1][0].power), t[1][1]]) : p.push([new x(t[1][0].power,t[0][0].power), t[0][1]]) : p = p.concat(t)
                    }
                    ))
                }
                var f = s().map([...h, ...p, ...u], (t => new b(t[0],t[1]).collect(e)));
                return new y([n].concat(f)).flatten()
            }
            isSubtract() {
                return s().any(this.terms, (e => e instanceof _ && Boolean(e.hints.subtract)))
            }
            factorIn(e) {
                var t = this.partition()[0].terms
                  , n = t.length && s().all(t, (e => e.n > 0));
                if (n) {
                    var r = t[0].negate();
                    return r.hints = t[0].hints,
                    this.replace(t[0], r.addHint(e))
                }
                return new y([_.negativeOne(e)].concat(this.terms))
            }
            factorOut() {
                var e = !1
                  , t = s().compact(s().map(this.terms, (t => !e && t instanceof _ && t.hints.divide ? (e = !0,
                -1 !== t.n ? t.negate() : null) : t)));
                return 1 === t.length ? t[0] : new y(t)
            }
            reduce(e) {
                return s().reduce(this.terms, ( (t, n) => t.mul(n, e)), this.identity)
            }
            findGCD(e) {
                return new y(s().invoke(this.terms, "findGCD", e)).flatten()
            }
            asMul() {
                return this
            }
            asPositiveFactor() {
                if (this.isPositive())
                    return this;
                {
                    const e = m(this.collect()).map((e => e.asPositiveFactor()));
                    return new y(e).flatten()
                }
            }
            isNegative() {
                const e = m(this.collect()).map((e => e.isNegative()));
                return s().any(e)
            }
            fold() {
                return y.fold(this)
            }
            negate() {
                const e = s().find(this.terms, (e => e instanceof _));
                return e ? this.replace(e, e.negate()) : new y([N].concat(this.terms))
            }
            static handleNegative(e, t) {
                if (e instanceof _ && e.n > 0) {
                    var n = e.negate();
                    return n.hints = e.hints,
                    n.addHint(t)
                }
                return e instanceof y ? e.factorIn(t) : new y(_.negativeOne(t),e)
            }
            static handleDivide(e, t) {
                if (t instanceof y) {
                    var n = y.handleDivide(e, t.terms[0])
                      , r = new y(s().rest(t.terms)).flatten();
                    return y.handleDivide(n, r)
                }
                var i = e => e instanceof I;
                if (i(t) && e instanceof y && s().any(e.terms, i)) {
                    var o = e.terms.slice().reverse()
                      , a = o.find((e => e instanceof A));
                    if (!i(a))
                        return new y(e.terms.concat([new A(1,t.n).addHint("fraction")]));
                    var l = new A(a.n,t.n);
                    return l.hints = a.hints,
                    a === o[0] && (l = l.addHint("fraction")),
                    a.n < 0 && t.n < 0 ? (l.d = -l.d,
                    e.replace(a, [N, l])) : e.replace(a, l)
                }
                var c = (e, t) => {
                    if (t instanceof I) {
                        if (e instanceof I)
                            return e.n < 0 && t.n < 0 ? [N, new A(e.n,-t.n).addHint("fraction")] : [new A(e.n,t.n).addHint("fraction")];
                        var n = new A(1,t.eval());
                        return t.eval() < 0 ? [e, n.addHint("negate")] : [e, n]
                    }
                    var r;
                    if (t instanceof w && t.exp) {
                        var i = t.exp;
                        t.exp = void 0,
                        t = new b(t,i)
                    }
                    return r = t instanceof b ? new b(t.base,y.handleNegative(t.exp, "divide")) : new b(t,O),
                    e instanceof I && 1 === e.n ? [r] : [e, r]
                }
                ;
                if (e instanceof y) {
                    var h = c(s().last(e.terms), t);
                    return new y(s().initial(e.terms).concat(h))
                }
                h = c(e, t);
                return new y(h).flatten()
            }
            static fold(e) {
                if (e instanceof y) {
                    var t = s().find(s().initial(e.terms), (e => (e instanceof w || e instanceof x) && Boolean(e.hints.open)));
                    if (t) {
                        const n = s().last(e.terms);
                        if (!(t.hints.parens || n.hints.parens || n.has(w) || n.has(x))) {
                            const r = t instanceof w ? w.create([t.type, t.exp], y.createOrAppend(t.arg, n).fold()) : x.create(t.base, y.createOrAppend(t.power, n).fold())
                              , i = s().indexOf(e.terms, t);
                            return 0 === i ? r : new y(e.terms.slice(0, i).concat(r)).fold()
                        }
                        t.hints.open = !1
                    }
                    var n = e.partition()[0].terms
                      , r = e => e.n > 0
                      , i = e => -1 === e.n && Boolean(e.hints.negate);
                    const l = n.find(r)
                      , c = n.find(i);
                    if (n.length > 1 && c && l && s().every(n, (function(e) {
                        return r(e) || i(e)
                    }
                    ))) {
                        var o = s().indexOf(e.terms, c)
                          , a = s().indexOf(e.terms, l);
                        if (o < a)
                            return e.replace(a, e.terms[a].negate()).remove(o)
                    }
                }
                return e
            }
            static createOrAppend(e, t) {
                return e instanceof y ? new y(e.terms.concat(t)) : new y(e,t)
            }
        }
        class b extends f {
            constructor(e, t) {
                super(),
                this.base = void 0,
                this.exp = void 0,
                this.func = b,
                this.base = e,
                this.exp = t
            }
            args() {
                return [this.base, this.exp]
            }
            eval(e={}, t) {
                var n = this.base.eval(e, t)
                  , r = this.exp.eval(e, t);
                if (n < 0) {
                    var i = this.exp.simplify();
                    if (i instanceof R) {
                        var s = i.n
                          , o = (s - +s.toFixed()).toString().length - 2
                          , a = Math.pow(10, o);
                        i = new A(s * a,a).simplify()
                    }
                    if (i instanceof A)
                        if (Math.abs(i.d) % 2 == 1)
                            return (Math.abs(i.n) % 2 == 1 ? -1 : 1) * Math.pow(-1 * n, r)
                }
                return Math.pow(n, r)
            }
            getUnits() {
                return this.base.getUnits().map((e => ({
                    unit: e.unit,
                    pow: e.pow * this.exp.n
                })))
            }
            codegen() {
                return "Math.pow(" + this.base.codegen() + ", " + this.exp.codegen() + ")"
            }
            print() {
                var e = this.base.print();
                return (this.base instanceof g || this.base instanceof b) && (e = "(" + e + ")"),
                e + "^(" + this.exp.print() + ")"
            }
            tex() {
                if (this.isDivide())
                    return "\\frac{1}{" + this.asDivide().tex() + "}";
                if (this.isRoot() && this.exp instanceof A) {
                    if (1 !== this.exp.n)
                        throw new Error("Node marked with hint 'root' does not have exponent of form 1/x.");
                    return 2 === this.exp.d ? "\\sqrt{" + this.base.tex() + "}" : "\\sqrt[" + this.exp.d + "]{" + this.base.tex() + "}"
                }
                if (this.base instanceof w && !this.base.isInverse() && this.exp instanceof _ && this.exp.isSimple() && this.exp.eval() >= 0) {
                    var e = this.base.texSplit();
                    return e[0] + "^{" + this.exp.tex() + "}" + e[1]
                }
                var t = this.base.tex();
                return this.base instanceof g || this.base instanceof b || this.base instanceof _ && !this.base.isSimple() ? t = "(" + t + ")" : (this.base instanceof w || this.base instanceof x) && (t = "[" + t + "]"),
                t + "^{" + this.exp.tex() + "}"
            }
            needsExplicitMul() {
                return !this.isRoot() && this.base.needsExplicitMul()
            }
            expand() {
                var e = this.recurse("expand");
                if (e.base instanceof y) {
                    var t = s().map(e.base.terms, (t => new b(t,e.exp)));
                    return new y(t).expand()
                }
                if (e.base instanceof v && e.exp instanceof I && e.exp.abs().eval() > 1) {
                    var n = e.exp.eval() > 0
                      , r = e.exp.abs().eval()
                      , i = function(e) {
                        return n ? e : new b(e,O)
                    };
                    const t = {
                        1: e.base
                    };
                    for (var o = 2; o <= r; o *= 2) {
                        const e = new y(t[o / 2],t[o / 2]);
                        t[o] = e.expand().collect()
                    }
                    if (r in t)
                        return i(t[r]);
                    let a = s().map(r.toString(2).split(""), (function(e, t, n) {
                        return Number(e) * Math.pow(2, n.length - t - 1)
                    }
                    ));
                    a = s().without(a, 0);
                    const l = [];
                    for (const e of a)
                        e in t && l.push(t[e]);
                    return i(new y(l).expand().collect())
                }
                if (e.exp instanceof v) {
                    const t = s().map(e.exp.terms, (t => new b(e.base,t).expand()));
                    return new y(t).expand()
                }
                return e
            }
            factor() {
                var e = this.recurse("factor");
                if (e.base instanceof y) {
                    var t = s().map(e.base.terms, (t => t instanceof I && e.exp.equals(O) ? new A(1,t.n) : new b(t,e.exp)));
                    return new y(t)
                }
                return e
            }
            collect(e) {
                if (this.base instanceof b) {
                    const t = this.base.base
                      , n = y.createOrAppend(this.base.exp, this.exp);
                    return new b(t,n).collect(e)
                }
                const t = this.recurse("collect", e)
                  , n = function(e) {
                    return e instanceof x && e.base.equals(t.base)
                };
                if (t.exp instanceof _ && 0 === t.exp.eval())
                    return F;
                if (t.exp instanceof _ && 1 === t.exp.eval())
                    return t.base;
                if (n(t.exp))
                    return t.exp.power;
                if (t.exp instanceof y && s().any(t.exp.terms, n)) {
                    const r = t.exp.terms.find(n)
                      , i = r.power
                      , s = t.exp.remove(r).flatten();
                    return new b(i,s).collect(e)
                }
                if (t.base instanceof _ && t.exp instanceof _) {
                    if (e && e.preciseFloats) {
                        const e = t.exp.asRational()
                          , n = t.base.getDecimalPlaces();
                        if (new b(t.base,new A(1,e.d)).collect().getDecimalPlaces() > n) {
                            const n = new b(t.base,new I(e.n)).collect();
                            return new b(n,new A(1,e.d))
                        }
                    }
                    return t.base.raiseToThe(t.exp, e)
                }
                return t
            }
            isDivide() {
                var e = function(e) {
                    return e instanceof _ && Boolean(e.hints.divide)
                };
                return e(this.exp) || this.exp instanceof y && s().any(this.exp.terms, e)
            }
            asDivide() {
                if (this.exp instanceof _) {
                    if (-1 === this.exp.eval())
                        return this.base;
                    var e = this.exp.negate();
                    return e.hints = s().clone(this.exp.hints),
                    e.hints.divide = !1,
                    new b(this.base,e)
                }
                if (this.exp instanceof y)
                    return new b(this.base,this.exp.factorOut());
                throw new Error("called asDivide() on an Expr that wasn't a Num or Mul")
            }
            isRoot() {
                return this.exp instanceof A && Boolean(this.exp.hints.root)
            }
            isSquaredTrig() {
                return this.base instanceof w && !this.base.isInverse() && this.exp instanceof _ && 2 === this.exp.eval()
            }
            getDenominator() {
                if (this.exp instanceof _ && -1 === this.exp.eval())
                    return y.createOrAppend(this.base, this.base.getDenominator()).flatten();
                if (this.exp.isNegative()) {
                    var e = new b(this.base,y.handleNegative(this.exp).collect());
                    return y.createOrAppend(e, e.collect().getDenominator()).flatten()
                }
                return this.base instanceof _ ? new b(this.base.getDenominator(),this.exp).collect() : F
            }
            findGCD(e) {
                const [t,n] = e instanceof b ? [e.base, e.exp] : [e, F];
                if (this.base.equals(t)) {
                    if (this.exp.equals(n))
                        return this;
                    if (this.exp instanceof _ && n instanceof _)
                        return new b(this.base,_.min(this.exp, n)).collect();
                    if (this.exp instanceof _ || n instanceof _)
                        return F;
                    var r = this.exp.asMul().partition()
                      , i = n.asMul().partition();
                    if (r[1].equals(i[1])) {
                        var s = _.min(r[0].reduce(), i[0].reduce())
                          , o = new y(s,r[1].flatten()).flatten();
                        return new b(t,o).collect()
                    }
                }
                return F
            }
            isPositive() {
                if (this.base.isPositive())
                    return !0;
                var e = this.exp.simplify();
                return e instanceof I && e.eval() % 2 == 0
            }
            asPositiveFactor() {
                if (this.isPositive())
                    return this;
                var e = this.exp.simplify();
                if (e instanceof I) {
                    var t = e.eval();
                    if (t > 2)
                        return new b(this.base,new I(t - 1));
                    if (t < -2)
                        return new b(this.base,new I(t + 1))
                }
                return F
            }
            static sqrt(e) {
                return new b(e,L)
            }
        }
        a = b,
        b.nthroot = function(e, t) {
            var n = y.fold(y.handleDivide(new I(1), t));
            return new a(e,n.addHint("root"))
        }
        ;
        class x extends f {
            constructor(e, t) {
                super(),
                this.base = void 0,
                this.power = void 0,
                this.func = x,
                this.base = e,
                this.power = t,
                this.hints = o({}, this.hints, {
                    open: !1
                })
            }
            args() {
                return [this.base, this.power]
            }
            eval(e={}, t) {
                return Math.log(this.power.eval(e, t)) / Math.log(this.base.eval(e, t))
            }
            codegen() {
                return "(Math.log(" + this.power.codegen() + ") / Math.log(" + this.base.codegen() + "))"
            }
            print() {
                var e = "(" + this.power.print() + ")";
                return this.isNatural() ? "ln" + e : "log_(" + this.base.print() + ") " + e
            }
            tex() {
                var e = "(" + this.power.tex() + ")";
                return this.isNatural() ? "\\ln" + e : "\\log_{" + this.base.tex() + "}" + e
            }
            collect(e) {
                var t = this.recurse("collect", e);
                return t.power instanceof _ && 1 === t.power.eval() ? D : t.base.equals(t.power) ? F : t.power instanceof b && t.power.base.equals(t.base) ? t.power.exp : t
            }
            expand() {
                var e = this.recurse("expand");
                if (e.power instanceof y) {
                    var t = s().map(e.power.terms, (t => new x(e.base,t).expand()));
                    return new v(t)
                }
                return e.power instanceof b ? new y(e.power.exp,new x(e.base,e.power.base).expand()).flatten() : e.isNatural() ? e : y.handleDivide(new x(T.e,e.power), new x(T.e,e.base))
            }
            isPositive() {
                var e = this.collect();
                return e instanceof x && e.base instanceof _ && e.power instanceof _ && this.eval() > 0
            }
            needsExplicitMul() {
                return !1
            }
            isNatural() {
                return this.base.equals(T.e)
            }
            static natural() {
                return T.e
            }
            static common() {
                return z
            }
            static create(e, t) {
                var n = new x(e,t);
                return t.hints.parens || (n = n.addHint("open")),
                n
            }
        }
        class w extends f {
            constructor(e, t) {
                super(),
                this.type = void 0,
                this.arg = void 0,
                this.exp = void 0,
                this.func = w,
                this.functions = {
                    sin: {
                        eval: Math.sin,
                        codegen: "Math.sin((",
                        tex: "\\sin",
                        expand: () => this
                    },
                    cos: {
                        eval: Math.cos,
                        codegen: "Math.cos((",
                        tex: "\\cos",
                        expand: () => this
                    },
                    tan: {
                        eval: Math.tan,
                        codegen: "Math.tan((",
                        tex: "\\tan",
                        expand: () => y.handleDivide(w.sin(this.arg), w.cos(this.arg))
                    },
                    csc: {
                        eval: e => 1 / Math.sin(e),
                        codegen: "(1/Math.sin(",
                        tex: "\\csc",
                        expand: () => y.handleDivide(F, w.sin(this.arg))
                    },
                    sec: {
                        eval: e => 1 / Math.cos(e),
                        codegen: "(1/Math.cos(",
                        tex: "\\sec",
                        expand: () => y.handleDivide(F, w.cos(this.arg))
                    },
                    cot: {
                        eval: e => 1 / Math.tan(e),
                        codegen: "(1/Math.tan(",
                        tex: "\\cot",
                        expand: () => y.handleDivide(w.cos(this.arg), w.sin(this.arg))
                    },
                    arcsin: {
                        eval: Math.asin,
                        codegen: "Math.asin((",
                        tex: "\\arcsin"
                    },
                    arccos: {
                        eval: Math.acos,
                        codegen: "Math.acos((",
                        tex: "\\arccos"
                    },
                    arctan: {
                        eval: Math.atan,
                        codegen: "Math.atan((",
                        tex: "\\arctan"
                    },
                    arccsc: {
                        eval: e => Math.asin(1 / e),
                        codegen: "Math.asin(1/(",
                        tex: "\\operatorname{arccsc}"
                    },
                    arcsec: {
                        eval: e => Math.acos(1 / e),
                        codegen: "Math.acos(1/(",
                        tex: "\\operatorname{arcsec}"
                    },
                    arccot: {
                        eval: e => Math.atan(1 / e),
                        codegen: "Math.atan(1/(",
                        tex: "\\operatorname{arccot}"
                    },
                    sinh: {
                        eval: e => (Math.exp(e) - Math.exp(-e)) / 2,
                        codegen: e => "((Math.exp(" + e + ") - Math.exp(-(" + e + "))) / 2)",
                        tex: "\\sinh",
                        expand: () => this
                    },
                    cosh: {
                        eval: e => (Math.exp(e) + Math.exp(-e)) / 2,
                        codegen: e => "((Math.exp(" + e + ") + Math.exp(-(" + e + "))) / 2)",
                        tex: "\\cosh",
                        expand: () => this
                    },
                    tanh: {
                        eval: e => (Math.exp(e) - Math.exp(-e)) / (Math.exp(e) + Math.exp(-e)),
                        codegen: e => "((Math.exp(" + e + ") - Math.exp(-(" + e + "))) / (Math.exp(" + e + ") + Math.exp(-(" + e + "))))",
                        tex: "\\tanh",
                        expand: () => y.handleDivide(w.sinh(this.arg), w.cosh(this.arg))
                    },
                    csch: {
                        eval: e => 2 / (Math.exp(e) - Math.exp(-e)),
                        codegen: e => "(2 / (Math.exp(" + e + ") - Math.exp(-(" + e + "))))",
                        tex: "\\csch",
                        expand: () => y.handleDivide(F, w.sinh(this.arg))
                    },
                    sech: {
                        eval: e => 2 / (Math.exp(e) + Math.exp(-e)),
                        codegen: e => "(2 / (Math.exp(" + e + ") + Math.exp(-(" + e + "))))",
                        tex: "\\sech",
                        expand: () => y.handleDivide(F, w.cosh(this.arg))
                    },
                    coth: {
                        eval: e => (Math.exp(e) + Math.exp(-e)) / (Math.exp(e) - Math.exp(-e)),
                        codegen: e => "((Math.exp(" + e + ") + Math.exp(-(" + e + "))) / (Math.exp(" + e + ") - Math.exp(-(" + e + "))))",
                        tex: "\\coth",
                        expand: () => y.handleDivide(w.cosh(this.arg), w.sinh(this.arg))
                    }
                },
                this.type = e,
                this.arg = t,
                this.hints = o({}, this.hints, {
                    open: !1
                })
            }
            args() {
                return [this.type, this.arg]
            }
            isEven() {
                return s().contains(["cos", "sec"], this.type)
            }
            isInverse() {
                return 0 === this.type.indexOf("arc")
            }
            isBasic() {
                return s().contains(["sin", "cos"], this.type)
            }
            eval(e={}, t) {
                return (0,
                this.functions[this.type].eval)(this.arg.eval(e, t))
            }
            codegen() {
                var e = this.functions[this.type].codegen;
                if ("function" == typeof e)
                    return e(this.arg.codegen());
                if ("string" == typeof e)
                    return e + this.arg.codegen() + "))";
                throw new Error("codegen not implemented for " + this.type)
            }
            print() {
                return this.type + "(" + this.arg.print() + ")"
            }
            tex() {
                return this.functions[this.type].tex + ("(" + this.arg.tex() + ")")
            }
            texSplit() {
                return [this.functions[this.type].tex, "(" + this.arg.tex() + ")"]
            }
            isPositive() {
                var e = this.collect();
                return e instanceof w && e.arg instanceof _ && this.eval() > 0
            }
            completeParse() {
                if (this.exp) {
                    var e = new b(this,this.exp);
                    return this.exp = void 0,
                    e
                }
                return this
            }
            needsExplicitMul() {
                return !1
            }
            expand() {
                var e = this.recurse("expand");
                if (e.isInverse())
                    return e;
                var t = e.functions[e.type].expand;
                return s().bind(t, e)()
            }
            collect(e) {
                var t = this.recurse("collect", e);
                if (!t.isInverse() && t.arg.isNegative()) {
                    const n = t.arg instanceof _ ? t.arg.abs() : y.handleDivide(t.arg, N).collect(e);
                    return t.isEven() ? new w(t.type,n) : new y(N,new w(t.type,n))
                }
                return t
            }
            static create(e, t) {
                var n = e[0]
                  , r = e[1];
                r && r.equals(N) && (n = "arc" + n,
                r = void 0);
                var i = new w(n,t);
                return t.hints.parens || (i = i.addHint("open")),
                r && (i.exp = r),
                i
            }
            static sin(e) {
                return new w("sin",e)
            }
            static cos(e) {
                return new w("cos",e)
            }
            static sinh(e) {
                return new w("sinh",e)
            }
            static cosh(e) {
                return new w("cosh",e)
            }
        }
        class k extends f {
            constructor(e) {
                super(),
                this.arg = void 0,
                this.func = k,
                this.arg = e
            }
            args() {
                return [this.arg]
            }
            eval(e={}, t) {
                return Math.abs(this.arg.eval(e, t))
            }
            codegen() {
                return "Math.abs(" + this.arg.codegen() + ")"
            }
            print() {
                return "abs(" + this.arg.print() + ")"
            }
            tex() {
                return "\\left|" + this.arg.tex() + "\\right|"
            }
            collect(e) {
                var t = this.recurse("collect", e);
                if (t.arg.isPositive())
                    return t.arg;
                if (t.arg instanceof _)
                    return t.arg.abs();
                if (t.arg instanceof y) {
                    var n = s().groupBy(t.arg.terms, (e => e.isPositive() ? "positive" : e instanceof _ ? "number" : "other"))
                      , r = n.positive.concat(s().invoke(n.number, "abs"));
                    return n.other.length && r.push(new k(new y(n.other).flatten())),
                    new y(r).flatten()
                }
                return t
            }
            expand() {
                var e = this.recurse("expand");
                if (e.arg instanceof y) {
                    var t = s().map(e.arg.terms, (e => new k(e)));
                    return new y(t)
                }
                return e
            }
            isPositive() {
                return !0
            }
        }
        class S extends f {
            constructor(e, t, n) {
                super(),
                this.left = void 0,
                this.type = void 0,
                this.right = void 0,
                this.func = S,
                this.signs = {
                    "=": " = ",
                    "<": " < ",
                    ">": " > ",
                    "<>": " \\ne ",
                    "<=": " \\le ",
                    ">=": " \\ge "
                },
                this.left = e,
                this.type = t,
                this.right = n
            }
            args() {
                return [this.left, this.type, this.right]
            }
            needsExplicitMul() {
                return !1
            }
            print() {
                return this.left.print() + this.type + this.right.print()
            }
            tex() {
                return this.left.tex() + this.signs[this.type] + this.right.tex()
            }
            normalize() {
                var e = this.recurse("normalize");
                return s().contains([">", ">="], e.type) ? new S(e.right,e.type.replace(">", "<"),e.left) : e
            }
            asExpr(e=!1) {
                var t = e => e instanceof _ && e.isSimple() && 0 === e.eval();
                let n = [];
                this.left instanceof v ? n = s().clone(this.left.terms) : t(this.left) || (n = [this.left]),
                this.right instanceof v ? n = n.concat(this.right.negate().terms) : t(this.right) || n.push(this.right.negate());
                var r = !this.isEquality();
                n = s().invoke(n, "collect", {
                    preciseFloats: !0
                });
                for (var i = 0; i < n.length; i++) {
                    var o = n[i].getDenominator();
                    r && !o.isPositive() && (o = o.asPositiveFactor()),
                    o.equals(F) || (n = s().map(n, (e => y.createOrAppend(e, o).simplify({
                        once: !0,
                        preciseFloats: !0
                    }))))
                }
                var a = new v(n).flatten();
                return e ? a : this.divideThrough(a)
            }
            divideThrough(e) {
                const t = !this.isEquality()
                  , n = e.simplify({
                    once: !0
                })
                  , r = n.factor({
                    keepNegative: t
                });
                if (!(r instanceof y))
                    return e;
                const i = r.terms
                  , o = e => !!e.getVars().length
                  , [a,l] = p(i, d);
                if (a.length && this.isEquality())
                    return new y(a).flatten();
                let c = l;
                a.length || (c = s().reject(c, o)),
                t && (c = s().invoke(c, "asPositiveFactor")),
                c = s().reject(c, (e => e.equals(F))),
                c = s().map(c, (e => new b(e,O)));
                const h = new y(i.concat(c)).collect();
                return h.equals(r) ? n : h
            }
            isEquality() {
                return s().contains(["=", "<>"], this.type)
            }
            compare(e) {
                if (!(e instanceof S))
                    return !1;
                var t = this.normalize()
                  , n = e.normalize();
                if (t.type !== n.type)
                    return !1;
                var r = t.divideThrough(t.asExpr(!0).collect())
                  , i = n.divideThrough(n.asExpr(!0).collect());
                return t.isEquality() ? r.compare(i) || r.compare(y.handleNegative(i)) : r.compare(i)
            }
            sameForm(e) {
                var t = this.normalize()
                  , n = e.normalize()
                  , r = t.left.sameForm(n.left) && t.right.sameForm(n.right);
                return t.isEquality() ? r || t.left.sameForm(n.right) && t.right.sameForm(n.left) : r
            }
            isSimplified() {
                var e = this.asExpr(!0)
                  , t = this.divideThrough(e).simplify();
                return e.equals(t) && this.left.isSimplified() && this.right.isSimplified()
            }
            solveLinearEquationForVariable(e) {
                var t = this.asExpr();
                if (!(t instanceof v) || 2 !== t.terms.length)
                    throw new Error("Can only handle linear equations of the form a + bx (= 0)");
                const n = (r = t.terms[0]).has(C) && s().contains(r.getVars(), e.symbol);
                var r;
                const i = n ? y.handleNegative(t.terms[1]) : y.handleNegative(t.terms[0])
                  , o = n ? y.handleDivide(t.terms[0], e) : y.handleDivide(t.terms[1], e);
                return y.handleDivide(i, o).simplify()
            }
        }
        class E extends f {
            needsExplicitMul() {
                return !1
            }
            findGCD(e) {
                return e instanceof E || e instanceof _ ? this.equals(e) ? this : F : e.findGCD(this)
            }
        }
        class M extends E {
            constructor(e, t) {
                super(),
                this.symbol = void 0,
                this.arg = void 0,
                this.func = M,
                this.symbol = e,
                this.arg = t
            }
            args() {
                return [this.symbol, this.arg]
            }
            print() {
                return this.symbol + "(" + this.arg.print() + ")"
            }
            tex() {
                return this.symbol + "(" + this.arg.tex() + ")"
            }
            eval(e={}, t) {
                var n = this.arg
                  , r = e[this.symbol]
                  , i = s().extend(s().clone(e), {
                    x: n.eval(e, t)
                })
                  , o = B(r, t);
                return o.parsed ? o.expr.eval(i, t) : o
            }
            codegen() {
                return 'vars["' + this.symbol + '"](' + this.arg.codegen() + ")"
            }
            getUnits() {
                return this.arg.getUnits()
            }
            getVars(e) {
                return e ? this.arg.getVars() : s().union(this.arg.getVars(), [this.symbol]).sort()
            }
            getConsts() {
                return this.arg.getConsts()
            }
        }
        class C extends E {
            constructor(e, t) {
                super(),
                this.symbol = void 0,
                this.subscript = void 0,
                this.func = C,
                this.symbol = e,
                this.subscript = t
            }
            args() {
                return [this.symbol, this.subscript]
            }
            exprArgs() {
                return []
            }
            recurse() {
                return this
            }
            print() {
                var e = "";
                return this.subscript && (e = "_(" + this.subscript.print() + ")"),
                this.symbol + e
            }
            prettyPrint() {
                var e = this.subscript;
                return e && (e instanceof _ || e instanceof E) ? this.symbol + "_" + e.print() : this.print()
            }
            tex() {
                var e = "";
                return this.subscript && (e = "_{" + this.subscript.tex() + "}"),
                (this.symbol.length > 1 ? "\\" : "") + this.symbol + e
            }
            repr() {
                return "Var(" + this.print() + ")"
            }
            eval(e={}, t) {
                return e[this.prettyPrint()]
            }
            codegen() {
                return 'vars["' + this.prettyPrint() + '"]'
            }
            getVars() {
                return [this.prettyPrint()]
            }
            isPositive() {
                return !1
            }
        }
        class T extends E {
            constructor(e) {
                super(),
                this.symbol = void 0,
                this.func = T,
                this.symbol = e
            }
            args() {
                return [this.symbol]
            }
            recurse() {
                return this
            }
            eval(e={}, t) {
                return "pi" === this.symbol ? Math.PI : "e" === this.symbol ? Math.E : void 0
            }
            codegen() {
                return "pi" === this.symbol ? "Math.PI" : "e" === this.symbol ? "Math.E" : void 0
            }
            print() {
                return this.symbol
            }
            tex() {
                return "pi" === this.symbol ? "\\pi " : "e" === this.symbol ? "e" : void 0
            }
            isPositive() {
                return this.eval() > 0
            }
            abs() {
                return this.eval() > 0 ? this : y.handleNegative(this)
            }
            getConsts() {
                return [this.print()]
            }
        }
        l = T,
        T.e = new l("e"),
        T.pi = new l("pi");
        class _ extends f {
            constructor() {
                super(),
                this.n = 0,
                this.hints = o({}, this.hints, {
                    negate: !1,
                    subtract: !1,
                    divide: !1,
                    root: !1,
                    fraction: !1,
                    entered: !1
                })
            }
            repr() {
                return this.print()
            }
            strip() {
                return this.abs()
            }
            recurse() {
                return this
            }
            codegen() {
                return this.print()
            }
            isSubtract() {
                return Boolean(this.hints.subtract)
            }
            needsExplicitMul() {
                return !0
            }
            isPositive() {
                return this.eval() > 0
            }
            isNegative() {
                return this.eval() < 0
            }
            asPositiveFactor() {
                return this.isPositive() ? this : this.abs()
            }
            getDecimalPlaces() {
                var e = ("" + this.n).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);
                return e ? Math.max(0, (e[1] ? e[1].length : 0) - (e[2] ? +e[2] : 0)) : 0
            }
            static negativeOne(e) {
                return "subtract" === e ? P : "divide" === e ? O : N
            }
            static findGCD(e, t) {
                var n;
                if (e = Math.abs(e),
                t = Math.abs(t),
                e !== Math.floor(e) || t !== Math.floor(t))
                    return 1;
                for (; t; )
                    n = e % t,
                    e = t,
                    t = n;
                return e
            }
            static min(...e) {
                return s().min(e, (e => e.eval()))
            }
            static max(...e) {
                return s().max(e, (e => e.eval()))
            }
        }
        class A extends _ {
            constructor(e, t) {
                super(),
                this.n = void 0,
                this.d = void 0,
                this.func = A;
                var n = e
                  , r = t;
                r < 0 && (n = -n,
                r = -r),
                this.n = n,
                this.d = r
            }
            args() {
                return [this.n, this.d]
            }
            eval() {
                return this.n / this.d
            }
            print() {
                return this.n.toString() + "/" + this.d.toString()
            }
            tex() {
                var e = "\\frac{" + Math.abs(this.n).toString() + "}{" + this.d.toString() + "}";
                return this.n < 0 ? "-" + e : e
            }
            add(e, t) {
                return e instanceof A ? new A(this.n * e.d + this.d * e.n,this.d * e.d).collect() : e.add(this, t)
            }
            mul(e, t) {
                return e instanceof A ? new A(this.n * e.n,this.d * e.d).collect() : e.mul(this, t)
            }
            collect() {
                var e = _.findGCD(this.n, this.d)
                  , t = this.n / e
                  , n = this.d / e;
                return 1 === n ? new I(t) : new A(t,n)
            }
            negate() {
                return new A(-this.n,this.d)
            }
            abs() {
                return new A(Math.abs(this.n),this.d)
            }
            findGCD(e) {
                if (e instanceof A) {
                    var t = _.findGCD(this.n * e.d, e.n * this.d)
                      , n = this.d * e.d;
                    return new A(t,n).collect()
                }
                return e instanceof I ? new A(_.findGCD(this.n, e.n),this.d) : e.findGCD(this)
            }
            raiseToThe(e) {
                if (e instanceof I) {
                    var t = e.eval() > 0
                      , n = e.abs().eval()
                      , r = Math.pow(this.n, n)
                      , i = Math.pow(this.d, n);
                    return t ? new A(r,i).collect() : new A(i,r).collect()
                }
                return new R(this.eval()).raiseToThe(e)
            }
            getDenominator() {
                return new I(this.d)
            }
            isSimple() {
                return !1
            }
            asRational() {
                return this
            }
        }
        class I extends A {
            constructor(e) {
                super(e, 1),
                this.func = I
            }
            args() {
                return [this.n]
            }
            print() {
                return this.n.toString()
            }
            tex() {
                return this.n.toString()
            }
            negate() {
                return new I(-this.n)
            }
            abs() {
                return new I(Math.abs(this.n))
            }
            isSimple() {
                return !0
            }
            findGCD(e) {
                return e instanceof I ? new I(_.findGCD(this.n, e.n)) : e.findGCD(this)
            }
            static create(e) {
                return new I(e).addHint("entered")
            }
        }
        class R extends _ {
            constructor(e) {
                super(),
                this.n = void 0,
                this.func = R,
                this.n = e
            }
            args() {
                return [this.n]
            }
            eval() {
                return this.n
            }
            print() {
                return this.n.toString()
            }
            tex() {
                return this.n.toString()
            }
            add(e, t) {
                return t && t.preciseFloats ? R.toDecimalPlaces(this.n + e.eval(), Math.max(this.getDecimalPlaces(), e.getDecimalPlaces())) : new R(this.n + e.eval()).collect()
            }
            mul(e, t) {
                return t && t.preciseFloats ? R.toDecimalPlaces(this.n * e.eval(), this.getDecimalPlaces() + e.getDecimalPlaces()) : new R(this.n * e.eval()).collect()
            }
            collect(e) {
                return this
            }
            negate() {
                return new R(-this.n)
            }
            abs() {
                return new R(Math.abs(this.n))
            }
            findGCD(e) {
                return e instanceof _ ? new R(_.findGCD(this.eval(), e.eval())).collect() : e.findGCD(this)
            }
            raiseToThe(e, t) {
                return t && t.preciseFloats && e instanceof I && e.n > 1 ? R.toDecimalPlaces(new b(this,e).eval(), this.getDecimalPlaces() * e.n) : new R(new b(this,e).eval()).collect()
            }
            asRational() {
                var e = this.n.toString().split(".");
                if (1 === e.length)
                    return new A(this.n,1);
                var t = Number(e.join(""))
                  , n = Math.pow(10, e[1].length);
                return new A(t,n).collect()
            }
            getDenominator() {
                return this.asRational().getDenominator()
            }
            isSimple() {
                return !0
            }
            static create(e) {
                return new R(e).addHint("entered")
            }
            static toDecimalPlaces(e, t) {
                return new R(+e.toFixed(Math.min(t, 20))).collect()
            }
        }
        const N = new I(-1).addHint("negate")
          , P = new I(-1).addHint("subtract")
          , O = new I(-1).addHint("divide")
          , L = new A(1,2).addHint("root")
          , D = new I(0)
          , F = new I(1)
          , z = new I(10);
        c.yy = {
            Add: v,
            Mul: y,
            Pow: b,
            Log: x,
            Trig: w,
            Eq: S,
            Abs: k,
            Func: M,
            Const: T,
            Var: C,
            Int: I,
            Float: R,
            parseError: function(e, t) {
                throw new Error(t.loc.first_column)
            },
            constants: ["e"],
            symbolLexer: function(e) {
                return s().contains(c.yy.constants, e) ? "CONST" : s().contains(c.yy.functions, e) ? "FUNC" : "VAR"
            }
        };
        const B = function(e, t) {
            try {
                return t && t.functions ? c.yy.functions = s().without(t.functions, "i") : c.yy.functions = [],
                t && t.decimal_separator && (e = e.split(t.decimal_separator).join(".")),
                {
                    parsed: !0,
                    expr: c.parse(e).completeParse()
                }
            } catch (e) {
                return {
                    parsed: !1,
                    error: e.message
                }
            }
        };
        class q extends E {
            constructor(e) {
                super(),
                this.symbol = void 0,
                this.func = q,
                this.symbol = e
            }
            args() {
                return [this.symbol]
            }
            recurse() {
                return this
            }
            eval(e={}, t) {
                return 1
            }
            getUnits() {
                return [{
                    unit: this.symbol,
                    pow: 1
                }]
            }
            codegen() {
                return "1"
            }
            print() {
                return this.symbol
            }
            tex() {
                return this.symbol
            }
            collect(e) {
                if (s()(H).has(this.symbol))
                    return this;
                if (s()(V).has(this.symbol))
                    return V[this.symbol].conversion;
                throw new Error("could not understand unit: " + this.symbol)
            }
        }
        var H = {
            m: new q("m"),
            g: new q("g"),
            s: new q("s"),
            A: new q("A"),
            K: new q("K"),
            mol: new q("mol"),
            cd: new q("cd")
        };
        new b(new I(10),new I(-18)),
        new b(new I(10),new I(-15)),
        new b(new I(10),new I(-12)),
        new b(new I(10),new I(-9)),
        new b(new I(10),new I(-6)),
        new b(new I(10),new I(-3)),
        new b(new I(10),new I(-2)),
        new b(new I(10),new I(-1)),
        new I(10),
        new b(new I(10),new I(2)),
        new b(new I(10),new I(3)),
        new b(new I(10),new I(6)),
        new b(new I(10),new I(9)),
        new b(new I(10),new I(12)),
        new b(new I(10),new I(15)),
        new b(new I(10),new I(18)),
        new b(new I(10),new I(27));
        const U = "hasPrefixes"
          , G = "hasntPrefixes"
          , W = function(e, t) {
            var n = e.split("|")
              , r = n[0].trim()
              , i = n[1].trim()
              , s = F;
            "" !== r && (s = B(r).expr);
            var o = i.split("/")
              , a = [s];
            return o[0] && o[0].split(" ").filter((e => "" !== e)).forEach((e => a.push(new q(e)))),
            o[1] && o[1].split(" ").filter((e => "" !== e)).forEach((e => a.push(new b(new q(e),O)))),
            {
                conversion: new y(a),
                prefixes: t
            }
        };
        var V = {
            Da: W("1.6605388628 x 10^-24 | g", U),
            u: W("| Da", G),
            meter: W("| m", G),
            meters: W("| m", G),
            in: W("254 / 10000 | m", G),
            ft: W("3048  / 10000 | m", G),
            yd: W("9144  / 10000 | m", G),
            mi: W("1609344 / 1000 | m", G),
            ly: W("9.4607 x 10^15 | m", G),
            nmi: W("1852 | m", G),
            Å: W("10^-10 | m", G),
            pc: W("3.0857 x 10^16 | m", G),
            min: W("60 | s", G),
            hr: W("3600 | s", G),
            sec: W("| s", G),
            day: W("86400 | s", G),
            wk: W("604800 | s", G),
            fortnight: W("14 | day", G),
            shake: W("10^-8 | s", G),
            olympiad: W("126200000 | s", G),
            "°C": W("1 | K", G),
            "°F": W("5/9 | K", G),
            "°R": W("5/9 | K", G),
            e: W("1.6021765314 x 10^-19 | C", G),
            c: W("299792458 | m / s", G),
            kn: W("514/1000 | m / s", G),
            kt: W("| kn", G),
            knot: W("| kn", G),
            J: W("| N m", U),
            BTU: W("1060 | J", G),
            cal: W("4184 / 1000 | J", U),
            eV: W("1.602176514 x 10^-19 | J", U),
            erg: W("10^−7 | J", U),
            W: W("| J / s", U),
            "H-e": W("80 | W", G),
            N: W("1000 | g m / s s", U),
            lb: W("4448221615 / 1000000000 | N", G),
            dyn: W("10^-5 | N", G),
            Pa: W("1 | N / m m m", U),
            bar: W("10^5 | Pa", U),
            "㏔": W("1/1000 | bar", G),
            "㍴": W("| bar", G),
            atm: W("101325 | Pa", G),
            Torr: W("1/760 | atm", G),
            mmHg: W("| Torr", G),
            ha: W("10^4 | m m", G),
            b: W("10^−28 | m m", U),
            barn: W("| b", U),
            acre: W("4046.87 | m m", G),
            skilodge: W("10^-31 | m m", G),
            outhouse: W("10^-34 | m m", G),
            shed: W("10^-52 | m m", G),
            L: W("1/1000 | m m m", U),
            gal: W("3785/1000 | L", U),
            cup: W("1/16 | gal", G),
            qt: W("1/4 | gal", G),
            quart: W("| qt", G),
            p: W("1/8 | gal", G),
            pt: W("| p", G),
            pint: W("| p", G),
            "fl oz": W("1/8 | cup", G),
            "fl. oz.": W("1/8 | cup", G),
            tbsp: W("1/16 | cup", G),
            tsp: W("1/3 | tbsp", G),
            rev: W("2 pi | rad", G),
            deg: W("180 pi | rad", G),
            "°": W("| deg", G),
            arcminute: W("1/60 | deg", G),
            arcsec: W("1/3600 | deg", G),
            Hu: W("1000 | dB", U),
            dozen: W("12 |", G),
            mol: W("6.0221412927 x 10^23 |", U),
            "%": W("1/100 |", G),
            percent: W("| %", G),
            ppm: W("1/1000000 |", G),
            V: W("1000 | g m m / s s C", U),
            C: W("| A s", U),
            ampere: W("| A", G),
            Ω: W("| V / A", U),
            ohm: W("| Ω", G),
            F: W("| C / V", U),
            H: W("| ohm s", U),
            T: W("1000 | g / C s", U),
            Wb: W("1000 | g m m / C s", U),
            lm: W("pi x 10^4 | cd / m m", G),
            lx: W("| lm / m m", G),
            nit: W("| cd / m m", G),
            sb: W("10^4 | cd / m m", G),
            stilb: W("1 | sb", G),
            apostilb: W("1 / pi x 10^(-4) | sb", G),
            blondel: W("| apostilb", G),
            asb: W("| apostilb", G),
            la: W("| lm", G),
            Lb: W("| lm", G),
            sk: W("10^-7 | lm", G),
            skot: W("| sk", G),
            bril: W("10^-11 | lm", G),
            Hz: W("| / s", U)
        };
        const $ = function(e, t, n={}) {
            const r = o({}, {
                form: !1,
                simplify: !1
            }, n)
              , i = e.sameVars(t);
            if (!i.equal) {
                let e;
                return e = i.equalIgnoringCase ? "Check your variables; one or more are using the wrong case (upper or lower)." : "Check your variables; you may have used the wrong letter for one or more of them.",
                {
                    equal: !1,
                    wrongVariableCase: i.equalIgnoringCase,
                    wrongVariableNames: !i.equalIgnoringCase,
                    message: e
                }
            }
            return e.compare(t) ? r.form && !e.sameForm(t) ? {
                equal: !1,
                message: "Your answer is not in the correct form."
            } : r.simplify && !e.isSimplified() ? {
                equal: !1,
                message: "Your answer is not fully expanded and simplified."
            } : {
                equal: !0,
                message: null
            } : {
                equal: !1,
                message: null
            }
        }
    }
    ,
    738197: (e, t, n) => {
        "use strict";
        n.d(t, {
            Rx: () => m,
            jv: () => ie,
            xm: () => re,
            xr: () => H
        });
        var r = n(938302)
          , i = n(224952)
          , s = n.n(i);
        (0,
        r.Cy)("@khanacademy/kmath", "0.1.16");
        const o = 1e-9
          , a = Math.pow(2, -42);
        function l(e) {
            return s().isNumber(e) && !s().isNaN(e)
        }
        function c(e, t, n) {
            return null == e || null == t ? e === t : e === t || (null == n && (n = o),
            Math.abs(e - t) < n)
        }
        function h(e, t) {
            const n = Math.pow(10, t);
            return Math.round(e * n) / n
        }
        function p(e, t) {
            return Math.round(e / t) * t
        }
        function u(e, t) {
            return Math.floor(e / t) * t
        }
        function d(e, t) {
            return Math.ceil(e / t) * t
        }
        var m = Object.freeze({
            __proto__: null,
            DEFAULT_TOLERANCE: o,
            EPSILON: a,
            is: l,
            equal: c,
            sign: function(e, t) {
                return c(e, 0, t) ? 0 : Math.abs(e) / e
            },
            isInteger: function(e, t) {
                return c(Math.round(e), e, t)
            },
            round: h,
            roundTo: p,
            floorTo: u,
            ceilTo: d,
            toFraction: function(e, t=a, n=1e3) {
                let r = [1, 0]
                  , i = [0, 1]
                  , s = Math.floor(e)
                  , o = e - s;
                for (; i[0] <= n; ) {
                    if (c(r[0] / i[0], e, t))
                        return [r[0], i[0]];
                    r = [s * r[0] + r[1], r[0]],
                    i = [s * i[0] + i[1], i[0]],
                    s = Math.floor(1 / o),
                    o = 1 / o - s
                }
                return [e, 1]
            }
        });
        function f(e) {
            return e.reduce(( (e, t) => e + t), 0)
        }
        function g(e) {
            return e.reduce(( (e, t) => e * t), 1)
        }
        function v(...e) {
            const t = Math.min(...e.map((e => e.length)))
              , n = [];
            for (let r = 0; r < t; r++)
                n.push(e.map((e => e[r])));
            return n
        }
        function y(e, t) {
            return !!Array.isArray(e) && ((void 0 === t || e.length === t) && e.every(l))
        }
        function b(e) {
            return M(e, 1 / x(e))
        }
        function x(e) {
            return Math.sqrt(w(e, e))
        }
        function w(e, t) {
            return f(v(e, t).map(g))
        }
        function k(...e) {
            return v(...e).map(f)
        }
        function S(e, t) {
            return v(e, t).map((e => e[0] - e[1]))
        }
        function E(e) {
            return e.map((e => -e))
        }
        function M(e, t) {
            return e.map((e => e * t))
        }
        function C(e, t, n) {
            return e.length === t.length && v(e, t).every((e => c(e[0], e[1], n)))
        }
        function T(e, t, n) {
            return !(!c(x(e), 0, n) && !c(x(t), 0, n)) || C(e = b(e), t = b(t), n)
        }
        function _(e, t, n) {
            return T(e, t, n) || T(e, E(t), n)
        }
        function A(e) {
            const t = x(e);
            let n = Math.atan2(e[1], e[0]);
            return n < 0 && (n += 2 * Math.PI),
            [t, n]
        }
        function I(e) {
            const t = A(e);
            return [t[0], 180 * t[1] / Math.PI]
        }
        function R(e, t=0) {
            return [e * Math.cos(t), e * Math.sin(t)]
        }
        function N(e, t=0) {
            return R(e, t * Math.PI / 180)
        }
        function P(e, t) {
            const n = A(e)
              , r = n[1] + t;
            return R(n[0], r)
        }
        function O(e, t) {
            const n = I(e)
              , r = n[1] + t;
            return N(n[0], r)
        }
        function L(e, t) {
            return Math.acos(w(e, t) / (x(e) * x(t)))
        }
        function D(e, t) {
            return M(t, w(e, t) / w(t, t))
        }
        function F(e, t) {
            return e.map(( (e, n) => h(e, t[n] || t)))
        }
        function z(e, t) {
            return e.map(( (e, n) => p(e, t[n] || t)))
        }
        function B(e, t) {
            return e.map(( (e, n) => u(e, t[n] || t)))
        }
        function q(e, t) {
            return e.map(( (e, n) => d(e, t[n] || t)))
        }
        var H = Object.freeze({
            __proto__: null,
            zip: v,
            map: function(e, t) {
                return [t(e[0], 0), t(e[1], 1)]
            },
            is: y,
            normalize: b,
            length: x,
            dot: w,
            add: k,
            subtract: S,
            negate: E,
            scale: M,
            equal: C,
            codirectional: T,
            collinear: _,
            polarRadFromCart: A,
            polarDegFromCart: I,
            cartFromPolarRad: R,
            cartFromPolarDeg: N,
            rotateRad: P,
            rotateDeg: O,
            angleRad: L,
            angleDeg: function(e, t) {
                return 180 * L(e, t) / Math.PI
            },
            projection: D,
            round: F,
            roundTo: z,
            floorTo: B,
            ceilTo: q
        });
        function U(e, t) {
            const n = S(t[1], t[0])
              , r = S(e, t[0]);
            return x(S(D(r, n), r))
        }
        function G(e, t) {
            const n = S(t[1], t[0])
              , r = S(e, t[0])
              , i = S(M(D(r, n), 2), r);
            return k(t[0], i)
        }
        const W = y
          , V = k
          , $ = k
          , j = S
          , K = C
          , Z = A
          , Y = I
          , X = R
          , J = N
          , Q = F
          , ee = z
          , te = B
          , ne = q;
        var re = Object.freeze({
            __proto__: null,
            rotateRad: function(e, t, n) {
                return void 0 === n ? P(e, t) : k(n, P(S(e, n), t))
            },
            rotateDeg: function(e, t, n) {
                return void 0 === n ? O(e, t) : k(n, O(S(e, n), t))
            },
            distanceToPoint: function(e, t) {
                return x(S(e, t))
            },
            distanceToLine: U,
            reflectOverLine: G,
            compare: function(e, t, n) {
                if (e.length !== t.length)
                    return e.length - t.length;
                for (let r = 0; r < e.length; r++)
                    if (!c(e[r], t[r], n))
                        return e[r] - t[r];
                return 0
            },
            is: W,
            addVector: V,
            addVectors: $,
            subtractVector: j,
            equal: K,
            polarRadFromCart: Z,
            polarDegFromCart: Y,
            cartFromPolarRad: X,
            cartFromPolarDeg: J,
            round: Q,
            roundTo: ee,
            floorTo: te,
            ceilTo: ne
        });
        var ie = Object.freeze({
            __proto__: null,
            distanceToPoint: function(e, t) {
                return U(t, e)
            },
            reflectPoint: function(e, t) {
                return G(t, e)
            },
            midpoint: function(e) {
                return [(e[0][0] + e[1][0]) / 2, (e[0][1] + e[1][1]) / 2]
            },
            equal: function(e, t, n) {
                const r = S(e[1], e[0]);
                return !!_(r, S(t[1], t[0]), n) && (!!K(e[0], t[0]) || _(r, S(t[0], e[0]), n))
            }
        })
    }
    ,
    814561: (e, t, n) => {
        "use strict";
        n.d(t, {
            CG: () => ae,
            H5: () => Qe,
            Hw: () => qe,
            IA: () => Ye,
            JU: () => L,
            OS: () => B,
            VF: () => ce,
            __: () => S,
            _w: () => Y,
            hy: () => k,
            is: () => E,
            r_: () => F,
            si: () => Xe,
            xR: () => Je,
            zp: () => A
        });
        var r = n(938302)
          , i = n(101543)
          , s = n(161930)
          , o = n(569051)
          , a = n(254170)
          , l = n(667294)
          , c = n(973935)
          , h = n(764445)
          , p = n(48765)
          , u = n.n(p)
          , d = n(24761)
          , m = n(785677)
          , f = n(175330)
          , g = n(277573)
          , v = n(45697)
          , y = n.n(v)
          , b = n(734155);
        function x() {
            return x = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n)
                        ({}).hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            }
            ,
            x.apply(null, arguments)
        }
        (0,
        r.Cy)("@khanacademy/math-input", "21.1.5");
        class w extends l.Component {
            render() {
                const e = (0,
                a.css)(w.styles.initial, ...Array.isArray(this.props.style) ? this.props.style : [this.props.style]) + (this.props.extraClassName ? ` ${this.props.extraClassName}` : "");
                return l.createElement("div", {
                    className: e,
                    style: this.props.dynamicStyle,
                    onClick: this.props.onClick,
                    onTouchCancel: this.props.onTouchCancel,
                    onTouchEnd: this.props.onTouchEnd,
                    onTouchMove: this.props.onTouchMove,
                    onTouchStart: this.props.onTouchStart,
                    "aria-label": this.props.ariaLabel,
                    role: this.props.role,
                    ref: this.props.forwardRef
                }, this.props.children)
            }
        }
        w.styles = a.StyleSheet.create({
            initial: {
                alignItems: "stretch",
                borderWidth: 0,
                borderStyle: "solid",
                boxSizing: "border-box",
                display: "flex",
                flexBasis: "auto",
                flexDirection: "column",
                margin: 0,
                padding: 0,
                position: "relative",
                backgroundColor: "transparent",
                color: "inherit",
                font: "inherit",
                textAlign: "inherit",
                textDecorationLine: "none",
                listStyle: "none",
                maxWidth: "100%",
                minHeight: 0,
                minWidth: 0
            }
        });
        const k = l.createContext(b.env.STORYBOOK ? {
            strings: {
                mathInputBox: "Math input box",
                fingerTap: "Tap with one or two fingers to open keyboard",
                before: ({obj: e}) => `before ${e}`,
                after: ({obj: e}) => `after ${e}`,
                "beginning of": ({obj: e}) => `beginning of ${e}`,
                "end of": ({obj: e}) => `end of ${e}`,
                Baseline: "Baseline",
                Superscript: "Superscript",
                selected: ({obj: e}) => `${e} selected`,
                "no answer": "no answer",
                "nothing selected": "nothing selected",
                "nothing to the right": "nothing to the right",
                "nothing to the left": "nothing to the left",
                "block is empty": "block is empty",
                "nothing above": "nothing above",
                labelValue: ({label: e, value: t}) => `${e}: ${t}`,
                plus: "Plus",
                minus: "Minus",
                negative: "Negative",
                times: "Multiply",
                divide: "Divide",
                decimal: "Decimal",
                percent: "Percent",
                cdot: "Multiply",
                equalsSign: "Equals sign",
                notEqualsSign: "Not-equals sign",
                greaterThanSign: "Greater than sign",
                lessThanSign: "Less than sign",
                greaterThanOrEqualToSign: "Greater than or equal to sign",
                lessThanOrEqualSign: "Less than or equal to sign",
                fractionExpressionInNumerator: "Fraction, with current expression in numerator",
                fractionExcludingExpression: "Fraction, excluding the current expression",
                customExponent: "Custom exponent",
                square: "Square",
                cube: "Cube",
                squareRoot: "Square root",
                cubeRoot: "Cube root",
                radicalWithCustomRoot: "Radical with custom root",
                leftParenthesis: "Left parenthesis",
                rightParenthesis: "Right parenthesis",
                naturalLog: "Natural logarithm",
                logBase10: "Logarithm with base 10",
                logCustomBase: "Logarithm with custom base",
                sine: "Sine",
                sin: "sin",
                cosine: "Cosine",
                cos: "cos",
                tangent: "Tangent",
                tan: "tan",
                pi: "Pi",
                theta: "Theta",
                upArrow: "Up arrow",
                rightArrow: "Right arrow",
                downArrow: "Down arrow",
                leftArrow: "Left arrow",
                navOutOfParentheses: "Navigate right out of a set of parentheses",
                navOutOfExponent: "Navigate right out of an exponent",
                navOutOfBase: "Navigate right out of a base",
                navIntoNumerator: "Navigate right into the numerator of a fraction",
                navOutOfNumeratorIntoDenominator: "Navigate right out of the numerator and into the denominator",
                navOutOfDenominator: "Navigate right out of the denominator of a fraction",
                delete: "Delete",
                dismiss: "Dismiss"
            },
            locale: "en"
        } : null);
        function S({children: e, strings: t, locale: n}) {
            return l.createElement(k.Provider, {
                value: {
                    strings: t,
                    locale: n
                }
            }, e)
        }
        const E = () => (0,
        l.useContext)(k)
          , M = 45.98;
        class C extends l.Component {
            render() {
                const {x: e, y: t, animateIntoPosition: n} = this.props
                  , r = x({
                    position: "absolute",
                    zIndex: 4,
                    left: -22,
                    top: 0,
                    transform: `translate(${e}px, ${t}px)`,
                    width: 44,
                    height: 44,
                    touchAction: "none"
                }, n ? {
                    transitionDuration: "100ms",
                    transitionProperty: "transform"
                } : {});
                return l.createElement("span", {
                    style: r,
                    onTouchStart: this.props.onTouchStart,
                    onTouchMove: this.props.onTouchMove,
                    onTouchEnd: this.props.onTouchEnd,
                    onTouchCancel: this.props.onTouchCancel
                }, l.createElement("svg", {
                    fill: "none",
                    width: 44,
                    height: M,
                    viewBox: "0 0 44 45.98"
                }, l.createElement("filter", {
                    id: "math-input_cursor",
                    colorInterpolationFilters: "sRGB",
                    filterUnits: "userSpaceOnUse",
                    height: 40.002599999999994,
                    width: 36.08,
                    x: "4",
                    y: "0"
                }, l.createElement("feFlood", {
                    floodOpacity: "0",
                    result: "BackgroundImageFix"
                }), l.createElement("feColorMatrix", {
                    in: "SourceAlpha",
                    type: "matrix",
                    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                }), l.createElement("feOffset", {
                    dy: "4"
                }), l.createElement("feGaussianBlur", {
                    stdDeviation: "4"
                }), l.createElement("feColorMatrix", {
                    type: "matrix",
                    values: "0 0 0 0 0.129412 0 0 0 0 0.141176 0 0 0 0 0.172549 0 0 0 0.08 0"
                }), l.createElement("feBlend", {
                    in2: "BackgroundImageFix",
                    mode: "normal",
                    result: "effect1_dropShadow"
                }), l.createElement("feBlend", {
                    in: "SourceGraphic",
                    in2: "effect1_dropShadow",
                    mode: "normal",
                    result: "shape"
                })), l.createElement("g", {
                    filter: "url(#math-input_cursor)"
                }, l.createElement("path", {
                    d: "m22 4-7.07 7.0284c-1.3988 1.3901-2.3515 3.1615-2.7376 5.09-.3861 1.9284-.1883 3.9274.5685 5.7441s2.0385 3.3694 3.6831 4.4619c1.6445 1.0925 3.5781 1.6756 5.556 1.6756s3.9115-.5831 5.556-1.6756c1.6446-1.0925 2.9263-2.6452 3.6831-4.4619s.9546-3.8157.5685-5.7441c-.3861-1.9285-1.3388-3.6999-2.7376-5.09z",
                    fill: "#1865f2"
                })), l.createElement("path", {
                    d: "m14.9301 10.4841 7.0699-7.06989 7.0699 7.06989.0001.0001c1.3988 1.3984 2.3515 3.1802 2.7376 5.1201s.1883 3.9507-.5685 5.7782c-.7568 1.8274-2.0385 3.3894-3.6831 4.4883-1.6445 1.099-3.5781 1.6855-5.556 1.6855s-3.9115-.5865-5.556-1.6855c-1.6446-1.0989-2.9263-2.6609-3.6831-4.4883-.7568-1.8275-.9546-3.8383-.5685-5.7782s1.3388-3.7217 2.7376-5.1201z",
                    stroke: "#fff",
                    strokeWidth: "2"
                })))
            }
        }
        C.defaultProps = {
            animateIntoPosition: !1,
            visible: !1,
            x: 0,
            y: 0
        };
        class T {
            constructor(e, t) {
                this._scrollListener = void 0,
                this._moveListener = void 0,
                this._endAndCancelListener = void 0,
                this._scrollListener = () => {
                    e()
                }
                ;
                const n = {};
                for (let e = 0; e < t.changedTouches.length; e++) {
                    const r = t.changedTouches[e];
                    n[r.identifier] = [r.clientX, r.clientY]
                }
                this._moveListener = t => {
                    for (let r = 0; r < t.changedTouches.length; r++) {
                        const i = t.changedTouches[r]
                          , s = n[i.identifier];
                        if (s) {
                            const t = [i.clientX, i.clientY]
                              , n = t[0] - s[0]
                              , r = t[1] - s[1];
                            n * n + r * r > 64 && e()
                        }
                    }
                }
                ,
                this._endAndCancelListener = e => {
                    for (let t = 0; t < e.changedTouches.length; t++)
                        delete n[e.changedTouches[t].identifier]
                }
            }
            attach() {
                window.addEventListener("scroll", this._scrollListener),
                window.addEventListener("touchmove", this._moveListener),
                window.addEventListener("touchend", this._endAndCancelListener),
                window.addEventListener("touchcancel", this._endAndCancelListener)
            }
            detach() {
                window.removeEventListener("scroll", this._scrollListener),
                window.removeEventListener("touchmove", this._moveListener),
                window.removeEventListener("touchend", this._endAndCancelListener),
                window.removeEventListener("touchcancel", this._endAndCancelListener)
            }
        }
        let _ = function(e) {
            return e.WRITE = "write",
            e.CMD = "cmd",
            e.KEYSTROKE = "keystroke",
            e[e.MQ_END = 0] = "MQ_END",
            e
        }({})
          , A = function(e) {
            return e.NONE = "NONE",
            e.IN_PARENS = "IN_PARENS",
            e.IN_SUPER_SCRIPT = "IN_SUPER_SCRIPT",
            e.IN_SUB_SCRIPT = "IN_SUB_SCRIPT",
            e.IN_NUMERATOR = "IN_NUMERATOR",
            e.IN_DENOMINATOR = "IN_DENOMINATOR",
            e.BEFORE_FRACTION = "BEFORE_FRACTION",
            e
        }({});
        var I;
        const R = {
            COMMA: ",",
            PERIOD: "."
        }
          , N = e => {
            var t;
            let n = R.PERIOD;
            if ("ka" === e)
                n = ",";
            else {
                const r = 1.1
                  , i = new Intl.NumberFormat(e).format(r).match(/[^\d\u0661\u06F1]/);
                n = null != (t = null == i ? void 0 : i[0]) ? t : "."
            }
            return "," === n ? R.COMMA : R.PERIOD
        }
          , P = ["az", "cs", "da", "de", "hu", "hy", "kk", "ky", "lt", "lv", "nb", "sk", "sr", "sv", "uz"]
          , O = ["fr", "tr", "pt-pt"];
        function L(e, t) {
            return !P.includes(e) && (!!O.includes(e) || t)
        }
        const D = void 0 !== b && !(null == (I = b) || null == (I = I.env) || !I.JEST_WORKER_ID)
          , F = u().getInterface(3)
          , z = () => ({
            autoCommands: "pi theta phi sqrt nthroot",
            autoOperatorNames: ["arccos", "arcsin", "arctan", "arctg", "arg", "cos", "cosec", "cossec", "cosh", "cot", "cotg", "coth", "csc", "ctg", "deg", "det", "dim", "exp", "gcd", "hom", "inf", "ker", "lg", "lim", "liminf", "limsup", "ln", "log", "max", "min", "Pr", "projlim", "sec", "sen", "sin", "sinh", "sup", "tan", "tanh", "tg"].join(" "),
            charsThatBreakOutOfSupSub: "+-*/=<>≠≤≥",
            supSubsRequireOperand: !0,
            spaceBehavesLikeTab: !0
        });
        function B(e, t, n, r) {
            const i = z()
              , s = r ? r(i) : i
              , o = F.MathField(e, s).setAriaLabel(n.mathInputBox).setAriaStringsOverrideMap({
                before: e => n.before({
                    obj: e
                }),
                after: e => n.after({
                    obj: e
                }),
                "beginning of": e => n["beginning of"]({
                    obj: e
                }),
                "end of": e => n["end of"]({
                    obj: e
                }),
                Baseline: n.Baseline,
                Superscript: n.Superscript,
                selected: e => n.selected({
                    obj: e
                }),
                "no answer": n["no answer"],
                "nothing selected": n["nothing selected"],
                "nothing to the right": n["nothing to the right"],
                "nothing to the left": n["nothing to the left"],
                "block is empty": n["block is empty"],
                "nothing above": n["nothing above"],
                labelValue: (e, t) => n.labelValue({
                    label: e,
                    value: t
                })
            });
            return !D && h.SpeechRuleEngine.setup(t).then((e => o.setMathspeakOverride(e.texToSpeech))),
            o
        }
        const q = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"]
          , H = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "\\theta", "\\pi", ...q.map((e => e.toLowerCase())), ...q.map((e => e.toUpperCase()))]
          , U = (e, t) => e._el && e._el.classList.contains(t);
        function G(e) {
            return U(e, "mq-fraction")
        }
        function W(e) {
            return e && "\\left(" === e.ctrlSeq
        }
        function V(e) {
            return e.blocks && U(e.blocks[0], "mq-nthroot")
        }
        function $(e) {
            return e[F.L] === _.MQ_END && e[F.R] === _.MQ_END
        }
        function j(e, t) {
            t.insLeftOf(e),
            t.startSelection(),
            t.insRightOf(e),
            t.select(),
            t.endSelection()
        }
        function K(e) {
            if (!e)
                return null;
            const t = /^[a-z]$/
              , n = /^\\[a-z]$/
              , r = ["\\log", "\\ln", "\\cos", "\\sin", "\\tan"];
            let i, s, o = "", a = e;
            for (; 0 !== a; ) {
                const e = a.ctrlSeq.trim();
                if (!t.test(e)) {
                    if (n.test(e)) {
                        o = e + o,
                        i = a;
                        break
                    }
                    break
                }
                o = e + o,
                a = a[F.L]
            }
            if (i) {
                for (a = e[F.R]; 0 !== a; ) {
                    const e = a.ctrlSeq.trim();
                    if (t.test(e))
                        o += e;
                    else if ("\\left(" === e) {
                        s = a;
                        break
                    }
                    a = a[F.R]
                }
                return r.includes(o) ? {
                    name: o,
                    startNode: i,
                    endNode: s
                } : null
            }
            return null
        }
        function Z(e) {
            return K(e[F.L])
        }
        function Y(e) {
            if (!e)
                return A.NONE;
            const t = e.cursor();
            let n = t;
            for (; n[F.R] !== _.MQ_END; ) {
                if (G(n[F.R]))
                    return A.BEFORE_FRACTION;
                if (!((r = n[F.R]) && r.ctrlSeq && H.includes(r.ctrlSeq.trim())))
                    break;
                n = n[F.R]
            }
            var r;
            return W(t.parent && t.parent.parent) ? A.IN_PARENS : function(e) {
                return U(e, "mq-numerator")
            }(t.parent) ? A.IN_NUMERATOR : function(e) {
                return U(e, "mq-denominator")
            }(t.parent) ? A.IN_DENOMINATOR : function(e) {
                return U(e, "mq-sub-only") || U(e, "mq-sub")
            }(t.parent) ? A.IN_SUB_SCRIPT : function(e) {
                return U(e, "mq-sup-only") || U(e, "mq-sup")
            }(t.parent) ? A.IN_SUPER_SCRIPT : A.NONE
        }
        function X(e) {
            const t = e.cursor();
            if (t.selection)
                e.keystroke("Backspace");
            else {
                const r = t.parent
                  , i = r.parent
                  , s = t[F.L];
                G(s) ? j(s, t) : (n = s).blocks && U(n.blocks[0], "mq-sqrt-stem") || V(s) ? j(s, t) : function(e) {
                    return U(e, "mq-nthroot")
                }(r) ? function(e, t) {
                    if ($(t)) {
                        const n = t.parent.parent
                          , r = n.latex()
                          , i = n[F.L];
                        j(n, t),
                        "" === n.blocks[1]._el.textContent ? e.keystroke("Backspace") : (e.keystroke("Backspace"),
                        e.write(r.replace(/^\\sqrt\[\]/, "\\sqrt")),
                        i === _.MQ_END ? e.moveToLeftEnd() : t.insRightOf(i))
                    } else
                        t[F.L] !== _.MQ_END && e.keystroke("Backspace")
                }(e, t) : "\\left(" === s.ctrlSeq ? function(e) {
                    const t = e[F.L]
                      , n = e[F.R]
                      , r = Z(t);
                    r && r.startNode ? (e.insLeftOf(r.startNode),
                    e.startSelection(),
                    n === _.MQ_END ? e.insAtRightEnd(e.parent) : e.insLeftOf(n),
                    e.select(),
                    e.endSelection()) : (e.startSelection(),
                    e.insLeftOf(t),
                    e.select(),
                    e.endSelection())
                }(t) : "\\left(" === i.ctrlSeq ? function(e, t) {
                    if (t[F.L] !== _.MQ_END)
                        return void e.keystroke("Backspace");
                    const n = t.parent.parent;
                    if (n[F.L].sub && n[F.L].sub._el.textContent)
                        return void t.insAtRightEnd(n[F.L].sub);
                    const r = $(t)
                      , i = Z(n);
                    t.insLeftOf(i && i.startNode || n),
                    t.startSelection(),
                    t.insRightOf(n),
                    t.select(),
                    t.endSelection(),
                    r && e.keystroke("Backspace")
                }(e, t) : function(e) {
                    const t = e.parent.parent;
                    if (t && U(t, "mq-supsub")) {
                        const e = Z(t);
                        if (e && "\\log" === e.name)
                            return !0
                    }
                    return !1
                }(t) ? function(e, t) {
                    if ($(t)) {
                        const n = t.parent.parent
                          , r = Z(n);
                        t.insLeftOf(null == r ? void 0 : r.startNode),
                        t.startSelection(),
                        n[F.R] !== _.MQ_END ? t.insRightOf(n[F.R]) : t.insRightOf(n),
                        t.select(),
                        t.endSelection(),
                        "" === n[F.R]._el.textContent && e.keystroke("Backspace")
                    } else
                        e.keystroke("Backspace")
                }(e, t) : "\\ge " === s.ctrlSeq || "\\le " === s.ctrlSeq ? function(e) {
                    e.keystroke("Backspace"),
                    e.keystroke("Backspace")
                }(e) : V(i) && s === _.MQ_END ? function(e, t) {
                    const n = t[F.L] === _.MQ_END
                      , r = $(t.parent.parent.blocks[0].ends);
                    n ? (j(t.parent.parent, t),
                    r && e.keystroke("Backspace")) : e.keystroke("Backspace")
                }(e, t) : e.keystroke("Backspace")
            }
            var n
        }
        function J(e, t) {
            const n = e.cursor();
            "LEFT" === t ? function(e, t) {
                if (t[F.L] === _.MQ_END) {
                    const e = t.parent.parent;
                    if ("\\left(" === e.ctrlSeq) {
                        const n = Z(e);
                        if (n)
                            return void t.insLeftOf(n.startNode)
                    }
                }
                e.keystroke("Left")
            }(e, n) : "RIGHT" === t && function(e, t) {
                const n = K(t[F.R]);
                n ? (t.insLeftOf(n.endNode),
                e.keystroke("Right")) : e.keystroke("Right")
            }(e, n)
        }
        const Q = ["+", "-", "\\cdot", "\\times", "\\div"]
          , ee = ["=", "\\neq", "<", "\\leq", ">", "\\geq"];
        function te(e, t) {
            const n = e.cursor()
              , r = [...Q, ...ee]
              , i = n[F.L]
              , s = i === _.MQ_END || r.includes(i.ctrlSeq.trim());
            switch (s && e.write("\\left(\\right)"),
            t) {
            case "EXP":
                e.cmd("^");
                break;
            case "EXP_2":
            case "EXP_3":
                e.write("^" + ("EXP_2" === t ? 2 : 3)),
                s && (e.keystroke("Left"),
                e.keystroke("Left"),
                e.keystroke("Left"),
                e.keystroke("Left"));
                break;
            default:
                throw new Error(`Invalid exponent key: ${t}`)
            }
        }
        const ne = {
            [A.IN_PARENS]: "JUMP_OUT_PARENTHESES",
            [A.IN_SUPER_SCRIPT]: "JUMP_OUT_EXPONENT",
            [A.IN_SUB_SCRIPT]: "JUMP_OUT_BASE",
            [A.BEFORE_FRACTION]: "JUMP_INTO_NUMERATOR",
            [A.IN_NUMERATOR]: "JUMP_OUT_NUMERATOR",
            [A.IN_DENOMINATOR]: "JUMP_OUT_DENOMINATOR"
        };
        function re(e, t) {
            const n = e.cursor()
              , r = Y(e);
            if (ne[r] === t)
                switch (r) {
                case A.IN_PARENS:
                    n.insRightOf(n.parent.parent),
                    e.keystroke("Right");
                    break;
                case A.BEFORE_FRACTION:
                    let t, i = n;
                    for (; i[F.R] !== _.MQ_END; )
                        G(i[F.R]) && (t = i[F.R]),
                        i = i[F.R];
                    n.insLeftOf(t),
                    e.keystroke("Right");
                    break;
                case A.IN_NUMERATOR:
                    const s = n.parent.parent.blocks[1];
                    for (; n.parent !== s; )
                        e.keystroke("Right");
                    break;
                case A.IN_DENOMINATOR:
                    n.insRightOf(n.parent.parent);
                    break;
                case A.IN_SUB_SCRIPT:
                    n.insRightOf(n.parent.parent),
                    W(n[F.R]) && e.keystroke("Right");
                    break;
                case A.IN_SUPER_SCRIPT:
                    n.insRightOf(n.parent.parent);
                    break;
                default:
                    throw new Error(`Attempted to 'Jump Out' from node, but found no appropriate cursor context: ${r}`)
                }
        }
        function ie(e, t=_.WRITE) {
            return function(n) {
                switch (t) {
                case _.WRITE:
                    return void n.write(e);
                case _.CMD:
                    return void n.cmd(e);
                case _.KEYSTROKE:
                    return void n.keystroke(e)
                }
            }
        }
        function se(e, t, n) {
            const r = t.includes(e) ? e : n;
            return function(e) {
                e.write(`${r}\\left(\\right)`),
                e.keystroke("Left")
            }
        }
        function oe(e) {
            return function(t) {
                t.write(`\\${e}\\left(\\right)`),
                t.keystroke("Left")
            }
        }
        const ae = (e, t) => ({
            EXP: te,
            EXP_2: te,
            EXP_3: te,
            JUMP_OUT_PARENTHESES: re,
            JUMP_OUT_EXPONENT: re,
            JUMP_OUT_BASE: re,
            JUMP_INTO_NUMERATOR: re,
            JUMP_OUT_NUMERATOR: re,
            JUMP_OUT_DENOMINATOR: re,
            LEFT: J,
            RIGHT: J,
            LOG: oe("log"),
            LN: oe("ln"),
            COS: oe(t.cos),
            SIN: se(t.sin, ["sin", "sen"], "sin"),
            TAN: se(t.tan, ["tan", "tg"], "tan"),
            CDOT: ie("\\cdot"),
            DECIMAL: ie(N(e)),
            DIVIDE: ie("\\div"),
            EQUAL: ie("="),
            GEQ: ie("\\geq"),
            GT: ie(">"),
            LEQ: ie("\\leq"),
            LT: ie("<"),
            MINUS: ie("-"),
            NEGATIVE: ie("-"),
            NEQ: ie("\\neq"),
            PERCENT: ie("%"),
            PERIOD: ie("."),
            PLUS: ie("+"),
            TIMES: ie("\\times"),
            FRAC_INCLUSIVE: ie("/", _.CMD),
            FRAC: ie("\\frac", _.CMD),
            LEFT_PAREN: ie("(", _.CMD),
            RIGHT_PAREN: ie(")", _.CMD),
            SQRT: ie("sqrt", _.CMD),
            PI: ie("pi", _.CMD),
            THETA: ie("theta", _.CMD),
            RADICAL: ie("nthroot", _.CMD),
            BACKSPACE: ie("Backspace", _.KEYSTROKE),
            UP: ie("Up", _.KEYSTROKE),
            DOWN: ie("Down", _.KEYSTROKE),
            CUBE_ROOT: e => {
                e.write("\\sqrt[3]{}"),
                e.keystroke("Left")
            }
            ,
            FRAC_EXCLUSIVE: e => {
                const t = e.cursor()[F.L] === _.MQ_END;
                e.cmd("\\frac"),
                t && e.keystroke("Left")
            }
            ,
            LOG_N: e => {
                e.write("log_{ }\\left(\\right)"),
                e.keystroke("Left"),
                e.keystroke("Left"),
                e.keystroke("Left")
            }
            ,
            DISMISS: () => {}
            ,
            NUM_0: ie("0"),
            NUM_1: ie("1"),
            NUM_2: ie("2"),
            NUM_3: ie("3"),
            NUM_4: ie("4"),
            NUM_5: ie("5"),
            NUM_6: ie("6"),
            NUM_7: ie("7"),
            NUM_8: ie("8"),
            NUM_9: ie("9"),
            a: ie("a"),
            b: ie("b"),
            c: ie("c"),
            d: ie("d"),
            e: ie("e"),
            f: ie("f"),
            g: ie("g"),
            h: ie("h"),
            i: ie("i"),
            j: ie("j"),
            k: ie("k"),
            l: ie("l"),
            m: ie("m"),
            n: ie("n"),
            o: ie("o"),
            p: ie("p"),
            q: ie("q"),
            r: ie("r"),
            s: ie("s"),
            t: ie("t"),
            u: ie("u"),
            v: ie("v"),
            w: ie("w"),
            x: ie("x"),
            y: ie("y"),
            z: ie("z"),
            A: ie("A"),
            B: ie("B"),
            C: ie("C"),
            D: ie("D"),
            E: ie("E"),
            F: ie("F"),
            G: ie("G"),
            H: ie("H"),
            I: ie("I"),
            J: ie("J"),
            K: ie("K"),
            L: ie("L"),
            M: ie("M"),
            N: ie("N"),
            O: ie("O"),
            P: ie("P"),
            Q: ie("Q"),
            R: ie("R"),
            S: ie("S"),
            T: ie("T"),
            U: ie("U"),
            V: ie("V"),
            W: ie("W"),
            X: ie("X"),
            Y: ie("Y"),
            Z: ie("Z")
        });
        class le {
            constructor(e, t, n, r, i={}) {
                var s;
                this.mathField = void 0,
                this.callbacks = void 0,
                this.mobileKeyTranslator = void 0,
                this.mathField = B(e, r, n, ( () => ({
                    substituteTextarea: function() {
                        return document.createElement("span")
                    }
                }))),
                null == (s = this.mathField) || s.setAriaLabel(t),
                this.callbacks = i,
                this.mobileKeyTranslator = x({}, ae(r, n), {
                    BACKSPACE: X
                })
            }
            focus() {
                this.mathField.cursor().show(),
                this.mathField.focus()
            }
            blur() {
                this.mathField.cursor().hide(),
                this.mathField.blur()
            }
            pressKey(e) {
                const t = this.getCursor()
                  , n = this.mobileKeyTranslator[e];
                return n && n(this.mathField, e),
                t.selection || t.show(),
                this.callbacks.onSelectionChanged && this.callbacks.onSelectionChanged(t.selection),
                {
                    context: this.contextForCursor()
                }
            }
            setCursorPosition(e, t, n) {
                const r = n || document.elementFromPoint(e, t);
                if (r) {
                    const n = this.getCursor();
                    if (r.hasAttribute("mq-root-block"))
                        n.insAtRightEnd(this.mathField.controller().root);
                    else {
                        const i = this.mathField.controller()
                          , s = e - document.body.scrollLeft
                          , o = t - document.body.scrollTop;
                        i.seek(r, s, o).cursor.startSelection();
                        const a = K(n[F.L]);
                        a && a.endNode && (n.insLeftOf(a.endNode),
                        this.mathField.keystroke("Right"))
                    }
                    this.callbacks.onCursorMove && this.callbacks.onCursorMove({
                        context: this.contextForCursor()
                    })
                }
            }
            getCursor() {
                return this.mathField.cursor()
            }
            contextForCursor() {
                return Y(this.mathField)
            }
            getSelection() {
                return this.getCursor().selection
            }
            getContent() {
                return this.mathField.latex()
            }
            setContent(e) {
                this.mathField.latex(e)
            }
            isEmpty() {
                const e = this.getCursor();
                return 1 === e.parent.id && 0 === e[1] && 0 === e[-1]
            }
        }
        class ce extends l.Component {
            constructor(...e) {
                super(...e),
                this.didTouchOutside = void 0,
                this.didScroll = void 0,
                this.mathField = void 0,
                this.recordTouchStartOutside = void 0,
                this.blurOnTouchEndOutside = void 0,
                this.blurOnClickOutside = void 0,
                this.dragListener = void 0,
                this.inputRef = void 0,
                this._isMounted = void 0,
                this._mathContainer = void 0,
                this._container = void 0,
                this._root = void 0,
                this._containerBounds = void 0,
                this.state = {
                    focused: !1,
                    showInputFocusStyle: !1,
                    handle: {
                        animateIntoPosition: !1,
                        visible: !1,
                        x: 0,
                        y: 0
                    }
                },
                this._updateInputPadding = () => {
                    this._container = c.findDOMNode(this),
                    this._root = this._container.querySelector(".mq-root-block");
                    const e = this.getInputInnerPadding();
                    this._root.style.padding = `${e.paddingTop}px ${e.paddingRight}px ${e.paddingBottom}px ${e.paddingLeft}px`,
                    this._root.style.fontSize = `${he}pt`
                }
                ,
                this._updateCursorHandle = e => {
                    const t = this._container.getBoundingClientRect()
                      , n = this._container.querySelector(".mq-cursor").getBoundingClientRect()
                      , r = n.width
                      , i = this.getInputInnerPadding()
                      , s = t.right - r - i.paddingRight
                      , o = t.left + r + i.paddingLeft;
                    let a = n.left;
                    n.left > s ? a = s : n.left < o && (a = o),
                    this.setState({
                        handle: {
                            visible: !0,
                            animateIntoPosition: e,
                            x: a + r / 2 - t.left,
                            y: n.bottom + 2 - t.top
                        }
                    })
                }
                ,
                this._hideCursorHandle = () => {
                    this.setState({
                        handle: {
                            visible: !1,
                            x: 0,
                            y: 0
                        }
                    })
                }
                ,
                this._handleScroll = () => {
                    !1 !== this.state.handle.animateIntoPosition && this._hideCursorHandle()
                }
                ,
                this.blur = () => {
                    this.mathField.blur(),
                    this.setState({
                        showInputFocusStyle: !1,
                        handle: {
                            visible: !1
                        }
                    })
                }
                ,
                this.focus = e => {
                    var t, n;
                    null == (t = this.props.keypadElement) || t.setKeyHandler((e => {
                        const t = this.mathField.pressKey(e)
                          , n = () => {
                            this.setState({
                                handle: {
                                    visible: !1
                                }
                            })
                        }
                          , r = this.mathField.getContent();
                        return this.props.value !== r ? this.props.onChange(r, n) : n(),
                        t
                    }
                    )),
                    this.mathField.focus(),
                    null == (n = this.props) || n.onFocus(),
                    e(!0),
                    this.setState({
                        focused: !0,
                        showInputFocusStyle: !0
                    }, ( () => {
                        setTimeout(( () => {
                            if (this._isMounted) {
                                var e;
                                const t = null == (e = this.props.keypadElement) ? void 0 : e.getDOMNode();
                                ( (e, t) => {
                                    const n = e.getBoundingClientRect()
                                      , r = n.bottom
                                      , i = n.top
                                      , s = document.scrollingElement;
                                    if (t) {
                                        const e = window.innerHeight - (t.clientHeight + 60);
                                        if (r > e) {
                                            const t = Math.min(r - e + 16, i);
                                            return void (s && (s.scrollTop += t))
                                        }
                                    }
                                    s && i < 16 && (s.scrollTop -= n.height + 16)
                                }
                                )(this._container, t)
                            }
                        }
                        ))
                    }
                    ))
                }
                ,
                this._findHitNode = (e, t, n, r, i) => {
                    for (; n >= e.top && n <= e.bottom; ) {
                        const e = [[t - r, n += i], [t, n], [t + r, n]].map((e => document.elementFromPoint(...e))).filter((e => e && this._root.contains(e) && (!e.classList.contains("mq-root-block") && !e.classList.contains("mq-non-leaf") || e.classList.contains("mq-empty") || e.classList.contains("mq-hasCursor"))));
                        let s = null;
                        const a = [];
                        let l = 0;
                        const c = {}
                          , h = {};
                        for (const t of e) {
                            const e = t.getAttribute("mathquill-command-id");
                            null != e ? (c[e] = (c[e] || 0) + 1,
                            h[e] = t) : a.push(t)
                        }
                        for (const [e,t] of (0,
                        o.qh)(c))
                            t > l && (l = t,
                            s = h[e]);
                        if (null == s && a.length > 0 && (s = a[0]),
                        null !== s)
                            return this.mathField.setCursorPosition(t, n, s),
                            !0
                    }
                    return !1
                }
                ,
                this._insertCursorAtClosestNode = (e, t) => {
                    const n = this.mathField.getCursor();
                    if (!this._root.hasChildNodes())
                        return void n.insAtLeftEnd(this.mathField.mathField.controller().root);
                    let r;
                    t > this._containerBounds.bottom ? t = this._containerBounds.bottom - 10 : t < this._containerBounds.top && (t = this._containerBounds.top + 10),
                    e > this._containerBounds.right ? e = this._containerBounds.right - 15 : e < this._containerBounds.left && (e = this._containerBounds.left + 15),
                    r = -8;
                    if (this._findHitNode(this._containerBounds, e, t, 5, r))
                        return;
                    if (t = this._containerBounds.top,
                    r = 8,
                    this._findHitNode(this._containerBounds, e, t, 5, r))
                        return;
                    const i = this._root.firstChild.getBoundingClientRect()
                      , s = this._root.lastChild.getBoundingClientRect()
                      , o = i.left
                      , a = s.right;
                    Math.abs(e - a) < Math.abs(e - o) ? n.insAtRightEnd(this.mathField.mathField.controller().root) : n.insAtLeftEnd(this.mathField.mathField.controller().root),
                    this.props.keypadElement && this.props.keypadElement.setCursor({
                        context: this.mathField.contextForCursor()
                    })
                }
                ,
                this.handleTouchStart = (e, t, n) => {
                    var r;
                    if (e.stopPropagation(),
                    this._hideCursorHandle(),
                    "" !== this.mathField.getContent()) {
                        this._containerBounds = this._container.getBoundingClientRect();
                        const t = e.changedTouches[0];
                        this._insertCursorAtClosestNode(t.clientX, t.clientY)
                    }
                    this.state.focused && !t && n(!0),
                    this.state.focused || this.focus(n),
                    null == (r = this.inputRef) || r.focus()
                }
                ,
                this.handleClick = (e, t, n) => {
                    var r;
                    e.stopPropagation(),
                    this._hideCursorHandle(),
                    "" !== this.mathField.getContent() && (this._containerBounds = this._container.getBoundingClientRect(),
                    this._insertCursorAtClosestNode(e.clientX, e.clientY)),
                    this.state.focused && !t && n(!0),
                    this.state.focused || this.focus(n),
                    null == (r = this.inputRef) || r.focus()
                }
                ,
                this.handleTouchMove = e => {
                    if (e.stopPropagation(),
                    "" !== this.mathField.getContent() && this.state.focused) {
                        const t = e.changedTouches[0];
                        this._insertCursorAtClosestNode(t.clientX, t.clientY)
                    }
                }
                ,
                this.handleTouchEnd = e => {
                    e.stopPropagation(),
                    "" !== this.mathField.getContent() && this.state.focused && this._updateCursorHandle()
                }
                ,
                this.onCursorHandleTouchStart = e => {
                    e.stopPropagation(),
                    e.preventDefault(),
                    this._containerBounds = this._container.getBoundingClientRect()
                }
                ,
                this._constrainToBound = (e, t, n, r) => e < t ? t + (e - t) * r : e > n ? n + (e - n) * r : e,
                this.onCursorHandleTouchMove = e => {
                    e.stopPropagation();
                    const t = e.changedTouches[0].clientX
                      , n = e.changedTouches[0].clientY
                      , r = t - this._containerBounds.left
                      , i = n - 22.99 - this._containerBounds.top;
                    this.setState({
                        handle: {
                            animateIntoPosition: !1,
                            visible: !0,
                            x: this._constrainToBound(r, 0, this._containerBounds.width, .8),
                            y: this._constrainToBound(i, 0, this._containerBounds.height, .8)
                        }
                    });
                    const s = n - 22;
                    this._insertCursorAtClosestNode(t, s)
                }
                ,
                this.onCursorHandleTouchEnd = e => {
                    e.stopPropagation(),
                    this._updateCursorHandle(!0)
                }
                ,
                this.onCursorHandleTouchCancel = e => {
                    e.stopPropagation(),
                    this._updateCursorHandle(!0)
                }
                ,
                this.domKeyToMathQuillKey = e => {
                    const t = {
                        "+": "PLUS",
                        "-": "MINUS",
                        "*": "TIMES",
                        "/": "DIVIDE",
                        ".": "DECIMAL",
                        "%": "PERCENT",
                        "=": "EQUAL",
                        ">": "GT",
                        "<": "LT",
                        "^": "EXP"
                    };
                    return ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"].includes(e) ? `NUM_${e}` : "Backspace" === e ? "BACKSPACE" : e in t ? t[e] : null
                }
                ,
                this.handleKeyUp = e => {
                    const t = this.domKeyToMathQuillKey(e.key);
                    if (t) {
                        this.mathField.pressKey(t);
                        const e = this.mathField.getContent();
                        this.props.value !== e && (this.mathField.setContent(this.props.value),
                        this.props.onChange(e, ( () => {}
                        )),
                        this._hideCursorHandle())
                    }
                }
                ,
                this.getBorderWidthPx = () => this.state.focused ? 2 : 1,
                this.getInputInnerPadding = () => {
                    const e = pe - this.getBorderWidthPx();
                    return {
                        paddingTop: e - 1,
                        paddingRight: e,
                        paddingBottom: e - 3,
                        paddingLeft: e
                    }
                }
            }
            componentDidMount() {
                this._isMounted = !0,
                this.mathField = new le(this._mathContainer,this.props.ariaLabel,this.context.strings,this.context.locale,{
                    onCursorMove: e => {
                        this.props.keypadElement && this.props.keypadElement.setCursor(e)
                    }
                }),
                this.mathField.setContent(this.props.value),
                this._updateInputPadding(),
                this._container = c.findDOMNode(this),
                this._root = this._container.querySelector(".mq-root-block"),
                this._root.addEventListener("scroll", this._handleScroll);
                const e = (e, t) => {
                    const n = this._getKeypadBounds();
                    return !!n && (n.left <= e && n.right >= e && n.top <= t && n.bottom >= t || n.bottom < t)
                }
                ;
                this.recordTouchStartOutside = t => {
                    if (this.state.focused && !this._container.contains(t.target)) {
                        let n = !1;
                        if (this.props.keypadElement && this.props.keypadElement.getDOMNode())
                            for (let r = 0; r < t.changedTouches.length; r++) {
                                const [i,s] = [t.changedTouches[r].clientX, t.changedTouches[r].clientY];
                                if (e(i, s)) {
                                    n = !0;
                                    break
                                }
                            }
                        n || (this.didTouchOutside = !0,
                        this.dragListener && this.dragListener.detach(),
                        this.dragListener = new T(( () => {
                            this.didScroll = !0,
                            this.dragListener.detach()
                        }
                        ),t),
                        this.dragListener.attach())
                    }
                }
                ,
                this.blurOnTouchEndOutside = e => {
                    var t, n;
                    this.state.focused && this.didTouchOutside && !this.didScroll && (this.blur(),
                    this.mathField.blur(),
                    null == (t = (n = this.props).onBlur) || t.call(n));
                    this.didTouchOutside = !1,
                    this.didScroll = !1,
                    this.dragListener && this.dragListener.detach()
                }
                ,
                this.blurOnClickOutside = t => {
                    if (this.state.focused && !this._container.contains(t.target) && this.props.keypadElement && this.props.keypadElement.getDOMNode()) {
                        const [n,r] = [t.clientX, t.clientY];
                        e(n, r) || (this.blur(),
                        this.props.onBlur && this.props.onBlur())
                    }
                }
                ,
                window.addEventListener("touchstart", this.recordTouchStartOutside),
                window.addEventListener("touchend", this.blurOnTouchEndOutside),
                window.addEventListener("touchcancel", this.blurOnTouchEndOutside),
                window.addEventListener("click", this.blurOnClickOutside)
            }
            componentDidUpdate(e, t) {
                this.mathField.getContent() !== this.props.value && this.mathField.setContent(this.props.value),
                t.focused !== this.state.focused && this._updateInputPadding()
            }
            componentWillUnmount() {
                this._isMounted = !1,
                window.removeEventListener("touchstart", this.recordTouchStartOutside),
                window.removeEventListener("touchend", this.blurOnTouchEndOutside),
                window.removeEventListener("touchcancel", this.blurOnTouchEndOutside),
                window.removeEventListener("click", this.blurOnClickOutside)
            }
            _getKeypadBounds() {
                var e;
                const t = null == (e = this.props.keypadElement) ? void 0 : e.getDOMNode();
                return t instanceof Element ? t.getBoundingClientRect() : null
            }
            render() {
                const {showInputFocusStyle: e, handle: t} = this.state
                  , {style: n} = this.props
                  , r = x({}, me.innerContainer, {
                    borderWidth: this.getBorderWidthPx()
                }, e ? {
                    borderColor: s.color.blue
                } : {}, n)
                  , o = this.context.strings.mathInputBox + " " + this.context.strings.fingerTap;
                return l.createElement(i.i.Consumer, null, ( ({keypadActive: n, setKeypadActive: i}) => l.createElement(w, {
                    style: de.input,
                    onTouchStart: e => {
                        this.handleTouchStart(e, n, i)
                    }
                    ,
                    onTouchMove: this.handleTouchMove,
                    onTouchEnd: this.handleTouchEnd,
                    onClick: e => {
                        this.handleClick(e, n, i)
                    }
                    ,
                    role: "textbox",
                    ariaLabel: o
                }, l.createElement("div", {
                    className: "keypad-input",
                    tabIndex: "0",
                    ref: e => {
                        this.inputRef = e
                    }
                    ,
                    onFocus: () => {
                        this.focus(i)
                    }
                    ,
                    onBlur: this.blur,
                    onKeyUp: this.handleKeyUp
                }, l.createElement("div", {
                    ref: e => {
                        this._mathContainer = c.findDOMNode(e)
                    }
                    ,
                    style: r
                })), e && t.visible && l.createElement(C, x({}, t, {
                    onTouchStart: this.onCursorHandleTouchStart,
                    onTouchMove: this.onCursorHandleTouchMove,
                    onTouchEnd: this.onCursorHandleTouchEnd,
                    onTouchCancel: this.onCursorHandleTouchCancel
                })))))
            }
        }
        ce.contextType = k,
        ce.defaultProps = {
            style: {},
            value: ""
        },
        ce.contextType = k;
        const he = 18
          , pe = 12
          , ue = 20 + 2 * pe
          , de = a.StyleSheet.create({
            input: {
                position: "relative",
                display: "inline-block",
                verticalAlign: "middle",
                maxWidth: 128
            }
        })
          , me = {
            innerContainer: {
                backgroundColor: "white",
                minHeight: ue,
                minWidth: 64,
                maxWidth: 128,
                boxSizing: "border-box",
                position: "relative",
                borderStyle: "solid",
                borderColor: s.color.offBlack50,
                borderRadius: 4,
                color: s.color.offBlack
            }
        };
        const fe = function({tintColor: e, type: t}) {
            switch (t) {
            case "Geometry":
                return l.createElement("svg", {
                    width: "32",
                    height: "32",
                    viewBox: "0 0 32 32",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M7.57584 7.09442c.35139-.16458.76626-.11103 1.06434.13737L26.6402 22.2318c.3234.2695.4434.7128.3001 1.1086C26.7969 23.7363 26.421 24 26 24H8c-.55228 0-1-.4477-1-1V8.00001c0-.38802.22446-.74101.57584-.90559zM9 10.1351V17h4c.5523 0 1 .4477 1 1v4h9.238L9 10.1351zM12 22v-3H9v3h3z",
                    fill: e
                }));
            case "Operators":
                return l.createElement("svg", {
                    width: "32",
                    height: "32",
                    viewBox: "0 0 32 32",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M29 6h1v1h-1V6zm-2 0c0-1.10457.8954-2 2-2h1c1.1046 0 2 .89543 2 2v1c0 1.10457-.8954 2-2 2h-1c-1.1046 0-2-.89543-2-2V6zm-15.8682.50386C11.3098 6.19229 11.6411 6 12 6h2c.5523 0 1 .44772 1 1s-.4477 1-1 1h-1.4197l-3.71206 6.4961c-.18297.3202-.52733.5137-.89599.5035-.36865-.0102-.70175-.2225-.86668-.5524l-2-4c-.24699-.49396-.04676-1.09464.44722-1.34163.49397-.24699 1.09465-.04676 1.34164.44722L8.0588 11.8815l3.073-5.37764zM7.70676 16.2925c.39072.3904.39103 1.0235.00069 1.4143-.42202.4224-.86362 1.0235-1.19588 1.659C6.17039 20.0184 6 20.601 6 21c0 .3789.17235.9897.51638 1.6649.33677.661.7685 1.2472 1.15148 1.5908.41106.3689.44528 1.0011.07643 1.4122-.36885.411-1.00109.4452-1.41215.0764-.61604-.5528-1.18431-1.3599-1.5978-2.1715C4.32813 22.7755 3.99999 21.8345 4 21c.00001-.8609.3301-1.7783.73917-2.5608.41798-.7995.97637-1.5684 1.55338-2.146.39033-.3907 1.0235-.391 1.41421-.0007zm3.58644 0c.3908-.3903 1.0239-.39 1.4143.0007.577.5776 1.1353 1.3465 1.5533 2.146C14.6699 19.2217 15 20.1391 15 21c0 .8345-.3281 1.7755-.7343 2.5728-.4135.8116-.9818 1.6187-1.5978 2.1715-.4111.3688-1.0433.3346-1.4122-.0764-.3688-.4111-.3346-1.0433.0764-1.4122.383-.3436.8148-.9298 1.1515-1.5908.344-.6752.5164-1.286.5164-1.6649 0-.399-.1704-.9816-.5116-1.6342-.3322-.6355-.7738-1.2366-1.1959-1.659-.3903-.3908-.39-1.0239.0007-1.4143zm16.6431 1.3564c.1939.5171-.0681 1.0935-.5852 1.2874L21.848 21l5.5031 2.0637c.5171.1939.7791.7703.5852 1.2874-.1939.5171-.7703.7791-1.2874.5852l-8-3C18.2586 21.79 18 21.4168 18 21c0-.4168.2586-.79.6489-.9363l8-3c.5171-.1939 1.0935.0681 1.2874.5852zM21 8v5h3V8h-3zm-1-2c-.5523 0-1 .44772-1 1v7c0 .5523.4477 1 1 1h5c.5523 0 1-.4477 1-1V7c0-.55228-.4477-1-1-1h-5z",
                    fill: e
                }));
            case "Numbers":
                return l.createElement("svg", {
                    width: "32",
                    height: "32",
                    viewBox: "0 0 32 32",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    d: "M10.4123 19.5794v1.421H4.71434v-1.421h2.016v-5.558c0-.1213.00233-.245.007-.371.00466-.126.01166-.2543.021-.385l-1.33 1.106c-.09334.07-.18434.1144-.273.133-.08867.0187-.17267.021-.252.007-.07934-.0186-.14934-.0466-.21-.084-.06067-.042-.10734-.084-.14-.126l-.609-.819 3.122-2.646h1.589v8.743h1.75696zm8.3801-.35c.21 0 .3734.0584.49.175.1214.1167.182.2707.182.462v1.134h-7.042v-.63c0-.1213.0257-.252.077-.392.0514-.1446.1377-.2753.259-.392l3.01-3.017c.2567-.2566.483-.5016.679-.735.196-.238.3594-.469.49-.693.1307-.2286.2287-.4596.294-.693.0654-.2333.098-.4783.098-.735 0-.4526-.1166-.7956-.35-1.029-.2333-.238-.5623-.357-.987-.357-.1866 0-.3593.028-.518.084-.154.0514-.294.1237-.42.217-.1213.0934-.2263.203-.315.329-.0886.126-.154.2637-.196.413-.084.2334-.1983.3897-.343.469-.14.0747-.3406.091-.602.049l-1.022-.182c.0747-.4946.2147-.9286.42-1.302.2054-.3733.462-.6836.77-.931.308-.2473.6604-.4316 1.057-.553.3967-.126.8237-.189 1.281-.189.4807 0 .917.0724 1.309.217.3967.14.735.3384 1.015.595.28.252.497.5577.651.917.154.3594.231.756.231 1.19 0 .3734-.0536.7187-.161 1.036-.1073.3174-.2543.6207-.441.91-.182.2847-.3943.5624-.637.833-.2426.2707-.4993.5437-.77.819l-2.156 2.205c.238-.07.4737-.1236.707-.161.2334-.042.4527-.063.658-.063h2.282zm2.6611-5.523c.0747-.4946.2147-.9286.42-1.302.2054-.3733.462-.6836.77-.931.308-.2473.658-.4316 1.05-.553.3967-.126.8237-.189 1.281-.189.4854 0 .9194.07 1.302.21.3874.1354.714.322.98.56.266.238.469.5157.609.833.1447.3174.217.658.217 1.022 0 .322-.035.6067-.105.854-.0653.2427-.1656.455-.301.637-.1306.182-.294.336-.49.462-.1913.126-.413.231-.665.315 1.1667.3827 1.75 1.1597 1.75 2.331 0 .518-.0956.9754-.287 1.372-.1913.392-.448.721-.77.987s-.6976.4667-1.127.602c-.4246.1307-.8703.196-1.337.196-.4946 0-.931-.056-1.309-.168-.378-.112-.7116-.28-1.001-.504-.2846-.224-.5296-.504-.735-.84-.2053-.3406-.385-.7373-.539-1.19l.854-.35c.224-.0933.4317-.119.623-.077.196.042.336.1447.42.308.0934.1774.1914.3407.294.49.1074.1494.2264.28.357.392.1307.1074.2777.1914.441.252.168.0607.3594.091.574.091.2707 0 .5064-.0443.707-.133.2007-.0886.3687-.203.504-.343.1354-.1446.2357-.3056.301-.483.07-.182.105-.3616.105-.539 0-.2333-.021-.4433-.063-.63-.042-.1913-.14-.3523-.294-.483-.1493-.1353-.3733-.238-.672-.308-.294-.0746-.6953-.112-1.204-.112v-1.358c.4247 0 .7724-.035 1.043-.105.2707-.07.483-.168.637-.294.154-.126.259-.2776.315-.455.0607-.1773.091-.371.091-.581 0-.4433-.1166-.7816-.35-1.015-.2286-.2333-.5553-.35-.98-.35-.1866 0-.3593.028-.518.084-.154.0514-.294.1237-.42.217-.1213.0934-.2263.203-.315.329-.0886.126-.154.2637-.196.413-.0886.2334-.203.3897-.343.469-.14.0747-.343.091-.609.049l-1.015-.182z",
                    fill: e
                }));
            case "Extras":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "32",
                    height: "32",
                    fill: "none",
                    viewBox: "0 0 32 32"
                }, l.createElement("g", {
                    clipPath: "url(#a)"
                }, l.createElement("path", {
                    fill: e,
                    fillRule: "evenodd",
                    d: "M6.127 10.454c.224-.032.403-.05.53-.05.591 0 1.137.153 1.63.459.398.239.713.529.94.872l.188-.248.005-.007.006-.006c.619-.703 1.347-1.07 2.178-1.07.691 0 1.269.204 1.71.626.454.403.686.91.686 1.51 0 .533-.156.994-.476 1.37-.312.383-.738.574-1.254.574-.345 0-.643-.101-.878-.317a1.1 1.1 0 0 1-.353-.843c0-.405.11-.76.342-1.051.153-.193.354-.352.596-.479a1.416 1.416 0 0 0-.492-.07c-.195 0-.316.016-.38.035-.53.226-.938.694-1.208 1.445l-.001.003c-.02.05-.085.289-.202.74-.115.443-.275 1.077-.481 1.901-.414 1.641-.633 2.547-.662 2.74l-.002.01a3.423 3.423 0 0 0-.067.673c0 .337.097.581.272.756.176.177.413.272.733.272.6 0 1.15-.247 1.657-.768.518-.549.864-1.146 1.044-1.791l.001-.004a1.2 1.2 0 0 1 .088-.224.368.368 0 0 1 .161-.164.564.564 0 0 1 .198-.056 2.19 2.19 0 0 1 .276-.014c.159 0 .305.016.42.064.059.025.12.063.167.122.05.063.073.137.073.213 0 .023-.004.048-.005.057a12.52 12.52 0 0 1-.046.245l-.004.015c-.281 1.026-.86 1.917-1.73 2.67l-.007.007c-.776.611-1.605.925-2.484.925-1.08 0-1.93-.45-2.53-1.33-.453.605-1.015 1.024-1.685 1.248l-.01.003-.011.002a3.23 3.23 0 0 1-.664.053c-.974 0-1.703-.35-2.13-1.078A2.05 2.05 0 0 1 2 19.437c0-.52.158-.975.478-1.349.326-.38.749-.572 1.252-.572.372 0 .69.091.913.31.224.218.318.531.318.898 0 .327-.078.621-.241.874a1.706 1.706 0 0 1-.707.597l-.018.009c.158.063.331.095.52.095.467 0 .902-.285 1.295-.966l.002-.005c.071-.115.185-.417.341-.938.154-.51.341-1.209.563-2.096v-.002c.095-.364.198-.767.31-1.21.11-.444.188-.78.235-1.014l.002-.013c.058-.216.098-.36.119-.425.077-.42.113-.709.113-.877 0-.342-.092-.588-.254-.762-.159-.171-.384-.267-.704-.267-.652 0-1.217.251-1.704.768l-.002.002A4.215 4.215 0 0 0 3.79 14.28a1.084 1.084 0 0 1-.065.207.41.41 0 0 1-.14.176l-.01.007-.012.006a.35.35 0 0 1-.104.03 1.16 1.16 0 0 1-.095.01 5.04 5.04 0 0 1-.275.006H2.67l-.061-.061c-.109-.11-.204-.247-.204-.41v-.015l.003-.015c.07-.472.335-1.05.768-1.723l.001-.002c.771-1.165 1.754-1.857 2.949-2.042h.002Z",
                    clipRule: "evenodd"
                }), l.createElement("path", {
                    fill: e,
                    d: "M21.084 10.284c.932-.008 2.301-.013 4.107-.013 1.325 0 2.327.003 3.007.007a75.812 75.812 0 0 1 .99.013c.025 0 .047.002.065.003h.002c.01 0 .04.003.067.01l.01.002.011.004c.201.07.37.183.488.347a.966.966 0 0 1 .169.574c0 .3-.078.568-.248.79-.168.221-.411.377-.708.479h-.002a1.01 1.01 0 0 1-.221.034 8.213 8.213 0 0 1-.35.016c-.29.008-.696.012-1.219.012h-1.39l-.038.223v.001c-.198 1.185-.295 2.156-.295 2.916 0 1.446.251 2.746.75 3.905l.004.007c.059.153.105.284.137.393.03.103.053.205.053.29 0 .359-.16.68-.44.961-.278.296-.63.445-1.041.445-.255 0-.492-.03-.654-.139l-.009-.006-.008-.006c-.126-.101-.236-.274-.338-.477l-.006-.012c-.331-.768-.49-1.722-.49-2.852 0-.595.007-1.002.025-1.212v-.005c.118-1.157.377-2.551.776-4.18v-.002c.024-.096.045-.18.061-.25h-1.948c-.008.038-.02.086-.034.143l-.002.007a35.14 35.14 0 0 0-.146.537c-.05.232-.1.448-.15.648v.001a230.673 230.673 0 0 1-1.312 4.936 41.285 41.285 0 0 1-.411 1.384c-.104.322-.19.557-.256.681-.115.262-.28.473-.5.617-.225.146-.49.212-.783.212-.449 0-.807-.173-1.006-.549l-.006-.011-.005-.012a1.37 1.37 0 0 1-.067-.486v-.326l.346-.745c1.24-2.61 2.136-4.858 2.695-6.747l.002-.008.094-.281h-.463c-.662 0-1.105.025-1.346.07-.198.04-.47.173-.824.43l-.007.005-.007.005c-.366.228-.69.542-.97.947-.044.069-.085.13-.125.18a.651.651 0 0 1-.141.136l-.027.017-.03.01a.8.8 0 0 1-.19.03c-.07.005-.156.008-.258.008-.17 0-.335-.021-.465-.09a.437.437 0 0 1-.216-.546c.014-.042.034-.086.057-.132.047-.093.113-.208.198-.343l.003-.005c1.147-1.745 2.311-2.774 3.508-2.96a2.345 2.345 0 0 1 .158-.015 60.295 60.295 0 0 1 1.369-.026Z"
                })), l.createElement("defs", null, l.createElement("clipPath", {
                    id: "a"
                }, l.createElement("path", {
                    fill: "#fff",
                    d: "M0 0h28v11.457H0z",
                    transform: "translate(2 10.271)"
                }))));
            case "Dismiss":
                return l.createElement("svg", {
                    width: "44",
                    height: "44",
                    viewBox: "0 0 44 44",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M28.7071 15.2929C28.3166 14.9024 27.6834 14.9024 27.2929 15.2929L22 20.5858L16.7071 15.2929C16.3166 14.9024 15.6834 14.9024 15.2929 15.2929C14.9024 15.6834 14.9024 16.3166 15.2929 16.7071L20.5858 22L15.2929 27.2929C14.9024 27.6834 14.9024 28.3166 15.2929 28.7071C15.6834 29.0976 16.3166 29.0976 16.7071 28.7071L22 23.4142L27.2929 28.7071C27.6834 29.0976 28.3166 29.0976 28.7071 28.7071C29.0976 28.3166 29.0976 27.6834 28.7071 27.2929L23.4142 22L28.7071 16.7071C29.0976 16.3166 29.0976 15.6834 28.7071 15.2929Z",
                    fill: e
                }));
            case "Fractions":
                return l.createElement("svg", {
                    width: "44",
                    height: "44",
                    viewBox: "0 0 44 44",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                });
            default:
                throw new Error(`Invalid icon type: ${t}`)
            }
        }
          , ge = a.StyleSheet.create({
            base: {
                display: "flex",
                width: 44,
                height: 38,
                boxSizing: "border-box",
                borderRadius: 3,
                border: "1px solid transparent",
                marginRight: 1,
                marginLeft: 1
            },
            hovered: {
                border: "1px solid #1865F2"
            },
            pressed: {
                background: "#1B50B3"
            },
            focused: {
                outline: "none",
                border: `2px solid ${s.color.blue}`
            },
            innerBox: {
                boxSizing: "border-box",
                border: "1px solid transparent",
                borderRadius: 2,
                display: "flex",
                flex: 1,
                justifyContent: "center",
                alignItems: "center"
            },
            innerBoxPressed: {
                border: `1px solid ${s.color.white}`
            },
            activeIndicator: {
                position: "absolute",
                boxSizing: "border-box",
                bottom: 3,
                width: 36,
                height: 3,
                marginLeft: 3
            },
            clickable: {
                ":focus": {
                    outline: "none"
                }
            }
        });
        function ve(e) {
            const {onClick: t, itemType: n, itemState: r, focus: i, role: o} = e
              , a = (0,
            l.useRef)(null);
            return (0,
            l.useEffect)(( () => {
                let e;
                return "tab" === o && i && (e = setTimeout(( () => {
                    null != a && a.current && (null == a || a.current.focus())
                }
                ), 0)),
                () => clearTimeout(e)
            }
            ), [o, i, a]),
            l.createElement(m.ZP, {
                onClick: t,
                disabled: "disabled" === r,
                "aria-label": n,
                style: ge.clickable,
                "aria-selected": "active" === r,
                tabIndex: "button" === o || i ? 0 : -1,
                role: o,
                ref: a
            }, ( ({hovered: e, focused: t, pressed: i}) => {
                const o = function(e, t, n, r) {
                    return "disabled" === e ? s.color.offBlack64 : r ? s.color.white : "active" === e || t ? s.color.blue : s.color.offBlack64
                }(r, e, 0, i);
                return l.createElement(d.G7, {
                    style: [ge.base, "disabled" !== r && e && ge.hovered, t && ge.focused, i && ge.pressed]
                }, l.createElement(d.G7, {
                    style: [ge.innerBox, i && ge.innerBoxPressed]
                }, l.createElement(fe, {
                    type: n,
                    tintColor: o
                })), "active" === r && l.createElement(d.G7, {
                    style: [ge.activeIndicator, {
                        backgroundColor: o
                    }]
                }))
            }
            ))
        }
        const ye = a.StyleSheet.create({
            tabbar: {
                display: "flex",
                flexDirection: "row",
                justifyContent: "space-between",
                paddingTop: 2,
                paddingBottom: 2
            },
            pages: {
                display: "flex",
                flexDirection: "row"
            }
        });
        function be(e) {
            const {items: t, onClickClose: n, selectedItem: r, onSelectItem: i, style: s} = e
              , o = t.indexOf(r)
              , [a,c] = (0,
            l.useState)(-1 === o ? 0 : o);
            return l.createElement(d.G7, {
                style: [ye.tabbar, s]
            }, t.length > 0 && l.createElement(d.G7, {
                style: [ye.pages],
                role: "tablist",
                onKeyDown: e => {
                    39 === e.keyCode ? c(a === t.length - 1 ? 0 : a + 1) : 37 === e.keyCode && c(0 === a ? t.length - 1 : a - 1)
                }
            }, t.map(( (e, t) => l.createElement(ve, {
                role: "tab",
                key: `tabbar-item-${e}`,
                itemState: e === r ? "active" : "inactive",
                itemType: e,
                focus: a === t,
                onClick: () => {
                    i(e)
                }
            })))), l.createElement(d.G7, null, n && l.createElement(ve, {
                role: "button",
                itemState: "inactive",
                itemType: "Dismiss",
                onClick: n
            })))
        }
        const xe = ({key: e, keyType: t="OPERATOR", ariaLabel: n=e, data: r=e}) => ({
            id: e,
            type: t,
            ariaLabel: n,
            icon: {
                data: r
            }
        })
          , we = ({key: e, keyType: t="VALUE", ariaLabel: n=e, data: r=e}) => ({
            id: e,
            type: t,
            ariaLabel: n,
            icon: {
                data: r
            }
        })
          , ke = ({key: e, data: t=e.replace("NUM_", ""), keyType: n="VALUE", ariaLabel: r=t}) => ({
            id: e,
            type: n,
            ariaLabel: r,
            icon: {
                data: t
            }
        })
          , Se = e => ({
            PLUS: x({}, xe({
                key: "PLUS",
                ariaLabel: e.plus
            })),
            MINUS: x({}, xe({
                key: "MINUS",
                ariaLabel: e.minus
            })),
            NEGATIVE: x({}, xe({
                key: "NEGATIVE",
                ariaLabel: e.negative
            })),
            TIMES: x({}, xe({
                key: "TIMES",
                ariaLabel: e.times
            })),
            DIVIDE: x({}, xe({
                key: "DIVIDE",
                ariaLabel: e.divide
            })),
            DECIMAL: x({}, xe({
                key: "DECIMAL",
                keyType: "VALUE",
                ariaLabel: e.decimal
            })),
            PERIOD: x({}, xe({
                key: "PERIOD",
                keyType: "VALUE",
                ariaLabel: "."
            })),
            PERCENT: x({}, xe({
                key: "PERCENT",
                ariaLabel: e.percent
            })),
            CDOT: x({}, xe({
                key: "CDOT",
                ariaLabel: e.cdot
            })),
            EQUAL: x({}, xe({
                key: "EQUAL",
                ariaLabel: e.equalsSign
            })),
            NEQ: x({}, xe({
                key: "NEQ",
                ariaLabel: e.notEqualsSign
            })),
            GT: x({}, xe({
                key: "GT",
                ariaLabel: e.greaterThanSign
            })),
            LT: x({}, xe({
                key: "LT",
                ariaLabel: e.lessThanSign
            })),
            GEQ: x({}, xe({
                key: "GEQ",
                ariaLabel: e.greaterThanOrEqualToSign
            })),
            LEQ: x({}, xe({
                key: "LEQ",
                ariaLabel: e.lessThanOrEqualSign
            })),
            FRAC_INCLUSIVE: x({}, xe({
                key: "FRAC_INCLUSIVE",
                ariaLabel: e.fractionExpressionInNumerator
            })),
            FRAC_EXCLUSIVE: x({}, xe({
                key: "FRAC_EXCLUSIVE",
                ariaLabel: e.fractionExcludingExpression
            })),
            FRAC: x({}, xe({
                key: "FRAC",
                ariaLabel: e.fractionExcludingExpression
            })),
            EXP: x({}, xe({
                key: "EXP",
                ariaLabel: e.customExponent
            })),
            EXP_2: x({}, xe({
                key: "EXP_2",
                ariaLabel: e.square
            })),
            EXP_3: x({}, xe({
                key: "EXP_3",
                ariaLabel: e.cube
            })),
            SQRT: x({}, xe({
                key: "SQRT",
                ariaLabel: e.squareRoot
            })),
            CUBE_ROOT: x({}, xe({
                key: "CUBE_ROOT",
                ariaLabel: e.cubeRoot
            })),
            RADICAL: x({}, xe({
                key: "RADICAL",
                ariaLabel: e.radicalWithCustomRoot
            })),
            LEFT_PAREN: x({}, xe({
                key: "LEFT_PAREN",
                ariaLabel: e.leftParenthesis
            })),
            RIGHT_PAREN: x({}, xe({
                key: "RIGHT_PAREN",
                ariaLabel: e.rightParenthesis
            })),
            LN: x({}, xe({
                key: "LN",
                ariaLabel: e.naturalLog
            })),
            LOG: x({}, xe({
                key: "LOG",
                ariaLabel: e.logBase10
            })),
            LOG_N: x({}, xe({
                key: "LOG_N",
                ariaLabel: e.logCustomBase
            })),
            SIN: x({}, xe({
                key: "SIN",
                ariaLabel: e.sine
            })),
            COS: x({}, xe({
                key: "COS",
                ariaLabel: e.cosine
            })),
            TAN: x({}, xe({
                key: "TAN",
                ariaLabel: e.tangent
            })),
            PI: x({}, we({
                key: "PI",
                data: "\\pi",
                ariaLabel: e.pi
            })),
            THETA: x({}, we({
                key: "THETA",
                data: "\\theta",
                ariaLabel: e.theta
            })),
            UP: x({}, xe({
                key: "UP",
                keyType: "INPUT_NAVIGATION",
                ariaLabel: e.upArrow
            })),
            RIGHT: x({}, xe({
                key: "RIGHT",
                keyType: "INPUT_NAVIGATION",
                ariaLabel: e.rightArrow
            })),
            DOWN: x({}, xe({
                key: "DOWN",
                keyType: "INPUT_NAVIGATION",
                ariaLabel: e.downArrow
            })),
            LEFT: x({}, xe({
                key: "LEFT",
                keyType: "INPUT_NAVIGATION",
                ariaLabel: e.leftArrow
            })),
            JUMP_OUT_PARENTHESES: x({}, xe({
                key: "JUMP_OUT_PARENTHESES",
                keyType: "INPUT_NAVIGATION",
                ariaLabel: e.navOutOfParentheses
            })),
            JUMP_OUT_EXPONENT: x({}, xe({
                key: "JUMP_OUT_EXPONENT",
                keyType: "INPUT_NAVIGATION",
                ariaLabel: e.navOutOfExponent
            })),
            JUMP_OUT_BASE: x({}, xe({
                key: "JUMP_OUT_BASE",
                keyType: "INPUT_NAVIGATION",
                ariaLabel: e.navOutOfBase
            })),
            JUMP_INTO_NUMERATOR: x({}, xe({
                key: "JUMP_INTO_NUMERATOR",
                keyType: "INPUT_NAVIGATION",
                ariaLabel: e.navIntoNumerator
            })),
            JUMP_OUT_NUMERATOR: x({}, xe({
                key: "JUMP_OUT_NUMERATOR",
                keyType: "INPUT_NAVIGATION",
                ariaLabel: e.navOutOfNumeratorIntoDenominator
            })),
            JUMP_OUT_DENOMINATOR: x({}, xe({
                key: "JUMP_OUT_DENOMINATOR",
                keyType: "INPUT_NAVIGATION",
                ariaLabel: e.navOutOfDenominator
            })),
            BACKSPACE: x({}, xe({
                key: "BACKSPACE",
                keyType: "INPUT_NAVIGATION",
                ariaLabel: e.delete
            })),
            DISMISS: x({}, xe({
                key: "DISMISS",
                keyType: "KEYPAD_NAVIGATION",
                ariaLabel: e.dismiss
            })),
            NUM_0: x({}, ke({
                key: "NUM_0"
            })),
            NUM_1: x({}, ke({
                key: "NUM_1"
            })),
            NUM_2: x({}, ke({
                key: "NUM_2"
            })),
            NUM_3: x({}, ke({
                key: "NUM_3"
            })),
            NUM_4: x({}, ke({
                key: "NUM_4"
            })),
            NUM_5: x({}, ke({
                key: "NUM_5"
            })),
            NUM_6: x({}, ke({
                key: "NUM_6"
            })),
            NUM_7: x({}, ke({
                key: "NUM_7"
            })),
            NUM_8: x({}, ke({
                key: "NUM_8"
            })),
            NUM_9: x({}, ke({
                key: "NUM_9"
            })),
            A: x({}, we({
                key: "A"
            })),
            B: x({}, we({
                key: "B"
            })),
            C: x({}, we({
                key: "C"
            })),
            D: x({}, we({
                key: "D"
            })),
            E: x({}, we({
                key: "E"
            })),
            F: x({}, we({
                key: "F"
            })),
            G: x({}, we({
                key: "G"
            })),
            H: x({}, we({
                key: "H"
            })),
            I: x({}, we({
                key: "I"
            })),
            J: x({}, we({
                key: "J"
            })),
            K: x({}, we({
                key: "K"
            })),
            L: x({}, we({
                key: "L"
            })),
            M: x({}, we({
                key: "M"
            })),
            N: x({}, we({
                key: "N"
            })),
            O: x({}, we({
                key: "O"
            })),
            P: x({}, we({
                key: "P"
            })),
            Q: x({}, we({
                key: "Q"
            })),
            R: x({}, we({
                key: "R"
            })),
            S: x({}, we({
                key: "S"
            })),
            T: x({}, we({
                key: "T"
            })),
            U: x({}, we({
                key: "U"
            })),
            V: x({}, we({
                key: "V"
            })),
            W: x({}, we({
                key: "W"
            })),
            X: x({}, we({
                key: "X"
            })),
            Y: x({}, we({
                key: "Y"
            })),
            Z: x({}, we({
                key: "Z"
            })),
            a: x({}, we({
                key: "a"
            })),
            b: x({}, we({
                key: "b"
            })),
            c: x({}, we({
                key: "c"
            })),
            d: x({}, we({
                key: "d"
            })),
            e: x({}, we({
                key: "e"
            })),
            f: x({}, we({
                key: "f"
            })),
            g: x({}, we({
                key: "g"
            })),
            h: x({}, we({
                key: "h"
            })),
            i: x({}, we({
                key: "i"
            })),
            j: x({}, we({
                key: "j"
            })),
            k: x({}, we({
                key: "k"
            })),
            l: x({}, we({
                key: "l"
            })),
            m: x({}, we({
                key: "m"
            })),
            n: x({}, we({
                key: "n"
            })),
            o: x({}, we({
                key: "o"
            })),
            p: x({}, we({
                key: "p"
            })),
            q: x({}, we({
                key: "q"
            })),
            r: x({}, we({
                key: "r"
            })),
            s: x({}, we({
                key: "s"
            })),
            t: x({}, we({
                key: "t"
            })),
            u: x({}, we({
                key: "u"
            })),
            v: x({}, we({
                key: "v"
            })),
            w: x({}, we({
                key: "w"
            })),
            x: x({}, we({
                key: "x"
            })),
            y: x({}, we({
                key: "y"
            })),
            z: x({}, we({
                key: "z"
            }))
        });
        function Ee({id: e}) {
            const {locale: t, strings: n} = E();
            switch (e) {
            case "NUM_0":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    d: "M26.299 20.3598c0 1.512-.164 2.82-.492 3.924-.32 1.104-.764 2.02-1.332 2.748-.568.728-1.236 1.268-2.004 1.62-.768.352-1.596.528-2.484.528-.888 0-1.716-.176-2.484-.528-.768-.352-1.436-.892-2.004-1.62-.56-.728-1-1.644-1.32-2.748-.32-1.104-.48-2.412-.48-3.924s.16-2.82.48-3.924c.32-1.112.76-2.028 1.32-2.748.568-.728 1.236-1.268 2.004-1.62.768-.36 1.596-.54 2.484-.54.888 0 1.716.18 2.484.54.768.352 1.436.892 2.004 1.62.568.72 1.012 1.636 1.332 2.748.328 1.104.492 2.412.492 3.924zm-2.664 0c0-1.28-.104-2.344-.312-3.192-.2-.856-.468-1.54-.804-2.052s-.724-.876-1.164-1.092c-.44-.216-.896-.324-1.368-.324-.48 0-.94.108-1.38.324-.432.216-.816.58-1.152 1.092-.336.512-.604 1.196-.804 2.052-.2.848-.3 1.912-.3 3.192 0 1.28.1 2.348.3 3.204.2.848.468 1.528.804 2.04s.72.876 1.152 1.092c.44.216.9.324 1.38.324.472 0 .928-.108 1.368-.324.44-.216.828-.58 1.164-1.092.336-.512.604-1.192.804-2.04.208-.856.312-1.924.312-3.204z",
                    fill: "#21242C"
                }));
            case "NUM_1":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    d: "M25.363 27.0441v1.956h-9.42v-1.956h3.6v-10.824c0-.384.012-.776.036-1.176l-2.772 2.34c-.12.096-.244.16-.372.192-.12.024-.236.024-.348 0-.104-.024-.2-.06-.288-.108-.08-.056-.144-.116-.192-.18l-.804-1.128 5.208-4.476h2.1v15.36h3.252z",
                    fill: "#21242C"
                }));
            case "NUM_2":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    d: "M24.8471 26.5638c.28 0 .5.084.66.252.16.16.24.368.24.624v1.56h-11.688v-.876c0-.176.036-.36.108-.552.072-.192.188-.368.348-.528l5.376-5.388c.456-.456.86-.892 1.212-1.308.36-.416.664-.832.912-1.248.256-.416.448-.836.576-1.26.136-.432.204-.884.204-1.356 0-.456-.072-.856-.216-1.2-.136-.352-.328-.64-.576-.864-.24-.232-.532-.404-.876-.516-.336-.12-.708-.18-1.116-.18-.392 0-.756.056-1.092.168-.328.112-.624.268-.888.468-.256.2-.472.44-.648.72-.168.272-.292.572-.372.9-.12.328-.276.548-.468.66-.184.112-.456.136-.816.072l-1.356-.24c.12-.816.344-1.532.672-2.148.336-.616.756-1.128 1.26-1.536.504-.416 1.08-.728 1.728-.936.656-.216 1.364-.324 2.124-.324.768 0 1.472.116 2.112.348.648.224 1.204.548 1.668.972.472.416.84.924 1.104 1.524.264.6.396 1.276.396 2.028 0 .64-.096 1.232-.288 1.776-.184.544-.436 1.064-.756 1.56s-.696.98-1.128 1.452c-.424.464-.872.936-1.344 1.416l-4.176 4.272c.344-.096.688-.172 1.032-.228.352-.056.684-.084.996-.084h5.076z",
                    fill: "#21242C"
                }));
            case "NUM_3":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    d: "M14.4552 16.4718c.12-.816.344-1.532.672-2.148.336-.616.756-1.128 1.26-1.536.504-.416 1.08-.728 1.728-.936.656-.216 1.364-.324 2.124-.324.768 0 1.464.112 2.088.336.632.216 1.172.52 1.62.912.456.392.804.86 1.044 1.404.248.544.372 1.14.372 1.788 0 .552-.068 1.04-.204 1.464-.128.416-.316.784-.564 1.104-.24.32-.536.588-.888.804-.352.216-.748.396-1.188.54 1.072.312 1.876.812 2.412 1.5.536.68.804 1.536.804 2.568 0 .832-.156 1.572-.468 2.22-.312.648-.736 1.196-1.272 1.644-.528.448-1.148.792-1.86 1.032-.704.232-1.452.348-2.244.348-.888 0-1.656-.104-2.304-.312-.648-.216-1.208-.52-1.68-.912-.464-.4-.852-.88-1.164-1.44-.312-.56-.576-1.188-.792-1.884l1.116-.468c.296-.128.576-.164.84-.108.272.056.468.204.588.444.128.256.272.532.432.828.16.288.364.556.612.804.256.24.568.444.936.612.376.16.836.24 1.38.24.552 0 1.032-.088 1.44-.264.416-.184.76-.416 1.032-.696.28-.288.488-.608.624-.96s.204-.7.204-1.044c0-.432-.052-.828-.156-1.188-.104-.368-.308-.68-.612-.936-.296-.256-.72-.456-1.272-.6-.544-.152-1.26-.228-2.148-.228v-1.86c.728-.008 1.34-.08 1.836-.216.504-.144.904-.336 1.2-.576.304-.248.52-.544.648-.888.136-.344.204-.72.204-1.128 0-.44-.068-.828-.204-1.164-.136-.336-.328-.616-.576-.84-.24-.232-.528-.404-.864-.516-.336-.112-.708-.168-1.116-.168-.392 0-.756.056-1.092.168-.328.112-.624.268-.888.468-.256.2-.472.44-.648.72-.176.272-.304.572-.384.9-.112.328-.264.548-.456.66-.184.112-.456.136-.816.072l-1.356-.24z",
                    fill: "#21242C"
                }));
            case "NUM_4":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    d: "M21.691 22.616v-6.312c0-.504.036-1.056.108-1.656l-5.808 7.968h5.7zm4.632 0v1.488c0 .144-.048.268-.144.372-.088.104-.224.156-.408.156h-1.836V29h-2.244v-4.368h-7.476c-.184 0-.344-.052-.48-.156-.128-.112-.212-.248-.252-.408l-.264-1.32 8.292-11.04h2.424v10.908h2.388z",
                    fill: "#21242C"
                }));
            case "NUM_5":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    d: "M17.6591 18.1042c.416-.088.812-.152 1.188-.192.384-.04.752-.06 1.104-.06.904 0 1.7.136 2.388.408.696.264 1.276.632 1.74 1.104.472.472.824 1.028 1.056 1.668.24.632.36 1.32.36 2.064 0 .92-.16 1.756-.48 2.508-.32.752-.764 1.396-1.332 1.932-.568.528-1.24.936-2.016 1.224-.768.288-1.6.432-2.496.432-.528 0-1.032-.052-1.512-.156-.472-.104-.916-.244-1.332-.42-.416-.184-.8-.392-1.152-.624-.352-.24-.668-.488-.948-.744l.792-1.104c.168-.24.392-.36.672-.36.176 0 .368.064.576.192.208.128.448.268.72.42.28.144.608.28.984.408.376.128.824.192 1.344.192.568 0 1.076-.092 1.524-.276.448-.184.824-.44 1.128-.768.312-.336.548-.736.708-1.2.16-.464.24-.972.24-1.524 0-.504-.076-.956-.228-1.356-.144-.4-.364-.74-.66-1.02-.288-.28-.652-.492-1.092-.636-.44-.152-.948-.228-1.524-.228-.424 0-.86.036-1.308.108-.44.072-.888.184-1.344.336l-1.608-.456 1.416-8.256h8.364v1.116c0 .368-.116.668-.348.9-.232.232-.62.348-1.164.348h-5.064l-.696 4.02z",
                    fill: "#21242C"
                }));
            case "NUM_6":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    d: "M19.975 27.0562c.52 0 .996-.084 1.428-.252.432-.176.8-.416 1.104-.72.312-.304.552-.664.72-1.08.168-.416.252-.868.252-1.356 0-.528-.084-1-.252-1.416-.16-.424-.392-.78-.696-1.068-.296-.288-.656-.508-1.08-.66-.416-.16-.876-.24-1.38-.24-.52 0-.992.088-1.416.264-.416.176-.772.416-1.068.72-.296.304-.524.66-.684 1.068-.16.408-.24.84-.24 1.296 0 .512.072.98.216 1.404.144.424.356.788.636 1.092.28.296.624.528 1.032.696.416.168.892.252 1.428.252zm-.948-8.976c-.128.16-.252.312-.372.456l-.336.432c.368-.208.772-.372 1.212-.492.44-.12.912-.18 1.416-.18.672 0 1.316.112 1.932.336.616.216 1.156.544 1.62.984.472.432.848.972 1.128 1.62.28.64.42 1.38.42 2.22 0 .8-.148 1.548-.444 2.244-.288.696-.696 1.304-1.224 1.824-.528.512-1.164.92-1.908 1.224-.736.296-1.552.444-2.448.444-.896 0-1.704-.144-2.424-.432-.72-.288-1.336-.692-1.848-1.212-.504-.528-.892-1.16-1.164-1.896-.272-.736-.408-1.556-.408-2.46 0-.784.168-1.604.504-2.46.336-.856.856-1.756 1.56-2.7l4.248-5.7c.128-.168.312-.312.552-.432.248-.12.524-.18.828-.18h2.28l-5.124 6.36z",
                    fill: "#21242C"
                }));
            case "NUM_7":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    d: "M26.083 11.7202v1.14c0 .336-.036.608-.108.816-.072.208-.144.384-.216.528l-6.828 13.896c-.12.256-.292.472-.516.648-.216.168-.504.252-.864.252h-1.86l6.96-13.668c.128-.248.256-.472.384-.672.128-.2.272-.392.432-.576h-8.628c-.16 0-.3-.06-.42-.18-.12-.128-.18-.272-.18-.432v-1.752h11.844z",
                    fill: "#21242C"
                }));
            case "NUM_8":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    d: "M19.999 27.1518c.52 0 .984-.072 1.392-.216.408-.152.748-.36 1.02-.624.28-.272.492-.592.636-.96.144-.368.216-.768.216-1.2 0-.528-.084-.984-.252-1.368-.16-.384-.388-.7-.684-.948-.288-.256-.632-.444-1.032-.564-.4-.128-.832-.192-1.296-.192-.464 0-.896.064-1.296.192-.4.12-.748.308-1.044.564-.288.248-.516.564-.684.948-.16.384-.24.84-.24 1.368 0 .432.072.832.216 1.2.144.368.352.688.624.96.28.264.624.472 1.032.624.408.144.872.216 1.392.216zm0-13.644c-.472 0-.888.072-1.248.216-.352.144-.644.336-.876.576-.232.24-.408.524-.528.852-.112.32-.168.66-.168 1.02s.048.712.144 1.056c.104.344.264.652.48.924.224.264.516.476.876.636.36.16.8.24 1.32.24s.96-.08 1.32-.24c.36-.16.648-.372.864-.636.224-.272.384-.58.48-.924.104-.344.156-.696.156-1.056 0-.36-.06-.7-.18-1.02-.112-.328-.288-.612-.528-.852-.232-.24-.524-.432-.876-.576-.352-.144-.764-.216-1.236-.216zm2.724 6.48c1.064.328 1.86.848 2.388 1.56.536.712.804 1.596.804 2.652 0 .76-.144 1.448-.432 2.064-.288.616-.692 1.14-1.212 1.572-.52.432-1.144.768-1.872 1.008-.72.232-1.52.348-2.4.348-.88 0-1.684-.116-2.412-.348-.72-.24-1.34-.576-1.86-1.008-.52-.432-.924-.956-1.212-1.572-.288-.616-.432-1.304-.432-2.064 0-1.056.264-1.94.792-2.652.536-.712 1.336-1.232 2.4-1.56-.864-.344-1.516-.844-1.956-1.5-.432-.656-.648-1.444-.648-2.364 0-.648.128-1.252.384-1.812s.616-1.044 1.08-1.452c.472-.416 1.036-.74 1.692-.972.656-.24 1.38-.36 2.172-.36.792 0 1.512.12 2.16.36.656.232 1.216.556 1.68.972.472.408.836.892 1.092 1.452.264.56.396 1.164.396 1.812 0 .92-.22 1.708-.66 2.364-.432.656-1.08 1.156-1.944 1.5z",
                    fill: "#21242C"
                }));
            case "NUM_9":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    d: "M16.735 16.8558c0 1.024.272 1.812.816 2.364.552.544 1.32.816 2.304.816.528 0 .992-.084 1.392-.252.408-.168.752-.392 1.032-.672.28-.288.492-.62.636-.996.144-.384.216-.792.216-1.224 0-.504-.08-.952-.24-1.344-.152-.4-.372-.74-.66-1.02-.28-.28-.616-.492-1.008-.636-.392-.152-.82-.228-1.284-.228-.488 0-.928.08-1.32.24-.392.16-.728.384-1.008.672-.28.28-.496.616-.648 1.008-.152.384-.228.808-.228 1.272zm4.428 5.364c.16-.2.308-.388.444-.564.136-.184.264-.368.384-.552-.416.296-.88.524-1.392.684-.512.152-1.056.228-1.632.228-.624 0-1.224-.104-1.8-.312-.576-.216-1.088-.532-1.536-.948-.448-.424-.808-.944-1.08-1.56-.264-.624-.396-1.34-.396-2.148 0-.76.14-1.476.42-2.148.288-.672.688-1.256 1.2-1.752.512-.504 1.124-.9 1.836-1.188.712-.288 1.5-.432 2.364-.432.856 0 1.632.14 2.328.42.696.272 1.288.66 1.776 1.164.488.496.864 1.092 1.128 1.788.264.688.396 1.448.396 2.28 0 .52-.048 1.012-.144 1.476-.088.464-.22.916-.396 1.356-.168.432-.376.86-.624 1.284-.24.416-.512.84-.816 1.272l-4.068 5.832c-.12.176-.3.32-.54.432-.232.112-.496.168-.792.168h-2.364l5.304-6.78z",
                    fill: "#21242C"
                }));
            case "DECIMAL":
            case "PERIOD":
                return "DECIMAL" === e && N(t) === R.COMMA ? l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 32 32",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    "data-testid": "comma-decimal"
                }, l.createElement("path", {
                    d: "M11.5559 25.3544C11.8679 24.661 12.1799 23.933 12.4919 23.1704C12.8039 22.425 13.0986 21.6884 13.3759 20.9604C13.6706 20.2324 13.9219 19.5737 14.1299 18.9844H16.6259L16.7299 19.2704C16.4526 19.877 16.1232 20.5357 15.7419 21.2464C15.3606 21.9397 14.9619 22.633 14.5459 23.3264C14.1299 24.037 13.7139 24.713 13.2979 25.3544H11.5559Z",
                    fill: "#21242C"
                })) : l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    "data-testid": "period-decimal"
                }, l.createElement("path", {
                    d: "M18.3401 27.512c0-.232.04-.448.12-.648.088-.208.204-.388.348-.54.152-.152.328-.272.528-.36.208-.088.428-.132.66-.132.232 0 .448.044.648.132.208.088.388.208.54.36.152.152.272.332.36.54.088.2.132.416.132.648 0 .24-.044.46-.132.66-.088.2-.208.376-.36.528-.152.152-.332.268-.54.348-.2.088-.416.132-.648.132-.232 0-.452-.044-.66-.132-.2-.08-.376-.196-.528-.348-.144-.152-.26-.328-.348-.528-.08-.2-.12-.42-.12-.66z",
                    fill: "#21242C"
                }));
            case "PLUS":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M12 20c0-.5523.4477-1 1-1h14c.5523 0 1 .4477 1 1s-.4477 1-1 1H13c-.5523 0-1-.4477-1-1z",
                    fill: "#21242C"
                }), l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M20 28c-.5523 0-1-.4477-1-1V13c0-.5523.4477-1 1-1s1 .4477 1 1v14c0 .5523-.4477 1-1 1z",
                    fill: "#21242C"
                }));
            case "MINUS":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M12 20c0-.5523.4477-1 1-1h14c.5523 0 1 .4477 1 1s-.4477 1-1 1H13c-.5523 0-1-.4477-1-1z",
                    fill: "#21242C"
                }));
            case "TIMES":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M14.3432 14.3428c.3905-.3905 1.0237-.3905 1.4142 0l9.8995 9.8995c.3905.3906.3905 1.0237 0 1.4143-.3905.3905-1.0237.3905-1.4142 0l-9.8995-9.8995c-.3905-.3906-.3905-1.0237 0-1.4143z",
                    fill: "#21242C"
                }), l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M14.3431 25.6573c-.3905-.3905-.3905-1.0237 0-1.4142l9.8995-9.8995c.3905-.3905 1.0237-.3905 1.4142 0 .3905.3905.3905 1.0237 0 1.4142l-9.8995 9.8995c-.3905.3905-1.0237.3905-1.4142 0z",
                    fill: "#21242C"
                }));
            case "CDOT":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("g", {
                    clipPath: "url(#clip0_874_41555)"
                }, l.createElement("circle", {
                    cx: "20",
                    cy: "20",
                    r: "1.5",
                    fill: "#21242C"
                })), l.createElement("defs", null, l.createElement("clipPath", {
                    id: "clip0_874_41555"
                }, l.createElement("path", {
                    fill: "#fff",
                    transform: "translate(18.5 18.5)",
                    d: "M0 0h3v3H0z"
                }))));
            case "DIVIDE":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M20 16c.8284 0 1.5-.6716 1.5-1.5S20.8284 13 20 13s-1.5.6716-1.5 1.5.6716 1.5 1.5 1.5zm-8 4c0-.5523.4477-1 1-1h14c.5523 0 1 .4477 1 1s-.4477 1-1 1H13c-.5523 0-1-.4477-1-1zm9.5 5.5c0 .8284-.6716 1.5-1.5 1.5s-1.5-.6716-1.5-1.5.6716-1.5 1.5-1.5 1.5.6716 1.5 1.5z",
                    fill: "#21242C"
                }));
            case "LEFT_PAREN":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M22.6402 9.2318c.4243.35357.4816.9841.128 1.4084-4.6909 5.6292-4.6909 13.0905 0 18.7196.3536.4243.2963 1.0549-.128 1.4084-.4243.3536-1.0549.2963-1.4084-.128-5.3091-6.3708-5.3091-14.9095 0-21.28036.3535-.42428.9841-.4816 1.4084-.12804z",
                    fill: "#21242C"
                }));
            case "RIGHT_PAREN":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M18.3598 9.2318c.4243-.35356 1.0549-.29624 1.4084.12804 5.3091 6.37086 5.3091 14.90956 0 21.28036-.3535.4243-.9841.4816-1.4084.128-.4242-.3535-.4816-.9841-.128-1.4084 4.691-5.6291 4.691-13.0904 0-18.7196-.3536-.4243-.2962-1.05483.128-1.4084z",
                    fill: "#21242C"
                }));
            case "BACKSPACE":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M10 20l6-6h12.1716v12H16l-6-6zm-1.41421-1.4142l6.00001-6C14.9609 12.2107 15.4696 12 16 12h12.1716c1.1045 0 2 .8954 2 2v12c0 1.1046-.8955 2-2 2H16c-.5304 0-1.0391-.2107-1.4142-.5858l-6.00001-6c-.78105-.781-.78105-2.0474 0-2.8284zm13.87871-1.2929l-1.2929 1.2929-1.2929-1.2929c-.3905-.3905-1.0237-.3905-1.4142 0-.3905.3905-.3905 1.0237 0 1.4142L19.7574 20l-1.2929 1.2929c-.3905.3905-.3905 1.0237 0 1.4142.3905.3905 1.0237.3905 1.4142 0l1.2929-1.2929 1.2929 1.2929c.3905.3905 1.0237.3905 1.4142 0 .3906-.3905.3906-1.0237 0-1.4142L22.5858 20l1.2929-1.2929c.3906-.3905.3906-1.0237 0-1.4142-.3905-.3905-1.0237-.3905-1.4142 0z",
                    fill: "#21242C"
                }));
            case "DISMISS":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "20",
                    height: "20",
                    fill: "currentColor",
                    viewBox: "0 0 256 256"
                }, l.createElement("path", {
                    transform: "scale(1,-1) translate(0, -260)",
                    d: "M205.66,125.66a8,8,0,0,1-11.32,0L128,59.31,61.66,125.66a8,8,0,0,1-11.32-11.32l72-72a8,8,0,0,1,11.32,0l72,72A8,8,0,0,1,205.66,125.66Z"
                }));
            case "FRAC_INCLUSIVE":
            case "FRAC_EXCLUSIVE":
            case "FRAC":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M16 10C16 9.44772 16.4477 9 17 9H23C23.5523 9 24 9.44772 24 10V16C24 16.5523 23.5523 17 23 17H17C16.4477 17 16 16.5523 16 16V10ZM18 11H22V15H18V11ZM14 20C14 19.4477 14.4477 19 15 19H25C25.5523 19 26 19.4477 26 20C26 20.5523 25.5523 21 25 21H15C14.4477 21 14 20.5523 14 20ZM17 23C16.4477 23 16 23.4477 16 24V30C16 30.5523 16.4477 31 17 31H23C23.5523 31 24 30.5523 24 30V24C24 23.4477 23.5523 23 23 23H17ZM22 25H18V29H22V25Z",
                    fill: "#21242C"
                }));
            case "NEGATIVE":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M12.9571 13.2929c.3905.3905.3905 1.0237 0 1.4142C11.6871 15.9771 11 17.9485 11 20c0 2.0515.6871 4.0229 1.9571 5.2929.3905.3905.3905 1.0237 0 1.4142-.3905.3905-1.0237.3905-1.4142 0C9.81292 24.9771 9 22.4485 9 20c0-2.4485.81292-4.9771 2.5429-6.7071.3905-.3905 1.0237-.3905 1.4142 0zM14 20c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1s-.4477 1-1 1H15c-.5523 0-1-.4477-1-1zm14.4571-6.7071c-.3905-.3905-1.0237-.3905-1.4142 0-.3905.3905-.3905 1.0237 0 1.4142C28.3129 15.9771 29 17.9485 29 20c0 2.0515-.6871 4.0229-1.9571 5.2929-.3905.3905-.3905 1.0237 0 1.4142.3905.3905 1.0237.3905 1.4142 0C30.1871 24.9771 31 22.4485 31 20c0-2.4485-.8129-4.9771-2.5429-6.7071z",
                    fill: "#21242C"
                }));
            case "RADICAL":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "0 0 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    fillRule: "evenodd",
                    d: "M9 9a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1h-6a1 1 0 0 1-1-1V9Zm2 1h4v4h-4v-4Zm12 2a1 1 0 0 0-.841.46l-8.174 12.714-3.153-4.729a1 1 0 0 0-1.664 1.11l4 6a1 1 0 0 0 1.673-.014L23.546 14H30a1 1 0 1 0 0-2h-7Z",
                    clipRule: "evenodd"
                }));
            case "SQRT":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "0 0 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    fillRule: "evenodd",
                    d: "M22.159 12.46A1 1 0 0 1 23 12h7a1 1 0 1 1 0 2h-6.454l-8.705 13.54a1 1 0 0 1-1.673.015l-4-6a1 1 0 0 1 1.664-1.11l3.153 4.73 8.174-12.716Z",
                    clipRule: "evenodd"
                }));
            case "CUBE_ROOT":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "0 0 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    fillRule: "evenodd",
                    d: "M9.684 9.246a3.052 3.052 0 0 0-.33 1.023l.798.143c.209.033.368.02.478-.038.11-.063.2-.186.27-.369a1.05 1.05 0 0 1 .154-.324c.07-.1.152-.186.247-.259.1-.073.21-.13.33-.17.125-.044.26-.066.407-.066.334 0 .59.091.77.275.184.183.275.449.275.797 0 .165-.024.317-.071.457a.746.746 0 0 1-.248.357 1.297 1.297 0 0 1-.5.231 3.359 3.359 0 0 1-.82.083v1.067c.4 0 .715.029.946.088.235.055.41.135.528.242a.674.674 0 0 1 .231.38c.033.146.05.31.05.494 0 .14-.028.28-.083.424a1.116 1.116 0 0 1-.632.649c-.158.07-.343.104-.556.104-.169 0-.319-.024-.45-.071a1.197 1.197 0 0 1-.347-.198 1.738 1.738 0 0 1-.28-.308 3.794 3.794 0 0 1-.232-.385.457.457 0 0 0-.33-.242.809.809 0 0 0-.49.06l-.67.275c.12.356.262.668.423.935.162.264.354.484.578.66.227.176.49.308.786.396.297.088.64.132 1.029.132a3.55 3.55 0 0 0 1.05-.154c.338-.106.633-.264.886-.473a2.3 2.3 0 0 0 .605-.775c.15-.312.225-.671.225-1.078 0-.92-.458-1.531-1.375-1.832a2.24 2.24 0 0 0 .523-.247 1.47 1.47 0 0 0 .621-.864 2.47 2.47 0 0 0 .083-.67c0-.287-.057-.555-.17-.804a1.9 1.9 0 0 0-.48-.654 2.254 2.254 0 0 0-.77-.44c-.3-.11-.641-.165-1.022-.165-.36 0-.695.05-1.007.148a2.47 2.47 0 0 0-.825.435 2.42 2.42 0 0 0-.605.731ZM23 12a1 1 0 0 0-.841.46l-8.174 12.714-3.153-4.729a1 1 0 0 0-1.664 1.11l4 6a1 1 0 0 0 1.673-.014L23.546 14H30a1 1 0 1 0 0-2h-7Z",
                    clipRule: "evenodd"
                }));
            case "EXP":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "0 0 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    fillRule: "evenodd",
                    d: "M28 8a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1h-6a1 1 0 0 1-1-1V8Zm2 1h4v4h-4V9Zm-16 4a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H15a1 1 0 0 1-1-1V13Zm2 1h8v12h-8V14Z",
                    clipRule: "evenodd"
                }));
            case "EXP_2":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "0 0 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    fillRule: "evenodd",
                    d: "M33.58 13.746a.52.52 0 0 0-.386-.137h-1.793c-.161 0-.334.016-.517.05a4.09 4.09 0 0 0-.555.126l1.694-1.733c.212-.216.414-.43.605-.643.19-.213.357-.431.5-.655a3.22 3.22 0 0 0 .347-.715c.084-.25.126-.52.126-.814 0-.34-.06-.653-.181-.935a2.033 2.033 0 0 0-.512-.72 2.293 2.293 0 0 0-.797-.468 2.952 2.952 0 0 0-1.029-.17c-.36 0-.695.05-1.006.148a2.43 2.43 0 0 0-.83.435 2.42 2.42 0 0 0-.606.731 3.049 3.049 0 0 0-.33 1.023l.803.143c.205.033.363.02.473-.038.114-.063.204-.186.27-.369a1.05 1.05 0 0 1 .154-.324 1.18 1.18 0 0 1 .247-.259c.1-.073.21-.13.33-.17.125-.044.26-.066.407-.066.334 0 .592.093.776.28.183.183.275.453.275.809 0 .201-.026.394-.077.577a2.407 2.407 0 0 1-.231.545 4.17 4.17 0 0 1-.385.544 9.098 9.098 0 0 1-.534.578l-2.365 2.37a.897.897 0 0 0-.264.616V15h5.533v-.89a.48.48 0 0 0-.143-.364ZM14 13a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H15a1 1 0 0 1-1-1V13Zm2 1h8v12h-8V14Z",
                    clipRule: "evenodd"
                }));
            case "EXP_3":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "0 0 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    fillRule: "evenodd",
                    d: "M28.684 8.246a3.049 3.049 0 0 0-.33 1.023l.798.143c.209.033.368.02.478-.038.11-.063.2-.186.27-.369a1.05 1.05 0 0 1 .154-.324 1.18 1.18 0 0 1 .247-.259c.1-.073.21-.13.33-.17.125-.044.26-.066.407-.066.334 0 .59.091.77.275.183.183.275.449.275.797 0 .165-.024.317-.071.457a.746.746 0 0 1-.248.357 1.298 1.298 0 0 1-.5.231 3.36 3.36 0 0 1-.82.083v1.067c.4 0 .715.029.946.088.235.055.41.135.528.242a.674.674 0 0 1 .231.38c.033.146.05.31.05.494 0 .14-.028.28-.083.424a1.118 1.118 0 0 1-.632.649c-.158.07-.343.104-.556.104-.169 0-.319-.024-.45-.071a1.195 1.195 0 0 1-.347-.198 1.738 1.738 0 0 1-.28-.308 3.794 3.794 0 0 1-.232-.385.457.457 0 0 0-.33-.242.809.809 0 0 0-.49.06l-.67.275c.12.356.262.668.423.935.161.264.354.484.578.66.227.176.49.308.786.396.297.088.64.132 1.029.132.366 0 .716-.051 1.05-.154.337-.106.633-.264.886-.473a2.3 2.3 0 0 0 .605-.775c.15-.312.225-.671.225-1.078 0-.92-.458-1.531-1.375-1.832a2.24 2.24 0 0 0 .523-.247 1.471 1.471 0 0 0 .621-.863 2.47 2.47 0 0 0 .083-.672c0-.286-.057-.554-.17-.803a1.9 1.9 0 0 0-.48-.654 2.254 2.254 0 0 0-.77-.44c-.3-.11-.641-.165-1.022-.165-.36 0-.695.05-1.007.148a2.47 2.47 0 0 0-.825.435 2.42 2.42 0 0 0-.605.731ZM14 13a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H15a1 1 0 0 1-1-1V13Zm2 1h8v12h-8V14Z",
                    clipRule: "evenodd"
                }));
            case "TAN":
                return n.tan;
            case "COS":
                return n.cos;
            case "SIN":
                return n.sin;
            case "EQUAL":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "0 0 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    fillRule: "evenodd",
                    d: "M12 17a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H13a1 1 0 0 1-1-1Zm0 6a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H13a1 1 0 0 1-1-1Z",
                    clipRule: "evenodd"
                }));
            case "GT":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "0 0 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    fillRule: "evenodd",
                    d: "M12.058 14.664a1 1 0 0 1 1.278-.605l14 5a1 1 0 0 1 0 1.883l-14 5a1 1 0 1 1-.672-1.884L24.027 20l-11.363-4.058a1 1 0 0 1-.606-1.278Z",
                    clipRule: "evenodd"
                }));
            case "LT":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "0 0 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    fillRule: "evenodd",
                    d: "M27.942 14.664a1 1 0 0 1-.606 1.278L15.973 20l11.363 4.058a1 1 0 0 1-.672 1.884l-14-5a1 1 0 0 1 0-1.884l14-5a1 1 0 0 1 1.278.606Z",
                    clipRule: "evenodd"
                }));
            case "GEQ":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "0 0 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    fillRule: "evenodd",
                    d: "M12 29a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H13a1 1 0 0 1-1-1Zm.058-14.336a1 1 0 0 1 1.278-.605l14 5a1 1 0 0 1 0 1.883l-14 5a1 1 0 1 1-.672-1.884L24.027 20l-11.363-4.058a1 1 0 0 1-.606-1.278Z",
                    clipRule: "evenodd"
                }));
            case "LEQ":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "0 0 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    fillRule: "evenodd",
                    d: "M12 29a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H13a1 1 0 0 1-1-1Zm15.942-14.336a1 1 0 0 1-.606 1.278L15.973 20l11.363 4.058a1 1 0 0 1-.672 1.884l-14-5a1 1 0 0 1 0-1.884l14-5a1 1 0 0 1 1.278.606Z",
                    clipRule: "evenodd"
                }));
            case "NEQ":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "0 0 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    fillRule: "evenodd",
                    d: "M12 17a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H13a1 1 0 0 1-1-1Zm0 6a1 1 0 0 1 1-1h14a1 1 0 1 1 0 2H13a1 1 0 0 1-1-1Z",
                    clipRule: "evenodd"
                }), l.createElement("path", {
                    fill: "#21242C",
                    fillRule: "evenodd",
                    d: "M16 26.928a1 1 0 0 1-.366-1.366l7-12.125a1 1 0 0 1 1.732 1l-7 12.125a1 1 0 0 1-1.366.366Z",
                    clipRule: "evenodd"
                }));
            case "LN":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "0 0 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M16.976 14.112V26H15V14.112h1.976Zm3.817 4.688a5.19 5.19 0 0 1 .52-.456 3.195 3.195 0 0 1 1.248-.592 3.16 3.16 0 0 1 .768-.088c.448 0 .845.078 1.192.232.346.15.634.363.864.64.234.272.41.6.528.984.122.379.184.798.184 1.256V26H24.12v-5.224c0-.501-.115-.888-.344-1.16-.23-.277-.579-.416-1.048-.416-.342 0-.662.078-.96.232a3.439 3.439 0 0 0-.848.632V26h-1.976v-8.208h1.208c.256 0 .424.12.504.36l.136.648Z"
                }));
            case "LOG":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "0 0 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M12.203 14.112V26h-1.976V14.112h1.976Zm5.6 3.552c.608 0 1.16.099 1.656.296.502.198.928.478 1.28.84.358.363.632.806.824 1.328.192.523.288 1.107.288 1.752 0 .651-.096 1.238-.288 1.76a3.741 3.741 0 0 1-.824 1.336 3.528 3.528 0 0 1-1.28.848 4.445 4.445 0 0 1-1.656.296 4.53 4.53 0 0 1-1.672-.296 3.616 3.616 0 0 1-1.288-.848 3.896 3.896 0 0 1-.824-1.336 5.076 5.076 0 0 1-.288-1.76c0-.645.096-1.229.288-1.752a3.81 3.81 0 0 1 .824-1.328 3.669 3.669 0 0 1 1.288-.84 4.53 4.53 0 0 1 1.672-.296Zm0 6.936c.683 0 1.187-.229 1.512-.688.331-.458.496-1.13.496-2.016 0-.885-.165-1.56-.496-2.024-.325-.464-.829-.696-1.512-.696-.693 0-1.208.235-1.544.704-.33.464-.496 1.136-.496 2.016 0 .88.166 1.552.496 2.016.336.459.851.688 1.544.688Zm8.493-2.904c.246 0 .459-.032.64-.096.182-.069.331-.162.448-.28.123-.117.214-.258.272-.424.064-.165.096-.346.096-.544 0-.405-.122-.725-.368-.96-.24-.24-.602-.36-1.088-.36-.485 0-.85.12-1.096.36-.24.235-.36.555-.36.96 0 .192.03.371.088.536.064.166.155.31.272.432.123.118.275.211.456.28.187.064.4.096.64.096Zm2.232 4.672c0-.16-.048-.29-.144-.392a.914.914 0 0 0-.392-.232 2.716 2.716 0 0 0-.584-.128 8.987 8.987 0 0 0-.704-.056 32.107 32.107 0 0 0-.768-.04 8.959 8.959 0 0 1-.768-.064 1.908 1.908 0 0 0-.536.432.89.89 0 0 0-.096.976.93.93 0 0 0 .344.328c.16.091.366.16.616.208.251.054.558.08.92.08.368 0 .686-.029.952-.088a2.09 2.09 0 0 0 .656-.232.954.954 0 0 0 .384-.352.84.84 0 0 0 .12-.44Zm1.968-8.296v.736c0 .235-.141.379-.424.432l-.736.136c.112.283.168.592.168.928a2.414 2.414 0 0 1-.92 1.936c-.288.23-.629.408-1.024.536a4.17 4.17 0 0 1-1.264.184c-.16 0-.314-.008-.464-.024a5.807 5.807 0 0 1-.44-.064c-.256.155-.384.328-.384.52 0 .166.075.288.224.368.155.075.358.128.608.16.251.032.536.054.856.064.32.006.648.022.984.048.336.027.664.075.984.144.32.064.606.168.856.312.251.144.451.342.6.592.155.246.232.563.232.952 0 .363-.09.715-.272 1.056a2.773 2.773 0 0 1-.776.912c-.336.267-.752.48-1.248.64-.49.166-1.05.248-1.68.248-.618 0-1.157-.061-1.616-.184-.458-.117-.84-.277-1.144-.48a2.037 2.037 0 0 1-.68-.688 1.623 1.623 0 0 1-.224-.816c0-.384.115-.704.344-.96.235-.261.555-.469.96-.624a1.377 1.377 0 0 1-.52-.448c-.128-.186-.192-.432-.192-.736 0-.122.022-.248.064-.376.048-.133.115-.264.2-.392.091-.128.203-.248.336-.36a2.2 2.2 0 0 1 .472-.312 2.621 2.621 0 0 1-.984-.896c-.234-.373-.352-.81-.352-1.312 0-.405.08-.77.24-1.096.166-.33.392-.61.68-.84a3.11 3.11 0 0 1 1.032-.536c.4-.122.835-.184 1.304-.184.352 0 .683.038.992.112.31.07.592.174.848.312h2.36Z"
                }));
            case "LOG_N":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "0 0 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M12.203 14.112V26h-1.976V14.112h1.976Zm5.6 3.552c.608 0 1.16.099 1.656.296.502.198.928.478 1.28.84.358.363.632.806.824 1.328.192.523.288 1.107.288 1.752 0 .651-.096 1.238-.288 1.76a3.741 3.741 0 0 1-.824 1.336 3.528 3.528 0 0 1-1.28.848 4.445 4.445 0 0 1-1.656.296 4.53 4.53 0 0 1-1.672-.296 3.616 3.616 0 0 1-1.288-.848 3.896 3.896 0 0 1-.824-1.336 5.076 5.076 0 0 1-.288-1.76c0-.645.096-1.229.288-1.752a3.81 3.81 0 0 1 .824-1.328 3.669 3.669 0 0 1 1.288-.84 4.53 4.53 0 0 1 1.672-.296Zm0 6.936c.683 0 1.187-.229 1.512-.688.331-.458.496-1.13.496-2.016 0-.885-.165-1.56-.496-2.024-.325-.464-.829-.696-1.512-.696-.693 0-1.208.235-1.544.704-.33.464-.496 1.136-.496 2.016 0 .88.166 1.552.496 2.016.336.459.851.688 1.544.688Zm8.493-2.904c.246 0 .459-.032.64-.096.182-.069.331-.162.448-.28.123-.117.214-.258.272-.424.064-.165.096-.346.096-.544 0-.405-.122-.725-.368-.96-.24-.24-.602-.36-1.088-.36-.485 0-.85.12-1.096.36-.24.235-.36.555-.36.96 0 .192.03.371.088.536.064.166.155.31.272.432.123.118.275.211.456.28.187.064.4.096.64.096Zm2.232 4.672c0-.16-.048-.29-.144-.392a.914.914 0 0 0-.392-.232 2.716 2.716 0 0 0-.584-.128 8.987 8.987 0 0 0-.704-.056 32.107 32.107 0 0 0-.768-.04 8.959 8.959 0 0 1-.768-.064 1.908 1.908 0 0 0-.536.432.89.89 0 0 0-.096.976.93.93 0 0 0 .344.328c.16.091.366.16.616.208.251.054.558.08.92.08.368 0 .686-.029.952-.088a2.09 2.09 0 0 0 .656-.232.954.954 0 0 0 .384-.352.84.84 0 0 0 .12-.44Zm1.968-8.296v.736c0 .235-.141.379-.424.432l-.736.136c.112.283.168.592.168.928a2.414 2.414 0 0 1-.92 1.936c-.288.23-.629.408-1.024.536a4.17 4.17 0 0 1-1.264.184c-.16 0-.314-.008-.464-.024a5.807 5.807 0 0 1-.44-.064c-.256.155-.384.328-.384.52 0 .166.075.288.224.368.155.075.358.128.608.16.251.032.536.054.856.064.32.006.648.022.984.048.336.027.664.075.984.144.32.064.606.168.856.312.251.144.451.342.6.592.155.246.232.563.232.952 0 .363-.09.715-.272 1.056a2.773 2.773 0 0 1-.776.912c-.336.267-.752.48-1.248.64-.49.166-1.05.248-1.68.248-.618 0-1.157-.061-1.616-.184-.458-.117-.84-.277-1.144-.48a2.037 2.037 0 0 1-.68-.688 1.623 1.623 0 0 1-.224-.816c0-.384.115-.704.344-.96.235-.261.555-.469.96-.624a1.377 1.377 0 0 1-.52-.448c-.128-.186-.192-.432-.192-.736 0-.122.022-.248.064-.376.048-.133.115-.264.2-.392.091-.128.203-.248.336-.36a2.2 2.2 0 0 1 .472-.312 2.621 2.621 0 0 1-.984-.896c-.234-.373-.352-.81-.352-1.312 0-.405.08-.77.24-1.096.166-.33.392-.61.68-.84a3.11 3.11 0 0 1 1.032-.536c.4-.122.835-.184 1.304-.184.352 0 .683.038.992.112.31.07.592.174.848.312h2.36Z"
                }), l.createElement("path", {
                    fill: "#21242C",
                    fillRule: "evenodd",
                    d: "M32 26a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-6a1 1 0 0 0-1-1h-6Zm5 2h-4v4h4v-4Z",
                    clipRule: "evenodd"
                }));
            case "PERCENT":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "0 0 40 40"
                }, l.createElement("path", {
                    fill: "currentColor",
                    fillRule: "evenodd",
                    d: "M24.447 11.106a1 1 0 0 1 .447 1.341l-8 16a1 1 0 1 1-1.788-.894l8-16a1 1 0 0 1 1.341-.447ZM15 13a2 2 0 1 0 0 4 2 2 0 0 0 0-4Zm-4 2a4 4 0 1 1 8 0 4 4 0 0 1-8 0Zm12 10a2 2 0 1 1 4 0 2 2 0 0 1-4 0Zm2-4a4 4 0 1 0 0 8 4 4 0 0 0 0-8Z",
                    clipRule: "evenodd"
                }));
            case "PI":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    d: "M23.7918 25.0379c0 .2947-.13.572-.39.832-.2426.26-.546.39-.91.39-.26 0-.442-.0346-.546-.104-.0866-.0693-.182-.208-.286-.416-.3293-.7626-.494-1.7246-.494-2.886 0-.624.0087-1.04.026-1.248.1214-1.196.39-2.6433.806-4.342.0867-.3466.13-.5373.13-.572h-2.548l-.026.104c0 .0174-.0173.0954-.052.234-.0346.1214-.0866.312-.156.572-.052.2427-.104.468-.156.676-1.144 4.4547-1.8286 6.8814-2.054 7.28-.208.4854-.5806.728-1.118.728-.3986 0-.676-.1473-.832-.442-.0346-.0866-.052-.2253-.052-.416v-.286l.338-.728c1.3-2.7386 2.2447-5.1046 2.834-7.098l.208-.624h-.832c-.6933 0-1.1786.026-1.456.078-.26.052-.5806.2167-.962.494-.416.26-.78.6154-1.092 1.066-.0866.1387-.156.2254-.208.26-.052.0174-.182.026-.39.026-.3293 0-.494-.0866-.494-.26 0-.0693.0867-.2426.26-.52 1.196-1.82 2.366-2.8166 3.51-2.99.1214-.0346 2.0714-.052 5.85-.052 2.7734 0 4.1947.0087 4.264.026.3467.1214.52.364.52.728 0 .5374-.2773.9014-.832 1.092-.104.0347-.702.052-1.794.052h-1.664l-.078.442c-.208 1.248-.312 2.2794-.312 3.094 0 1.5427.2687 2.938.806 4.186.1214.312.182.52.182.624z",
                    fill: "#21242C"
                }));
            case "THETA":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "0 0 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M22.2 10.696h.208a2.26 2.26 0 0 1 .312-.026c.936.087 1.664.511 2.184 1.274.676 1.023 1.014 2.418 1.014 4.186 0 .468-.017.84-.052 1.118-.225 2.305-.823 4.463-1.794 6.474-.59 1.23-1.282 2.305-2.08 3.224-.78.919-1.551 1.569-2.314 1.95-.537.243-1.005.364-1.404.364h-.182c-.762 0-1.395-.269-1.898-.806-.918-.97-1.378-2.522-1.378-4.654 0-.832.087-1.707.26-2.626.641-3.467 1.95-6.3 3.926-8.502 1.058-1.161 2.123-1.82 3.198-1.976Zm1.664 3.588c0-1.768-.46-2.652-1.378-2.652-.572 0-1.161.373-1.768 1.118-.866 1.092-1.603 2.652-2.21 4.68-.346 1.092-.52 1.733-.52 1.924.85.017 1.69.026 2.522.026l2.522-.026c.087-.087.243-.763.468-2.028.243-1.265.364-2.28.364-3.042Zm-1.248 6.734.13-.442h-5.07l-.026.182c-.537 2.15-.806 3.753-.806 4.81 0 1.179.208 1.993.624 2.444.19.208.442.312.754.312.694 0 1.421-.563 2.184-1.69.815-1.196 1.552-3.068 2.21-5.616Z"
                }));
            case "a":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M27.781 24.022c.156 0 .26.009.312.026a.18.18 0 0 1 .13.052c.035.035.052.087.052.156 0 .052-.026.182-.078.39-.381 1.456-.85 2.462-1.404 3.016a2.573 2.573 0 0 1-.832.546 2.776 2.776 0 0 1-.624.052c-1.092 0-1.855-.425-2.288-1.274-.087-.225-.13-.33-.13-.312-.017-.017-.052-.008-.104.026l-.104.104c-.832.78-1.655 1.257-2.47 1.43-.104.017-.32.026-.65.026-1.144 0-2.089-.477-2.834-1.43-.52-.762-.78-1.733-.78-2.912 0-.277.009-.468.026-.572a7.916 7.916 0 0 1 1.066-3.172c.607-1.023 1.326-1.846 2.158-2.47 1.005-.78 2.063-1.17 3.172-1.17.867 0 1.647.425 2.34 1.274.277-.52.676-.78 1.196-.78a.93.93 0 0 1 .598.208.64.64 0 0 1 .26.52c0 .226-.33 1.62-.988 4.186-.641 2.548-.962 3.978-.962 4.29 0 .728.243 1.092.728 1.092.156-.017.33-.095.52-.234.364-.346.72-1.178 1.066-2.496.104-.347.19-.529.26-.546.035-.017.121-.026.26-.026h.104Zm-9.594 1.222c0 .624.13 1.127.39 1.508.277.382.676.572 1.196.572.503 0 1.04-.208 1.612-.624.208-.139.485-.398.832-.78.364-.381.58-.641.65-.78.035-.07.269-.997.702-2.782.45-1.785.676-2.747.676-2.886 0-.208-.095-.503-.286-.884-.381-.745-.927-1.118-1.638-1.118-.693 0-1.309.295-1.846.884a6.274 6.274 0 0 0-1.196 2.028 20.753 20.753 0 0 0-1.066 4.264c0 .052-.009.148-.026.286v.312Z"
                }));
            case "b":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M18.74 10.242c.018 0 .642-.043 1.873-.13 1.248-.104 1.88-.156 1.898-.156.208 0 .312.078.312.234 0 .156-.295 1.395-.884 3.718-.139.59-.295 1.196-.468 1.82a60.807 60.807 0 0 1-.364 1.404l-.104.494c0 .052.052.026.156-.078a4.832 4.832 0 0 1 1.976-.988c.208-.035.424-.052.65-.052.225 0 .442.017.65.052.901.208 1.62.676 2.158 1.404.537.728.806 1.647.806 2.756 0 1.941-.685 3.692-2.054 5.252-1.352 1.543-2.825 2.314-4.42 2.314-.503 0-.98-.113-1.43-.338-1.352-.607-2.028-1.89-2.028-3.848 0-.503.052-.997.156-1.482 0-.017.433-1.794 1.3-5.33l1.326-5.304c.035-.243-.026-.39-.182-.442-.139-.07-.381-.104-.728-.104h-.286c-.364 0-.572-.026-.624-.078-.104-.087-.113-.295-.026-.624.07-.243.13-.381.182-.416.052-.052.104-.078.156-.078Zm6.423 9.308c0-1.387-.529-2.08-1.586-2.08-.035 0-.096.009-.182.026h-.13c-.902.19-1.75.815-2.548 1.872a1.501 1.501 0 0 0-.13.156l-.078.104c0 .017-.156.641-.468 1.872a96.026 96.026 0 0 0-.494 2.08 7.731 7.731 0 0 0-.156 1.456c0 .832.208 1.456.624 1.872.277.277.624.416 1.04.416.572 0 1.152-.277 1.742-.832.433-.399.78-.884 1.04-1.456.277-.59.563-1.5.858-2.73.312-1.248.468-2.167.468-2.756Z"
                }));
            case "c":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M26.932 24.854c.07 0 .182.087.338.26.173.156.26.268.26.338 0 .156-.269.476-.806.962-1.075.97-2.435 1.577-4.082 1.82-.381.034-.72.052-1.014.052-1.855 0-3.146-.763-3.874-2.288a4.598 4.598 0 0 1-.494-2.132c0-.797.165-1.612.494-2.444.503-1.3 1.317-2.4 2.444-3.302 1.144-.919 2.357-1.448 3.64-1.586.104-.017.269-.026.494-.026.607 0 1.17.095 1.69.286.97.416 1.456 1.075 1.456 1.976 0 .537-.165.98-.494 1.326-.33.33-.745.494-1.248.494-.33 0-.59-.087-.78-.26-.19-.19-.286-.45-.286-.78 0-.295.087-.58.26-.858.173-.277.399-.477.676-.598.139-.087.234-.13.286-.13.07 0 .009-.06-.182-.182-.33-.19-.789-.286-1.378-.286-.52 0-1.014.121-1.482.364-.364.156-.737.425-1.118.806a5.29 5.29 0 0 0-1.092 1.612c-.277.624-.555 1.517-.832 2.678-.19.814-.286 1.465-.286 1.95 0 .797.225 1.395.676 1.794.399.416.936.624 1.612.624.26 0 .529-.018.806-.052 1.63-.243 2.964-.962 4.004-2.158.156-.174.26-.26.312-.26Z"
                }));
            case "d":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M26.634 10.112c.26-.017.555-.035.884-.052.33-.035.572-.06.728-.078.173-.017.269-.026.286-.026.208 0 .312.07.312.208 0 .121-.641 2.747-1.924 7.878a2094.732 2094.732 0 0 0-1.924 7.8 2.156 2.156 0 0 0-.026.39c0 .728.243 1.092.728 1.092.156-.017.33-.095.52-.234.364-.347.72-1.179 1.066-2.496.104-.347.19-.529.26-.546.035-.017.121-.026.26-.026h.104c.33 0 .494.07.494.208 0 .07-.026.208-.078.416-.381 1.456-.85 2.461-1.404 3.016a2.572 2.572 0 0 1-.832.546 2.776 2.776 0 0 1-.624.052c-1.092 0-1.855-.425-2.288-1.274-.087-.225-.13-.33-.13-.312-.017-.017-.052-.009-.104.026l-.104.104c-.832.78-1.655 1.257-2.47 1.43-.104.017-.32.026-.65.026-1.144 0-2.089-.477-2.834-1.43-.52-.763-.78-1.733-.78-2.912 0-1.612.59-3.207 1.768-4.784 1.075-1.317 2.27-2.14 3.588-2.47a3.87 3.87 0 0 1 1.066-.156c.953 0 1.681.364 2.184 1.092.087.104.13.139.13.104l.702-2.834c.468-1.837.71-2.8.728-2.886 0-.208-.052-.347-.156-.416-.19-.07-.537-.113-1.04-.13h-.546a1.192 1.192 0 0 1-.182-.208c0-.035.026-.2.078-.494.087-.33.2-.494.338-.494a17.914 17.914 0 0 1 .962-.078l.91-.052Zm-2.236 9.412c-.381-1.37-1.031-2.054-1.95-2.054-.693 0-1.309.295-1.846.884a6.274 6.274 0 0 0-1.196 2.028 20.753 20.753 0 0 0-1.066 4.264c0 .052-.009.147-.026.286v.312c0 .624.13 1.127.39 1.508.277.381.676.572 1.196.572.919 0 1.88-.624 2.886-1.872l.208-.286.702-2.808c.312-1.265.546-2.21.702-2.834Z"
                }));
            case "e":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M26.5 24.854c.07 0 .182.087.338.26.174.156.26.268.26.338 0 .156-.268.476-.806.962-1.421 1.248-3.094 1.872-5.018 1.872-.953 0-1.76-.234-2.418-.702-.381-.208-.728-.546-1.04-1.014-.572-.867-.858-1.846-.858-2.938 0-.659.07-1.309.208-1.95.364-1.352 1.11-2.505 2.236-3.458 1.144-.954 2.514-1.517 4.108-1.69.018-.017.156-.026.416-.026h.078c.728 0 1.344.165 1.846.494.52.312.858.745 1.014 1.3.018.07.026.225.026.468 0 .312-.017.529-.052.65-.364 1.23-1.308 2.036-2.834 2.418-.85.225-2.01.346-3.484.364-.641 0-.97.017-.988.052 0 .017-.017.13-.052.338-.19.85-.286 1.543-.286 2.08 0 .814.182 1.465.546 1.95.364.468.91.702 1.638.702 1.942 0 3.545-.737 4.81-2.21.156-.174.26-.26.312-.26Zm-.858-6.032c-.104-.901-.693-1.352-1.768-1.352-.606 0-1.23.173-1.872.52-.85.503-1.482 1.291-1.898 2.366-.19.52-.286.806-.286.858 0 .017.174.026.52.026.572 0 1.1-.017 1.586-.052 1.023-.087 1.786-.234 2.288-.442a2.776 2.776 0 0 0 1.248-1.04c.122-.26.182-.555.182-.884Z"
                }));
            case "f":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M18.695 32.212c.468.104.72.156.754.156.399 0 .745-.364 1.04-1.092.208-.572.84-3.657 1.898-9.256.485-2.617.737-3.935.754-3.952v-.078h-1.222c-.815 0-1.248-.017-1.3-.052-.121-.07-.139-.26-.052-.572.07-.26.113-.399.13-.416.035-.087.104-.13.208-.13.121-.017.529-.026 1.222-.026.832 0 1.248-.009 1.248-.026 0-.035.078-.468.234-1.3.156-.832.26-1.335.312-1.508.364-1.647.91-2.79 1.638-3.432.693-.572 1.413-.858 2.158-.858.624.035 1.144.225 1.56.572.433.347.65.806.65 1.378 0 .503-.156.927-.468 1.274-.312.347-.702.52-1.17.52-.763 0-1.144-.364-1.144-1.092 0-.641.303-1.11.91-1.404l.234-.13c-.312-.104-.572-.156-.78-.156-.503 0-.832.33-.988.988-.139.52-.364 1.655-.676 3.406l-.338 1.716c0 .035.477.052 1.43.052.78 0 1.248.009 1.404.026.156.017.234.078.234.182 0 .19-.06.468-.182.832-.035.087-.121.139-.26.156h-2.834l-.598 3.172c-.641 3.31-1.04 5.313-1.196 6.006-.59 2.617-1.378 4.394-2.366 5.33-.641.555-1.274.832-1.898.832-.624 0-1.144-.173-1.56-.52-.416-.347-.624-.806-.624-1.378 0-.52.156-.962.468-1.326.312-.347.702-.52 1.17-.52.763 0 1.144.364 1.144 1.092 0 .641-.303 1.11-.91 1.404l-.234.13Z"
                }));
            case "g":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M17.729 29.846c.312 0 .572.095.78.286.208.19.312.442.312.754 0 .468-.174.867-.52 1.196-.122.121-.165.182-.13.182.173.052.693.078 1.56.078.658 0 1.178-.104 1.56-.312.398-.19.771-.486 1.118-.884.346-.381.589-.78.728-1.196.104-.33.242-.867.416-1.612.225-.832.338-1.318.338-1.456a5.177 5.177 0 0 1-2.08 1.066 3.946 3.946 0 0 1-.65.052c-1.127 0-2.02-.39-2.678-1.17-.642-.797-.962-1.794-.962-2.99 0-1.092.251-2.14.754-3.146.797-1.664 1.941-2.869 3.432-3.614.797-.381 1.551-.572 2.262-.572.797 0 1.551.416 2.262 1.248a.854.854 0 0 0 .104-.13c.242-.399.606-.598 1.092-.598a.93.93 0 0 1 .598.208.64.64 0 0 1 .26.52c0 .26-.494 2.357-1.482 6.292-.988 3.935-1.508 5.945-1.56 6.032-.33.936-1.014 1.707-2.054 2.314-1.023.624-2.176.936-3.458.936-1.994 0-3.172-.381-3.536-1.144-.087-.156-.13-.364-.13-.624 0-.45.156-.85.468-1.196.312-.347.71-.52 1.196-.52Zm8.06-10.374c-.139-.45-.278-.798-.416-1.04a1.757 1.757 0 0 0-.598-.65c-.278-.208-.616-.312-1.014-.312a1.1 1.1 0 0 0-.182.026h-.13c-.728.173-1.361.624-1.898 1.352-.486.641-.945 1.811-1.378 3.51-.295 1.178-.442 2.045-.442 2.6 0 1.37.537 2.054 1.612 2.054.988 0 1.941-.607 2.86-1.82l.208-.26a459.483 459.483 0 0 0 1.378-5.46Z"
                }));
            case "h":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M25.274 28.26c-.676 0-1.23-.2-1.664-.598-.433-.416-.65-.945-.65-1.586 0-.277.087-.659.26-1.144.815-2.097 1.335-3.735 1.56-4.914.052-.26.078-.59.078-.988 0-1.023-.425-1.534-1.274-1.534-.312 0-.537.017-.676.052-1.162.243-2.184 1.075-3.068 2.496l-.182.338-.884 3.51c-.555 2.253-.876 3.484-.962 3.692-.226.468-.607.702-1.144.702-.208 0-.416-.07-.624-.208a.56.56 0 0 1-.286-.494c0-.208 1.274-5.408 3.822-15.6 0-.208-.052-.347-.156-.416-.19-.07-.537-.113-1.04-.13h-.546a1.192 1.192 0 0 1-.182-.208c0-.035.026-.2.078-.494.086-.33.2-.494.338-.494.017 0 .641-.043 1.872-.13 1.248-.104 1.88-.156 1.898-.156.208 0 .312.078.312.234 0 .19-.312 1.5-.936 3.926-.659 2.565-.988 3.874-.988 3.926 0 .035.06-.009.182-.13 1.023-.936 2.15-1.404 3.38-1.404.953 0 1.716.234 2.288.702.572.468.858 1.153.858 2.054 0 .399-.026.728-.078.988-.156.884-.633 2.418-1.43 4.602-.312.85-.468 1.465-.468 1.846.017.243.06.407.13.494.07.087.2.13.39.13.485 0 .936-.26 1.352-.78.433-.537.771-1.248 1.014-2.132.052-.19.104-.303.156-.338.052-.035.19-.052.416-.052.33.052.502.121.52.208 0 .017-.035.147-.104.39-.277 1.023-.72 1.863-1.326 2.522-.59.745-1.335 1.118-2.236 1.118Z"
                }));
            case "i":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M22.302 12.4c0-.399.165-.763.495-1.092.329-.33.71-.494 1.143-.494.313 0 .572.104.78.312.226.208.338.468.338.78 0 .381-.173.745-.52 1.092-.346.347-.727.52-1.143.52-.313 0-.572-.104-.78-.312-.208-.208-.313-.477-.313-.806Zm-.598 15.886c-.675 0-1.221-.2-1.637-.598-.416-.399-.625-.936-.625-1.612 0-.295.018-.494.052-.598 0-.035.4-1.1 1.197-3.198.797-2.115 1.196-3.19 1.196-3.224.086-.277.13-.59.13-.936 0-.416-.148-.624-.442-.624h-.052c-.416 0-.815.2-1.197.598-.554.572-.962 1.387-1.221 2.444a.427.427 0 0 1-.027.104.307.307 0 0 1-.052.078l-.026.026c-.017.017-.052.026-.104.026h-.675c-.105-.104-.157-.182-.157-.234 0-.052.026-.173.078-.364.451-1.49 1.11-2.53 1.977-3.12.468-.364.97-.546 1.508-.546.693 0 1.265.2 1.716.598.45.399.675.936.675 1.612 0 .225-.043.485-.13.78-.017.035-.416 1.1-1.196 3.198l-1.17 3.146c-.086.381-.13.659-.13.832 0 .433.148.65.442.65.243 0 .46-.052.65-.156.763-.364 1.361-1.274 1.794-2.73.053-.208.096-.33.13-.364.052-.035.2-.052.442-.052.156 0 .26.009.313.026.069 0 .12.017.155.052.035.035.052.095.052.182 0 .07-.026.182-.078.338-.329.988-.806 1.846-1.43 2.574-.606.728-1.325 1.092-2.157 1.092Z"
                }));
            case "j":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M24.365 12.504c0-.45.164-.84.494-1.17.329-.347.719-.52 1.17-.52.294 0 .537.095.728.286.208.173.329.407.364.702 0 .468-.156.875-.468 1.222-.312.33-.702.494-1.17.494-.312 0-.572-.087-.78-.26a1.059 1.059 0 0 1-.338-.754Zm-.234 5.72c0-.503-.226-.754-.676-.754-.191 0-.39.035-.598.104-.468.156-.928.485-1.378.988-.434.503-.798 1.118-1.092 1.846a1.45 1.45 0 0 1-.078.182.454.454 0 0 0-.052.13l-.078.026a.492.492 0 0 1-.156.026h-.598c-.14-.139-.156-.32-.052-.546.52-1.248 1.196-2.201 2.028-2.86.589-.468 1.187-.745 1.794-.832h.208c.12-.017.225-.026.312-.026.416.017.797.104 1.144.26.45.277.78.572.988.884.225.295.338.728.338 1.3v.416l-1.274 5.174c-.884 3.467-1.352 5.27-1.404 5.408-.278.745-.754 1.404-1.43 1.976a5.47 5.47 0 0 1-2.21 1.222 5.448 5.448 0 0 1-1.274.156c-.676 0-1.222-.147-1.638-.442-.416-.295-.624-.728-.624-1.3 0-.485.173-.893.52-1.222.346-.33.736-.494 1.17-.494.329 0 .589.095.78.286.208.19.312.45.312.78 0 .624-.278 1.1-.832 1.43.086.017.208.026.364.026.589 0 1.126-.251 1.612-.754a4.877 4.877 0 0 0 1.118-1.69l.286-1.092c.19-.745.416-1.647.676-2.704.277-1.075.554-2.158.832-3.25.277-1.092.51-2.054.702-2.886.19-.85.286-1.343.286-1.482 0-.121-.01-.217-.026-.286Z"
                }));
            case "k":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M18.783 10.242c.017 0 .641-.043 1.872-.13 1.248-.104 1.88-.156 1.898-.156.208 0 .312.07.312.208 0 .121-.434 1.933-1.3 5.434-.867 3.432-1.3 5.209-1.3 5.33.33-.208.598-.381.806-.52.208-.156.372-.286.494-.39.121-.121.416-.407.884-.858 1.04-1.04 1.768-1.69 2.184-1.95.693-.468 1.352-.702 1.976-.702.52 0 .927.173 1.222.52.312.347.468.806.468 1.378 0 .624-.148 1.135-.442 1.534-.295.381-.71.572-1.248.572a1.24 1.24 0 0 1-.832-.286c-.208-.19-.312-.442-.312-.754 0-.433.147-.797.442-1.092a1.703 1.703 0 0 1 1.04-.546l.182-.052c-.208-.208-.416-.312-.624-.312-.59 0-1.283.295-2.08.884-.33.26-.832.728-1.508 1.404a29.066 29.066 0 0 1-1.768 1.612c.814.19 1.37.338 1.664.442.832.33 1.386.78 1.664 1.352.156.312.234.65.234 1.014 0 .225-.052.598-.156 1.118-.087.52-.13.85-.13.988 0 .693.234 1.04.702 1.04.312 0 .598-.13.858-.39.433-.433.823-1.335 1.17-2.704.034-.139.208-.208.52-.208.242 0 .381.017.416.052.104.07.112.251.026.546-.468 1.577-1.066 2.643-1.794 3.198-.434.312-.858.468-1.274.468-.798 0-1.439-.234-1.924-.702-.468-.485-.702-1.127-.702-1.924a5.2 5.2 0 0 1 .078-.728c.052-.33.078-.563.078-.702 0-.225-.052-.442-.156-.65-.226-.433-.65-.771-1.274-1.014-.572-.19-.97-.286-1.196-.286H19.9c-.226.85-.442 1.673-.65 2.47a99.07 99.07 0 0 1-.442 1.794 9.4 9.4 0 0 1-.234.91 1.231 1.231 0 0 1-.468.572c-.226.173-.468.26-.728.26-.208 0-.416-.07-.624-.208a.56.56 0 0 1-.286-.494c0-.173.32-1.56.962-4.16.641-2.6 1.274-5.157 1.898-7.67l.962-3.77c.034-.243-.026-.39-.182-.442-.139-.07-.382-.104-.728-.104h-.286c-.364 0-.572-.026-.624-.078-.104-.087-.113-.295-.026-.624.07-.243.13-.381.182-.416.052-.052.104-.078.156-.078Z"
                }));
            case "l":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M21.69 28.286c-.78 0-1.404-.217-1.872-.65-.468-.45-.702-1.066-.702-1.846 0-.208.009-.355.026-.442l3.328-13.364a.24.24 0 0 0 0-.156.426.426 0 0 1-.026-.13c0-.035-.017-.06-.052-.078a.408.408 0 0 0-.104-.078c-.017-.017-.052-.026-.104-.026a.426.426 0 0 0-.13-.026.445.445 0 0 0-.182-.026.761.761 0 0 0-.182-.026h-.39c-.416 0-.659-.06-.728-.182-.017-.052 0-.2.052-.442.087-.33.165-.511.234-.546.052-.017.693-.07 1.924-.156a121.23 121.23 0 0 1 1.95-.156c.208 0 .312.07.312.208 0 .19-.633 2.79-1.898 7.8s-1.915 7.635-1.95 7.878c0 .035-.009.113-.026.234v.234c0 .503.121.823.364.962a.72.72 0 0 0 .312.052.986.986 0 0 0 .312-.078c.485-.277.919-1.161 1.3-2.652.104-.347.19-.529.26-.546.035-.017.121-.026.26-.026h.104c.312.087.477.165.494.234 0 .121-.07.425-.208.91-.139.468-.269.84-.39 1.118-.485 1.127-1.11 1.777-1.872 1.95a2.243 2.243 0 0 1-.416.052Z"
                }));
            case "m":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M13.395 28.286a.968.968 0 0 1-.624-.208.597.597 0 0 1-.26-.52c0-.226.33-1.647.988-4.264.676-2.67 1.014-4.065 1.014-4.186.052-.26.078-.494.078-.702 0-.624-.217-.936-.65-.936-.156 0-.33.06-.52.182-.416.33-.832 1.291-1.248 2.886a.427.427 0 0 1-.026.104.301.301 0 0 1-.052.078l-.026.026c-.018.017-.052.026-.104.026h-.676c-.104-.104-.156-.182-.156-.234 0-.226.121-.659.364-1.3.347-1.005.728-1.707 1.144-2.106.416-.416.875-.624 1.378-.624 1.092 0 1.854.39 2.288 1.17.19.33.286.572.286.728 0 .035.009.052.026.052l.286-.286c1.057-1.11 2.28-1.664 3.666-1.664 1.681 0 2.695.71 3.042 2.132l.026.078.208-.26c.641-.763 1.386-1.317 2.236-1.664a4.865 4.865 0 0 1 1.638-.286c.953 0 1.716.234 2.288.702.572.468.858 1.152.858 2.054 0 .399-.026.728-.078.988-.156.884-.633 2.418-1.43 4.602-.312.832-.468 1.447-.468 1.846.017.242.06.407.13.494.07.087.2.13.39.13.485 0 .936-.26 1.352-.78.433-.538.771-1.248 1.014-2.132.052-.19.104-.303.156-.338.052-.035.19-.052.416-.052.33.052.503.121.52.208 0 .017-.035.147-.104.39-.45 1.612-1.265 2.747-2.444 3.406-.312.156-.685.234-1.118.234-.659 0-1.222-.208-1.69-.624-.416-.485-.624-.997-.624-1.534 0-.33.121-.815.364-1.456.762-2.028 1.248-3.57 1.456-4.628.052-.26.078-.59.078-.988 0-1.023-.425-1.534-1.274-1.534-.312 0-.538.017-.676.052-1.213.26-2.245 1.118-3.094 2.574l-.182.312-.858 3.484c-.572 2.27-.901 3.492-.988 3.666-.226.468-.598.702-1.118.702-.416 0-.694-.174-.832-.52l-.026-.078a.398.398 0 0 1-.052-.156c0-.19.294-1.43.884-3.718.138-.555.277-1.127.416-1.716.156-.607.277-1.092.364-1.456.104-.381.156-.59.156-.624.052-.26.078-.59.078-.988 0-1.023-.425-1.534-1.274-1.534-.312 0-.538.017-.676.052-1.213.26-2.245 1.118-3.094 2.574l-.182.312-.858 3.484c-.572 2.27-.901 3.492-.988 3.666-.226.468-.598.702-1.118.702Z"
                }));
            case "n":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M17.013 28.286a.968.968 0 0 1-.624-.208.596.596 0 0 1-.26-.52c0-.226.33-1.638.988-4.238.659-2.6 1.005-4.013 1.04-4.238a4.07 4.07 0 0 0 .026-.598c0-.676-.208-1.014-.624-1.014-.399 0-.763.32-1.092.962-.19.364-.373.91-.546 1.638a8.959 8.959 0 0 0-.156.546c-.035.104-.2.156-.494.156h-.364c-.104-.104-.156-.182-.156-.234 0-.07.043-.252.13-.546.52-2.046 1.317-3.19 2.392-3.432.139-.035.286-.052.442-.052 1.023 0 1.76.39 2.21 1.17.19.33.286.572.286.728 0 .035.009.052.026.052l.286-.286c1.075-1.11 2.28-1.664 3.614-1.664.953 0 1.716.234 2.288.702.572.468.858 1.152.858 2.054 0 .399-.026.728-.078.988-.173.988-.65 2.505-1.43 4.55-.312.832-.468 1.447-.468 1.846 0 .45.147.676.442.676.59 0 1.092-.312 1.508-.936a7.04 7.04 0 0 0 .988-2.158c.035-.139.208-.208.52-.208.33.052.503.121.52.208 0 .017-.035.147-.104.39-.45 1.612-1.265 2.747-2.444 3.406-.312.156-.685.234-1.118.234-.659 0-1.222-.208-1.69-.624-.416-.485-.624-.997-.624-1.534 0-.33.121-.815.364-1.456.763-2.028 1.248-3.57 1.456-4.628.052-.26.078-.59.078-.988 0-1.023-.425-1.534-1.274-1.534-.312 0-.537.017-.676.052-1.213.26-2.245 1.118-3.094 2.574l-.182.312-.858 3.484c-.572 2.27-.901 3.492-.988 3.666-.225.468-.598.702-1.118.702Z"
                }));
            case "o":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M23.152 16.534h.364c.555 0 .902.009 1.04.026 1.092.19 1.95.676 2.575 1.456.623.78.936 1.786.936 3.016 0 1.023-.27 2.046-.806 3.068a7.88 7.88 0 0 1-2.756 3.042c-1.18.763-2.375 1.144-3.588 1.144-1.214 0-2.193-.347-2.939-1.04-.745-.693-1.204-1.603-1.378-2.73a4.113 4.113 0 0 1-.026-.572c0-.45.026-.814.078-1.092.156-.884.494-1.742 1.014-2.574a8.9 8.9 0 0 1 1.82-2.158c1.18-.919 2.401-1.447 3.666-1.586Zm-4.316 8.346c0 .745.2 1.344.599 1.794.416.434.953.65 1.612.65.311 0 .623-.052.936-.156 1.265-.416 2.21-1.37 2.834-2.86.38-.936.693-2.106.936-3.51.017-.104.026-.372.026-.806 0-1.681-.711-2.522-2.133-2.522-1.091 0-2.053.503-2.886 1.508-.572.694-1.04 1.699-1.404 3.016-.346 1.265-.52 2.227-.52 2.886Z"
                }));
            case "p":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M16.216 20.772c-.104-.104-.156-.182-.156-.234 0-.139.113-.546.338-1.222.33-1.005.72-1.733 1.17-2.184.416-.416.875-.624 1.378-.624 1.3 0 2.132.555 2.496 1.664l.26-.234c.78-.728 1.586-1.188 2.418-1.378.208-.035.425-.052.65-.052.225 0 .442.017.65.052.901.208 1.62.676 2.158 1.404.537.71.806 1.62.806 2.73 0 .815-.165 1.698-.494 2.652a8.628 8.628 0 0 1-1.924 3.016c-.85.85-1.777 1.43-2.782 1.742a4.732 4.732 0 0 1-1.248.156 3.04 3.04 0 0 1-1.014-.156 2.818 2.818 0 0 1-1.144-.91l-.13-.13c-.017.017-.208.771-.572 2.262-.364 1.49-.546 2.244-.546 2.262v.078c.017.035.035.06.052.078a.2.2 0 0 0 .078.026c.035.017.07.026.104.026a.429.429 0 0 0 .13.026h.182c.07.017.13.026.182.026h1.092c.087.121.13.2.13.234.017.035 0 .19-.052.468-.052.208-.104.338-.156.39-.052.07-.165.104-.338.104-.277 0-.737-.009-1.378-.026a55.471 55.471 0 0 0-1.404-.026c-1.213 0-1.985.017-2.314.052h-.208c-.121-.121-.182-.217-.182-.286 0-.07.035-.217.104-.442.052-.226.095-.356.13-.39l.104-.078h.52c.59-.017.927-.121 1.014-.312.052-.104.58-2.176 1.586-6.214 1.023-4.039 1.551-6.18 1.586-6.422.017-.087.026-.208.026-.364 0-.71-.217-1.066-.65-1.066a.761.761 0 0 0-.52.182c-.416.33-.832 1.291-1.248 2.886a.427.427 0 0 1-.026.104.301.301 0 0 1-.052.078l-.026.026c-.017.017-.052.026-.104.026h-.676Zm9.932-1.222c0-1.387-.529-2.08-1.586-2.08a1.1 1.1 0 0 0-.182.026h-.13c-.901.19-1.75.815-2.548 1.872a1.523 1.523 0 0 0-.13.156l-.078.104c0 .017-.035.147-.104.39a38.14 38.14 0 0 1-.286 1.118c-.121.52-.234.97-.338 1.352-.45 1.837-.676 2.79-.676 2.86.121.416.234.72.338.91.381.71.91 1.066 1.586 1.066.555 0 1.066-.19 1.534-.572.468-.399.858-.91 1.17-1.534.312-.59.633-1.56.962-2.912.312-1.248.468-2.167.468-2.756Z"
                }));
            case "q":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M23.01 32.992h-1.43c-.59.017-1.022.026-1.3.026-.26 0-.39-.07-.39-.208 0-.035.009-.096.026-.182a.601.601 0 0 0 .052-.208c.07-.278.13-.442.182-.494.07-.052.243-.078.52-.078.832 0 1.335-.06 1.508-.182.104-.07.347-.858.728-2.366.347-1.404.529-2.115.546-2.132 0-.017-.06.009-.182.078a5.075 5.075 0 0 1-1.95.988c-.104.017-.32.026-.65.026-1.144 0-2.089-.477-2.834-1.43-.52-.763-.78-1.733-.78-2.912 0-.277.009-.468.026-.572a7.916 7.916 0 0 1 1.066-3.172c.607-1.023 1.326-1.846 2.158-2.47 1.005-.78 2.063-1.17 3.172-1.17.988 0 1.785.45 2.392 1.352.416-.416.694-.668.832-.754.59-.416.988-.624 1.196-.624.174 0 .26.07.26.208 0 .156-.598 2.626-1.794 7.41-1.23 4.922-1.846 7.418-1.846 7.488 0 .139.295.216.884.234h.936c.087.121.13.19.13.208.017.035 0 .2-.052.494-.07.225-.156.39-.26.494h-.338c-.537-.035-1.473-.052-2.808-.052Zm2.34-13.468c-.381-1.37-1.031-2.054-1.95-2.054-.693 0-1.308.295-1.846.884a6.274 6.274 0 0 0-1.196 2.028 20.755 20.755 0 0 0-1.066 4.264c0 .052-.009.147-.026.286v.312c0 .624.13 1.127.39 1.508.277.381.676.572 1.196.572.919 0 1.88-.624 2.886-1.872l.208-.286.702-2.808c.312-1.265.546-2.21.702-2.834Z"
                }));
            case "r":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M18.943 28.286a.968.968 0 0 1-.624-.208.596.596 0 0 1-.26-.52c0-.226.346-1.716 1.04-4.472.693-2.756 1.04-4.29 1.04-4.602 0-.676-.226-1.014-.676-1.014a.72.72 0 0 0-.494.182c-.416.33-.832 1.291-1.248 2.886a.427.427 0 0 1-.026.104.304.304 0 0 1-.052.078l-.026.026c-.018.017-.052.026-.104.026h-.676c-.104-.104-.156-.182-.156-.234 0-.139.112-.546.338-1.222.329-1.005.719-1.733 1.17-2.184.416-.416.875-.624 1.378-.624.676 0 1.23.165 1.664.494.381.295.632.598.754.91a.64.64 0 0 0 .078.182c.017 0 .086-.07.208-.208.641-.71 1.378-1.153 2.21-1.326.104-.017.329-.026.676-.026.641 0 1.161.182 1.56.546.398.364.598.858.598 1.482 0 .554-.156 1.022-.468 1.404-.295.364-.694.546-1.196.546-.33 0-.607-.096-.832-.286-.208-.19-.312-.442-.312-.754 0-.85.485-1.404 1.456-1.664-.382-.226-.694-.338-.936-.338-.364 0-.711.087-1.04.26-.572.277-1.118.832-1.638 1.664a3.45 3.45 0 0 0-.39.858c-.087.295-.382 1.447-.884 3.458-.59 2.427-.928 3.718-1.014 3.874-.226.468-.598.702-1.118.702Z"
                }));
            case "s":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M18.974 23.84c.33 0 .59.095.78.286.208.19.312.442.312.754 0 .294-.086.58-.26.858a1.505 1.505 0 0 1-.65.624 3.46 3.46 0 0 1-.364.13l-.104.052c-.017 0-.017.008 0 .026.052.087.208.2.468.338.503.26 1.162.39 1.976.39 1.317 0 2.245-.425 2.782-1.274.26-.434.39-.832.39-1.196 0-.555-.286-.97-.858-1.248-.156-.104-.59-.225-1.3-.364a28.175 28.175 0 0 0-.416-.078 1.515 1.515 0 0 0-.364-.078 7.27 7.27 0 0 0-.26-.078 3.629 3.629 0 0 0-.26-.078 1.156 1.156 0 0 0-.208-.104 5.875 5.875 0 0 0-.26-.182c-.71-.503-1.066-1.213-1.066-2.132 0-.97.355-1.846 1.066-2.626.797-.901 1.907-1.352 3.328-1.352 1.681 0 2.695.59 3.042 1.768.035.087.052.251.052.494 0 .485-.13.884-.39 1.196-.26.294-.607.442-1.04.442-.277 0-.503-.078-.676-.234-.173-.156-.26-.373-.26-.65 0-.572.26-.988.78-1.248.139-.07.217-.104.234-.104.052 0 .043-.044-.026-.13-.416-.382-1.014-.572-1.794-.572-.676 0-1.248.19-1.716.572a1.823 1.823 0 0 0-.702 1.482c0 .312.13.59.39.832.173.156.615.312 1.326.468.798.173 1.318.32 1.56.442.815.364 1.36.97 1.638 1.82.035.104.06.33.078.676 0 .59-.147 1.204-.442 1.846-.85 1.768-2.444 2.652-4.784 2.652-1.854 0-3.024-.538-3.51-1.612a2.13 2.13 0 0 1-.182-.91c0-.537.156-.988.468-1.352.33-.364.737-.546 1.222-.546Z"
                }));
            case "t":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M17.979 17.99c-.122-.121-.182-.208-.182-.26 0-.07.026-.208.078-.416.069-.225.112-.346.13-.364.034-.087.112-.13.234-.13.138-.017.58-.026 1.326-.026h1.378l.494-2.08c.364-1.404.572-2.158.624-2.262.208-.485.606-.728 1.196-.728a.945.945 0 0 1 .572.234c.173.139.26.32.26.546 0 .208-.165.945-.494 2.21-.07.295-.156.624-.26.988-.087.347-.156.607-.208.78l-.052.26c0 .035.433.052 1.3.052H25.7c.121.122.182.217.182.286 0 .382-.113.685-.338.91h-2.782l-.936 3.77c-.642 2.583-.971 3.943-.988 4.082a2.157 2.157 0 0 0-.026.39c0 .728.234 1.092.702 1.092.121 0 .225-.009.312-.026.866-.156 1.655-.85 2.366-2.08a5.56 5.56 0 0 0 .468-.962c.034-.104.078-.165.13-.182.052-.035.182-.052.39-.052.346 0 .52.07.52.208 0 .035-.035.139-.104.312-.191.555-.503 1.118-.936 1.69-.416.555-.841.997-1.274 1.326-.642.486-1.326.728-2.054.728-.624 0-1.162-.156-1.612-.468a2.445 2.445 0 0 1-.884-1.274c-.035-.139-.052-.372-.052-.702v-.468l.91-3.64c.606-2.444.918-3.675.936-3.692 0-.035-.442-.052-1.326-.052h-1.326Z"
                }));
            case "u":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M26.598 16.794a.87.87 0 0 1 .598.208c.174.121.26.303.26.546l-1.976 8.268a2.36 2.36 0 0 0-.026.416c0 .728.243 1.092.728 1.092.4-.052.737-.382 1.014-.988.191-.399.416-1.1.676-2.106.035-.139.208-.208.52-.208.156 0 .26.009.312.026.052 0 .096.017.13.052.035.034.052.086.052.156 0 .052-.026.182-.078.39-.52 2.045-1.265 3.232-2.236 3.562a2.77 2.77 0 0 1-.624.052c-1.144 0-1.932-.486-2.366-1.456a4.683 4.683 0 0 0-.312.286c-.866.797-1.75 1.196-2.652 1.196-.762 0-1.438-.156-2.028-.468-.71-.416-1.152-1.066-1.326-1.95a7.492 7.492 0 0 1-.026-.806c0-.416.018-.737.052-.962.122-.745.52-2.02 1.196-3.822.382-1.023.572-1.733.572-2.132 0-.243-.026-.408-.078-.494-.034-.104-.13-.156-.286-.156h-.13c-.398 0-.78.182-1.144.546-.554.554-.979 1.386-1.274 2.496a.423.423 0 0 1-.026.104.299.299 0 0 1-.052.078l-.026.026c-.017.017-.052.026-.104.026h-.676c-.104-.104-.156-.182-.156-.234 0-.052.026-.174.078-.364.347-1.196.884-2.14 1.612-2.834.607-.555 1.231-.832 1.872-.832.728 0 1.31.208 1.742.624.434.398.65.918.65 1.56 0 .346-.156.927-.468 1.742-.71 1.906-1.135 3.32-1.274 4.238a5.18 5.18 0 0 0-.026.598c0 .659.104 1.161.312 1.508.208.347.59.52 1.144.52.728 0 1.387-.312 1.976-.936.347-.347.564-.624.65-.832.035-.07.364-1.387.988-3.952.52-2.08.832-3.293.936-3.64.104-.364.226-.615.364-.754.295-.26.607-.39.936-.39Z"
                }));
            case "v":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M21.956 28.286c-1.109 0-1.993-.277-2.652-.832-.641-.572-.962-1.404-.962-2.496 0-.312.018-.607.052-.884.156-.832.564-2.106 1.222-3.822l.416-1.248a2.8 2.8 0 0 0 .156-.884c0-.433-.164-.65-.494-.65-.121 0-.26.026-.416.078-.884.312-1.551 1.309-2.002 2.99a.422.422 0 0 1-.026.104.299.299 0 0 1-.052.078l-.026.026c-.017.017-.052.026-.104.026h-.676c-.104-.104-.156-.182-.156-.234 0-.052.026-.182.078-.39.416-1.37 1.058-2.392 1.924-3.068a2.554 2.554 0 0 1 1.612-.546c.676 0 1.231.19 1.664.572.434.381.65.884.65 1.508 0 .295-.026.52-.078.676 0 .121-.13.503-.39 1.144-.797 2.167-1.222 3.71-1.274 4.628 0 .468.044.85.13 1.144.226.745.772 1.118 1.638 1.118.468 0 .884-.139 1.248-.416 1.075-.71 1.968-2.349 2.678-4.914.139-.485.208-.884.208-1.196 0-.763-.338-1.447-1.014-2.054-.225-.208-.338-.442-.338-.702 0-.399.156-.754.468-1.066.33-.33.694-.494 1.092-.494.416 0 .737.2.962.598.226.381.338.84.338 1.378 0 .607-.173 1.603-.52 2.99-.329 1.335-.745 2.496-1.248 3.484-1.092 2.236-2.461 3.354-4.108 3.354Z"
                }));
            case "w":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M24.368 16.794c.243 0 .45.07.624.208.174.121.26.303.26.546 0 .225-.26 1.335-.78 3.328-.502 1.993-.771 3.137-.806 3.432-.034.19-.052.494-.052.91 0 .503.044.884.13 1.144.104.243.286.46.546.65a1.88 1.88 0 0 0 1.066.312c1.23 0 2.21-1.057 2.938-3.172.399-1.04.668-1.993.806-2.86.018-.087.026-.217.026-.39 0-.867-.312-1.56-.936-2.08-.277-.225-.416-.503-.416-.832 0-.399.165-.745.494-1.04.33-.312.694-.468 1.092-.468a.2.2 0 0 1 .078.026h.104c.728.19 1.092.832 1.092 1.924 0 .555-.164 1.551-.494 2.99-.346 1.317-.676 2.383-.988 3.198-.85 2.15-1.993 3.363-3.432 3.64a3.324 3.324 0 0 1-.494.026c-.78 0-1.464-.13-2.054-.39-.59-.277-1.005-.659-1.248-1.144-.381.503-.771.884-1.17 1.144-.381.26-.884.39-1.508.39-1.161 0-2.097-.277-2.808-.832-.693-.555-1.04-1.378-1.04-2.47 0-.468.018-.78.052-.936.104-.693.494-1.95 1.17-3.77.382-1.023.572-1.733.572-2.132 0-.243-.026-.407-.078-.494-.034-.104-.13-.156-.286-.156h-.13c-.398 0-.78.182-1.144.546-.554.555-.98 1.387-1.274 2.496a.422.422 0 0 1-.026.104.299.299 0 0 1-.052.078l-.026.026c-.017.017-.052.026-.104.026h-.676c-.104-.104-.156-.182-.156-.234 0-.052.026-.173.078-.364.174-.52.338-.936.494-1.248.642-1.3 1.465-2.08 2.47-2.34.104-.035.304-.052.598-.052.71 0 1.274.208 1.69.624.416.399.624.91.624 1.534 0 .347-.156.927-.468 1.742-.762 2.045-1.178 3.493-1.248 4.342v.338c0 .693.165 1.24.494 1.638.33.381.806.572 1.43.572.746 0 1.404-.529 1.976-1.586l.13-.234v-.598c.035-.503.06-.797.078-.884a170.904 170.904 0 0 1 1.144-4.706c.278-1.092.45-1.699.52-1.82.226-.468.598-.702 1.118-.702Z"
                }));
            case "x":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M16.069 20.772c-.104-.104-.156-.2-.156-.286.069-.468.337-1.066.805-1.794.815-1.23 1.838-1.942 3.069-2.132a4.23 4.23 0 0 1 .546-.052c.606 0 1.16.156 1.664.468.52.312.892.702 1.117 1.17l.416-.546c.642-.728 1.378-1.092 2.21-1.092.711 0 1.283.208 1.716.624a1.9 1.9 0 0 1 .677 1.482c0 .537-.156.988-.468 1.352-.295.364-.694.546-1.197.546-.329 0-.598-.096-.805-.286-.209-.19-.313-.442-.313-.754 0-.798.434-1.344 1.3-1.638 0-.017-.095-.078-.285-.182-.174-.104-.425-.156-.755-.156-.225 0-.39.017-.494.052-.658.277-1.143.85-1.456 1.716-.052.139-.303 1.11-.753 2.912-.451 1.785-.694 2.79-.729 3.016-.052.26-.078.52-.078.78 0 .416.122.745.364.988.243.242.564.364.963.364.727 0 1.386-.304 1.976-.91.589-.624.988-1.309 1.196-2.054.052-.174.104-.269.155-.286.052-.035.191-.052.416-.052.33 0 .494.07.494.208 0 .017-.017.113-.052.286-.294 1.075-.9 2.01-1.82 2.808-.814.641-1.672.962-2.574.962-1.213 0-2.131-.546-2.756-1.638-.502.78-1.143 1.3-1.924 1.56a3.32 3.32 0 0 1-.675.052c-1.006 0-1.716-.356-2.133-1.066a2.013 2.013 0 0 1-.26-1.04c0-.52.156-.962.468-1.326a1.505 1.505 0 0 1 1.196-.546c.746 0 1.119.364 1.119 1.092 0 .641-.304 1.11-.91 1.404a1.256 1.256 0 0 0-.13.078 1.005 1.005 0 0 0-.13.052.2.2 0 0 1-.078.026l-.078.026c0 .052.13.13.39.234.207.087.433.13.675.13.624 0 1.162-.39 1.613-1.17.19-.312.528-1.439 1.014-3.38.104-.399.216-.84.337-1.326.122-.486.209-.858.26-1.118.07-.26.113-.416.13-.468.087-.468.13-.806.13-1.014 0-.416-.112-.745-.337-.988-.226-.243-.538-.364-.936-.364-.78 0-1.456.303-2.029.91a4.835 4.835 0 0 0-1.195 2.054c-.035.156-.078.251-.13.286-.035.017-.174.026-.416.026h-.364Z"
                }));
            case "y":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M27.639 16.794c.242 0 .45.07.624.208.173.121.26.295.26.52 0 .225-.425 2.045-1.274 5.46-.85 3.415-1.335 5.287-1.456 5.616a6.657 6.657 0 0 1-1.352 2.34 6.756 6.756 0 0 1-2.132 1.716c-.936.45-1.812.676-2.626.676-1.317 0-2.21-.416-2.678-1.248-.174-.243-.26-.59-.26-1.04 0-.59.165-1.049.494-1.378.364-.33.745-.494 1.144-.494.762 0 1.144.364 1.144 1.092 0 .641-.303 1.11-.91 1.404a1.01 1.01 0 0 1-.13.052c-.052.035-.095.06-.13.078a.2.2 0 0 1-.078.026l-.078.026c.052.104.234.217.546.338.277.104.555.156.832.156h.208c.294 0 .52-.017.676-.052.659-.19 1.282-.633 1.872-1.326.59-.694 1.04-1.525 1.352-2.496.19-.572.286-.91.286-1.014 0-.018-.017-.009-.052.026a1.168 1.168 0 0 0-.156.104 3.534 3.534 0 0 1-2.132.702c-.884 0-1.612-.208-2.184-.624-.572-.416-.945-1.014-1.118-1.794a7.464 7.464 0 0 1-.026-.806c0-.416.017-.737.052-.962.121-.745.52-2.02 1.196-3.822.381-1.023.572-1.733.572-2.132 0-.243-.026-.408-.078-.494-.035-.104-.13-.156-.286-.156h-.13c-.399 0-.78.182-1.144.546-.555.554-.98 1.386-1.274 2.496a.427.427 0 0 1-.026.104.304.304 0 0 1-.052.078l-.026.026c-.018.017-.052.026-.104.026h-.676c-.104-.104-.156-.182-.156-.234 0-.052.026-.174.078-.364.364-1.213.91-2.158 1.638-2.834.59-.555 1.204-.832 1.846-.832.728 0 1.309.2 1.742.598.433.398.65.953.65 1.664-.035.33-.06.511-.078.546 0 .104-.13.477-.39 1.118-.71 1.924-1.136 3.336-1.274 4.238a5.157 5.157 0 0 0-.026.598c0 .659.104 1.161.312 1.508.208.347.59.52 1.144.52.398 0 .771-.104 1.118-.312.364-.208.633-.408.806-.598.19-.208.424-.486.702-.832 0-.018.043-.19.13-.52.086-.347.208-.858.364-1.534l.494-1.924c.659-2.6 1.023-3.96 1.092-4.082.225-.468.598-.702 1.118-.702Z"
                }));
            case "z":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M17.023 28.286c-.104-.104-.156-.182-.156-.234 0-.07.052-.182.156-.338.277-.52.728-1.153 1.352-1.898.728-.832 1.967-2.046 3.718-3.64 1.335-1.213 2.236-2.063 2.704-2.548.208-.277.269-.416.182-.416-.208 0-.667-.096-1.378-.286-.763-.19-1.309-.286-1.638-.286-.503 0-.927.087-1.274.26-.347.156-.563.364-.65.624-.243.139-.407.216-.494.234-.364 0-.546-.07-.546-.208 0-.087.026-.208.078-.364a4.135 4.135 0 0 1 1.118-1.742c.52-.485 1.092-.78 1.716-.884.208-.035.355-.052.442-.052.26 0 .503.052.728.156.225.104.39.208.494.312.121.087.303.251.546.494.537.52.997.78 1.378.78.156 0 .277-.017.364-.052.295-.139.676-.598 1.144-1.378.121-.19.208-.286.26-.286.052-.017.173-.026.364-.026h.338c.104.104.156.173.156.208 0 .07-.078.242-.234.52a14.514 14.514 0 0 1-1.248 1.69c-.78.919-2.01 2.132-3.692 3.64-1.387 1.23-2.331 2.123-2.834 2.678l-.312.312.39.026c.381 0 .875.078 1.482.234.884.225 1.49.338 1.82.338.693 0 1.309-.165 1.846-.494.555-.347.91-.78 1.066-1.3.07-.156.13-.252.182-.286.052-.035.182-.052.39-.052.347 0 .52.087.52.26 0 .017-.017.095-.052.234a5.683 5.683 0 0 1-1.43 2.418 4.579 4.579 0 0 1-2.392 1.326 2.865 2.865 0 0 1-.442.026c-.295 0-.563-.06-.806-.182-.243-.121-.58-.381-1.014-.78-.364-.364-.633-.59-.806-.676-.139-.087-.33-.13-.572-.13-.763 0-1.447.52-2.054 1.56-.087.139-.277.208-.572.208h-.338Z"
                }));
            case "A":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M13.342 30c-.121-.122-.182-.217-.182-.286 0-.07.026-.217.078-.442.07-.225.121-.355.156-.39l.104-.078h.364c1.213-.052 2.097-.485 2.652-1.3.104-.104 1.673-2.748 4.706-7.93 3.05-5.2 4.593-7.826 4.628-7.878.087-.156.165-.243.234-.26.087-.035.286-.052.598-.052h.442c.104.156.156.242.156.26l.728 8.398c.485 5.598.745 8.424.78 8.476.087.19.65.286 1.69.286.19 0 .32.009.39.026.087 0 .147.017.182.052.052.034.078.095.078.182 0 .035-.026.156-.078.364-.052.26-.104.424-.156.494-.035.052-.147.078-.338.078-.312 0-.832-.009-1.56-.026a73.87 73.87 0 0 0-1.716-.026c-1.63 0-2.695.017-3.198.052h-.312a1.188 1.188 0 0 1-.182-.208c0-.052.026-.217.078-.494.07-.225.121-.364.156-.416l.104-.078h.52c.936-.035 1.49-.182 1.664-.442l-.312-3.9h-6.188l-.884 1.508c-.624 1.04-.945 1.603-.962 1.69a.877.877 0 0 0-.104.39c0 .433.399.684 1.196.754.33 0 .494.087.494.26 0 .087-.026.208-.078.364-.052.242-.104.398-.156.468-.052.07-.165.104-.338.104-.295 0-.763-.009-1.404-.026a58.722 58.722 0 0 0-1.456-.026c-1.23 0-2.02.017-2.366.052h-.208Zm12.324-6.76c0-.19-.113-1.543-.338-4.056-.208-2.514-.32-3.779-.338-3.796l-.702 1.118c-.277.468-.823 1.395-1.638 2.782l-2.34 3.952 2.678.026c1.785 0 2.678-.009 2.678-.026Z"
                }));
            case "B":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M19.624 13.672c0-.017-.009-.035-.026-.052-.018-.034-.044-.052-.078-.052l-.104-.052a.363.363 0 0 0-.156-.026.766.766 0 0 0-.182-.026h-.442a.79.79 0 0 0-.234-.026h-.26c-.416 0-.668-.008-.754-.026a.237.237 0 0 1-.182-.156c-.035-.052-.026-.208.026-.468.086-.312.164-.485.234-.52.017-.017 1.144-.026 3.38-.026 4.489 0 6.855.017 7.098.052 1.196.173 2.132.59 2.808 1.248.693.659 1.04 1.43 1.04 2.314a3.5 3.5 0 0 1-.494 1.768c-.382.694-.997 1.326-1.846 1.898a7.429 7.429 0 0 1-2.626 1.118l-.26.078c1.144.156 2.062.555 2.756 1.196.71.641 1.066 1.439 1.066 2.392 0 1.248-.572 2.418-1.716 3.51-1.335 1.283-2.921 2.002-4.758 2.158-.122.017-1.95.026-5.486.026-3.467 0-5.226-.017-5.278-.052a.247.247 0 0 1-.104-.208c0-.121.017-.242.052-.364.086-.33.173-.511.26-.546.069-.017.199-.026.39-.026h.156c.468 0 .988-.026 1.56-.078.242-.052.407-.156.494-.312.052-.07.676-2.479 1.872-7.228 1.196-4.75 1.794-7.254 1.794-7.514Zm9.386 2.184c0-.59-.156-1.092-.468-1.508a2.108 2.108 0 0 0-1.196-.832c-.122-.034-.919-.06-2.392-.078-.347 0-.711.009-1.092.026h-1.248c-.243.018-.399.078-.468.182-.052.07-.347 1.161-.884 3.276-.52 2.115-.789 3.233-.806 3.354h2.106c1.404 0 2.21-.017 2.418-.052a4.935 4.935 0 0 0 2.002-.832c.641-.45 1.135-.988 1.482-1.612.364-.659.546-1.3.546-1.924Zm-1.404 8.19c0-.762-.208-1.395-.624-1.898a2.298 2.298 0 0 0-1.534-.884c-.104-.017-.824-.026-2.158-.026-2.046 0-3.077.009-3.094.026 0 .035-.156.668-.468 1.898-.295 1.23-.59 2.453-.884 3.666l-.468 1.82c0 .07.104.113.312.13.208 0 .91.009 2.106.026 1.542 0 2.374-.008 2.496-.026 1.126-.121 2.123-.624 2.99-1.508.884-.884 1.326-1.959 1.326-3.224Z"
                }));
            case "C":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M29.633 17.494c0-1.439-.32-2.565-.962-3.38-.624-.832-1.525-1.248-2.704-1.248-.919 0-1.915.217-2.99.65-1.872.797-3.337 2.14-4.394 4.03-.953 1.681-1.551 3.657-1.794 5.928-.017.139-.026.39-.026.754 0 1.976.659 3.397 1.976 4.264.832.59 1.855.884 3.068.884.659 0 1.378-.147 2.158-.442 1.023-.416 1.95-1.1 2.782-2.054.832-.953 1.404-1.993 1.716-3.12.07-.225.121-.355.156-.39.052-.035.19-.052.416-.052.364 0 .546.07.546.208 0 .035-.017.121-.052.26-.416 1.543-1.248 2.93-2.496 4.16s-2.652 2.028-4.212 2.392a7.283 7.283 0 0 1-1.82.234c-1.785 0-3.285-.511-4.498-1.534-1.213-1.023-1.985-2.323-2.314-3.9a7.212 7.212 0 0 1-.182-1.69c0-2.08.65-4.1 1.95-6.058a13.533 13.533 0 0 1 2.886-3.172 11.881 11.881 0 0 1 3.796-2.054c1.023-.312 1.959-.468 2.808-.468.624 0 .988.009 1.092.026 1.04.173 1.915.607 2.626 1.3a8.298 8.298 0 0 1 .468.624c.087.104.139.156.156.156.052 0 .286-.225.702-.676.121-.104.251-.225.39-.364l.416-.416c.139-.156.225-.251.26-.286l.39-.39h.156c.243 0 .364.06.364.182 0 .07-.277 1.257-.832 3.562-.624 2.41-.936 3.623-.936 3.64a.38.38 0 0 1-.13.182c-.052.017-.208.026-.468.026h-.416l-.156-.156c0-.035.017-.19.052-.468.035-.347.052-.728.052-1.144Z"
                }));
            case "D":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M18.696 13.672c0-.017-.008-.035-.026-.052-.017-.034-.043-.052-.078-.052l-.104-.052a.363.363 0 0 0-.156-.026.765.765 0 0 0-.182-.026h-.442a.79.79 0 0 0-.234-.026h-.26c-.589 0-.91-.06-.962-.182-.017-.052 0-.2.052-.442.087-.33.165-.511.234-.546.035-.017 1.76-.026 5.174-.026 2.895.017 4.516.035 4.862.052.347 0 .694.043 1.04.13 1.37.312 2.462 1.032 3.276 2.158.815 1.127 1.222 2.53 1.222 4.212 0 .867-.104 1.716-.312 2.548-.485 1.959-1.499 3.736-3.042 5.33-1.75 1.803-3.744 2.886-5.98 3.25l-.364.052L17.37 30h-2.886c-1.542 0-2.322-.043-2.34-.13v-.026a.455.455 0 0 1-.052-.13c0-.034.026-.156.078-.364.07-.277.139-.433.208-.468.07-.052.269-.078.598-.078.468 0 .988-.026 1.56-.078.243-.052.408-.156.494-.312.052-.07.676-2.479 1.872-7.228 1.196-4.75 1.794-7.254 1.794-7.514Zm10.816 4.134c0-1.283-.338-2.297-1.014-3.042-.676-.745-1.62-1.178-2.834-1.3H24.52a14.24 14.24 0 0 0-1.69 0h-1.092c-.225.018-.381.095-.468.234-.034.07-.667 2.566-1.898 7.488-1.23 4.923-1.846 7.41-1.846 7.462 0 .07.096.113.286.13h2.002c1.404 0 2.193-.008 2.366-.026 1.647-.26 3.034-.953 4.16-2.08a7.868 7.868 0 0 0 1.534-2.184c.399-.832.772-1.933 1.118-3.302.347-1.37.52-2.496.52-3.38Z"
                }));
            case "E":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M30.55 18.3c0-.174.026-.52.078-1.04.052-.52.078-.85.078-.988 0-.763-.13-1.343-.39-1.742-.242-.399-.684-.676-1.326-.832-.572-.122-1.898-.182-3.978-.182-1.473.017-2.244.034-2.314.052a.478.478 0 0 0-.26.26 377.68 377.68 0 0 0-.832 3.198c-.52 2.08-.78 3.137-.78 3.172.399.017.815.026 1.248.026h.234c1.127 0 1.933-.07 2.418-.208.503-.156.893-.546 1.17-1.17.104-.19.234-.564.39-1.118a.577.577 0 0 0 .026-.182 1.3 1.3 0 0 0 .026-.156l.052-.104c.018-.035.044-.052.078-.052a.492.492 0 0 1 .156-.026 1.095 1.095 0 0 1 .468 0 .29.29 0 0 1 .13.026c.035.017.052.034.052.052.018 0 .035.026.052.078l.078.078-.858 3.432c-.572 2.305-.884 3.475-.936 3.51-.052.052-.19.078-.416.078-.225 0-.364-.026-.416-.078-.104-.052-.112-.26-.026-.624.122-.45.182-.84.182-1.17 0-.503-.173-.823-.52-.962-.312-.139-1.161-.208-2.548-.208h-1.352c-.104.364-.433 1.655-.988 3.874-.537 2.201-.806 3.32-.806 3.354 0 .07.096.113.286.13.208 0 .902.009 2.08.026 1.63 0 2.704-.017 3.224-.052a6.765 6.765 0 0 0 1.56-.338 4.382 4.382 0 0 0 2.106-1.456c.572-.693 1.188-1.829 1.846-3.406.174-.381.286-.59.338-.624.052-.035.174-.052.364-.052.208 0 .338.017.39.052.104.07.156.165.156.286-1.82 4.402-2.773 6.647-2.86 6.734-.052.035-2.53.052-7.436.052h-6.552c-.624-.017-.944-.06-.962-.13v-.026a.454.454 0 0 1-.052-.13c0-.035.026-.156.078-.364.07-.277.139-.434.208-.468.07-.052.269-.078.598-.078.468 0 .988-.026 1.56-.078.243-.052.408-.156.494-.312.035-.087.65-2.522 1.846-7.306 1.214-4.784 1.82-7.21 1.82-7.28 0-.121-.034-.182-.104-.182-.138-.052-.598-.096-1.378-.13h-.806a1.188 1.188 0 0 1-.182-.208c0-.052.026-.2.078-.442.07-.312.156-.494.26-.546h14.404c.122.121.182.216.182.286 0 .087-.112 1.066-.338 2.938-.225 1.854-.346 2.8-.364 2.834-.034.121-.208.182-.52.182h-.312c-.121-.104-.182-.19-.182-.26Z"
                }));
            case "F":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M18.456 29.948c-.485 0-1.118.008-1.898.026h-1.664c-.208 0-.338-.044-.39-.13a.454.454 0 0 1-.052-.13c0-.035.026-.156.078-.364.07-.277.14-.434.208-.468.07-.052.27-.078.598-.078.468 0 .988-.026 1.56-.078.243-.052.408-.156.494-.312.035-.087.65-2.522 1.846-7.306 1.214-4.784 1.82-7.21 1.82-7.28 0-.121-.034-.182-.104-.182-.138-.052-.598-.096-1.378-.13h-.806a1.188 1.188 0 0 1-.182-.208c0-.052.026-.2.078-.442.07-.312.156-.494.26-.546h14.014c.122.121.182.216.182.286 0 .087-.112 1.066-.338 2.938-.225 1.854-.346 2.8-.364 2.834-.034.121-.208.182-.52.182h-.312c-.12-.104-.182-.19-.182-.26v-.104a.677.677 0 0 0 .026-.208c.018-.087.026-.174.026-.26.07-.503.104-1.006.104-1.508 0-1.248-.398-2.037-1.196-2.366a3.938 3.938 0 0 0-1.274-.286c-.485-.035-1.473-.052-2.964-.052-1.386.017-2.114.034-2.184.052-.138.052-.225.13-.26.234-.017.017-.312 1.152-.884 3.406l-.832 3.354h1.43c1.04-.018 1.612-.035 1.716-.052.572-.104.988-.286 1.248-.546.364-.312.668-.936.91-1.872a2.488 2.488 0 0 0 .078-.312c0-.035.01-.07.026-.104.018-.052.035-.078.052-.078l.104-.052a.492.492 0 0 1 .156-.026h.52c.122.087.182.173.182.26 0 .052-.277 1.187-.832 3.406-.537 2.218-.823 3.363-.858 3.432-.034.121-.208.182-.52.182h-.312c-.104-.087-.164-.156-.182-.208-.017-.07.01-.226.078-.468.122-.485.182-.901.182-1.248 0-.52-.216-.84-.65-.962-.312-.104-1.04-.156-2.184-.156h-1.43l-.832 3.302c-.554 2.15-.832 3.276-.832 3.38 0 .104.052.173.156.208.208.104.928.156 2.158.156h.65c.104.104.156.182.156.234.018.035 0 .19-.052.468-.069.225-.156.39-.26.494h-.442c-.71-.035-2.019-.052-3.926-.052Z"
                }));
            case "G":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M20.152 30.572c-2.045 0-3.735-.641-5.07-1.924-1.334-1.3-2.002-3.033-2.002-5.2 0-2.08.65-4.1 1.95-6.058a13.533 13.533 0 0 1 2.886-3.172 11.882 11.882 0 0 1 3.796-2.054c1.023-.312 1.959-.468 2.808-.468.624 0 .988.009 1.092.026 1.04.173 1.916.607 2.626 1.3a8.215 8.215 0 0 1 .468.624c.087.104.139.156.156.156.052 0 .286-.225.702-.676.122-.104.252-.225.39-.364l.416-.416c.139-.156.226-.251.26-.286l.39-.39h.156c.243 0 .364.06.364.182 0 .07-.277 1.257-.832 3.562-.624 2.41-.936 3.623-.936 3.64a.38.38 0 0 1-.13.182c-.052.017-.208.026-.468.026h-.416l-.156-.156c0-.035.018-.19.052-.468.035-.347.052-.728.052-1.144 0-1.439-.32-2.565-.962-3.38-.624-.832-1.525-1.248-2.704-1.248-.918 0-1.915.217-2.99.65-1.733.728-3.12 1.941-4.16 3.64-1.022 1.681-1.69 3.71-2.002 6.084-.034.312-.052.65-.052 1.014 0 .988.174 1.846.52 2.574.815 1.577 2.297 2.427 4.446 2.548h.156c.936 0 1.794-.2 2.574-.598.78-.399 1.318-.91 1.612-1.534.052-.139.182-.615.39-1.43.208-.832.312-1.291.312-1.378 0-.139-.121-.225-.364-.26-.225-.035-.736-.06-1.534-.078h-.962a1.193 1.193 0 0 1-.182-.208c0-.035.026-.2.078-.494.07-.225.156-.39.26-.494h.442c.694.035 1.907.052 3.64.052h1.612a55.257 55.257 0 0 1 1.326-.026c.243 0 .364.07.364.208 0 .052-.017.182-.052.39a1.823 1.823 0 0 0-.052.208.796.796 0 0 1-.052.156c0 .017-.017.052-.052.104a.17.17 0 0 1-.078.078.714.714 0 0 0-.156.026h-.26c-.346 0-.702.026-1.066.078a.468.468 0 0 0-.286.286l-.104.338c-.052.225-.147.59-.286 1.092-.121.485-.234.919-.338 1.3a36.88 36.88 0 0 0-.156.65 76.37 76.37 0 0 0-.13.572 5.985 5.985 0 0 1-.13.442 3.75 3.75 0 0 1-.104.39 2.39 2.39 0 0 1-.078.286 4.933 4.933 0 0 1-.052.234.654.654 0 0 1-.078.156.299.299 0 0 1-.052.078c-.017.017-.043.026-.078.026-.052 0-.104-.026-.156-.078-.156-.087-.372-.277-.65-.572-.26-.312-.433-.555-.52-.728 0-.017-.017-.009-.052.026a1.191 1.191 0 0 0-.156.104c-.572.537-1.326.97-2.262 1.3a8.785 8.785 0 0 1-2.938.494Z"
                }));
            case "H":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M33.842 12.268c.19 0 .312.018.364.052.052.035.078.104.078.208s-.017.226-.052.364c-.087.295-.173.468-.26.52h-.182a.765.765 0 0 0-.182.026h-.468c-.919.018-1.447.078-1.586.182a.458.458 0 0 0-.182.182c-.052.087-.684 2.548-1.898 7.384-1.196 4.819-1.794 7.254-1.794 7.306 0 .121.035.182.104.182.139.052.607.096 1.404.13h.806c.087.122.13.2.13.234.018.017 0 .174-.052.468-.07.226-.156.39-.26.494h-.39c-.641-.035-1.803-.052-3.484-.052-.433 0-1.022.009-1.768.026h-1.612c-.294 0-.442-.07-.442-.208 0-.017.009-.07.026-.156.018-.104.035-.182.052-.234.087-.33.174-.511.26-.546.07-.017.2-.026.39-.026H23c.468 0 .988-.026 1.56-.078.243-.052.408-.156.494-.312.052-.087.364-1.265.936-3.536.572-2.27.858-3.432.858-3.484 0-.017-1.256-.026-3.77-.026h-3.77l-.858 3.51c-.59 2.323-.884 3.527-.884 3.614 0 .104.026.165.078.182.122.052.598.096 1.43.13h.806c.087.122.13.2.13.234.017.017 0 .174-.052.468-.07.226-.156.39-.26.494h-.39c-.641-.035-1.802-.052-3.484-.052-.433 0-1.022.009-1.768.026h-1.612c-.295 0-.442-.078-.442-.234 0-.034.026-.156.078-.364.087-.33.174-.511.26-.546.07-.017.2-.026.39-.026h.156c.468 0 .988-.026 1.56-.078.243-.052.408-.156.494-.312.052-.07.676-2.479 1.872-7.228 1.196-4.75 1.794-7.254 1.794-7.514 0-.017-.009-.035-.026-.052-.017-.034-.043-.052-.078-.052l-.104-.052a.363.363 0 0 0-.156-.026.765.765 0 0 0-.182-.026h-.442a.79.79 0 0 0-.234-.026h-.26c-.416 0-.667-.008-.754-.026a.238.238 0 0 1-.182-.156c-.034-.052-.026-.208.026-.468.07-.295.148-.468.234-.52.035-.017.182-.026.442-.026.71.035 1.89.052 3.536.052h1.716a78.756 78.756 0 0 1 1.612-.026c.226 0 .355.052.39.156.035.052.026.208-.026.468-.086.295-.173.468-.26.52h-.182a.765.765 0 0 0-.182.026h-.468c-.918.018-1.447.078-1.586.182a.458.458 0 0 0-.182.182c-.052.07-.33 1.136-.832 3.198-.121.45-.251.953-.39 1.508s-.242.962-.312 1.222l-.104.39c0 .035 1.257.052 3.77.052h3.77l.026-.078c0-.052.269-1.118.806-3.198.485-1.993.728-3.06.728-3.198 0-.034-.017-.07-.052-.104-.017-.034-.052-.06-.104-.078a.577.577 0 0 0-.182-.026.79.79 0 0 0-.234-.026h-.286a1.388 1.388 0 0 0-.312-.026h-.312c-.624 0-.936-.087-.936-.26 0-.364.052-.624.156-.78.052-.086.2-.13.442-.13.312 0 .832.009 1.56.026a75.373 75.373 0 0 0 3.874 0 77.95 77.95 0 0 1 1.508-.026Z"
                }));
            case "I":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M17.392 29.974c-.294 0-.442-.078-.442-.234 0-.034.026-.156.078-.364.087-.33.174-.511.26-.546.052-.017.182-.026.39-.026h.156c1.058 0 1.716-.06 1.976-.182.018 0 .035-.009.052-.026.087-.035.182-.234.286-.598.104-.364.53-2.063 1.274-5.096.208-.78.364-1.395.468-1.846 1.214-4.853 1.82-7.297 1.82-7.332a.458.458 0 0 1-.052-.13c-.173-.104-.788-.156-1.846-.156h-.52c-.104-.087-.164-.156-.182-.208-.017-.07.01-.216.078-.442.052-.26.113-.425.182-.494.052-.035.2-.052.442-.052 1.248.035 2.514.052 3.796.052h1.43c1.11 0 1.742-.017 1.898-.052h.26c.122.121.182.217.182.286 0 .07-.026.19-.078.364-.052.26-.112.425-.182.494-.052.035-.25.052-.598.052-.537 0-1.092.026-1.664.078-.225.052-.39.139-.494.26-.052.07-.39 1.326-1.014 3.77s-1.23 4.88-1.82 7.306l-.884 3.614c0 .139.061.217.182.234.174.052.65.087 1.43.104h.832c.087.122.13.2.13.234.018.017 0 .174-.052.468-.069.226-.156.39-.26.494h-.416c-.64-.035-1.828-.052-3.562-.052-.433 0-1.048.009-1.846.026h-1.69Z"
                }));
            case "J":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M26.411 13.75c0-.208-.806-.312-2.418-.312h-.65c-.104-.087-.165-.156-.182-.208-.017-.07.009-.234.078-.494.07-.225.156-.39.26-.494h.442c.71.035 1.976.052 3.796.052h1.716a64.884 64.884 0 0 1 1.43-.026c.19 0 .295.043.312.13.035.07.052.113.052.13 0 .035-.026.156-.078.364-.07.277-.139.442-.208.494-.052.035-.208.052-.468.052h-.234c-.763 0-1.196.121-1.3.364-.07.226-.607 2.366-1.612 6.422-1.092 4.299-1.647 6.457-1.664 6.474-.364 1.058-1.083 1.968-2.158 2.73-1.075.763-2.297 1.144-3.666 1.144-1.057 0-1.924-.26-2.6-.78-.659-.537-.988-1.23-.988-2.08 0-.607.173-1.127.52-1.56.364-.45.84-.676 1.43-.676.78 0 1.213.382 1.3 1.144 0 .503-.147.927-.442 1.274a1.783 1.783 0 0 1-1.092.65c-.139.035-.208.07-.208.104 0 .018.06.087.182.208.45.503 1.1.754 1.95.754.659 0 1.3-.286 1.924-.858.641-.59 1.1-1.3 1.378-2.132.07-.208.615-2.375 1.638-6.5 1.04-4.125 1.56-6.249 1.56-6.37Z"
                }));
            case "K":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M18.378 13.672c0-.017-.009-.035-.026-.052-.018-.034-.044-.052-.078-.052l-.104-.052a.363.363 0 0 0-.156-.026.766.766 0 0 0-.182-.026h-.442a.79.79 0 0 0-.234-.026h-.26c-.59 0-.91-.06-.962-.182-.018-.052 0-.2.052-.442.086-.312.164-.494.234-.546.034-.017.182-.026.442-.026.71.035 1.889.052 3.536.052h1.716a78.746 78.746 0 0 1 1.612-.026c.294 0 .442.07.442.208 0 .087-.026.208-.078.364-.087.347-.165.529-.234.546-.07.035-.347.052-.832.052-.936.018-1.474.078-1.612.182a.457.457 0 0 0-.182.182l-2.106 8.268c.017 0 1.612-1.248 4.784-3.744 3.189-2.496 4.818-3.779 4.888-3.848.242-.242.364-.442.364-.598 0-.26-.217-.407-.65-.442-.278 0-.416-.095-.416-.286 0-.034.026-.156.078-.364a4.2 4.2 0 0 1 .13-.39c.052-.086.199-.13.442-.13.277 0 .736.009 1.378.026.658.018 1.196.026 1.612.026.936 0 1.577-.017 1.924-.052.26-.017.424-.009.494.026.086.018.13.095.13.234 0 .07-.035.217-.104.442-.052.208-.087.32-.104.338-.052.087-.217.13-.494.13a6.474 6.474 0 0 0-3.536 1.326l-.312.208c-.035.018-.928.71-2.678 2.08a486.183 486.183 0 0 0-2.652 2.08l.234.572c.156.381.398.962.728 1.742.329.78.632 1.517.91 2.21 1.3 3.068 1.993 4.654 2.08 4.758.034.035.078.07.13.104.242.174.684.269 1.326.286h.546c.086.122.13.2.13.234.017.017 0 .174-.052.468-.07.226-.156.39-.26.494h-.286a33.632 33.632 0 0 0-2.47-.078c-2.063 0-3.25.026-3.562.078h-.26a1.188 1.188 0 0 1-.182-.208c0-.052.026-.216.078-.494.052-.208.112-.346.182-.416.052-.052.164-.078.338-.078.866 0 1.3-.216 1.3-.65 0-.087-.512-1.343-1.534-3.77l-1.508-3.588-1.768 1.378-1.768 1.378-.598 2.418c-.399 1.595-.598 2.436-.598 2.522 0 .104.026.165.078.182.121.052.598.096 1.43.13h.806c.104.156.156.252.156.286 0 .277-.061.538-.182.78-.087.087-.226.13-.416.13-.295 0-.824-.009-1.586-.026a86.31 86.31 0 0 0-1.976-.026 83.8 83.8 0 0 0-1.924.026h-1.482c-.226 0-.364-.043-.416-.13a.455.455 0 0 1-.052-.13c0-.034.026-.156.078-.364.069-.277.138-.433.208-.468.069-.052.268-.078.598-.078.468 0 .988-.026 1.56-.078.242-.052.407-.156.494-.312.052-.07.676-2.479 1.872-7.228 1.196-4.75 1.794-7.254 1.794-7.514Z"
                }));
            case "L":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M20.561 13.672c0-.017-.008-.035-.026-.052-.017-.034-.043-.052-.078-.052l-.104-.052a.363.363 0 0 0-.156-.026.765.765 0 0 0-.182-.026h-.442a.79.79 0 0 0-.234-.026h-.26c-.416 0-.667-.008-.754-.026a.238.238 0 0 1-.182-.156c-.034-.052-.026-.208.026-.468.087-.33.165-.502.234-.52.052-.017.182-.026.39-.026a60.53 60.53 0 0 0 3.302.078h1.04c.451-.017.78-.026.988-.026h.936c.382-.017.668-.026.858-.026.208-.017.338-.026.39-.026h.312c.104.104.156.182.156.234.018.035 0 .19-.052.468-.069.243-.147.407-.234.494h-.988c-1.196.018-1.898.095-2.106.234-.12.07-.242.32-.364.754-.12.416-.702 2.696-1.742 6.838a996.167 996.167 0 0 1-1.586 6.448l-.234.936c0 .07.078.113.234.13.156 0 .668.009 1.534.026 1.3 0 2.22-.043 2.756-.13.555-.087 1.162-.32 1.82-.702a4.712 4.712 0 0 0 1.664-1.586c.434-.676.858-1.569 1.274-2.678.122-.346.217-.59.286-.728.087-.052.234-.078.442-.078h.338c.104.156.156.252.156.286 0 .035-.182.546-.546 1.534-.346.988-.719 2.037-1.118 3.146a63.854 63.854 0 0 0-.676 1.898c-.052.104-.095.165-.13.182-.052.035-2.288.052-6.708.052s-6.656-.017-6.708-.052a.247.247 0 0 1-.104-.208c0-.121.018-.242.052-.364.087-.33.174-.511.26-.546.07-.017.2-.026.39-.026h.156c.468 0 .988-.026 1.56-.078.243-.052.408-.156.494-.312.052-.07.676-2.479 1.872-7.228 1.196-4.75 1.794-7.254 1.794-7.514Z"
                }));
            case "M":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M16.335 30c-.242 0-.667-.009-1.274-.026a54.61 54.61 0 0 0-1.585-.026c-1.249 0-2.02.009-2.315.026-.415.017-.65.009-.701-.026-.105-.035-.157-.113-.157-.234 0-.034.026-.156.079-.364a4.2 4.2 0 0 1 .13-.39c.034-.104.225-.156.572-.156 1.248-.07 2.019-.416 2.314-1.04.069-.104.667-2.427 1.793-6.968 1.144-4.558 1.716-6.942 1.716-7.15 0-.07-.026-.104-.078-.104h-.052c-.173-.052-.623-.086-1.352-.104-.433 0-.693-.008-.78-.026a.314.314 0 0 1-.181-.182c-.018-.07-.01-.19.025-.364.104-.346.182-.537.234-.572.052-.035.936-.052 2.652-.052 1.37 0 2.159.009 2.366.026.226 0 .364.035.416.104.018.07.338 2.514.962 7.332.625 4.802.936 7.22.936 7.254 0 .018.105-.13.313-.442.208-.33.485-.771.832-1.326l1.222-1.924c.468-.728.953-1.49 1.456-2.288.502-.815 1.005-1.62 1.508-2.418l1.43-2.314c.468-.728.875-1.37 1.222-1.924.363-.572.65-1.031.857-1.378l.313-.494.078-.078a.785.785 0 0 0 .104-.078l.155-.052h2.496c1.665 0 2.523.017 2.575.052a.247.247 0 0 1 .103.208c0 .052-.026.19-.078.416a2.99 2.99 0 0 0-.078.364c-.069.104-.39.156-.962.156-.935.018-1.473.078-1.611.182a.457.457 0 0 0-.183.182c-.052.087-.684 2.54-1.898 7.358-1.195 4.819-1.793 7.254-1.793 7.306 0 .121.026.19.078.208.12.052.598.096 1.43.13h.805c.104.156.157.252.157.286 0 .277-.061.538-.182.78-.087.087-.226.13-.417.13-.294 0-.805-.009-1.534-.026a82.147 82.147 0 0 0-1.924-.026c-.537 0-1.16.009-1.872.026h-1.43c-.225 0-.364-.043-.416-.13-.034-.052-.026-.216.026-.494.07-.277.14-.433.209-.468.069-.052.268-.078.598-.078.468 0 .988-.026 1.56-.078.242-.052.407-.156.494-.312.034-.07.363-1.335.988-3.796.623-2.478 1.239-4.931 1.846-7.358.606-2.427.91-3.649.91-3.666-1.526 2.41-3.207 5.088-5.044 8.034l-5.122 8.138c-.157.156-.364.234-.625.234-.26 0-.416-.06-.468-.182-.052-.087-.39-2.565-1.014-7.436-.606-4.87-.962-7.74-1.066-8.606-2.34 9.273-3.51 13.997-3.51 14.17.104.572.729.858 1.872.858h.26c.104.087.165.165.182.234.018.07-.008.226-.078.468-.069.277-.138.433-.207.468-.07.017-.165.026-.287.026Z"
                }));
            case "N":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M12.76 29.974c-.26 0-.39-.078-.39-.234 0-.052.026-.19.078-.416.07-.225.113-.347.13-.364.035-.104.234-.156.598-.156 1.179-.052 1.942-.39 2.288-1.014.087-.156 1.292-4.914 3.614-14.274-.034-.017-.511-.043-1.43-.078-.52 0-.832-.008-.936-.026a.184.184 0 0 1-.156-.156c-.034-.052-.026-.208.026-.468.087-.312.165-.485.234-.52.035-.017.876-.026 2.522-.026 1.335 0 2.098.009 2.288.026.208 0 .33.043.364.13l1.378 3.25c.919 2.167 1.846 4.35 2.782 6.552.936 2.201 1.413 3.346 1.43 3.432l1.404-5.538c.919-3.657 1.378-5.607 1.378-5.85 0-.45-.554-.72-1.664-.806-.364 0-.563-.06-.598-.182-.034-.052-.026-.19.026-.416.018-.052.035-.113.052-.182a.713.713 0 0 0 .026-.156.299.299 0 0 1 .078-.182l.052-.052a.11.11 0 0 1 .078-.026h.13c.243 0 .676.017 1.3.052a62.89 62.89 0 0 0 1.664.026c.451 0 .962-.008 1.534-.026.59-.017.997-.026 1.222-.026.26 0 .39.087.39.26 0 .07-.034.217-.104.442-.052.208-.086.32-.104.338-.034.087-.225.13-.572.13-1.23.052-2.002.399-2.314 1.04l-3.874 15.34c-.034.121-.216.182-.546.182-.242 0-.39-.017-.442-.052L20.04 14.296c-2.253 9.03-3.38 13.58-3.38 13.65.104.572.728.858 1.872.858h.26c.104.087.165.165.182.234.018.052-.008.208-.078.468-.069.226-.156.39-.26.494h-.338c-.537-.035-1.473-.052-2.808-.052-.346 0-.823.009-1.43.026h-1.3Z"
                }));
            case "O":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M24.019 11.696h.442c.659 0 1.075.008 1.248.026 1.699.242 3.06.988 4.082 2.236 1.023 1.248 1.534 2.825 1.534 4.732 0 2.34-.754 4.558-2.262 6.656-.988 1.421-2.184 2.574-3.588 3.458-1.82 1.179-3.649 1.768-5.486 1.768-1.855 0-3.397-.59-4.628-1.768-1.317-1.283-1.976-2.999-1.976-5.148 0-.607.009-.997.026-1.17.312-2.375 1.317-4.559 3.016-6.552a16.549 16.549 0 0 1 1.56-1.56c1.924-1.595 3.935-2.488 6.032-2.678Zm4.628 5.928c0-1.317-.303-2.4-.91-3.25-.59-.85-1.413-1.378-2.47-1.586a3.627 3.627 0 0 0-.806-.078 3.99 3.99 0 0 0-.962.104c-1.075.19-2.089.676-3.042 1.456-.399.312-.875.789-1.43 1.43-.797 1.023-1.473 2.34-2.028 3.952-.555 1.595-.832 3.172-.832 4.732 0 1.248.243 2.305.728 3.172.503.866 1.196 1.447 2.08 1.742.45.139.875.208 1.274.208 1.057 0 2.097-.33 3.12-.988 2.063-1.352 3.57-3.57 4.524-6.656.503-1.647.754-3.06.754-4.238Z"
                }));
            case "P":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M21.121 13.672c0-.017-.009-.035-.026-.052-.017-.034-.043-.052-.078-.052l-.104-.052a.363.363 0 0 0-.156-.026.765.765 0 0 0-.182-.026h-.442a.79.79 0 0 0-.234-.026h-.26c-.433 0-.693-.008-.78-.026a.314.314 0 0 1-.182-.182c-.017-.07-.009-.19.026-.364.104-.346.182-.537.234-.572.052-.035 1.733-.052 5.044-.052 3.293.017 5.053.043 5.278.078 1.023.173 1.872.537 2.548 1.092.693.537 1.144 1.248 1.352 2.132.017.104.026.33.026.676 0 .434-.017.72-.052.858-.208.988-.763 1.924-1.664 2.808-1.196 1.179-2.739 1.924-4.628 2.236-.121.018-1.031.035-2.73.052h-2.47l-.78 3.094c-.52 2.01-.78 3.077-.78 3.198s.026.19.078.208c.121.052.598.096 1.43.13h.806c.104.156.156.252.156.286 0 .277-.06.538-.182.78-.087.087-.225.13-.416.13-.295 0-.823-.009-1.586-.026a86.304 86.304 0 0 0-1.976-.026 83.8 83.8 0 0 0-1.924.026h-1.482c-.225 0-.364-.043-.416-.13a.455.455 0 0 1-.052-.13c0-.034.026-.156.078-.364.07-.277.139-.433.208-.468.07-.052.269-.078.598-.078.468 0 .988-.026 1.56-.078.243-.052.407-.156.494-.312.052-.07.676-2.479 1.872-7.228 1.196-4.75 1.794-7.254 1.794-7.514Zm9.308 1.924c0-.659-.19-1.135-.572-1.43-.381-.312-.927-.537-1.638-.676-.121-.017-.815-.034-2.08-.052-.295 0-.598.009-.91.026h-1.066c-.225.018-.381.095-.468.234a79.01 79.01 0 0 0-.52 2.002c-.295 1.23-.59 2.427-.884 3.588-.295 1.162-.45 1.75-.468 1.768 0 .035.702.052 2.106.052 1.456-.017 2.253-.035 2.392-.052 1.161-.173 2.054-.59 2.678-1.248.468-.468.858-1.308 1.17-2.522.173-.71.26-1.274.26-1.69Z"
                }));
            case "Q":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M22.09 32.08c0-.19.01-.511.027-.962.034-.433.052-.71.052-.832v-.104l-.39.104c-.797.19-1.526.286-2.184.286-1.837 0-3.371-.59-4.602-1.768-1.318-1.283-1.976-2.999-1.976-5.148 0-.607.008-.997.026-1.17.312-2.375 1.317-4.559 3.016-6.552a16.573 16.573 0 0 1 1.56-1.56c1.924-1.595 3.934-2.488 6.032-2.678h.442c.659 0 1.075.008 1.248.026 1.698.242 3.06.988 4.082 2.236 1.023 1.248 1.534 2.825 1.534 4.732 0 2.322-.72 4.498-2.158 6.526-1.439 2.01-3.137 3.466-5.096 4.368l-.442.208v.13a.2.2 0 0 0 .026.078.489.489 0 0 1 .026.156c.017.07.035.13.052.182.156.676.355 1.144.598 1.404.242.26.633.39 1.17.39a2.86 2.86 0 0 0 1.794-.624c.537-.399.884-.875 1.04-1.43.104-.243.216-.364.338-.364.156 0 .251.078.286.234 0 .104-.06.355-.182.754-.71 2.097-1.673 3.45-2.886 4.056-.433.19-.867.286-1.3.286-.797 0-1.352-.26-1.664-.78-.312-.503-.468-1.23-.468-2.184Zm-1.351-6.11c.624 0 1.135.225 1.534.676.416.45.667 1.092.754 1.924l.338-.234c1.335-.919 2.41-2.193 3.224-3.822.832-1.63 1.378-3.484 1.638-5.564.017-.174.026-.546.026-1.118 0-2.028-.59-3.476-1.768-4.342-.676-.52-1.465-.78-2.366-.78-.832 0-1.681.216-2.548.65-1.56.763-2.86 2.054-3.9 3.874-1.04 1.802-1.69 3.83-1.95 6.084-.018.19-.026.546-.026 1.066 0 1.802.468 3.163 1.404 4.082.416.364.667.546.754.546v-.208c0-.78.303-1.447.91-2.002.624-.555 1.282-.832 1.976-.832Zm-.858 3.562a5.38 5.38 0 0 0 2.34-.546l-.026-.26c-.07-.953-.39-1.525-.962-1.716a3.178 3.178 0 0 0-.494-.052h-.156a.426.426 0 0 0-.104-.026c-.07 0-.182.026-.338.078a1.88 1.88 0 0 0-.91.624c-.26.294-.39.633-.39 1.014 0 .59.346.884 1.04.884Z"
                }));
            case "R":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M19.598 13.672c0-.017-.009-.035-.026-.052-.018-.034-.044-.052-.078-.052l-.104-.052a.363.363 0 0 0-.156-.026.766.766 0 0 0-.182-.026h-.442a.79.79 0 0 0-.234-.026h-.26c-.416 0-.668-.008-.754-.026a.237.237 0 0 1-.182-.156c-.035-.052-.026-.208.026-.468.086-.312.164-.485.234-.52.034-.017 1.542-.026 4.524-.026 2.981.017 4.593.043 4.836.078 1.577.226 2.773.763 3.588 1.612.641.694.962 1.465.962 2.314 0 .174-.035.434-.104.78-.399 1.543-1.673 2.79-3.822 3.744-.763.295-1.196.442-1.3.442l.182.13c1.161.659 1.742 1.612 1.742 2.86 0 .208-.044.763-.13 1.664a20.47 20.47 0 0 0-.13 2.054c0 .607.06 1.04.182 1.3.121.243.39.364.806.364.242 0 .398-.017.468-.052.658-.26 1.126-.84 1.404-1.742.086-.242.156-.39.208-.442.052-.052.182-.078.39-.078.346 0 .52.104.52.312 0 .312-.208.806-.624 1.482-.52.763-1.127 1.24-1.82 1.43-.139.035-.39.052-.754.052-1.803 0-2.973-.546-3.51-1.638-.156-.277-.243-.624-.26-1.04v-.442l.052-.39c.017-.139.034-.242.052-.312.017-.07.06-.216.13-.442a6.33 6.33 0 0 0 .156-.598c.26-.988.39-1.62.39-1.898 0-.867-.373-1.508-1.118-1.924-.26-.121-.477-.19-.65-.208-.174-.017-.789-.035-1.846-.052H20.17l-.832 3.38c-.572 2.288-.858 3.45-.858 3.484 0 .121.026.19.078.208.121.052.598.096 1.43.13h.806c.086.122.13.2.13.234.017.017 0 .174-.052.468-.07.226-.156.39-.26.494h-.39c-.624-.035-1.76-.052-3.406-.052-.416 0-.997.009-1.742.026h-1.638c-.295 0-.442-.078-.442-.234 0-.034.026-.156.078-.364.086-.33.173-.511.26-.546.069-.017.199-.026.39-.026h.156c.468 0 .988-.026 1.56-.078.242-.052.407-.156.494-.312.052-.07.676-2.479 1.872-7.228 1.196-4.75 1.794-7.254 1.794-7.514Zm8.502.676c-.364-.381-.841-.624-1.43-.728-.59-.121-1.43-.182-2.522-.182a8.5 8.5 0 0 0-.65.026h-.858c-.226.018-.382.095-.468.234-.018.052-.312 1.213-.884 3.484-.572 2.254-.858 3.398-.858 3.432 0 .017.598.026 1.794.026 1.352-.017 2.253-.078 2.704-.182 1.126-.19 1.993-.702 2.6-1.534.277-.398.511-.918.702-1.56.19-.659.286-1.248.286-1.768 0-.537-.139-.953-.416-1.248Z"
                }));
            case "S":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M28.405 16.48c0-1.179-.303-2.089-.91-2.73-.589-.641-1.447-.962-2.574-.962-.953 0-1.872.39-2.756 1.17-.866.78-1.3 1.707-1.3 2.782 0 .537.13.997.39 1.378.278.381.633.641 1.066.78.052.035.65.208 1.794.52a99.54 99.54 0 0 0 1.768.442c.26.07.59.243.988.52 1.04.745 1.56 1.855 1.56 3.328 0 .45-.069.936-.208 1.456a4.94 4.94 0 0 1-.52 1.43c-1.074 2.132-2.756 3.44-5.044 3.926a5.719 5.719 0 0 1-.884.052c-1.716 0-3.05-.477-4.004-1.43l-.26-.286-.728.806c-.485.537-.754.823-.806.858-.052.035-.138.052-.26.052-.225 0-.338-.07-.338-.208 0-.052.503-2.089 1.508-6.11.035-.104.208-.156.52-.156h.338c.087.087.13.147.13.182.018.017.01.156-.026.416a6.79 6.79 0 0 0-.13 1.326c.07 1.127.477 1.967 1.222 2.522.763.555 1.794.832 3.094.832.174 0 .382-.017.624-.052.815-.19 1.543-.624 2.184-1.3.66-.676 1.075-1.456 1.248-2.34.035-.139.052-.407.052-.806 0-1.11-.45-1.863-1.352-2.262-.104-.017-.728-.173-1.872-.468-1.144-.312-1.742-.485-1.794-.52a3.428 3.428 0 0 1-1.846-1.3c-.45-.659-.676-1.439-.676-2.34 0-.867.243-1.76.728-2.678.503-.936 1.101-1.655 1.794-2.158.884-.763 1.95-1.24 3.198-1.43.07-.017.165-.026.286-.026h.286c1.803 0 3.068.555 3.796 1.664l1.534-1.664h.104a.429.429 0 0 1 .13-.026c.226 0 .338.06.338.182 0 .121-.25 1.179-.754 3.172-.485 1.976-.754 2.99-.806 3.042-.052.052-.19.078-.416.078-.346 0-.52-.078-.52-.234 0-.104.01-.19.026-.26 0-.087.01-.269.026-.546a6.19 6.19 0 0 0 .052-.624Z"
                }));
            case "T":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M25.198 30c-.468 0-1.248-.009-2.34-.026a165.36 165.36 0 0 0-2.522-.026c-2.236 0-3.657.017-4.264.052h-.39a1.192 1.192 0 0 1-.182-.208c0-.052.026-.217.078-.494.07-.225.156-.39.26-.494h.728c1.04 0 1.742-.026 2.106-.078.295-.017.511-.07.65-.156.017-.017.035-.026.052-.026.087-.052.173-.225.26-.52.087-.312.433-1.673 1.04-4.082.295-1.179.537-2.14.728-2.886 1.213-4.767 1.82-7.202 1.82-7.306 0-.087-.251-.13-.754-.13h-.806c-1.161 0-1.924.052-2.288.156-.745.156-1.309.46-1.69.91-.468.52-.98 1.577-1.534 3.172-.121.381-.208.607-.26.676-.052.07-.173.104-.364.104h-.078c-.225 0-.364-.026-.416-.078-.052-.052-.078-.095-.078-.13 0-.104.26-.936.78-2.496a74.24 74.24 0 0 1 .962-2.86c.104-.33.217-.555.338-.676h12.168c2.323 0 3.484.043 3.484.13v.026l.026.026v.078c0 .104-.156 1.092-.468 2.964-.295 1.872-.45 2.817-.468 2.834 0 .052-.035.095-.104.13-.035.035-.165.052-.39.052h-.26a.424.424 0 0 0-.104-.026l-.078-.078a.781.781 0 0 0-.078-.104c0-.121.026-.355.078-.702.156-.936.234-1.62.234-2.054 0-.399-.052-.728-.156-.988-.104-.26-.225-.46-.364-.598-.121-.139-.355-.243-.702-.312a6.478 6.478 0 0 0-.858-.13 33.843 33.843 0 0 0-1.196-.052c-.797 0-1.309.017-1.534.052-.208.017-.355.078-.442.182-.017.017-.633 2.444-1.846 7.28-1.213 4.819-1.82 7.263-1.82 7.332 0 .121.113.2.338.234.243.07.893.113 1.95.13.59 0 .936.009 1.04.026.121.017.2.07.234.156.017.052 0 .2-.052.442-.07.312-.147.494-.234.546L25.38 30h-.182Z"
                }));
            case "U":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M17.078 26.36c0 .954.26 1.699.78 2.236.537.52 1.291.78 2.262.78 1.421 0 2.67-.46 3.744-1.378 1.092-.919 1.855-2.028 2.288-3.328 1.699-6.777 2.548-10.253 2.548-10.426 0-.45-.555-.72-1.664-.806-.364 0-.563-.06-.598-.182-.035-.052-.026-.19.026-.416.017-.052.035-.113.052-.182a.706.706 0 0 0 .026-.156.304.304 0 0 1 .078-.182l.052-.052c.017-.017.043-.026.078-.026h.13c.26 0 .71.017 1.352.052a51.568 51.568 0 0 0 3.224 0c.59-.017.997-.026 1.222-.026.26 0 .39.087.39.26 0 .07-.035.217-.104.442-.052.208-.087.32-.104.338-.052.087-.243.13-.572.13-1.23.052-2.002.399-2.314 1.04-.035.087-.468 1.76-1.3 5.018-.71 2.93-1.144 4.654-1.3 5.174-.52 1.543-1.465 2.912-2.834 4.108-1.37 1.196-2.895 1.794-4.576 1.794-1.404 0-2.583-.398-3.536-1.196-.953-.797-1.525-1.837-1.716-3.12a4.412 4.412 0 0 1-.026-.598c0-.399.017-.754.052-1.066.035-.156.269-1.118.702-2.886.45-1.785.884-3.536 1.3-5.252.433-1.716.65-2.643.65-2.782 0-.121-.494-.2-1.482-.234-.416 0-.667-.008-.754-.026a.238.238 0 0 1-.182-.156c-.035-.052-.026-.208.026-.468.07-.295.147-.468.234-.52.035-.017.182-.026.442-.026.71.035 1.89.052 3.536.052h1.716a78.767 78.767 0 0 1 1.612-.026c.225 0 .355.052.39.156.035.052.026.208-.026.468-.087.295-.173.468-.26.52h-.182a.766.766 0 0 0-.182.026h-.468c-.919.018-1.447.078-1.586.182a.458.458 0 0 0-.182.182c-.017.035-.26.954-.728 2.756a431.596 431.596 0 0 0-1.43 5.616c-.468 1.942-.72 3.085-.754 3.432a5.338 5.338 0 0 0-.052.754Z"
                }));
            case "V":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M15.955 13.438c-.121-.121-.182-.216-.182-.286 0-.138.043-.312.13-.52.087-.208.156-.338.208-.39h.286c.728.052 1.638.078 2.73.078 2.045 0 3.25-.026 3.614-.078H23c.104.104.156.182.156.234.017.035 0 .19-.052.468-.07.243-.147.407-.234.494h-.546c-.381.035-.641.052-.78.052-.503.087-.78.217-.832.39 0 .035.251 2.219.754 6.552.503 4.316.763 6.483.78 6.5l1.898-3.042a950.553 950.553 0 0 0 3.796-6.136 279.681 279.681 0 0 0 1.95-3.198c.087-.173.13-.303.13-.39 0-.399-.39-.641-1.17-.728-.33 0-.494-.087-.494-.26 0-.087.026-.208.078-.364.052-.242.104-.399.156-.468.052-.07.165-.104.338-.104.295 0 .763.009 1.404.026.659.018 1.144.026 1.456.026 1.196 0 1.95-.017 2.262-.052h.182c.121.121.182.217.182.286 0 .312-.078.59-.234.832-.052.052-.2.078-.442.078-.936.052-1.681.33-2.236.832l-.182.182c-.07.087-.113.139-.13.156a.99.99 0 0 1-.182.26c-6.379 10.348-9.62 15.548-9.724 15.6l-.13.078-.468.026c-.312 0-.494-.017-.546-.052-.07-.035-.104-.078-.104-.13-.052-.104-.39-2.877-1.014-8.32-.659-5.512-.997-8.294-1.014-8.346-.104-.19-.546-.286-1.326-.286h-.728Z"
                }));
            case "W":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M11.232 13.438c-.122-.121-.182-.216-.182-.286 0-.381.112-.684.338-.91h.312a37.18 37.18 0 0 0 2.6.078h.832c.38-.017.667-.026.858-.026h.806c.329-.017.58-.026.754-.026.173-.017.277-.026.312-.026h.26c.104.104.156.182.156.234.017.035 0 .19-.052.468-.07.243-.148.407-.234.494h-.546c-.503.018-.92.07-1.248.156-.26.104-.408.2-.442.286 0 .121.138 2.219.416 6.292.294 4.073.45 6.17.468 6.292 2.704-4.784 4.74-8.372 6.11-10.764l-.052-.962c-.052-.728-.14-1.118-.26-1.17-.104-.07-.468-.112-1.092-.13-.486 0-.746-.06-.78-.182-.035-.052-.026-.19.026-.416.086-.347.164-.537.234-.572.052-.017.32-.017.806 0 .589.035 1.412.052 2.47.052.502 0 1.092-.008 1.768-.026a68.319 68.319 0 0 1 1.456-.026c.294 0 .442.06.442.182 0 .07-.026.226-.078.468-.052.226-.087.347-.104.364-.035.104-.26.156-.676.156-.902.035-1.44.165-1.612.39-.052.052-.07.113-.052.182 0 .208.138 2.28.416 6.214.277 3.918.416 5.98.416 6.188l.052-.078a5.08 5.08 0 0 0 .156-.26c.086-.139.19-.303.312-.494.12-.208.268-.468.442-.78.19-.312.398-.667.624-1.066.225-.399.485-.867.78-1.404l1.014-1.742c2.236-3.934 3.37-5.954 3.406-6.058a.828.828 0 0 0 .052-.234c0-.277-.174-.485-.52-.624a2.459 2.459 0 0 0-1.066-.234c-.243 0-.364-.087-.364-.26 0-.052.017-.165.052-.338a.577.577 0 0 0 .026-.182.713.713 0 0 0 .026-.156l.052-.104a.17.17 0 0 1 .078-.078.29.29 0 0 1 .13-.026.677.677 0 0 1 .208-.026c.312 0 .788.009 1.43.026h1.43c1.144 0 1.88-.017 2.21-.052.242 0 .364.095.364.286 0 .104-.035.26-.104.468-.07.208-.122.33-.156.364-.052.052-.14.078-.26.078-1.092 0-1.933.407-2.522 1.222-.122.19-.191.295-.208.312l-4.394 7.696c-2.912 5.13-4.377 7.705-4.394 7.722-.104.122-.312.182-.624.182-.26 0-.425-.043-.494-.13-.052-.052-.226-2.184-.52-6.396-.278-4.23-.416-6.404-.416-6.526l-.312.468c-.382.642-1.491 2.574-3.328 5.798a403.24 403.24 0 0 1-1.794 3.146l-1.43 2.548c-.312.537-.477.815-.494.832-.104.173-.33.26-.676.26-.33 0-.512-.06-.546-.182 0-.052-.191-2.817-.572-8.294-.382-5.494-.581-8.25-.598-8.268-.035-.156-.122-.251-.26-.286-.14-.052-.477-.086-1.014-.104h-.624Z"
                }));
            case "X":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M12.326 30c-.277 0-.416-.095-.416-.286 0-.07.026-.208.078-.416.07-.242.13-.381.182-.416.052-.035.217-.06.494-.078 1.491-.052 2.661-.502 3.51-1.352.174-.173 1.18-1.265 3.016-3.276 1.838-2.028 2.748-3.05 2.73-3.068-1.889-4.819-2.877-7.271-2.964-7.358-.156-.19-.702-.294-1.638-.312h-.728a1.188 1.188 0 0 1-.182-.208c0-.052.026-.216.078-.494.07-.225.156-.39.26-.494h.364c.59.035 1.638.052 3.146.052h1.664a75.269 75.269 0 0 1 1.612-.026c.174 0 .286.018.338.052.052.018.078.078.078.182 0 .416-.06.685-.182.806-.034.087-.182.13-.442.13-.658.07-1.109.208-1.352.416l-.052.026c.78 1.907 1.448 3.588 2.002 5.044L25.3 17.39c.815-.884 1.456-1.595 1.924-2.132.382-.398.616-.667.702-.806a.625.625 0 0 0 .104-.416c-.052-.26-.26-.442-.624-.546a1.45 1.45 0 0 1-.338-.052c-.156 0-.268-.035-.338-.104-.069-.07-.069-.268 0-.598.07-.225.156-.39.26-.494h.312c.4.052 1.44.078 3.12.078 1.508 0 2.366-.026 2.574-.078h.208c.122.121.182.217.182.286 0 .139-.043.312-.13.52-.069.208-.13.338-.182.39h-.416c-1.334.052-2.426.425-3.276 1.118-.156.156-.25.243-.286.26a.465.465 0 0 1-.13.13c-.069.07-.849.928-2.34 2.574l-2.262 2.496c0 .018.27.72.806 2.106.555 1.37 1.118 2.765 1.69 4.186.572 1.422.893 2.167.962 2.236.174.156.702.243 1.586.26.607 0 .91.07.91.208 0 .19-.06.468-.182.832-.052.087-.19.13-.416.13h-1.378a68.88 68.88 0 0 0-1.794-.026c-.52 0-1.135.009-1.846.026H23.22c-.225 0-.364-.043-.416-.13-.034-.052-.026-.216.026-.494.07-.26.13-.407.182-.442.052-.052.182-.087.39-.104.312-.017.642-.086.988-.208.295-.139.442-.225.442-.26-.017 0-.424-1.014-1.222-3.042l-1.222-3.068c-.017 0-.84.902-2.47 2.704-1.612 1.785-2.426 2.695-2.444 2.73a.647.647 0 0 0-.208.468c0 .33.252.546.754.65.018 0 .07.009.156.026h.156c.208 0 .312.087.312.26 0 .104-.026.252-.078.442-.052.226-.104.364-.156.416-.052.035-.182.052-.39.052h-1.534a68.47 68.47 0 0 0-1.56-.026c-1.352 0-2.218.017-2.6.052Z"
                }));
            case "Y":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M29.994 12.294a40.338 40.338 0 0 0 2.912 0c.503-.035.85-.052 1.04-.052.226 0 .338.087.338.26 0 .052-.034.19-.104.416-.052.226-.086.347-.104.364-.034.104-.216.156-.546.156-1.248.087-2.262.52-3.042 1.3-.156.156-1.369 1.569-3.64 4.238l-3.354 3.926-.676 2.704c-.468 1.855-.702 2.825-.702 2.912 0 .19.59.286 1.768.286.295 0 .477.018.546.052.087.017.13.087.13.208 0 .364-.052.624-.156.78-.052.087-.199.13-.442.13h-1.56a82.14 82.14 0 0 0-1.924-.026c-.554 0-1.187.009-1.898.026h-1.482c-.294 0-.442-.06-.442-.182 0-.07.026-.216.078-.442.052-.242.087-.373.104-.39.035-.104.356-.156.962-.156.676-.017 1.118-.052 1.326-.104.226-.052.382-.165.468-.338.052-.086.304-1.022.754-2.808l.65-2.678c-.71-2.028-1.776-5.053-3.198-9.074a.973.973 0 0 0-.494-.286c-.156-.034-.537-.06-1.144-.078-.624 0-.936-.087-.936-.26 0-.035.026-.156.078-.364.07-.312.148-.494.234-.546.035-.017.156-.026.364-.026a45.9 45.9 0 0 0 2.834.078c2.115 0 3.337-.026 3.666-.078h.26c.104.104.156.182.156.234.018.035 0 .19-.052.468-.069.225-.156.39-.26.494h-.312c-.97 0-1.456.113-1.456.338 0 .087.434 1.37 1.3 3.848.867 2.462 1.309 3.7 1.326 3.718l.078-.078c.07-.07.174-.182.312-.338.139-.173.321-.381.546-.624.226-.26.503-.58.832-.962.33-.381.702-.823 1.118-1.326 1.855-2.166 2.843-3.336 2.964-3.51.156-.225.234-.416.234-.572 0-.277-.277-.442-.832-.494-.294 0-.442-.087-.442-.26 0-.035.018-.156.052-.364.052-.26.096-.416.13-.468.052-.07.174-.104.364-.104.243 0 .668.017 1.274.052Z"
                }));
            case "Z":
                return l.createElement("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "40",
                    height: "40",
                    fill: "none",
                    viewBox: "2 2 40 40"
                }, l.createElement("path", {
                    fill: "#21242C",
                    d: "M14.634 29.792c0-.26.052-.494.156-.702 0-.017 2.297-2.608 6.89-7.774a4794.75 4794.75 0 0 1 6.942-7.826l-.26-.052h-1.924c-1.56.018-2.41.035-2.548.052-1.317.174-2.349.615-3.094 1.326-.745.71-1.326 1.707-1.742 2.99l-.052.156-.052.156-.052.104v.078l-.026.052c-.052.087-.217.13-.494.13-.295 0-.468-.087-.52-.26l.832-2.808c.139-.45.277-.918.416-1.404.156-.485.269-.858.338-1.118.087-.26.13-.399.13-.416.052-.104.095-.165.13-.182.052-.035 2.08-.052 6.084-.052h6.006c.087.087.13.156.13.208 0 .035-.052.26-.156.676-9.152 10.313-13.737 15.487-13.754 15.522l-.078.078h2.314c1.647-.017 2.54-.034 2.678-.052 1.265-.156 2.262-.529 2.99-1.118.745-.59 1.36-1.517 1.846-2.782.121-.277.26-.676.416-1.196.139-.433.234-.693.286-.78.07-.086.182-.13.338-.13h.104c.364 0 .546.096.546.286 0 .07-.355 1.24-1.066 3.51-.71 2.27-1.11 3.432-1.196 3.484-.052.035-2.14.052-6.266.052-4.108 0-6.18-.017-6.214-.052-.052-.052-.078-.104-.078-.156Z"
                }));
            case "JUMP_OUT_PARENTHESES":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M12.9571 13.2929c.3905.3905.3905 1.0237 0 1.4142C11.6871 15.9771 11 17.9485 11 20c0 2.0515.6871 4.0229 1.9571 5.2929.3905.3905.3905 1.0237 0 1.4142-.3905.3905-1.0237.3905-1.4142 0C9.81292 24.9771 9 22.4485 9 20c0-2.4485.81292-4.9771 2.5429-6.7071.3905-.3905 1.0237-.3905 1.4142 0zm4.5858 0c.3905-.3905 1.0237-.3905 1.4142 0C20.6871 15.0229 21.5 17.5515 21.5 20c0 2.4485-.8129 4.9771-2.5429 6.7071-.3905.3905-1.0237.3905-1.4142 0-.3905-.3905-.3905-1.0237 0-1.4142C18.8129 24.0229 19.5 22.0515 19.5 20c0-2.0515-.6871-4.0229-1.9571-5.2929-.3905-.3905-.3905-1.0237 0-1.4142z",
                    fill: "#21242C"
                }), l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M25.5429 16.2929c.3905-.3905 1.0237-.3905 1.4142 0l3 3c.3905.3905.3905 1.0237 0 1.4142l-3 3c-.3905.3905-1.0237.3905-1.4142 0-.3905-.3905-.3905-1.0237 0-1.4142L26.8358 21H16.25c-.5523 0-1-.4477-1-1s.4477-1 1-1h10.5858l-1.2929-1.2929c-.3905-.3905-.3905-1.0237 0-1.4142z",
                    fill: "#1865F2"
                }));
            case "JUMP_OUT_EXPONENT":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M18.2929 15.2929c.3905-.3905 1.0237-.3905 1.4142 0L26 21.5858V20c0-.5523.4477-1 1-1s1 .4477 1 1v4.003c-.0004.1345-.0273.2627-.0759.3798-.0477.1152-.1178.2234-.2105.3177a.809004.809004 0 01-.0131.0131c-.1797.1765-.4259.2856-.6975.2864H23c-.5523 0-1-.4477-1-1s.4477-1 1-1h1.5858l-6.2929-6.2929c-.3905-.3905-.3905-1.0237 0-1.4142zM31 33c-.5523 0-1-.4477-1-1V16c0-.5523.4477-1 1-1s1 .4477 1 1v16c0 .5523-.4477 1-1 1z",
                    fill: "#1865F2"
                }), l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M9 9c-.55228 0-1 .44772-1 1v6c0 .5523.44772 1 1 1h6c.5523 0 1-.4477 1-1v-6c0-.55228-.4477-1-1-1H9zm5 2h-4v4h4v-4z",
                    fill: "#21242C"
                }));
            case "JUMP_OUT_BASE":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    style: {
                        display: "block",
                        transform: "scale(1,-1)"
                    },
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M18.2929 15.2929c.3905-.3905 1.0237-.3905 1.4142 0L26 21.5858V20c0-.5523.4477-1 1-1s1 .4477 1 1v4.003c-.0004.1345-.0273.2627-.0759.3798-.0477.1152-.1178.2234-.2105.3177a.809004.809004 0 01-.0131.0131c-.1797.1765-.4259.2856-.6975.2864H23c-.5523 0-1-.4477-1-1s.4477-1 1-1h1.5858l-6.2929-6.2929c-.3905-.3905-.3905-1.0237 0-1.4142zM31 33c-.5523 0-1-.4477-1-1V16c0-.5523.4477-1 1-1s1 .4477 1 1v16c0 .5523-.4477 1-1 1z",
                    fill: "#1865F2"
                }), l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M9 9c-.55228 0-1 .44772-1 1v6c0 .5523.44772 1 1 1h6c.5523 0 1-.4477 1-1v-6c0-.55228-.4477-1-1-1H9zm5 2h-4v4h4v-4z",
                    fill: "#21242C"
                }));
            case "JUMP_INTO_NUMERATOR":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M9 11c.55228 0 1 .4477 1 1v16c0 .5523-.44772 1-1 1s-1-.4477-1-1V12c0-.5523.44772-1 1-1zm5 1c0-.5523.4477-1 1-1h3.9998c.0001 0 0 0 0 0 .1356 0 .2651.027.383.0759.1171.0484.2268.1201.3222.2149l.0042.0042c.1931.1942.29.448.2908.702V16c0 .5523-.4477 1-1 1s-1-.4477-1-1v-1.5858l-4.2929 4.2929c-.3905.3905-1.0237.3905-1.4142 0-.3905-.3905-.3905-1.0237 0-1.4142L16.5858 13H15c-.5523 0-1-.4477-1-1z",
                    fill: "#1865F2"
                }), l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M23 23c-.5523 0-1 .4477-1 1v6c0 .5523.4477 1 1 1h6c.5523 0 1-.4477 1-1v-6c0-.5523-.4477-1-1-1h-6zm5 2h-4v4h4v-4z",
                    fill: "#21242C"
                }), l.createElement("g", {
                    clipPath: "url(#clip0_874_41680)"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M20 20c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1s-.4477 1-1 1H21c-.5523 0-1-.4477-1-1z",
                    fill: "#21242C"
                })), l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M23 9c-.5523 0-1 .44772-1 1v6c0 .5523.4477 1 1 1h6c.5523 0 1-.4477 1-1v-6c0-.55228-.4477-1-1-1h-6zm5 2h-4v4h4v-4z",
                    fill: "#1865F2"
                }), l.createElement("defs", null, l.createElement("clipPath", {
                    id: "clip0_874_41680"
                }, l.createElement("path", {
                    fill: "#fff",
                    transform: "translate(20 19)",
                    d: "M0 0h12v2H0z"
                }))));
            case "JUMP_OUT_NUMERATOR":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M26 13c.5523 0 1 .4477 1 1v11.5858l1.2929-1.2929c.3905-.3905 1.0237-.3905 1.4142 0 .3905.3905.3905 1.0237 0 1.4142l-3 3c-.3905.3905-1.0237.3905-1.4142 0l-3-3c-.3905-.3905-.3905-1.0237 0-1.4142.3905-.3905 1.0237-.3905 1.4142 0L25 25.5858V14c0-.5523.4477-1 1-1zM13 23c-.5523 0-1 .4477-1 1v6c0 .5523.4477 1 1 1h6c.5523 0 1-.4477 1-1v-6c0-.5523-.4477-1-1-1h-6zm5 2h-4v4h4v-4z",
                    fill: "#1865F2"
                }), l.createElement("g", {
                    clipPath: "url(#clip0_874_41686)"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M10 20c0-.5523.4477-1 1-1h10c.5523 0 1 .4477 1 1s-.4477 1-1 1H11c-.5523 0-1-.4477-1-1z",
                    fill: "#21242C"
                })), l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M13 9c-.5523 0-1 .44772-1 1v6c0 .5523.4477 1 1 1h6c.5523 0 1-.4477 1-1v-6c0-.55228-.4477-1-1-1h-6zm5 2h-4v4h4v-4z",
                    fill: "#21242C"
                }), l.createElement("defs", null, l.createElement("clipPath", {
                    id: "clip0_874_41686"
                }, l.createElement("path", {
                    fill: "#fff",
                    transform: "translate(10 19)",
                    d: "M0 0h12v2H0z"
                }))));
            case "JUMP_OUT_DENOMINATOR":
                return l.createElement("svg", {
                    width: "40",
                    height: "40",
                    viewBox: "0 0 40 40",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M31 11c.5523 0 1 .4477 1 1v16c0 .5523-.4477 1-1 1s-1-.4477-1-1V12c0-.5523.4477-1 1-1zm-9 9c0-.5523.4477-1 1-1h4c.5523 0 1 .4477 1 1v4c0 .5523-.4477 1-1 1s-1-.4477-1-1v-1.5858l-4.2929 4.2929c-.3905.3905-1.0237.3905-1.4142 0-.3905-.3905-.3905-1.0237 0-1.4142L24.5858 21H23c-.5523 0-1-.4477-1-1z",
                    fill: "#1865F2"
                }), l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M11 23c-.5523 0-1 .4477-1 1v6c0 .5523.4477 1 1 1h6c.5523 0 1-.4477 1-1v-6c0-.5523-.4477-1-1-1h-6zm5 2h-4v4h4v-4z",
                    fill: "#21242C"
                }), l.createElement("g", {
                    clipPath: "url(#clip0_874_41692)"
                }, l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M8 20c0-.5523.44772-1 1-1h10c.5523 0 1 .4477 1 1s-.4477 1-1 1H9c-.55228 0-1-.4477-1-1z",
                    fill: "#21242C"
                })), l.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M11 9c-.5523 0-1 .44772-1 1v6c0 .5523.4477 1 1 1h6c.5523 0 1-.4477 1-1v-6c0-.55228-.4477-1-1-1h-6zm5 2h-4v4h4v-4z",
                    fill: "#21242C"
                }), l.createElement("defs", null, l.createElement("clipPath", {
                    id: "clip0_874_41692"
                }, l.createElement("path", {
                    fill: "#fff",
                    transform: "translate(8 19)",
                    d: "M0 0h12v2H0z"
                }))));
            case "UP":
                return l.createElement("svg", {
                    width: "48",
                    height: "48",
                    viewBox: "0 0 48 48"
                }, l.createElement("g", {
                    fill: "none",
                    fillRule: "evenodd",
                    transform: "rotate(90 24 24)"
                }, l.createElement("path", {
                    fill: "none",
                    d: "M0 0h48v48H0z"
                }), l.createElement("path", {
                    fill: "none",
                    d: "M12 12h24v24H12z"
                }), l.createElement("path", {
                    stroke: "#21242C",
                    strokeWidth: "2",
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                    d: "M22 18l-6 6 6 6M16 24h16"
                })));
            case "DOWN":
                return l.createElement("svg", {
                    width: "48",
                    height: "48",
                    viewBox: "0 0 48 48"
                }, l.createElement("g", {
                    fill: "none",
                    fillRule: "evenodd",
                    transform: "rotate(270 24 24)"
                }, l.createElement("path", {
                    fill: "none",
                    d: "M0 0h48v48H0z"
                }), l.createElement("path", {
                    fill: "none",
                    d: "M12 12h24v24H12z"
                }), l.createElement("path", {
                    stroke: "#21242C",
                    strokeWidth: "2",
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                    d: "M22 18l-6 6 6 6M16 24h16"
                })));
            case "LEFT":
                return l.createElement("svg", {
                    width: "48",
                    height: "48",
                    viewBox: "0 0 48 48"
                }, l.createElement("g", {
                    fill: "none",
                    fillRule: "evenodd"
                }, l.createElement("path", {
                    fill: "none",
                    d: "M0 0h48v48H0z"
                }), l.createElement("path", {
                    fill: "none",
                    d: "M12 12h24v24H12z"
                }), l.createElement("path", {
                    stroke: "#21242C",
                    strokeWidth: "2",
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                    d: "M22 18l-6 6 6 6M16 24h16"
                })));
            case "RIGHT":
                return l.createElement("svg", {
                    width: "48",
                    height: "48",
                    viewBox: "0 0 48 48"
                }, l.createElement("g", {
                    fill: "none",
                    fillRule: "evenodd",
                    transform: "rotate(180 24 24)"
                }, l.createElement("path", {
                    fill: "none",
                    d: "M0 0h48v48H0z"
                }), l.createElement("path", {
                    fill: "none",
                    d: "M12 12h24v24H12z"
                }), l.createElement("path", {
                    stroke: "#21242C",
                    strokeWidth: "2",
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                    d: "M22 18l-6 6 6 6M16 24h16"
                })));
            default:
                throw new Error(`Unhandled key: ${e}`)
            }
        }
        const Me = ({coord: e, keyConfig: t, onClickKey: n, style: r, secondary: i, action: s}) => {
            const o = i ? "#F6F6F7" : s ? "#DBDCDD" : void 0;
            return l.createElement(d.G7, {
                style: x({
                    gridColumn: e[0] + 1,
                    gridRow: e[1] + 1
                }, r),
                testId: t.id
            }, l.createElement(m.ZP, {
                onClick: e => n(t.id, e),
                onMouseDown: e => e.preventDefault(),
                style: Ce.clickable,
                "aria-label": t.ariaLabel
            }, ( ({hovered: e, focused: n, pressed: r}) => l.createElement(d.G7, {
                style: [Ce.outerBoxBase]
            }, l.createElement(d.G7, {
                style: [Ce.base, null != o ? {
                    background: o
                } : void 0, e && Ce.hovered, n && Ce.focused, r && Ce.pressed]
            }, l.createElement(Ee, {
                id: t.id
            }))))))
        }
          , Ce = a.StyleSheet.create({
            base: {
                display: "flex",
                justifyContent: "center",
                alignItems: "center",
                boxShadow: `0px 1px 0px ${s.color.offBlack32}`,
                boxSizing: "border-box",
                background: s.color.white,
                borderRadius: 4,
                borderWidth: 2,
                borderStyle: "solid",
                borderColor: "transparent",
                flex: 1,
                minHeight: 42,
                minWidth: 42,
                padding: 1,
                fontFamily: 'Lato, "Noto Sans", sans-serif'
            },
            hovered: {
                borderColor: s.color.blue,
                padding: 1,
                boxShadow: "none"
            },
            focused: {
                borderColor: s.color.blue,
                padding: 0,
                boxShadow: "none"
            },
            pressed: {
                border: "2px solid #1B50B3",
                padding: 0,
                background: `linear-gradient(0deg, rgba(24, 101, 242, 0.32), rgba(24, 101, 242, 0.32)), ${s.color.white}`,
                boxShadow: "none"
            },
            outerBoxBase: {
                padding: 1,
                height: "100%",
                width: "100%",
                boxSizing: "border-box",
                borderRadius: 7,
                border: "2px solid transparent"
            },
            clickable: {
                width: "100%",
                height: "100%",
                boxSizing: "border-box",
                ":focus": {
                    outline: "none"
                }
            }
        })
          , Te = 3;
        function _e(e) {
            const {extraKeys: t, onClickKey: n} = e
              , {strings: r} = E()
              , i = Se(r);
            return l.createElement(l.Fragment, null, t.map(( (e, t) => {
                const r = t % Te
                  , s = t / Te;
                return l.createElement(Me, {
                    key: e,
                    keyConfig: i[e],
                    onClickKey: n,
                    coord: [r, s]
                })
            }
            )))
        }
        function Ae(e, t) {
            if (!t)
                return null;
            switch (t) {
            case A.NONE:
                return null;
            case A.IN_PARENS:
                return Se(e).JUMP_OUT_PARENTHESES;
            case A.IN_SUPER_SCRIPT:
                return Se(e).JUMP_OUT_EXPONENT;
            case A.IN_SUB_SCRIPT:
                return Se(e).JUMP_OUT_BASE;
            case A.IN_NUMERATOR:
                return Se(e).JUMP_OUT_NUMERATOR;
            case A.IN_DENOMINATOR:
                return Se(e).JUMP_OUT_DENOMINATOR;
            case A.BEFORE_FRACTION:
                return Se(e).JUMP_INTO_NUMERATOR
            }
        }
        function Ie(e) {
            const {onClickKey: t, cursorContext: n} = e
              , {strings: r} = E()
              , i = Ae(r, n)
              , s = Se(r);
            return l.createElement(l.Fragment, null, l.createElement(Me, {
                keyConfig: s.NUM_1,
                onClickKey: t,
                coord: [0, 2]
            }), l.createElement(Me, {
                keyConfig: s.NUM_2,
                onClickKey: t,
                coord: [1, 2]
            }), l.createElement(Me, {
                keyConfig: s.NUM_3,
                onClickKey: t,
                coord: [2, 2]
            }), l.createElement(Me, {
                keyConfig: s.NUM_4,
                onClickKey: t,
                coord: [0, 1]
            }), l.createElement(Me, {
                keyConfig: s.NUM_5,
                onClickKey: t,
                coord: [1, 1]
            }), l.createElement(Me, {
                keyConfig: s.NUM_6,
                onClickKey: t,
                coord: [2, 1]
            }), l.createElement(Me, {
                keyConfig: s.NUM_7,
                onClickKey: t,
                coord: [0, 0]
            }), l.createElement(Me, {
                keyConfig: s.NUM_8,
                onClickKey: t,
                coord: [1, 0]
            }), l.createElement(Me, {
                keyConfig: s.NUM_9,
                onClickKey: t,
                coord: [2, 0]
            }), l.createElement(Me, {
                keyConfig: s.NUM_0,
                onClickKey: t,
                coord: [0, 3]
            }), l.createElement(Me, {
                keyConfig: s.DECIMAL,
                onClickKey: t,
                coord: [1, 3]
            }), l.createElement(Me, {
                keyConfig: s.NEGATIVE,
                onClickKey: t,
                coord: [2, 3]
            }), l.createElement(Me, {
                keyConfig: s.PERCENT,
                onClickKey: t,
                coord: [3, 0],
                secondary: !0
            }), l.createElement(Me, {
                keyConfig: s.PI,
                onClickKey: t,
                coord: [3, 1],
                secondary: !0
            }), l.createElement(Me, {
                keyConfig: s.FRAC,
                onClickKey: t,
                coord: [3, 2],
                secondary: !0
            }), i && l.createElement(Me, {
                keyConfig: i,
                onClickKey: t,
                coord: [3, 3],
                secondary: !0
            }), l.createElement(Me, {
                keyConfig: s.BACKSPACE,
                onClickKey: t,
                coord: [4, 3],
                action: !0
            }))
        }
        function Re(e) {
            const {onClickKey: t} = e
              , {strings: n} = E()
              , r = Se(n);
            return l.createElement(l.Fragment, null, l.createElement(Me, {
                keyConfig: r.SIN,
                onClickKey: t,
                coord: [0, 0]
            }), l.createElement(Me, {
                keyConfig: r.COS,
                onClickKey: t,
                coord: [1, 0]
            }), l.createElement(Me, {
                keyConfig: r.TAN,
                onClickKey: t,
                coord: [2, 0]
            }))
        }
        function Ne(e) {
            const {onClickKey: t} = e
              , {strings: n} = E()
              , r = Se(n);
            return l.createElement(l.Fragment, null, l.createElement(Me, {
                keyConfig: r.NUM_1,
                onClickKey: t,
                coord: [0, 2]
            }), l.createElement(Me, {
                keyConfig: r.NUM_2,
                onClickKey: t,
                coord: [1, 2]
            }), l.createElement(Me, {
                keyConfig: r.NUM_3,
                onClickKey: t,
                coord: [2, 2]
            }), l.createElement(Me, {
                keyConfig: r.NUM_4,
                onClickKey: t,
                coord: [0, 1]
            }), l.createElement(Me, {
                keyConfig: r.NUM_5,
                onClickKey: t,
                coord: [1, 1]
            }), l.createElement(Me, {
                keyConfig: r.NUM_6,
                onClickKey: t,
                coord: [2, 1]
            }), l.createElement(Me, {
                keyConfig: r.NUM_7,
                onClickKey: t,
                coord: [0, 0]
            }), l.createElement(Me, {
                keyConfig: r.NUM_8,
                onClickKey: t,
                coord: [1, 0]
            }), l.createElement(Me, {
                keyConfig: r.NUM_9,
                onClickKey: t,
                coord: [2, 0]
            }), l.createElement(Me, {
                keyConfig: r.NUM_0,
                onClickKey: t,
                coord: [0, 3]
            }), l.createElement(Me, {
                keyConfig: r.DECIMAL,
                onClickKey: t,
                coord: [1, 3]
            }), l.createElement(Me, {
                keyConfig: r.NEGATIVE,
                onClickKey: t,
                coord: [2, 3]
            }), l.createElement(Me, {
                keyConfig: r.PERCENT,
                onClickKey: t,
                coord: [3, 0],
                secondary: !0
            }))
        }
        function Pe(e) {
            const {onClickKey: t, preAlgebra: n, logarithms: r, basicRelations: i, advancedRelations: s} = e
              , {strings: o} = E()
              , a = Se(o);
            return l.createElement(l.Fragment, null, n && l.createElement(l.Fragment, null, l.createElement(Me, {
                keyConfig: a.EXP_2,
                onClickKey: t,
                coord: [0, 0]
            }), l.createElement(Me, {
                keyConfig: a.EXP,
                onClickKey: t,
                coord: [1, 0]
            }), l.createElement(Me, {
                keyConfig: a.SQRT,
                onClickKey: t,
                coord: [2, 0]
            }), l.createElement(Me, {
                keyConfig: a.RADICAL,
                onClickKey: t,
                coord: [3, 0]
            })), r && l.createElement(l.Fragment, null, l.createElement(Me, {
                keyConfig: a.LOG,
                onClickKey: t,
                coord: [0, 1]
            }), l.createElement(Me, {
                keyConfig: a.LOG_N,
                onClickKey: t,
                coord: [1, 1]
            }), l.createElement(Me, {
                keyConfig: a.LN,
                onClickKey: t,
                coord: [2, 1]
            })), i && l.createElement(l.Fragment, null, l.createElement(Me, {
                keyConfig: a.EQUAL,
                onClickKey: t,
                coord: [0, 2]
            }), l.createElement(Me, {
                keyConfig: a.LT,
                onClickKey: t,
                coord: [1, 2]
            }), l.createElement(Me, {
                keyConfig: a.GT,
                onClickKey: t,
                coord: [2, 2]
            })), s && l.createElement(l.Fragment, null, l.createElement(Me, {
                keyConfig: a.NEQ,
                onClickKey: t,
                coord: [0, 3]
            }), l.createElement(Me, {
                keyConfig: a.LEQ,
                onClickKey: t,
                coord: [1, 3]
            }), l.createElement(Me, {
                keyConfig: a.GEQ,
                onClickKey: t,
                coord: [2, 3]
            })))
        }
        function Oe({coord: e, keyConfig: t, onClickKey: n}) {
            const r = function(e) {
                switch (e) {
                case "UP":
                    return Le.up;
                case "RIGHT":
                    return Le.right;
                case "DOWN":
                    return Le.down;
                case "LEFT":
                    return Le.left;
                default:
                    throw new Error(`Invalid key: ${e}`)
                }
            }(t.id);
            return l.createElement(d.G7, {
                style: {
                    gridColumn: e[0] + 1,
                    gridRow: e[1] + 1
                }
            }, l.createElement(m.ZP, {
                onClick: e => n(t.id, e),
                style: Le.clickable,
                "aria-label": t.ariaLabel
            }, ( ({hovered: e, focused: n, pressed: i}) => l.createElement(d.G7, {
                style: Le.outerBoxBase
            }, l.createElement(d.G7, {
                style: [Le.base, r, e && Le.hovered, n && Le.focused, i && Le.pressed]
            }, l.createElement(Ee, {
                id: t.id
            }))))))
        }
        const Le = a.StyleSheet.create({
            clickable: {
                width: "100%",
                height: "100%",
                ":focus": {
                    outline: "none"
                }
            },
            outerBoxBase: {
                height: "100%",
                width: "100%"
            },
            base: {
                boxShadow: `0px 1px 0px ${s.color.offBlack32}`,
                display: "flex",
                justifyContent: "center",
                alignItems: "center",
                background: s.color.white,
                borderWidth: 2,
                borderColor: s.color.white
            },
            up: {
                borderTopLeftRadius: 4,
                borderTopRightRadius: 4
            },
            right: {
                borderTopRightRadius: 4,
                borderBottomRightRadius: 4
            },
            down: {
                borderBottomLeftRadius: 4,
                borderBottomRightRadius: 4
            },
            left: {
                borderTopLeftRadius: 4,
                borderBottomLeftRadius: 4
            },
            hovered: {
                borderColor: s.color.blue,
                boxShadow: "none"
            },
            focused: {
                borderColor: s.color.blue,
                boxShadow: "none"
            },
            pressed: {
                border: "2px solid #1B50B3",
                background: `linear-gradient(0deg, rgba(24, 101, 242, 0.32), rgba(24, 101, 242, 0.32)), ${s.color.white}`,
                boxShadow: "none"
            }
        });
        function De(e) {
            const {onClickKey: t} = e
              , {strings: n} = E()
              , r = Se(n);
            return l.createElement(d.G7, {
                style: Fe.container
            }, l.createElement(d.G7, {
                style: Fe.grid
            }, l.createElement(Oe, {
                keyConfig: r.UP,
                onClickKey: t,
                coord: [1, 0]
            }), l.createElement(Oe, {
                keyConfig: r.RIGHT,
                onClickKey: t,
                coord: [2, 1]
            }), l.createElement(Oe, {
                keyConfig: r.DOWN,
                onClickKey: t,
                coord: [1, 2]
            }), l.createElement(Oe, {
                keyConfig: r.LEFT,
                onClickKey: t,
                coord: [0, 1]
            }), l.createElement(d.G7, {
                style: Fe.spacer
            })))
        }
        const Fe = a.StyleSheet.create({
            container: {
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                padding: "0 1.5rem"
            },
            grid: {
                width: 140,
                height: 140,
                display: "grid",
                gridTemplateColumns: "repeat(3, 1fr)",
                gridTemplateRows: "repeat(3, 1fr)"
            },
            spacer: {
                gridColumn: 2,
                gridRow: 2,
                background: s.color.white
            }
        });
        function ze(e) {
            const {onClickKey: t, cursorContext: n, divisionKey: r, convertDotToTimes: i, selectedPage: s} = e
              , {strings: o, locale: a} = E()
              , c = Ae(o, n)
              , h = Se(o)
              , p = "Numbers" === s || "Operators" === s ? [3, 1] : [3, 0];
            return l.createElement(l.Fragment, null, l.createElement(Me, {
                keyConfig: h.FRAC,
                onClickKey: t,
                coord: p,
                secondary: !0
            }), l.createElement(Me, {
                keyConfig: h.PLUS,
                onClickKey: t,
                coord: [4, 0],
                secondary: !0
            }), l.createElement(Me, {
                keyConfig: h.MINUS,
                onClickKey: t,
                coord: [5, 0],
                secondary: !0
            }), l.createElement(Me, {
                keyConfig: L(a, !!i) ? h.TIMES : h.CDOT,
                onClickKey: t,
                coord: [4, 1],
                secondary: !0
            }), r && l.createElement(Me, {
                keyConfig: h.DIVIDE,
                onClickKey: t,
                coord: [5, 1],
                secondary: !0
            }), l.createElement(Me, {
                keyConfig: h.LEFT_PAREN,
                onClickKey: t,
                coord: [4, 2],
                secondary: !0
            }), l.createElement(Me, {
                keyConfig: h.RIGHT_PAREN,
                onClickKey: t,
                coord: [5, 2],
                secondary: !0
            }), c && l.createElement(Me, {
                keyConfig: c,
                onClickKey: t,
                coord: [4, 3],
                secondary: !0
            }), l.createElement(Me, {
                keyConfig: h.BACKSPACE,
                onClickKey: t,
                coord: [5, 3],
                action: !0
            }))
        }
        const Be = ["extraKeys"];
        function qe(e) {
            let {extraKeys: t=[]} = e
              , n = function(e, t) {
                if (null == e)
                    return {};
                var n = {};
                for (var r in e)
                    if ({}.hasOwnProperty.call(e, r)) {
                        if (t.includes(r))
                            continue;
                        n[r] = e[r]
                    }
                return n
            }(e, Be);
            const r = n.fractionsOnly ? "Fractions" : "Numbers"
              , [i,s] = l.useState(r)
              , [o,a] = l.useState(!1)
              , c = function(e) {
                var t;
                if (e.fractionsOnly)
                    return [];
                const n = ["Numbers"];
                return (e.preAlgebra || e.logarithms || e.basicRelations || e.advancedRelations) && n.push("Operators"),
                e.trigonometry && n.push("Geometry"),
                null != (t = e.extraKeys) && t.length && n.push("Extras"),
                n
            }(x({}, n, {
                extraKeys: t
            }))
              , {onClickKey: h, cursorContext: p, convertDotToTimes: u, divisionKey: m, preAlgebra: f, logarithms: g, basicRelations: v, advancedRelations: y, showDismiss: b, onAnalyticsEvent: w, fractionsOnly: k, expandedView: S} = n
              , E = k ? He.fractionsGrid : He.expressionGrid;
            return (0,
            l.useEffect)(( () => {
                s(r)
            }
            ), [k, r]),
            (0,
            l.useEffect)(( () => (o || (w({
                type: "math-input:keypad-opened",
                payload: {
                    virtualKeypadVersion: "MATH_INPUT_KEYPAD_V2"
                }
            }),
            a(!0)),
            () => {
                o && (w({
                    type: "math-input:keypad-closed",
                    payload: {
                        virtualKeypadVersion: "MATH_INPUT_KEYPAD_V2"
                    }
                }),
                a(!1))
            }
            )), [w, o]),
            l.createElement(d.G7, {
                style: S ? He.keypadOuterContainer : null
            }, l.createElement(d.G7, {
                style: [He.wrapper, S ? He.expandedWrapper : null]
            }, l.createElement(be, {
                items: c,
                selectedItem: i,
                onSelectItem: e => {
                    s(e)
                }
                ,
                onClickClose: b ? () => h("DISMISS") : void 0
            }), l.createElement(d.G7, {
                style: He.keypadInnerContainer
            }, l.createElement(d.G7, {
                style: [He.keypadGrid, E],
                "aria-label": "Keypad"
            }, "Fractions" === i && l.createElement(Ie, {
                onClickKey: h,
                cursorContext: p
            }), "Numbers" === i && l.createElement(Ne, {
                onClickKey: h
            }), "Extras" === i && l.createElement(_e, {
                onClickKey: h,
                extraKeys: t
            }), "Operators" === i && l.createElement(Pe, {
                onClickKey: h,
                preAlgebra: f,
                logarithms: g,
                basicRelations: v,
                advancedRelations: y
            }), "Geometry" === i && l.createElement(Re, {
                onClickKey: h
            }), !k && l.createElement(ze, {
                onClickKey: h,
                cursorContext: p,
                convertDotToTimes: u,
                divisionKey: m,
                selectedPage: i
            })), S && l.createElement(De, {
                onClickKey: h
            }))))
        }
        const He = a.StyleSheet.create({
            keypadOuterContainer: {
                display: "flex",
                alignItems: "center"
            },
            wrapper: {
                background: s.color.white
            },
            expandedWrapper: {
                borderWidth: "1px 1px 0 1px",
                borderColor: s.color.offBlack32,
                maxWidth: 500,
                borderRadius: "3px 3px 0 0"
            },
            keypadInnerContainer: {
                display: "flex",
                flexDirection: "row",
                backgroundColor: "#DBDCDD"
            },
            keypadGrid: {
                display: "grid",
                gridTemplateRows: "repeat(4, 1fr)",
                flex: 1
            },
            expressionGrid: {
                gridTemplateColumns: "repeat(6, 1fr)"
            },
            fractionsGrid: {
                gridTemplateColumns: "repeat(5, 1fr)"
            }
        });
        function Ue(e) {
            const t = [];
            if (!e)
                return t;
            if (Array.isArray(e))
                for (const n of e)
                    t.push(...Ue(n));
            else
                t.push(e);
            return t
        }
        function Ge(e) {
            const t = []
              , n = [];
            if (!e)
                return {
                    style: {},
                    className: ""
                };
            const r = "undefined" != typeof globalThis && globalThis.SNAPSHOT_INLINE_APHRODITE;
            Ue(e).forEach((e => {
                const i = e._definition;
                if (null != i)
                    if (r) {
                        const e = {};
                        for (const [t,n] of (0,
                        o.qh)(i))
                            e[t.replace(/-[a-z]/g, (e => e[1].toUpperCase()))] = n;
                        n.push(e)
                    } else
                        t.push(e);
                else
                    n.push(e)
            }
            ));
            const i = Object.assign({}, ...n);
            if (n.length > 0 && !r) {
                const e = a.StyleSheet.create({
                    inlineStyles: i
                });
                t.push(e.inlineStyles)
            }
            return {
                style: r ? i : {},
                className: (0,
                a.css)(...t)
            }
        }
        class We extends l.Component {
            static getDerivedStateFromProps({in: e}, t) {
                return e && "unmounted" === t.status ? {
                    status: "mounted"
                } : null
            }
            constructor(e) {
                super(e),
                this.classNameQueue = void 0,
                this.appliedClassNames = void 0,
                this._isMounted = !1,
                this.addClass = (e, t) => {
                    t && (e.classList.add(t),
                    this.appliedClassNames.add(t))
                }
                ,
                this.removeClass = (e, t) => {
                    t && (e.classList.remove(t),
                    this.appliedClassNames.delete(t))
                }
                ,
                this.flushClassNameQueue = () => {
                    if (this._isMounted) {
                        const e = c.findDOMNode(this);
                        e instanceof Element && this.classNameQueue.forEach(( ([t,n]) => {
                            this.removeClass(e, t),
                            this.addClass(e, n)
                        }
                        ))
                    }
                    this.classNameQueue.length = 0
                }
                ,
                this._isMounted = !1,
                this.classNameQueue = [],
                this.appliedClassNames = new Set,
                this.state = {
                    status: "mounted"
                }
            }
            componentDidMount() {
                this._isMounted = !0,
                "number" == typeof this.props.appearTimeout ? this.transition("appear", this.props.appearTimeout) : this.transition("enter", this.props.enterTimeout)
            }
            componentDidUpdate(e, t) {
                e.in && !this.props.in ? this.transition("leave", this.props.leaveTimeout) : !e.in && this.props.in && this.transition("enter", this.props.enterTimeout),
                "mounted" !== t.status && "mounted" === this.state.status && this.setState({
                    status: "unmounted"
                })
            }
            componentWillUnmount() {
                this._isMounted = !1,
                this.props.schedule.clearAll()
            }
            removeAllClasses(e) {
                for (const t of this.appliedClassNames)
                    this.removeClass(e, t)
            }
            transition(e, t) {
                const n = c.findDOMNode(this);
                if (!(n instanceof Element))
                    return;
                this.removeAllClasses(n),
                this.props.schedule.clearAll();
                const r = "function" == typeof this.props.transitionStyles ? this.props.transitionStyles() : this.props.transitionStyles
                  , {className: i} = Ge(r[e])
                  , {className: s} = Ge([r[e], r[e + "Active"]]);
                this.addClass(n, i),
                this.queueClass(i, s),
                "leave" === e && this.props.schedule.timeout(( () => {
                    this._isMounted && this.setState({
                        status: "unmounted"
                    })
                }
                ), t || 0)
            }
            queueClass(e, t) {
                this.classNameQueue.push([e, t]),
                this.props.schedule.timeout(this.flushClassNameQueue, 0)
            }
            render() {
                const {status: e} = this.state;
                return "unmounted" === e ? null : this.props.children
            }
        }
        var Ve = (0,
        g.$K)(We);
        class $e extends l.Component {
            render() {
                const {children: e} = this.props;
                return l.createElement(f.Z, {
                    component: null
                }, l.Children.map(e, (e => l.createElement(Ve, {
                    transitionStyles: this.props.transitionStyle,
                    appearTimeout: this.props.transitionAppearTimeout,
                    enterTimeout: this.props.transitionEnterTimeout,
                    leaveTimeout: this.props.transitionLeaveTimeout
                }, e))))
            }
        }
        const je = 200;
        class Ke extends l.Component {
            constructor(...e) {
                super(...e),
                this._containerRef = l.createRef(),
                this._containerResizeObserver = null,
                this._throttleResize = !1,
                this.state = {
                    containerWidth: 0
                },
                this._resize = () => {
                    var e;
                    const t = (null == (e = this._containerRef.current) ? void 0 : e.clientWidth) || 0;
                    this.setState({
                        containerWidth: t
                    })
                }
                ,
                this._throttleResizeHandler = () => {
                    this._throttleResize || (this._throttleResize = !0,
                    setTimeout(( () => {
                        this._resize(),
                        this._throttleResize = !1
                    }
                    ), 100))
                }
                ,
                this.activate = () => {
                    this.props.setKeypadActive(!0)
                }
                ,
                this.dismiss = () => {
                    var e, t;
                    this.props.setKeypadActive(!1),
                    null == (e = (t = this.props).onDismiss) || e.call(t)
                }
                ,
                this.configure = (e, t) => {
                    this.setState({
                        keypadConfig: e
                    }),
                    setTimeout(( () => t && t()))
                }
                ,
                this.setCursor = e => {
                    this.setState({
                        cursor: e
                    })
                }
                ,
                this.setKeyHandler = e => {
                    this.setState({
                        keyHandler: e
                    })
                }
                ,
                this.getDOMNode = () => c.findDOMNode(this)
            }
            componentDidMount() {
                var e, t;
                this._resize(),
                window.addEventListener("resize", this._throttleResizeHandler),
                window.addEventListener("orientationchange", this._throttleResizeHandler),
                "ResizeObserver"in window && (this._containerResizeObserver = new window.ResizeObserver(this._throttleResizeHandler),
                this._containerRef.current && this._containerResizeObserver.observe(this._containerRef.current)),
                null == (e = (t = this.props).onElementMounted) || e.call(t, {
                    activate: this.activate,
                    dismiss: this.dismiss,
                    configure: this.configure,
                    setCursor: this.setCursor,
                    setKeyHandler: this.setKeyHandler,
                    getDOMNode: this.getDOMNode
                })
            }
            componentWillUnmount() {
                var e;
                window.removeEventListener("resize", this._throttleResizeHandler),
                window.removeEventListener("orientationchange", this._throttleResizeHandler),
                null == (e = this._containerResizeObserver) || e.disconnect()
            }
            _handleClickKey(e) {
                var t, n;
                if ("DISMISS" === e)
                    return void this.dismiss();
                const r = null == (t = (n = this.state).keyHandler) ? void 0 : t.call(n, e);
                this.setState({
                    cursor: r
                })
            }
            render() {
                const {keypadActive: e, style: t} = this.props
                  , {containerWidth: n, cursor: r, keypadConfig: i} = this.state
                  , s = [Ze.keypadContainer, ...Array.isArray(t) ? t : [t]]
                  , o = "EXPRESSION" === (null == i ? void 0 : i.keypadType)
                  , a = null == i ? void 0 : i.times;
                return l.createElement(w, {
                    style: s,
                    forwardRef: this._containerRef
                }, l.createElement($e, {
                    transitionEnterTimeout: je,
                    transitionLeaveTimeout: je,
                    transitionStyle: {
                        enter: {
                            transform: "translate3d(0, 100%, 0)",
                            transition: "200ms ease-out"
                        },
                        enterActive: {
                            transform: "translate3d(0, 0, 0)"
                        },
                        leave: {
                            transform: "translate3d(0, 0, 0)",
                            transition: "200ms ease-out"
                        },
                        leaveActive: {
                            transform: "translate3d(0, 100%, 0)"
                        }
                    }
                }, e ? l.createElement(qe, {
                    onAnalyticsEvent: this.props.onAnalyticsEvent,
                    extraKeys: null == i ? void 0 : i.extraKeys,
                    onClickKey: e => this._handleClickKey(e),
                    cursorContext: null == r ? void 0 : r.context,
                    fractionsOnly: !o,
                    convertDotToTimes: a,
                    divisionKey: o,
                    trigonometry: o,
                    preAlgebra: o,
                    logarithms: o,
                    basicRelations: o,
                    advancedRelations: o,
                    expandedView: n > 500,
                    showDismiss: !0
                }) : null))
            }
        }
        const Ze = a.StyleSheet.create({
            keypadContainer: {
                bottom: 0,
                left: 0,
                right: 0,
                position: "fixed"
            }
        });
        function Ye(e) {
            return l.createElement(i.i.Consumer, null, ( ({keypadActive: t, setKeypadActive: n}) => l.createElement(Ke, x({}, e, {
                keypadActive: t,
                setKeypadActive: n
            }))))
        }
        const Xe = y().shape({
            activate: y().func.isRequired,
            dismiss: y().func.isRequired,
            configure: y().func.isRequired,
            setCursor: y().func.isRequired,
            setKeyHandler: y().func.isRequired,
            getDOMNode: y().func.isRequired
        })
          , Je = ["PLUS", "MINUS", "NEGATIVE", "TIMES", "DIVIDE", "DECIMAL", "PERIOD", "PERCENT", "CDOT", "EQUAL", "NEQ", "GT", "LT", "GEQ", "LEQ", "FRAC_INCLUSIVE", "FRAC_EXCLUSIVE", "FRAC", "EXP", "EXP_2", "EXP_3", "SQRT", "CUBE_ROOT", "RADICAL", "LEFT_PAREN", "RIGHT_PAREN", "LN", "LOG", "LOG_N", "SIN", "COS", "TAN", "PI", "THETA", "UP", "RIGHT", "DOWN", "LEFT", "BACKSPACE", "DISMISS", "JUMP_OUT_PARENTHESES", "JUMP_OUT_EXPONENT", "JUMP_OUT_BASE", "JUMP_INTO_NUMERATOR", "JUMP_OUT_NUMERATOR", "JUMP_OUT_DENOMINATOR", "NUM_0", "NUM_1", "NUM_2", "NUM_3", "NUM_4", "NUM_5", "NUM_6", "NUM_7", "NUM_8", "NUM_9", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"];
        let Qe = function(e) {
            return e.FRACTION = "FRACTION",
            e.EXPRESSION = "EXPRESSION",
            e
        }({})
    }
    ,
    99961: (e, t, n) => {
        "use strict";
        n.d(t, {
            _E: () => Rt,
            Pj: () => Dv,
            Zp: () => pc,
            Cx: () => kc,
            ye: () => Mt,
            ms: () => Nt,
            Dependencies: () => bt,
            yU: () => rw,
            A2: () => Ht,
            GrapherUtil: () => iw,
            AE: () => Nh,
            mX: () => Fv,
            $g: () => Bv,
            Rn: () => Ta,
            Gl: () => mf,
            vW: () => Mu,
            Pd: () => eo,
            eA: () => Qn,
            TR: () => Lt,
            pV: () => Uv,
            Zb: () => Ot,
            x7: () => eg,
            MultiItems: () => yy,
            Af: () => Pa,
            v5: () => Cu,
            bD: () => it,
            oz: () => st,
            ZU: () => uo,
            YD: () => sv,
            OB: () => Ry,
            Y8: () => yc,
            Th: () => ea,
            UT: () => Vv,
            dm: () => bv,
            Util: () => vn,
            WJ: () => xt,
            Cu: () => qo,
            w6: () => Ny,
            tW: () => Nv,
            FI: () => ff,
            o: () => ry,
            f_: () => ty,
            components: () => Su,
            vi: () => Vo,
            td: () => Oy,
            XJ: () => nw,
            Md: () => Ty,
            nB: () => Jx,
            UH: () => Qx,
            vn: () => Xx,
            b7: () => ew,
            C3: () => Zx,
            BM: () => Yx,
            Gy: () => Kx,
            nf: () => zm,
            pe: () => Zy,
            qi: () => qy,
            nI: () => Fm,
            ew: () => Ap,
            hN: () => Yy,
            zi: () => Wy,
            vp: () => $o,
            Kw: () => Nm,
            wg: () => Pm,
            DN: () => Am,
            vc: () => Om,
            KW: () => Dm,
            DI: () => Im,
            OY: () => Lm,
            QG: () => Jy,
            Jn: () => zy,
            xm: () => Ly,
            Wz: () => Dy,
            $3: () => Py,
            Ft: () => By,
            jG: () => Fy,
            Jq: () => Ti,
            JX: () => Oi,
            S1: () => Iv,
            i7: () => Gy,
            Yu: () => Ln,
            DS: () => ky,
            iJ: () => Xy,
            Nw: () => jy,
            rz: () => Pv,
            uJ: () => sy,
            Qs: () => Lv,
            Np: () => Rv,
            zZ: () => Tu,
            ax: () => _u,
            P8: () => ev,
            EX: () => Kp,
            w5: () => Nl,
            ET: () => jx,
            KT: () => Au,
            F9: () => Go,
            VG: () => Iy,
            JZ: () => Xv,
            O4: () => Ky,
            fw: () => Kv,
            RH: () => ot,
            GF: () => Cy,
            DA: () => Ov
        });
        var r = n(79217)
          , i = n(814561)
          , s = n(938302)
          , o = n(45697)
          , a = n.n(o);
        function l() {
            return l = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n)
                        ({}).hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            }
            ,
            l.apply(null, arguments)
        }
        class c {
            static parse(e) {
                return new h(e).parse()
            }
            match(e) {
                throw new s.uI("Selector subclasses must implement match()",s.D1.NotAllowed)
            }
            toString() {
                return "Unknown selector class"
            }
        }
        class h {
            constructor(e) {
                this.tokens = void 0,
                this.tokenIndex = void 0,
                e = e.trim().replace(/\s+/g, " "),
                this.tokens = e.match(h.TOKENS) || [],
                this.tokenIndex = 0
            }
            nextToken() {
                return this.tokens[this.tokenIndex] || ""
            }
            consume() {
                this.tokenIndex++
            }
            isIdentifier() {
                const e = this.tokens[this.tokenIndex][0];
                return e >= "a" && e <= "z" || e >= "A" && e <= "Z"
            }
            skipSpace() {
                for (; " " === this.nextToken(); )
                    this.consume()
            }
            parse() {
                const e = this.parseTreeSelector();
                let t = this.nextToken();
                if (!t)
                    return e;
                const n = [e];
                for (; t; ) {
                    if ("," !== t)
                        throw new p("Expected comma");
                    this.consume(),
                    n.push(this.parseTreeSelector()),
                    t = this.nextToken()
                }
                return new u(n)
            }
            parseTreeSelector() {
                this.skipSpace();
                let e = this.parseNodeSelector();
                for (; ; ) {
                    const t = this.nextToken();
                    if (!t || "," === t)
                        break;
                    if (" " === t)
                        this.consume(),
                        e = new g(e,this.parseNodeSelector());
                    else if (">" === t)
                        this.consume(),
                        e = new v(e,this.parseNodeSelector());
                    else if ("+" === t)
                        this.consume(),
                        e = new y(e,this.parseNodeSelector());
                    else {
                        if ("~" !== t)
                            throw new p("Unexpected token: " + t);
                        this.consume(),
                        e = new b(e,this.parseNodeSelector())
                    }
                }
                return e
            }
            parseNodeSelector() {
                this.skipSpace();
                const e = this.nextToken();
                if ("*" === e)
                    return this.consume(),
                    new d;
                if (this.isIdentifier())
                    return this.consume(),
                    new m(e);
                throw new p("Expected node type")
            }
        }
        h.TOKENS = void 0,
        h.TOKENS = /([a-zA-Z][\w-]*)|(\d+)|[^\s]|(\s(?=[a-zA-Z\*]))/g;
        class p extends Error {
            constructor(e) {
                super(e)
            }
        }
        class u extends c {
            constructor(e) {
                super(),
                this.selectors = void 0,
                this.selectors = e
            }
            match(e) {
                for (let t = 0; t < this.selectors.length; t++) {
                    const n = this.selectors[t].match(e);
                    if (n)
                        return n
                }
                return null
            }
            toString() {
                let e = "";
                for (let t = 0; t < this.selectors.length; t++)
                    e += t > 0 ? ", " : "",
                    e += this.selectors[t].toString();
                return e
            }
        }
        class d extends c {
            match(e) {
                return [e.currentNode()]
            }
            toString() {
                return "*"
            }
        }
        class m extends c {
            constructor(e) {
                super(),
                this.type = void 0,
                this.type = e
            }
            match(e) {
                const t = e.currentNode();
                return t.type === this.type ? [t] : null
            }
            toString() {
                return this.type
            }
        }
        class f extends c {
            constructor(e, t) {
                super(),
                this.left = void 0,
                this.right = void 0,
                this.left = e,
                this.right = t
            }
        }
        class g extends f {
            constructor(e, t) {
                super(e, t)
            }
            match(e) {
                const t = this.right.match(e);
                if (t)
                    for (e = e.clone(); e.hasParent(); ) {
                        e.goToParent();
                        const n = this.left.match(e);
                        if (n)
                            return n.concat(t)
                    }
                return null
            }
            toString() {
                return this.left.toString() + " " + this.right.toString()
            }
        }
        class v extends f {
            constructor(e, t) {
                super(e, t)
            }
            match(e) {
                const t = this.right.match(e);
                if (t && e.hasParent()) {
                    (e = e.clone()).goToParent();
                    const n = this.left.match(e);
                    if (n)
                        return n.concat(t)
                }
                return null
            }
            toString() {
                return this.left.toString() + " > " + this.right.toString()
            }
        }
        class y extends f {
            constructor(e, t) {
                super(e, t)
            }
            match(e) {
                const t = this.right.match(e);
                if (t && e.hasPreviousSibling()) {
                    (e = e.clone()).goToPreviousSibling();
                    const n = this.left.match(e);
                    if (n)
                        return n.concat(t)
                }
                return null
            }
            toString() {
                return this.left.toString() + " + " + this.right.toString()
            }
        }
        class b extends f {
            constructor(e, t) {
                super(e, t)
            }
            match(e) {
                const t = this.right.match(e);
                if (t)
                    for (e = e.clone(); e.hasPreviousSibling(); ) {
                        e.goToPreviousSibling();
                        const n = this.left.match(e);
                        if (n)
                            return n.concat(t)
                    }
                return null
            }
            toString() {
                return this.left.toString() + " ~ " + this.right.toString()
            }
        }
        class x {
            constructor(e, t, n, r, i, o) {
                if (this.name = void 0,
                this.severity = void 0,
                this.selector = void 0,
                this.pattern = void 0,
                this.lint = void 0,
                this.applies = void 0,
                this.message = void 0,
                !n && !r)
                    throw new s.uI("Lint rules must have a selector or pattern",s.D1.InvalidInput,{
                        metadata: {
                            name: e
                        }
                    });
                this.name = e || "unnamed rule",
                this.severity = t || x.Severity.BULK_WARNING,
                this.selector = n || x.DEFAULT_SELECTOR,
                this.pattern = r || null,
                "function" == typeof i ? (this.lint = i,
                this.message = null) : (this.lint = (...e) => this._defaultLintFunction(...e),
                this.message = i),
                this.applies = o || function() {
                    return !0
                }
            }
            static makeRule(e) {
                return new x(e.name,e.severity,e.selector ? c.parse(e.selector) : null,x.makePattern(e.pattern),e.lint || e.message,e.applies)
            }
            check(e, t, n, r) {
                const i = this.selector.match(t);
                if (!i)
                    return null;
                let s;
                if (s = this.pattern ? n.match(this.pattern) : x.FakePatternMatch(n, n, 0),
                !s)
                    return null;
                try {
                    const e = this.lint(t, n, i, s, r);
                    return e ? "string" == typeof e ? {
                        rule: this.name,
                        severity: this.severity,
                        message: e,
                        start: 0,
                        end: n.length
                    } : {
                        rule: this.name,
                        severity: this.severity,
                        message: e.message,
                        start: e.start,
                        end: e.end
                    } : null
                } catch (e) {
                    return {
                        rule: "lint-rule-failure",
                        message: `Exception in rule ${this.name}: ${e.message}\nStack trace:\n${e.stack}`,
                        start: 0,
                        end: n.length
                    }
                }
            }
            _defaultLintFunction(e, t, n, r, i) {
                return {
                    message: this.message || "",
                    start: r.index,
                    end: r.index + r[0].length
                }
            }
            static makePattern(e) {
                if (!e)
                    return null;
                if (e instanceof RegExp)
                    return e;
                if ("/" === e[0]) {
                    const t = e.lastIndexOf("/")
                      , n = e.substring(1, t)
                      , r = e.substring(t + 1);
                    return new RegExp(n,r)
                }
                return new RegExp(e)
            }
            static FakePatternMatch(e, t, n) {
                const r = [t];
                return r.index = n,
                r.input = e,
                r
            }
        }
        x.DEFAULT_SELECTOR = void 0,
        x.Severity = {
            ERROR: 1,
            WARNING: 2,
            GUIDELINE: 3,
            BULK_WARNING: 4
        },
        x.DEFAULT_SELECTOR = c.parse("text");
        const w = /\/\/([^\/]+)/;
        var k = x.makeRule({
            name: "absolute-url",
            severity: x.Severity.GUIDELINE,
            selector: "link, image",
            lint: function(e, t, n, r) {
                const i = function(e) {
                    if (!e)
                        return "";
                    const t = e.match(w);
                    return t ? t[1] : ""
                }(n[0].target);
                if ("khanacademy.org" === i || i.endsWith(".khanacademy.org"))
                    return "Don't use absolute URLs:\nWhen linking to KA content or images, omit the\nhttps://www.khanacademy.org URL prefix.\nUse a relative URL beginning with / instead."
            }
        })
          , S = x.makeRule({
            name: "blockquoted-math",
            severity: x.Severity.WARNING,
            selector: "blockQuote math, blockQuote blockMath",
            message: "Blockquoted math:\nmath should not be indented."
        })
          , E = x.makeRule({
            name: "blockquoted-widget",
            severity: x.Severity.WARNING,
            selector: "blockQuote widget",
            message: "Blockquoted widget:\nwidgets should not be indented."
        })
          , M = x.makeRule({
            name: "double-spacing-after-terminal",
            severity: x.Severity.BULK_WARNING,
            selector: "paragraph",
            pattern: /[.!\?] {2}/i,
            message: "Use a single space after a sentence-ending period, or\nany other kind of terminal punctuation."
        });
        function C(e, t) {
            return `Answer requires a button not found in the button sets: ${e} (in ${t})`
        }
        const T = {
            "\\sqrt": "prealgebra",
            "\\sin": "trig",
            "\\cos": "trig",
            "\\tan": "trig",
            "\\log": "logarithms",
            "\\ln": "logarithms"
        };
        var _ = x.makeRule({
            name: "expression-widget",
            severity: x.Severity.WARNING,
            selector: "widget",
            lint: function(e, t, n, r, i) {
                var s;
                if ("expression" !== e.currentNode().widgetType)
                    return;
                const o = e.currentNode().id;
                if (!o)
                    return;
                const a = null == i || null == (s = i.widgets) ? void 0 : s[o];
                if (!a)
                    return;
                const l = a.options.answerForms
                  , c = a.options.buttonSets;
                for (const e of l)
                    for (const [t,n] of Object.entries(T))
                        if (e.value.includes(t) && !c.includes(n))
                            return C(t, n)
            }
        })
          , A = x.makeRule({
            name: "extra-content-spacing",
            selector: "paragraph",
            pattern: /\s+$/,
            applies: function(e) {
                return "article" === (null == e ? void 0 : e.contentType)
            },
            message: "No extra whitespace at the end of content blocks."
        })
          , I = x.makeRule({
            name: "heading-level-1",
            severity: x.Severity.WARNING,
            selector: "heading",
            lint: function(e, t, n, r) {
                if (1 === n[0].level)
                    return "Don't use level-1 headings:\nBegin headings with two or more # characters."
            }
        })
          , R = x.makeRule({
            name: "heading-level-skip",
            severity: x.Severity.WARNING,
            selector: "heading ~ heading",
            lint: function(e, t, n, r) {
                const i = n[1]
                  , s = n[0];
                if (i.level > s.level + 1)
                    return `Skipped heading level:\nthis heading is level ${i.level} but\nthe previous heading was level ${s.level}`
            }
        })
          , N = x.makeRule({
            name: "heading-sentence-case",
            severity: x.Severity.GUIDELINE,
            selector: "heading",
            pattern: /^\W*[a-z]/,
            message: "First letter is lowercase:\nthe first letter of a heading should be capitalized."
        });
        const P = {
            and: !0,
            nor: !0,
            but: !0,
            the: !0,
            for: !0
        };
        var O = x.makeRule({
            name: "heading-title-case",
            severity: x.Severity.GUIDELINE,
            selector: "heading",
            pattern: /[^\s:]\s+[A-Z]+[a-z]/,
            locale: "en",
            lint: function(e, t, n, r) {
                let i = t.trim().split(/\s+/);
                if (i.shift(),
                i = i.filter((e => e.length > 2 && !P.hasOwnProperty(e))),
                i.length >= 3 && i.every((e => function(e) {
                    const t = e[0];
                    return t === t.toUpperCase()
                }(e))))
                    return "Title-case heading:\nThis heading appears to be in title-case, but should be sentence-case.\nOnly capitalize the first letter and proper nouns."
            }
        })
          , L = x.makeRule({
            name: "image-alt-text",
            severity: x.Severity.WARNING,
            selector: "image",
            lint: function(e, t, n, r) {
                const i = n[0];
                return i.alt && i.alt.trim() ? i.alt.length < 8 ? `Images should have alt text:\nfor accessibility, all images should have descriptive alt text.\nThis image's alt text is only ${i.alt.length} characters long.` : void 0 : "Images should have alt text:\nfor accessibility, all images should have alt text.\nSpecify alt text inside square brackets after the !."
            }
        })
          , D = x.makeRule({
            name: "image-in-table",
            severity: x.Severity.BULK_WARNING,
            selector: "table image",
            message: "Image in table:\ndo not put images inside of tables."
        })
          , F = x.makeRule({
            name: "image-spaces-around-urls",
            severity: x.Severity.ERROR,
            selector: "image",
            lint: function(e, t, n, r, i) {
                const s = n[0].target;
                if (i && i.content) {
                    const e = i.content.indexOf(s);
                    if (-1 === e)
                        return;
                    if ("(" !== i.content[e - 1] || ")" !== i.content[e + s.length])
                        return "Whitespace before or after image url:\nFor images, don't include any space or newlines after '(' or before ')'.\nWhitespace in image URLs causes translation difficulties."
                }
            }
        })
          , z = x.makeRule({
            name: "image-widget",
            severity: x.Severity.WARNING,
            selector: "widget",
            lint: function(e, t, n, r, i) {
                if ("image" !== e.currentNode().widgetType)
                    return;
                const s = e.currentNode().id;
                if (!s)
                    return;
                const o = i && i.widgets && i.widgets[s];
                if (!o)
                    return;
                const a = o.options.alt;
                return a ? a.trim().length < 8 ? `Images should have alt text:\nfor accessibility, all images should have descriptive alt text.\nThis image's alt text is only ${a.trim().length} characters long.` : o.options.caption && o.options.caption.match(/[^\\]\$/) ? "No math in image captions:\nDon't include math expressions in image captions." : void 0 : 'Images should have alt text:\nfor accessibility, all images should have a text description.\nAdd a description in the "Alt Text" box of the image widget.'
            }
        })
          , B = x.makeRule({
            name: "link-click-here",
            severity: x.Severity.WARNING,
            selector: "link",
            pattern: /click here/i,
            message: 'Inappropriate link text:\nDo not use the words "click here" in links.'
        })
          , q = x.makeRule({
            name: "long-paragraph",
            severity: x.Severity.GUIDELINE,
            selector: "paragraph",
            pattern: /^.{501,}/,
            lint: function(e, t, n, r) {
                return `Paragraph too long:\nThis paragraph is ${t.length} characters long.\nShorten it to 500 characters or fewer.`
            }
        })
          , H = x.makeRule({
            name: "math-adjacent",
            severity: x.Severity.WARNING,
            selector: "blockMath+blockMath",
            message: "Adjacent math blocks:\ncombine the blocks between \\begin{align} and \\end{align}"
        })
          , U = x.makeRule({
            name: "math-align-extra-break",
            severity: x.Severity.WARNING,
            selector: "blockMath",
            pattern: /(\\{2,})\s*\\end{align}/,
            message: "Extra space at end of block:\nDon't end an align block with backslashes"
        })
          , G = x.makeRule({
            name: "math-align-linebreaks",
            severity: x.Severity.WARNING,
            selector: "blockMath",
            pattern: /\\begin{align}[\s\S]*\\\\[\s\S]+\\end{align}/,
            lint: function(e, t, n, r) {
                let i = r[0];
                for (; i.length; ) {
                    const e = i.indexOf("\\\\");
                    if (-1 === e)
                        return;
                    i = i.substring(e + 2);
                    const t = i.match(/^\s*\\\\\s*(?!\\\\)/);
                    if (!t)
                        return "Use four backslashes between lines of an align block";
                    i = i.substring(t[0].length)
                }
            }
        })
          , W = x.makeRule({
            name: "math-empty",
            severity: x.Severity.WARNING,
            selector: "math, blockMath",
            pattern: /^$/,
            message: "Empty math: don't use $$ in your markdown."
        })
          , V = x.makeRule({
            name: "math-font-size",
            severity: x.Severity.GUIDELINE,
            selector: "math, blockMath",
            pattern: /\\(tiny|Tiny|small|large|Large|LARGE|huge|Huge|scriptsize|normalsize)\s*{/,
            message: "Math font size:\nDon't change the default font size with \\Large{} or similar commands"
        })
          , $ = x.makeRule({
            name: "math-frac",
            severity: x.Severity.GUIDELINE,
            selector: "math, blockMath",
            pattern: /\\frac[ {]/,
            message: "Use \\dfrac instead of \\frac in your math expressions."
        })
          , j = x.makeRule({
            name: "math-nested",
            severity: x.Severity.ERROR,
            selector: "math, blockMath",
            pattern: /\\text{[^$}]*\$[^$}]*\$[^}]*}/,
            message: "Nested math:\nDon't nest math expressions inside \\text{} blocks"
        })
          , K = x.makeRule({
            name: "math-starts-with-space",
            severity: x.Severity.GUIDELINE,
            selector: "math, blockMath",
            pattern: /^\s*(~|\\qquad|\\quad|\\,|\\;|\\:|\\ |\\!|\\enspace|\\phantom)/,
            message: "Math starts with space:\nmath should not be indented. Do not begin math expressions with\nLaTeX space commands like ~, \\;, \\quad, or \\phantom"
        })
          , Z = x.makeRule({
            name: "math-text-empty",
            severity: x.Severity.WARNING,
            selector: "math, blockMath",
            pattern: /\\text{\s*}/,
            message: "Empty \\text{} block in math expression"
        })
          , Y = x.makeRule({
            name: "math-without-dollars",
            severity: x.Severity.GUIDELINE,
            pattern: /\\\w+{[^}]*}|{|}/,
            message: "This looks like LaTeX:\ndid you mean to put it inside dollar signs?"
        })
          , X = x.makeRule({
            name: "nested-lists",
            severity: x.Severity.WARNING,
            selector: "list list",
            message: "Nested lists:\nnested lists are hard to read on mobile devices;\ndo not use additional indentation."
        })
          , J = x.makeRule({
            name: "static-widget-in-question-stem",
            severity: x.Severity.WARNING,
            selector: "widget",
            lint: (e, t, n, r, i) => {
                var s;
                if ("exercise" !== (null == i ? void 0 : i.contentType))
                    return;
                if (i.stack.includes("hint"))
                    return;
                const o = e.currentNode().id;
                if (!o)
                    return;
                const a = null == i || null == (s = i.widgets) ? void 0 : s[o];
                return a && a.static ? "Widget in question stem is static (non-interactive)." : void 0
            }
        })
          , Q = x.makeRule({
            name: "table-missing-cells",
            severity: x.Severity.WARNING,
            selector: "table",
            lint: function(e, t, n, r) {
                const i = n[0]
                  , s = i.header.length
                  , o = i.cells.map((e => e.length));
                for (let e = 0; e < o.length; e++)
                    if (o[e] !== s)
                        return `Table rows don't match header:\nThe table header has ${s} cells, but\nRow ${e + 1} has ${o[e]} cells.`
            }
        })
          , ee = x.makeRule({
            name: "unbalanced-code-delimiters",
            severity: x.Severity.ERROR,
            pattern: /[`~]+/,
            message: "Unbalanced code delimiters:\ncode blocks should begin and end with the same type and number of delimiters"
        })
          , te = [k, S, E, M, _, A, I, R, N, O, L, D, B, q, H, U, G, W, V, $, j, K, Z, X, J, Q, x.makeRule({
            name: "unescaped-dollar",
            severity: x.Severity.ERROR,
            selector: "unescapedDollar",
            message: "Unescaped dollar sign:\nDollar signs must appear in pairs or be escaped as \\$"
        }), x.makeRule({
            name: "widget-in-table",
            severity: x.Severity.BULK_WARNING,
            selector: "table widget",
            message: "Widget in table:\ndo not put widgets inside of tables."
        }), Y, ee, F, z];
        class ne {
            constructor(e) {
                this.root = void 0,
                this.root = e
            }
            static isNode(e) {
                return e && "object" == typeof e && "string" == typeof e.type
            }
            static isTextNode(e) {
                return ne.isNode(e) && "text" === e.type && "string" == typeof e.content
            }
            traverse(e) {
                this._traverse(this.root, new re(this.root), e)
            }
            _traverse(e, t, n) {
                let r = "";
                if (ne.isNode(e)) {
                    const i = e;
                    t._containers.push(i),
                    t._ancestors.push(i),
                    "string" == typeof i.content && (r = i.content);
                    Object.keys(i).forEach((e => {
                        if ("type" === e)
                            return;
                        const s = i[e];
                        s && "object" == typeof s && (t._indexes.push(e),
                        r += this._traverse(s, t, n),
                        t._indexes.pop())
                    }
                    )),
                    t._currentNode = t._ancestors.pop(),
                    t._containers.pop(),
                    n(i, t, r)
                } else if (Array.isArray(e)) {
                    const i = e;
                    t._containers.push(i);
                    let s = 0;
                    for (; s < i.length; )
                        t._indexes.push(s),
                        r += this._traverse(i[s], t, n),
                        s = t._indexes.pop() + 1;
                    t._containers.pop()
                }
                return r
            }
        }
        class re {
            constructor(e) {
                this.root = void 0,
                this._currentNode = void 0,
                this._containers = void 0,
                this._indexes = void 0,
                this._ancestors = void 0,
                this.root = e,
                this._currentNode = null,
                this._containers = new ie,
                this._indexes = new ie,
                this._ancestors = new ie
            }
            currentNode() {
                return this._currentNode || this.root
            }
            parent() {
                return this._ancestors.top()
            }
            ancestors() {
                return this._ancestors.values()
            }
            nextSibling() {
                const e = this._containers.top();
                if (!e || !Array.isArray(e))
                    return null;
                const t = this._indexes.top();
                return e.length > t + 1 ? e[t + 1] : null
            }
            previousSibling() {
                const e = this._containers.top();
                if (!e || !Array.isArray(e))
                    return null;
                const t = this._indexes.top();
                return t > 0 ? e[t - 1] : null
            }
            removeNextSibling() {
                const e = this._containers.top();
                if (e && Array.isArray(e)) {
                    const t = this._indexes.top();
                    if (e.length > t + 1)
                        return e.splice(t + 1, 1)[0]
                }
                return null
            }
            replace(...e) {
                const t = this._containers.top();
                if (!t)
                    throw new s.uI("Can't replace the root of the tree",s.D1.Internal);
                if (Array.isArray(t)) {
                    const n = this._indexes.top();
                    t.splice(n, 1, ...e),
                    this._indexes.pop(),
                    this._indexes.push(n + e.length - 1)
                } else {
                    const n = this._indexes.top();
                    0 === e.length ? delete t[n] : 1 === e.length ? t[n] = e[0] : t[n] = e
                }
            }
            hasPreviousSibling() {
                return Array.isArray(this._containers.top()) && this._indexes.top() > 0
            }
            goToPreviousSibling() {
                if (!this.hasPreviousSibling())
                    throw new s.uI("goToPreviousSibling(): node has no previous sibling",s.D1.Internal);
                this._currentNode = this.previousSibling();
                const e = this._indexes.pop();
                this._indexes.push(e - 1)
            }
            hasParent() {
                return 0 !== this._ancestors.size()
            }
            goToParent() {
                if (!this.hasParent())
                    throw new s.uI("goToParent(): node has no ancestor",s.D1.NotAllowed);
                for (this._currentNode = this._ancestors.pop(); this._containers.size() && this._containers.top()[this._indexes.top()] !== this._currentNode; )
                    this._containers.pop(),
                    this._indexes.pop()
            }
            clone() {
                const e = new re(this.root);
                return e._currentNode = this._currentNode,
                e._containers = this._containers.clone(),
                e._indexes = this._indexes.clone(),
                e._ancestors = this._ancestors.clone(),
                e
            }
            equals(e) {
                return this.root === e.root && this._currentNode === e._currentNode && this._containers.equals(e._containers) && this._indexes.equals(e._indexes) && this._ancestors.equals(e._ancestors)
            }
        }
        class ie {
            constructor(e) {
                this.stack = void 0,
                this.stack = e ? e.slice(0) : []
            }
            push(e) {
                this.stack.push(e)
            }
            pop() {
                return this.stack.pop()
            }
            top() {
                return this.stack[this.stack.length - 1]
            }
            values() {
                return this.stack.slice(0)
            }
            size() {
                return this.stack.length
            }
            toString() {
                return this.stack.toString()
            }
            clone() {
                return new ie(this.stack)
            }
            equals(e) {
                if (!e || !e.stack || e.stack.length !== this.stack.length)
                    return !1;
                for (let t = 0; t < this.stack.length; t++)
                    if (this.stack[t] !== e.stack[t])
                        return !1;
                return !0
            }
        }
        (0,
        s.Cy)("@khanacademy/perseus-linter", "1.2.4");
        a().shape({
            contentType: a().string,
            highlightLint: a().bool,
            paths: a().arrayOf(a().string),
            stack: a().arrayOf(a().string)
        });
        const se = {
            contentType: "",
            highlightLint: !1,
            paths: [],
            stack: []
        }
          , oe = te.filter((e => e.severity < x.Severity.BULK_WARNING));
        function ae(e, t) {
            return l({}, e, {
                stack: (e.stack || []).concat(t)
            })
        }
        var le = n(24761)
          , ce = n(540701)
          , he = n(724916)
          , pe = n(254170)
          , ue = n(294184)
          , de = n.n(ue)
          , me = n(667294)
          , fe = n(973935)
          , ge = n(224952)
          , ve = n.n(ge)
          , ye = n(785677)
          , be = n(41921)
          , xe = n(161930)
          , we = n(85631)
          , ke = n.n(we);
        const Se = {
            randomUUID: "undefined" != typeof crypto && crypto.randomUUID && crypto.randomUUID.bind(crypto)
        };
        var Ee, Me = new Uint8Array(16);
        function Ce() {
            if (!Ee && !(Ee = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)))
                throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
            return Ee(Me)
        }
        for (var Te = [], _e = 0; _e < 256; ++_e)
            Te.push((_e + 256).toString(16).slice(1));
        function Ae(e, t=0) {
            return (Te[e[t + 0]] + Te[e[t + 1]] + Te[e[t + 2]] + Te[e[t + 3]] + "-" + Te[e[t + 4]] + Te[e[t + 5]] + "-" + Te[e[t + 6]] + Te[e[t + 7]] + "-" + Te[e[t + 8]] + Te[e[t + 9]] + "-" + Te[e[t + 10]] + Te[e[t + 11]] + Te[e[t + 12]] + Te[e[t + 13]] + Te[e[t + 14]] + Te[e[t + 15]]).toLowerCase()
        }
        const Ie = function(e, t, n) {
            if (Se.randomUUID && !t && !e)
                return Se.randomUUID();
            var r = (e = e || {}).random || (e.rng || Ce)();
            if (r[6] = 15 & r[6] | 64,
            r[8] = 63 & r[8] | 128,
            t) {
                n = n || 0;
                for (var i = 0; i < 16; ++i)
                    t[n + i] = r[i];
                return t
            }
            return Ae(r)
        };
        var Re = n(738197)
          , Ne = n(569051)
          , Pe = n(999183)
          , Oe = n(131898)
          , Le = n(111620)
          , De = n(125077)
          , Fe = n(266979)
          , ze = n(345832)
          , Be = n(216153)
          , qe = n(175964)
          , He = n(232907)
          , Ue = n(246451)
          , Ge = n(691296)
          , We = n.n(Ge)
          , Ve = n(324611)
          , $e = n(545706)
          , je = n(891974)
          , Ke = n(349125)
          , Ze = n(274095)
          , Ye = n(65388)
          , Xe = n(56692)
          , Je = n(976642)
          , Qe = n(848963)
          , et = n(226514)
          , tt = n(734155);
        function nt() {
            return nt = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n)
                        ({}).hasOwnProperty.call(n, r) && (e[r] = n[r])
                }
                return e
            }
            ,
            nt.apply(null, arguments)
        }
        const rt = {
            strings: {
                closeKeypad: "close math keypad",
                openKeypad: "open math keypad",
                mathInputBox: "Math input box",
                removeHighlight: "Remove highlight",
                addHighlight: "Add highlight",
                hintPos: ({pos: e}) => `Hint #${e}`,
                errorRendering: ({error: e}) => `Error rendering: ${e}`,
                APPROXIMATED_PI_ERROR: "Your answer is close, but you may have approximated pi. Enter your answer as a multiple of pi, like <code>12\\ \\text{pi}</code> or <code>2/3\\ \\text{pi}</code>",
                EXTRA_SYMBOLS_ERROR: "We could not understand your answer. Please check your answer for extra text or symbols.",
                NEEDS_TO_BE_SIMPLFIED_ERROR: "Your answer is almost correct, but it needs to be simplified.",
                MISSING_PERCENT_ERROR: "Your answer is almost correct, but it is missing a <code>\\%</code> at the end.",
                MULTIPLICATION_SIGN_ERROR: "I'm a computer. I only understand multiplication if you use an asterisk (*) as the multiplication sign.",
                WRONG_CASE_ERROR: "Your answer includes use of a variable with the wrong case.",
                WRONG_LETTER_ERROR: "Your answer includes a wrong variable letter.",
                invalidSelection: "Make sure you select something for every row.",
                ERROR_TITLE: "Oops!",
                ERROR_MESSAGE: "Sorry, I don't understand that!",
                hints: "Hints",
                getAnotherHint: "Get another hint",
                deprecatedStandin: "Sorry, this part of the question is no longer available. 😅 Don't worry, you won't be graded on this part. Keep going!",
                keepTrying: "Keep trying",
                tryAgain: "Try again",
                check: "Check",
                correctExcited: "Correct!",
                nextQuestion: "Next question",
                skipToTitle: ({title: e}) => `Skip to ${e}`,
                current: "Current",
                correct: "Correct",
                correctSelected: "Correct (selected)",
                correctCrossedOut: "Correct (but you crossed it out)",
                incorrect: "Incorrect",
                incorrectSelected: "Incorrect (selected)",
                hideExplanation: "Hide explanation",
                explain: "Explain",
                INVALID_MESSAGE_PREFIX: "We couldn't grade your answer.",
                DEFAULT_INVALID_MESSAGE_1: "It looks like you left something blank or ",
                DEFAULT_INVALID_MESSAGE_2: "entered in an invalid answer.",
                integerExample: "an integer, like $6$",
                properExample: "a *proper* fraction, like $1/2$ or $6/10$",
                simplifiedProperExample: "a *simplified proper* fraction, like $3/5$",
                improperExample: "an *improper* fraction, like $10/7$ or $14/8$",
                simplifiedImproperExample: "a *simplified improper* fraction, like $7/4$",
                mixedExample: "a mixed number, like $1\\ 3/4$",
                decimalExample: "an *exact* decimal, like $0.75$",
                percentExample: "a percent, like $12.34\\%$",
                piExample: "a multiple of pi, like $12\\ \\text{pi}$ or $2/3\\ \\text{pi}$",
                yourAnswer: "**Your answer should be** ",
                yourAnswerLabel: "Your answer:",
                addPoints: "Click to add points",
                addVertices: "Click to add vertices",
                tapMultiple: "Tap each dot on the image to select all answers that apply.",
                tapSingle: "Tap each dot on the image to select an answer.",
                clickMultiple: "Click each dot on the image to select all answers that apply.",
                clickSingle: "Click each dot on the image to select an answer.",
                choices: "Choices:",
                answers: ({num: e}) => 1 === e ? `${e} answer` : `${e} answers`,
                hideAnswersToggleLabel: "Hide answer choices",
                moves: ({num: e}) => `Moves: ${e}`,
                clickTiles: "Click on the tiles to change the lights.",
                turnOffLights: "You must turn on all of the lights to continue.",
                fillAllCells: "Make sure you fill in all cells in the matrix.",
                molecularDrawing: ({content: e}) => `A molecular structure drawing. SMILES notation: ${e}`,
                switchDirection: "Switch direction",
                circleOpen: "Make circle open",
                circleFilled: "Make circle filled",
                numDivisions: "Number of divisions:",
                divisions: ({divRangeString: e}) => `Please make sure the number of divisions is in the range ${e}.`,
                lineRange: ({lineRange: e}) => `lines ${e}`,
                lineNumber: ({lineNumber: e}) => `line ${e}`,
                symbolPassage: ({questionSymbol: e, questionNumber: t}) => `The symbol ${e} indicates that question ${t} references this portion of the passage.`,
                symbolQuestion: ({sentenceSymbol: e}) => ` The symbol ${e} indicates that the following sentence is referenced in a question.`,
                lineLabel: "Line",
                beginningPassage: "Beginning of reading passage.",
                beginningFootnotes: "Beginning of reading passage footnotes.",
                endPassage: "End of reading passage.",
                questionMarker: ({number: e}) => `[Marker for question ${e}]`,
                circleMarker: ({number: e}) => `[Circle marker ${e}]`,
                sentenceMarker: ({number: e}) => `[Sentence ${e}]`,
                dragHandles: "Drag handles to make graph",
                tapAddPoints: "Tap to add points",
                false: "False",
                true: "True",
                no: "No",
                yes: "Yes",
                chooseCorrectNum: "Please choose the correct number of answers.",
                notNoneOfTheAbove: "'None of the above' may not be selected when other answers are selected.",
                noneOfTheAbove: "None of the above",
                chooseNumAnswers: ({numCorrect: e}) => `Choose ${e} answers:`,
                chooseAllAnswers: "Choose all answers that apply:",
                chooseOneAnswer: "Choose 1 answer:",
                choiceCheckedCorrect: ({letter: e}) => `(Choice ${e}, Checked, Correct)`,
                choiceCrossedOutCorrect: ({letter: e}) => `(Choice ${e}, Crossed out, Correct)`,
                choiceCorrect: ({letter: e}) => `(Choice ${e}, Correct)`,
                choiceCheckedIncorrect: ({letter: e}) => `(Choice ${e}, Checked, Incorrect)`,
                choiceCrossedOutIncorrect: ({letter: e}) => `(Choice ${e}, Crossed out, Incorrect)`,
                choiceIncorrect: ({letter: e}) => `(Choice ${e}, Incorrect)`,
                choiceChecked: ({letter: e}) => `(Choice ${e}, Checked)`,
                choiceCrossedOut: ({letter: e}) => `(Choice ${e}, Crossed out)`,
                choice: ({letter: e}) => `(Choice ${e})`,
                crossOut: "Cross out",
                crossOutOption: "Cross out option",
                crossOutChoice: ({letter: e}) => `Cross out Choice ${e}`,
                bringBack: "Bring back",
                openMenuForChoice: ({letter: e}) => `Open menu for Choice ${e}`,
                letters: "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z",
                rightArrow: "Reaction arrow pointing to the right.",
                dontUnderstandUnits: "I couldn't understand those units.",
                checkSigFigs: "Check your significant figures.",
                answerNumericallyIncorrect: "That answer is numerically incorrect.",
                checkUnits: "Check your units.",
                dontUnderstand: "I don't understand that",
                loading: "Loading...",
                videoTranscript: "See video transcript",
                somethingWrong: "Something went wrong.",
                videoWrapper: "Khan Academy video wrapper",
                mathInputTitle: "mathematics keyboard",
                mathInputDescription: "Use keyboard/mouse to interact with math-based input fields",
                sin: "sin",
                cos: "cos",
                tan: "tan",
                simulationLoadFail: "Sorry, this simulation cannot load.",
                simulationLocaleWarning: "Sorry, this simulation isn't available in your language.",
                addPoint: "Add Point",
                removePoint: "Remove Point",
                graphKeyboardPrompt: "Press Shift + Enter to interact with the graph",
                closePolygon: "Close shape",
                openPolygon: "Re-open shape",
                srPointAtCoordinates: ({num: e, x: t, y: n}) => `Point ${e} at ${t} comma ${n}`,
                srInteractiveElements: ({elements: e}) => `Interactive elements: ${e}`,
                srNoInteractiveElements: "No interactive elements"
            },
            locale: "en"
        }
          , it = me.createContext(tt.env.STORYBOOK ? rt : null);
        function st({children: e, strings: t, locale: n}) {
            return me.createElement(it.Provider, {
                value: {
                    strings: t,
                    locale: n
                }
            }, e)
        }
        const ot = () => (0,
        me.useContext)(it);
        var at = pe.StyleSheet.create({
            srOnly: {
                border: 0,
                clip: "rect(0,0,0,0)",
                height: 1,
                margin: -1,
                overflow: "hidden",
                padding: 0,
                position: "absolute",
                width: 1
            }
        });
        const lt = (e, t) => {
            let n = null;
            return (...r) => {
                n && clearTimeout(n),
                n = window.setTimeout(( () => {
                    e(...r)
                }
                ), t)
            }
        }
        ;
        class ct extends me.Component {
            constructor(...e) {
                super(...e),
                this.mouseDown = void 0,
                this.__mathFieldWrapperRef = null,
                this.__mathField = null,
                this.state = {
                    focused: !1,
                    keypadOpen: "always" === this.props.buttonsVisible,
                    cursorContext: i.zp.NONE
                },
                this.insert = e => {
                    const t = this.mathField()
                      , {locale: n} = this.context
                      , r = nt({}, (0,
                    i.CG)(n, this.context.strings), {
                        FRAC: e => {
                            const t = e.latex();
                            e.typedText("/"),
                            e.latex() === t && e.cmd("\\frac")
                        }
                    })[e];
                    if (r)
                        return r(t, e),
                        void (null == t || t.focus());
                    ve()(e).isFunction() ? e(t) : "\\" === e[0] ? null == t || t.cmd(e).focus() : null == t || t.write(e).focus(),
                    null == t || t.focus()
                }
                ,
                this.mathField = () => {
                    var e;
                    if (!this.__mathField && this.__mathFieldWrapperRef) {
                        const {locale: e} = this.context;
                        this.__mathField = (0,
                        i.OS)(this.__mathFieldWrapperRef, e, this.props.mathInputStrings, (t => nt({}, t, {
                            handlers: {
                                edit: lt((t => {
                                    let n = t.latex();
                                    if (n = n.replace(/<>/g, "\\ne"),
                                    (0,
                                    i.JU)(e, this.props.convertDotToTimes)) {
                                        n = n.replace(/\\cdot/g, "\\times");
                                        const e = t.cursor()[i.r_.L];
                                        e && "\\cdot " === e.ctrlSeq && (t.controller().backspace(),
                                        t.cmd("\\times"))
                                    } else
                                        n = n.replace(/\\times/g, "\\cdot");
                                    this.props.value !== n && this.props.onChange(n),
                                    this.setState({
                                        cursorContext: (0,
                                        i._w)(t)
                                    })
                                }
                                ), 100),
                                enter: () => {
                                    this.__mathFieldWrapperRef && ke()(this.__mathFieldWrapperRef).submit()
                                }
                                ,
                                upOutOf: e => {
                                    e.typedText("^")
                                }
                            }
                        })))
                    }
                    return null == (e = this.__mathField) || e.setAriaLabel(this.props.ariaLabel),
                    this.__mathField
                }
                ,
                this.focus = () => {
                    var e;
                    null == (e = this.mathField()) || e.focus(),
                    this.setState({
                        focused: !0
                    })
                }
                ,
                this.blur = () => this.setState({
                    focused: !1
                }),
                this.handleKeypadPress = (e, t) => {
                    const {locale: n} = this.context
                      , r = (0,
                    i.CG)(n, this.context.strings)[e]
                      , s = this.mathField();
                    s && (r && r(s, e),
                    this.setState({
                        cursorContext: (0,
                        i._w)(s)
                    })),
                    "click" === t.type && this.focus()
                }
            }
            componentDidMount() {
                var e;
                null == (e = this.mathField()) || e.latex(this.props.value)
            }
            openKeypad() {
                "never" !== this.props.buttonsVisible && this.setState({
                    keypadOpen: !0
                })
            }
            closeKeypad() {
                this.setState({
                    keypadOpen: !1
                })
            }
            render() {
                let e = de()({
                    "perseus-math-input": !0,
                    "mq-editable-field": !0,
                    "mq-math-mode": !0
                });
                const t = Ie().slice(0, 8);
                return this.props.className && (e = e + " " + this.props.className),
                me.createElement(le.G7, {
                    style: [mt.outerWrapper, this.state.focused && mt.wrapperFocused, this.props.hasError && mt.wrapperError]
                }, me.createElement("div", {
                    style: {
                        display: "flex",
                        padding: 1
                    },
                    onClick: e => {
                        e.stopPropagation();
                        const t = this.mathField();
                        t && this.setState({
                            cursorContext: (0,
                            i._w)(t)
                        })
                    }
                }, me.createElement("span", {
                    className: e,
                    ref: e => this.__mathFieldWrapperRef = e,
                    onFocus: () => this.focus(),
                    onBlur: () => this.blur()
                }), me.createElement(be.J2, {
                    rootBoundary: "document",
                    opened: this.state.keypadOpen,
                    onClose: () => this.closeKeypad(),
                    dismissEnabled: !0,
                    "aria-label": this.context.strings.mathInputTitle,
                    "aria-describedby": `popover-content-${t}`,
                    content: () => {
                        var e, n;
                        return me.createElement(me.Fragment, null, me.createElement(he.TE, {
                            id: `popover-content-${t}`,
                            style: at.srOnly
                        }, this.context.strings.mathInputDescription), me.createElement(be.wV, {
                            closeButtonVisible: !0,
                            style: mt.popoverContent
                        }, me.createElement(i.Hw, nt({
                            onAnalyticsEvent: this.props.onAnalyticsEvent,
                            extraKeys: this.props.extraKeys,
                            onClickKey: this.handleKeypadPress,
                            cursorContext: this.state.cursorContext,
                            convertDotToTimes: this.props.convertDotToTimes
                        }, null != (e = this.props.keypadButtonSets) ? e : ut(null == (n = this.props) ? void 0 : n.buttonSets)))))
                    }
                }, "never" === this.props.buttonsVisible ? me.createElement(pt, {
                    hovered: !1,
                    focused: !1,
                    active: !1
                }) : me.createElement(ye.ZP, {
                    "aria-label": this.state.keypadOpen ? this.context.strings.closeKeypad : this.context.strings.openKeypad,
                    role: "button",
                    onClick: () => this.state.keypadOpen ? this.closeKeypad() : this.openKeypad()
                }, (e => me.createElement(pt, nt({
                    active: this.state.keypadOpen
                }, e)))))))
            }
        }
        ct.contextType = it,
        ct.defaultProps = {
            value: "",
            convertDotToTimes: !1
        };
        class ht extends me.Component {
            constructor(...e) {
                super(...e),
                this.inputRef = me.createRef()
            }
            blur() {
                var e;
                null == (e = this.inputRef.current) || e.blur()
            }
            focus() {
                var e;
                null == (e = this.inputRef.current) || e.focus()
            }
            insert(e) {
                var t;
                null == (t = this.inputRef.current) || t.insert(e)
            }
            render() {
                return me.createElement(ct, nt({}, this.props, {
                    ref: this.inputRef,
                    mathInputStrings: this.context.strings
                }))
            }
        }
        ht.contextType = i.hy,
        ht.defaultProps = {
            ariaLabel: "Math input"
        };
        const pt = ({hovered: e, focused: t, active: n}) => {
            let r;
            switch (!0) {
            case t || n:
                r = xe.color.white;
                break;
            case e:
                r = xe.color.blue;
                break;
            default:
                r = xe.color.offBlack
            }
            const i = n || t ? mt.iconActive : mt.iconInactive;
            return me.createElement(le.G7, {
                style: [mt.iconContainer, i]
            }, me.createElement("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                width: "16",
                height: "16",
                fill: r,
                viewBox: "0 0 256 256"
            }, me.createElement("path", {
                d: "M112,72a8,8,0,0,1-8,8H40a8,8,0,0,1,0-16h64A8,8,0,0,1,112,72Zm-8,104H80V152a8,8,0,0,0-16,0v24H40a8,8,0,0,0,0,16H64v24a8,8,0,0,0,16,0V192h24a8,8,0,0,0,0-16Zm48,0h64a8,8,0,0,0,0-16H152a8,8,0,0,0,0,16Zm64,16H152a8,8,0,0,0,0,16h64a8,8,0,0,0,0-16Zm-61.66-90.34a8,8,0,0,0,11.32,0L184,83.31l18.34,18.35a8,8,0,0,0,11.32-11.32L195.31,72l18.35-18.34a8,8,0,0,0-11.32-11.32L184,60.69,165.66,42.34a8,8,0,0,0-11.32,11.32L172.69,72,154.34,90.34A8,8,0,0,0,154.34,101.66Z"
            })))
        }
          , ut = e => {
            const t = {};
            return e ? (e.forEach((e => {
                switch (e) {
                case "advanced relations":
                    t.advancedRelations = !0;
                    break;
                case "basic relations":
                    t.basicRelations = !0;
                    break;
                case "basic+div":
                    t.divisionKey = !0;
                    break;
                case "logarithms":
                    t.logarithms = !0;
                    break;
                case "prealgebra":
                    t.preAlgebra = !0;
                    break;
                case "trig":
                    t.trigonometry = !0
                }
            }
            )),
            t) : t
        }
          , dt = {
            borderWidth: 2,
            borderColor: xe.color.blue,
            margin: -1
        }
          , mt = pe.StyleSheet.create({
            iconContainer: {
                display: "flex",
                justifyContent: "center",
                height: "100%",
                padding: xe.W0.xxxSmall_4,
                borderRadius: 1
            },
            iconInactive: {
                border: "2px solid transparent",
                backgroundColor: xe.color.offBlack8
            },
            iconActive: {
                border: `2px solid ${xe.color.white}`,
                backgroundColor: xe.color.offBlack64
            },
            outerWrapper: {
                display: "inline-block",
                borderStyle: "solid",
                borderWidth: 1,
                borderColor: xe.color.offBlack50,
                borderRadius: 3,
                background: xe.color.white,
                ":hover": dt
            },
            wrapperFocused: dt,
            wrapperError: {
                borderColor: xe.color.red,
                background: xe.color.fadedRed8,
                ":hover": {
                    borderColor: xe.color.red
                }
            },
            popoverContent: {
                padding: 0,
                paddingBottom: xe.W0.xxSmall_6,
                maxWidth: "initial"
            }
        });
        let ft = null;
        const gt = () => {
            if (ft)
                return ft;
            throw new Error(["Perseus has not been provided required dependencies.", "setDependencies(dependencies) must be called first.", "Make sure Perseus is being imported from javascript/perseus/perseus.js."].join("\n"))
        }
          , vt = me.createContext({
            analytics: {
                onAnalyticsEvent: async () => {}
            },
            useVideo: () => {
                throw new Error("useVideo dependency not provided in Perseus dependencies")
            }
        })
          , yt = () => me.useContext(vt);
        var bt = Object.freeze({
            __proto__: null,
            setDependencies: e => {
                ft = e
            }
            ,
            getDependencies: gt,
            DependenciesContext: vt,
            useDependencies: yt
        });
        const xt = ["key", "ref", "containerSizeClass", "widgetId", "onChange", "problemNum", "apiOptions", "widgetIsOpen", "questionCompleted", "findWidgets", "onRemove", "id", "onBlur", "onFocus", "trackInteraction", "keypadElement"]
          , wt = function(e, t, n) {
            const r = ve().omit(e.props, xt)
              , i = ve().extend(r, t);
            e.props.onChange(i, n)
        }
          , kt = function e(t, n, r, i) {
            if (void 0 === r)
                return ve().partial(e, t, n);
            const s = {};
            s[n] = r,
            wt(t, s, i)
        }
          , St = function(e, t, n) {
            if (ve().isObject(e) && void 0 === n)
                return wt(this, e, n = t);
            if ("string" == typeof e)
                return kt(this, e, t, n);
            throw new s.uI("Invalid types sent to this.change(): " + ve().toArray(arguments).join() + '\nUsage:\n  this.change({propName: 5}, callback);\n  this.change("propName", 5, callback);\n  this.change("propName")',s.D1.Internal)
        }
          , Et = {
            onChange: a().func.isRequired
        };
        var Mt = Object.freeze({
            __proto__: null,
            change: St,
            propTypes: Et
        });
        const Ct = {};
        function Tt(e) {
            if (!Ct[e]) {
                const t = ke()("<span>").text(e).appendTo("body");
                Ct[e] = t.width() + 5,
                t.remove()
            }
            return Ct[e]
        }
        class _t extends me.Component {
            constructor(...e) {
                super(...e),
                this.state = {
                    items: this.props.options.concat("")
                },
                this.onChange = (e, t) => {
                    let n = ve().clone(this.state.items);
                    n[e] = t.target.value,
                    e === n.length - 1 && (n = n.concat("")),
                    this.setState({
                        items: n
                    }),
                    this.props.onChange(ve().compact(n))
                }
                ,
                this.onKeyDown = (e, t) => {
                    const n = t.nativeEvent.keyCode;
                    if (8 === n && "" === this.state.items[e]) {
                        t.preventDefault();
                        const n = ve().clone(this.state.items)
                          , r = 0 === e ? 0 : e - 1;
                        e !== n.length - 1 || 0 !== e && "" === n[r] ? (n.splice(e, 1),
                        this.setState({
                            items: n
                        }, (function() {
                            fe.findDOMNode(this.refs["input_" + r]).focus()
                        }
                        ))) : fe.findDOMNode(this.refs["input_" + r]).focus()
                    } else if (8 === n && 1 === this.state.items[e].length && e === this.state.items.length - 2) {
                        t.preventDefault();
                        const n = ve().clone(this.state.items);
                        n.splice(e, 1),
                        this.setState({
                            items: n
                        }),
                        this.props.onChange(ve().compact(n))
                    } else if (13 === n) {
                        t.preventDefault();
                        const n = ve().clone(this.state.items)
                          , r = e + 1;
                        e === n.length - 2 ? fe.findDOMNode(this.refs["input_" + r]).focus() : (n.splice(r, 0, ""),
                        this.setState({
                            items: n
                        }, (function() {
                            fe.findDOMNode(this.refs["input_" + r]).focus()
                        }
                        )))
                    }
                }
            }
            UNSAFE_componentWillReceiveProps(e) {
                this.setState({
                    items: e.options.concat("")
                })
            }
            render() {
                const e = ["perseus-text-list-editor", "perseus-clearfix", "layout-" + this.props.layout].join(" ")
                  , t = ve().map(this.state.items, (function(e, t) {
                    return me.createElement("li", {
                        key: t
                    }, me.createElement("input", {
                        ref: "input_" + t,
                        type: "text",
                        value: e,
                        onChange: this.onChange.bind(this, t),
                        onKeyDown: this.onKeyDown.bind(this, t),
                        style: {
                            width: Tt(e)
                        }
                    }))
                }
                ), this);
                return me.createElement("ul", {
                    className: e
                }, t)
            }
        }
        _t.propTypes = {
            options: a().array,
            layout: a().oneOf(["horizontal", "vertical"]),
            onChange: a().func.isRequired
        },
        _t.defaultProps = {
            options: [],
            layout: "horizontal"
        };
        const At = [];
        class It extends me.Component {
            render() {
                return me.createElement("div", null, this.props.showTitle && me.createElement("div", {
                    style: {
                        fontSize: 14
                    }
                }, "Tags:"), me.createElement(_t, {
                    options: this.props.value || At,
                    layout: "vertical",
                    onChange: this.props.onChange
                }))
            }
        }
        It.propTypes = {
            value: a().arrayOf(a().string),
            onChange: a().func.isRequired,
            showTitle: a().bool.isRequired
        },
        It.defaultProps = {
            value: At,
            showTitle: !0
        };
        const Rt = {
            propTypes: a().shape({
                isArticle: a().bool.isRequired,
                onFocusChange: a().func.isRequired,
                GroupMetadataEditor: a().func.isRequired,
                showAlignmentOptions: a().bool.isRequired,
                readOnly: a().bool.isRequired,
                answerableCallback: a().func,
                getAnotherHint: a().func,
                interactionCallback: a().func,
                groupAnnotator: a().func.isRequired,
                imagePlaceholder: a().node,
                widgetPlaceholder: a().node,
                baseElements: a().shape({
                    Link: a().func
                }),
                imagePreloader: a().func,
                trackInteraction: a().func,
                customKeypad: a().bool,
                nativeKeypadProxy: a().func,
                isMobile: a().bool,
                setDrawingAreaAvailable: a().func,
                hintProgressColor: a().string,
                canScrollPage: a().bool,
                crossOutEnabled: a().bool,
                editorChangeDelay: a().number
            }).isRequired,
            defaults: {
                isArticle: !1,
                isMobile: !1,
                onFocusChange: function() {},
                GroupMetadataEditor: It,
                showAlignmentOptions: !1,
                readOnly: !1,
                groupAnnotator: function() {
                    return null
                },
                baseElements: {
                    Link: e => me.createElement("a", e)
                },
                setDrawingAreaAvailable: function() {},
                canScrollPage: !1,
                crossOutEnabled: !1,
                editorChangeDelay: 0
            }
        }
          , Nt = {
            RENDERER: "perseus-renderer",
            TWO_COLUMN_RENDERER: "perseus-renderer-two-columns",
            RESPONSIVE_RENDERER: "perseus-renderer-responsive",
            INPUT: "perseus-input",
            FOCUSED: "perseus-focused",
            RADIO: {
                OPTION: "perseus-radio-option",
                SELECTED: "perseus-radio-selected",
                OPTION_CONTENT: "perseus-radio-option-content"
            },
            INTERACTIVE: "perseus-interactive",
            CORRECT: "perseus-correct",
            INCORRECT: "perseus-incorrect",
            UNANSWERED: "perseus-unanswered",
            MOBILE: "perseus-mobile"
        }
          , Pt = e => {
            var t;
            if ("ka" === e)
                return ",";
            {
                const n = 1.1
                  , r = new Intl.NumberFormat(e).format(n).match(/[^\d\u0661\u06F1]/);
                return null != (t = null == r ? void 0 : r[0]) ? t : "."
            }
        }
          , Ot = {
            log: (e, t) => {
                gt().Log.log(e, t)
            }
            ,
            error: (e, t, n) => {
                gt().Log.error(e, t, n)
            }
        }
          , Lt = {
            cleanMath: function(e) {
                return "string" == typeof e ? e.replace(/\+\s*-/g, "- ").replace(/-\s*-/g, "+ ").replace(/\^1/g, "") : e
            },
            bound: function(e) {
                return 0 === e ? e : e < 0 ? -Lt.bound(-e) : Math.max(1e-6, Math.min(e, 1e20))
            },
            factorial: function(e) {
                return e <= 1 ? e : e * Lt.factorial(e - 1)
            },
            getGCD: function(e, t) {
                if (arguments.length > 2) {
                    const t = [].slice.call(arguments, 1);
                    return Lt.getGCD(e, Lt.getGCD(...t))
                }
                let n;
                for (e = Math.abs(e),
                t = Math.abs(t); t; )
                    n = e % t,
                    e = t,
                    t = n;
                return e
            },
            getLCM: function(e, t) {
                if (arguments.length > 2) {
                    const t = [].slice.call(arguments, 1);
                    return Lt.getLCM(e, Lt.getLCM(...t))
                }
                return Math.abs(e * t) / Lt.getGCD(e, t)
            },
            primes: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97],
            isPrime: function(e) {
                if (e <= 1)
                    return !1;
                if (e < 101)
                    return !!ke().grep(Lt.primes, (function(t, n) {
                        return Math.abs(t - e) <= .5
                    }
                    )).length;
                if (e <= 1 || e > 2 && e % 2 == 0)
                    return !1;
                for (let t = 3, n = Math.sqrt(e); t <= n; t += 2)
                    if (e % t == 0)
                        return !1;
                return !0
            },
            getPrimeFactorization: function(e) {
                if (1 === e)
                    return [];
                if (Lt.isPrime(e))
                    return [e];
                const t = Math.sqrt(e);
                for (let n = 2; n <= t; n++)
                    if (e % n == 0)
                        return ke().merge(Lt.getPrimeFactorization(n), Lt.getPrimeFactorization(e / n))
            },
            roundToNearest: function(e, t) {
                return Math.round(t / e) * e
            },
            roundTo: function(e, t) {
                const n = Math.pow(10, e).toFixed(5);
                return Math.round((t * n).toFixed(5)) / n
            },
            toFixedApprox: function(e, t) {
                const n = e.toFixed(t);
                return Re.Rx.equal(+n, e) ? n : "\\approx " + n
            },
            roundToApprox: function(e, t) {
                const n = Lt.roundTo(t, e);
                return Re.Rx.equal(n, e) ? String(n) : Lt.toFixedApprox(e, t)
            },
            toFraction: function(e, t) {
                if (null == t && (t = Math.pow(2, -46)),
                e < 0 || e > 1) {
                    let n = e % 1;
                    n += n < 0 ? 1 : 0;
                    const r = Lt.toFraction(n, t);
                    return r[0] += Math.round(e - n) * r[1],
                    r
                }
                if (Math.abs(Math.round(Number(e)) - e) <= t)
                    return [Math.round(e), 1];
                let n = 0
                  , r = 1
                  , i = 1
                  , s = 1
                  , o = 1
                  , a = 2;
                for (; ; ) {
                    if (Math.abs(Number(o / a) - e) <= t)
                        return [o, a];
                    o / a < e ? (n = o,
                    r = a) : (i = o,
                    s = a),
                    o = n + i,
                    a = r + s
                }
            },
            getNumericFormat: function(e) {
                if ((e = (e = ke().trim(e)).replace(/\u2212/, "-").replace(/([+-])\s+/g, "$1")).match(/^[+-]?\d+$/))
                    return "integer";
                if (e.match(/^[+-]?\d+\s+\d+\s*\/\s*\d+$/))
                    return "mixed";
                const t = e.match(/^[+-]?(\d+)\s*\/\s*(\d+)$/);
                return t ? parseFloat(t[1]) > parseFloat(t[2]) ? "improper" : "proper" : e.replace(/[,. ]/g, "").match(/^\d+$/) ? "decimal" : e.match(/(pi?|\u03c0|t(?:au)?|\u03c4|pau)/) ? "pi" : null
            },
            toNumericString: function(e, t) {
                if (null == e)
                    return "";
                if (0 === e)
                    return "0";
                if ("percent" === t)
                    return 100 * e + "%";
                if ("pi" === t) {
                    const t = Re.Rx.toFraction(e / Math.PI)
                      , n = Math.abs(t[0])
                      , r = t[1];
                    if (Re.Rx.isInteger(n)) {
                        return (e < 0 ? "-" : "") + (1 === n ? "" : n) + "π" + (1 === r ? "" : "/" + r)
                    }
                }
                if (ve()(["proper", "improper", "mixed", "fraction"]).contains(t)) {
                    const n = Re.Rx.toFraction(e)
                      , r = Math.abs(n[0])
                      , i = n[1]
                      , s = e < 0 ? "-" : "";
                    if (1 === i)
                        return s + r;
                    if ("mixed" === t) {
                        const e = r % i
                          , t = (r - e) / i;
                        return s + (t ? t + " " : "") + e + "/" + i
                    }
                    return s + r + "/" + i
                }
                return String(e)
            }
        };
        function Dt(e, t) {
            return e + t
        }
        const Ft = Math.pow(2, -42)
          , zt = {
            predicate: {
                defaultForms: "integer, proper, improper, mixed, decimal",
                createValidatorFunctional: function(e, t, n) {
                    let r;
                    t = ve().extend({
                        simplify: "required",
                        ratio: !1,
                        forms: zt.predicate.defaultForms
                    }, t),
                    r = ve().isArray(t.forms) ? t.forms : t.forms.split(/\s*,\s*/),
                    void 0 === t.inexact && (t.maxError = 0),
                    t.maxError = +t.maxError + Ft,
                    ve().contains(r, "percent") && (r = ve().without(r, "percent"),
                    r.push("percent"));
                    const i = function(e) {
                        const n = (e = e.replace(/\u2212/, "-").replace(/([+-])\s+/g, "$1").replace(/(^\s*)|(\s*$)/gi, "")).match(/^([+-]?\d+)\s*\/\s*([+-]?\d+)$/)
                          , r = e.match(/^([+-]?)\\frac\{([+-]?\d+)\}\{([+-]?\d+)\}$/)
                          , i = parseInt(e, 10);
                        if (n || r) {
                            let e, i, s = !0;
                            return n ? (e = parseFloat(n[1]),
                            i = parseFloat(n[2])) : (e = parseFloat(r[2]),
                            "-" === r[1] && (e < 0 && (s = !1),
                            e = -e),
                            i = parseFloat(r[3])),
                            s = s && i > 0 && (t.ratio || 1 !== i) && 1 === Lt.getGCD(e, i),
                            [{
                                value: e / i,
                                exact: s
                            }]
                        }
                        return isNaN(i) || "" + i !== e ? [] : [{
                            value: i,
                            exact: !0
                        }]
                    }
                      , s = {
                        integer: function(e) {
                            const t = s.decimal(e)
                              , n = s.decimal(e, 1);
                            return null != t[0].value && t[0].value === n[0].value || null != t[1].value && t[1].value === n[1].value ? t : []
                        },
                        proper: function(e) {
                            return ke().map(i(e), (function(e) {
                                return Math.abs(e.value) < 1 ? [e] : []
                            }
                            ))
                        },
                        improper: function(e) {
                            return ke().map(i(e), (function(e) {
                                return Math.abs(e.value) >= 1 ? [e] : []
                            }
                            ))
                        },
                        pi: function(e) {
                            let t, n = [];
                            if (t = (e = e.replace(/\u2212/, "-")).match(/^([+-]?)\s*(\\?pi|p|\u03c0|\\?tau|t|\u03c4|pau)$/i))
                                n = [{
                                    value: parseFloat(t[1] + "1"),
                                    exact: !0
                                }];
                            else if (t = e.match(/^([+-]?\s*\d+\s*(?:\/\s*[+-]?\s*\d+)?)\s*\*?\s*(\\?pi|p|\u03c0|\\?tau|t|\u03c4|pau)$/i))
                                n = i(t[1]);
                            else if (t = e.match(/^([+-]?)\s*(\d+)\s*([+-]?\d+)\s*\/\s*([+-]?\d+)\s*\*?\s*(\\?pi|p|\u03c0|\\?tau|t|\u03c4|pau)$/i)) {
                                const e = parseFloat(t[1] + "1")
                                  , r = parseFloat(t[2])
                                  , i = parseFloat(t[3])
                                  , s = parseFloat(t[4]);
                                n = [{
                                    value: e * (r + i / s),
                                    exact: i < s && 1 === Lt.getGCD(i, s)
                                }]
                            } else if (t = e.match(/^([+-]?\s*\d+)\s*\*?\s*(\\?pi|p|\u03c0|\\?tau|t|\u03c4|pau)\s*(?:\/\s*([+-]?\s*\d+))?$/i))
                                n = i(t[1] + "/" + t[3]);
                            else if (t = e.match(/^([+-]?)\s*\*?\s*(\\?pi|p|\u03c0|\\?tau|t|\u03c4|pau)\s*(?:\/\s*([+-]?\d+))?$/i))
                                n = i(t[1] + "1/" + t[3]);
                            else if ("0" === e)
                                n = [{
                                    value: 0,
                                    exact: !0
                                }];
                            else {
                                if (!(t = e.match(/^(.+)\s*\*?\s*(\\?pi|p|\u03c0|\\?tau|t|\u03c4|pau)$/i))) {
                                    n = ve().reduce(zt.predicate.defaultForms.split(/\s*,\s*/), (function(t, n) {
                                        return t.concat(s[n](e))
                                    }
                                    ), []);
                                    let t = !1;
                                    const r = parseFloat(e);
                                    if (isNaN(r) || r === parseInt(e))
                                        e.match(/\/\s*7/) && (t = !0);
                                    else {
                                        const e = Math.PI / 12
                                          , n = e * Math.round(r / e);
                                        Math.abs(r - n) < .01 && (t = !0)
                                    }
                                    return t && ve().each(n, (function(e) {
                                        e.piApprox = !0
                                    }
                                    )),
                                    n
                                }
                                n = s.decimal(t[1])
                            }
                            let r = Math.PI;
                            return e.match(/\\?tau|t|\u03c4/) && (r = 2 * Math.PI),
                            e.match(/pau/) && (r = 1.5 * Math.PI),
                            ke().each(n, (function(e, t) {
                                t.value *= r
                            }
                            )),
                            n
                        },
                        coefficient: function(e) {
                            let t = [];
                            return "" === (e = e.replace(/\u2212/, "-")) ? t = [{
                                value: 1,
                                exact: !0
                            }] : "-" === e && (t = [{
                                value: -1,
                                exact: !0
                            }]),
                            t
                        },
                        log: function(e) {
                            let t, n = [];
                            return (t = (e = (e = e.replace(/\u2212/, "-")).replace(/[ \(\)]/g, "")).match(/^log\s*(\S+)\s*$/i)) ? n = s.decimal(t[1]) : "0" === e && (n = [{
                                value: 0,
                                exact: !0
                            }]),
                            n
                        },
                        percent: function(e) {
                            e = ke().trim(e);
                            let t = !1;
                            e.indexOf("%") === e.length - 1 && (e = ke().trim(e.substring(0, e.length - 1)),
                            t = !0);
                            const n = s.decimal(e);
                            return ke().each(n, (function(e, n) {
                                n.exact = t,
                                n.value = n.value / 100
                            }
                            )),
                            n
                        },
                        mixed: function(e) {
                            const t = e.replace(/\u2212/, "-").replace(/([+-])\s+/g, "$1").match(/^([+-]?)(\d+)\s+(\d+)\s*\/\s*(\d+)$/);
                            if (t) {
                                const e = parseFloat(t[1] + "1")
                                  , n = parseFloat(t[2])
                                  , r = parseFloat(t[3])
                                  , i = parseFloat(t[4]);
                                return [{
                                    value: e * (n + r / i),
                                    exact: r < i && 1 === Lt.getGCD(r, i)
                                }]
                            }
                            return []
                        },
                        decimal: function(e, n=1e10) {
                            const r = function(e) {
                                const r = (e = ke().trim(e)).replace(/\u2212/, "-").replace(/([+-])\s+/g, "$1").match(/^([+-]?(?:\d{1,3}(?:[, ]?\d{3})*\.?|\d{0,3}(?:[, ]?\d{3})*\.(?:\d{3}[, ]?)*\d{1,3}))$/)
                                  , i = e.match(/^0[0,]*,/);
                                if (r && !i) {
                                    let e = parseFloat(r[1].replace(/[, ]/g, ""));
                                    return void 0 === t.inexact && (e = Math.round(e * n) / n),
                                    e
                                }
                            };
                            return [{
                                value: r(e),
                                exact: !0
                            }, {
                                value: function(e) {
                                    return e = e.replace(/([\.,])/g, (function(e, t) {
                                        return "." === t ? "," : "."
                                    }
                                    )),
                                    r(e)
                                }(e),
                                exact: !0
                            }]
                        }
                    };
                    return function(i) {
                        const o = null != t.fallback ? "" + t.fallback : ""
                          , a = {
                            empty: "" === (i = ke().trim(i) || o),
                            correct: !1,
                            message: null,
                            guess: i
                        };
                        if (ke().each(r, (function(r, o) {
                            const l = s[o](i);
                            for (let r = 0, i = l.length; r < i; r++) {
                                const i = l[r].value
                                  , s = l[r].exact
                                  , c = l[r].piApprox;
                                if (e(i, t.maxError))
                                    return s || "optional" === t.simplify ? (a.correct = !0,
                                    a.message = t.message || null,
                                    a.empty = !1) : "percent" === o ? (a.empty = !0,
                                    a.message = n.MISSING_PERCENT_ERROR) : ("enforced" !== t.simplify && (a.empty = !0),
                                    a.message = n.NEEDS_TO_BE_SIMPLFIED_ERROR),
                                    !1;
                                c && e(i, Math.abs(.001 * i)) && (a.empty = !0,
                                a.message = n.APPROXIMATED_PI_ERROR)
                            }
                        }
                        )),
                        !1 === a.correct) {
                            let e = !1;
                            if (ve().each(s, (function(t) {
                                ve().any(t(i), (function(e) {
                                    return null != e.value && !ve().isNaN(e.value)
                                }
                                )) && (e = !0)
                            }
                            )),
                            !e)
                                return a.empty = !0,
                                a.message = n.EXTRA_SYMBOLS_ERROR,
                                a
                        }
                        return a
                    }
                }
            },
            number: {
                convertToPredicate: function(e, t) {
                    const n = parseFloat(e);
                    return [function(e, t) {
                        return Math.abs(e - n) < t
                    }
                    , ke().extend({}, t, {
                        type: "predicate"
                    })]
                },
                createValidatorFunctional: function(e, t, n) {
                    return zt.predicate.createValidatorFunctional(...zt.number.convertToPredicate(e, t), n)
                }
            },
            expression: {
                parseSolution: function(e, t) {
                    let n = r.Qc(e, t);
                    if (!n.parsed)
                        throw new s.uI("The provided solution (" + e + ") didn't parse.",s.D1.InvalidInput);
                    if (t.simplified && !n.expr.isSimplified())
                        throw new s.uI("The provided solution (" + e + ") isn't fully expanded and simplified.",s.D1.InvalidInput);
                    return n = n.expr,
                    n
                },
                createValidatorFunctional: function(e, t, n) {
                    return function(i) {
                        const s = {
                            empty: !1,
                            correct: !1,
                            message: null,
                            guess: i,
                            ungraded: !1
                        };
                        if (!i)
                            return s.empty = !0,
                            s;
                        const o = r.Qc(i, t);
                        if (!o.parsed)
                            return s.empty = !0,
                            s;
                        "string" == typeof e && (e = zt.expression.parseSolution(e, t));
                        const a = r.qu(o.expr, e, t);
                        if (a.equal)
                            s.correct = !0;
                        else if (a.wrongVariableNames || a.wrongVariableCase)
                            s.ungraded = !0,
                            s.message = a.wrongVariableCase ? n.WRONG_CASE_ERROR : n.WRONG_LETTER_ERROR,
                            s.suppressAlmostThere = !0;
                        else if (a.message)
                            s.message = a.message;
                        else {
                            const o = r.Qc(i.replace(/[xX]/g, "*"), t);
                            if (o.parsed) {
                                const i = r.qu(o.expr, e, t);
                                i.equal ? (s.ungraded = !0,
                                s.message = n.MULTIPLICATION_SIGN_ERROR) : i.message && (s.message = i.message + " Also, I'm a computer. I only understand multiplication if you use an asterisk (*) as the multiplication sign.")
                            }
                        }
                        return s
                    }
                }
            }
        };
        const Bt = {
            arctg: "arctan",
            cosec: "csc",
            cossec: "csc",
            cotg: "cot",
            ctg: "cot",
            sen: "sin",
            tg: "tan"
        }
          , qt = e => (e => e.replace(/\\operatorname{([a-z]+)}/g, ( (e, t) => {
            var n;
            return `\\${null != (n = Bt[t]) ? n : t} `
        }
        )))(e);
        class Ht extends me.Component {
            constructor(...e) {
                super(...e),
                this._textareaId = `expression_textarea_${Date.now()}`,
                this._isMounted = !1,
                this.displayName = "Expression",
                this.state = {
                    invalid: !1,
                    showErrorTooltip: !1,
                    showErrorStyle: !1
                },
                this.componentDidMount = () => {
                    if (document.addEventListener("mousedown", this._handleMouseDown),
                    this._isMounted = !0,
                    this.refs.input) {
                        const e = this.props.apiOptions.customKeypad ? ".mq-textarea > span" : "textarea"
                          , t = fe.findDOMNode(this.refs.input).querySelector(e);
                        null == t || t.setAttribute("id", this._textareaId)
                    }
                }
                ,
                this.componentDidUpdate = e => {
                    ve().isEqual(this.props.value, e.value) && ve().isEqual(this.props.functions, e.functions) || (this.setState({
                        invalid: !1,
                        showErrorTooltip: !1,
                        showErrorStyle: !1
                    }),
                    this.parse(this.props.value, this.props).parsed || this.setState({
                        invalid: !0
                    }))
                }
                ,
                this.componentWillUnmount = () => {
                    this._isMounted = !1
                }
                ,
                this._handleMouseDown = () => {
                    this._isMounted && this.state.showErrorTooltip && this.setState({
                        showErrorTooltip: !1
                    })
                }
                ,
                this.change = (...e) => St.apply(this, e),
                this.parse = (e, t) => {
                    const n = ve().pick(t || this.props, "functions");
                    return ve().extend(n, {
                        decimal_separator: Pt(this.context.locale)
                    }),
                    r.Qc(qt(e), n)
                }
                ,
                this.changeAndTrack = (e, t) => {
                    this.change("value", e, t),
                    this.props.trackInteraction()
                }
                ,
                this._handleFocus = () => {
                    var e;
                    null == (e = this.props.analytics) || e.onAnalyticsEvent({
                        type: "perseus:expression-focused",
                        payload: null
                    }),
                    this.props.onFocus([])
                }
                ,
                this._handleBlur = () => {
                    this.props.onBlur([])
                }
                ,
                this.focus = () => (this.props.apiOptions.customKeypad && this.refs.input.focus(),
                !0),
                this.getInputPaths = () => [[]]
            }
            static getUserInputFromProps(e) {
                return qt(e.value)
            }
            getUserInput() {
                return Ht.getUserInputFromProps(this.props)
            }
            getPromptJSON() {
                return e = this.props,
                t = this.getUserInput(),
                {
                    type: "expression",
                    label: e.visibleLabel,
                    userInput: {
                        value: t
                    }
                };
                var e, t
            }
            focusInputPath(e) {
                this.refs.input.focus()
            }
            blurInputPath(e) {
                var t, n;
                "function" == typeof (null == (t = this.refs.input) ? void 0 : t.blur) && (null == (n = this.refs.input) || n.blur())
            }
            insert(e) {
                this.refs.input.insert(e)
            }
            setInputValue(e, t, n) {
                this.props.onChange({
                    value: t
                }, n)
            }
            render() {
                var e, t, n;
                if (this.props.apiOptions.customKeypad)
                    return me.createElement(le.G7, {
                        className: (0,
                        pe.css)(Ut.mobileLabelInputWrapper)
                    }, !!this.props.visibleLabel && me.createElement(he.S$, {
                        htmlFor: this._textareaId,
                        tag: "label"
                    }, this.props.visibleLabel), me.createElement(i.VF, {
                        ref: "input",
                        ariaLabel: this.props.ariaLabel || this.context.strings.mathInputBox,
                        value: this.props.value,
                        keypadElement: this.props.keypadElement,
                        onChange: this.changeAndTrack,
                        onFocus: () => {
                            var e;
                            null == (e = this.props.keypadElement) || e.configure(this.props.keypadConfiguration, ( () => {
                                this._isMounted && this._handleFocus()
                            }
                            ))
                        }
                        ,
                        onBlur: this._handleBlur
                    }));
                const r = de()({
                    "perseus-widget-expression": !0,
                    "show-error-tooltip": this.state.showErrorTooltip
                })
                  , {ERROR_MESSAGE: s, ERROR_TITLE: o} = this.context.strings;
                return me.createElement(le.G7, {
                    className: (0,
                    pe.css)(Ut.desktopLabelInputWrapper)
                }, !!this.props.visibleLabel && me.createElement(he.S$, {
                    htmlFor: this._textareaId,
                    tag: "label"
                }, this.props.visibleLabel), me.createElement("div", {
                    className: r,
                    onBlur: () => this.state.invalid && this.setState({
                        showErrorTooltip: !0,
                        showErrorStyle: !0
                    }),
                    onFocus: () => this.setState({
                        showErrorTooltip: !1
                    })
                }, me.createElement(le.G7, {
                    style: at.srOnly,
                    role: "alert"
                }, this.state.showErrorTooltip && o + " " + s), me.createElement(ce.ZP, {
                    forceAnchorFocusivity: !1,
                    opened: this.state.showErrorTooltip,
                    title: o,
                    content: s
                }, me.createElement(ht, {
                    ref: "input",
                    className: Nt.INTERACTIVE,
                    value: this.props.value,
                    onChange: this.changeAndTrack,
                    convertDotToTimes: this.props.times,
                    buttonSets: this.props.buttonSets,
                    onFocus: this._handleFocus,
                    onBlur: this._handleBlur,
                    hasError: this.state.showErrorStyle,
                    ariaLabel: this.props.ariaLabel || this.context.strings.mathInputBox,
                    extraKeys: null == (e = this.props.keypadConfiguration) ? void 0 : e.extraKeys,
                    onAnalyticsEvent: null != (t = null == (n = this.props.analytics) ? void 0 : n.onAnalyticsEvent) ? t : async function() {}
                }))))
            }
        }
        Ht.contextType = it,
        Ht.defaultProps = {
            value: "",
            times: !1,
            functions: [],
            buttonSets: ["basic", "trig", "prealgebra", "logarithms"],
            onFocus: () => {}
            ,
            onBlur: () => {}
            ,
            apiOptions: Rt.defaults,
            linterContext: se
        };
        const Ut = pe.StyleSheet.create({
            mobileLabelInputWrapper: {
                padding: "15px 4px 0"
            },
            desktopLabelInputWrapper: {
                margin: "5px 5px 0"
            }
        })
          , Gt = e => {
            const t = i.H5.EXPRESSION
              , n = {}
              , s = {};
            for (const t of e.answerForms) {
                const o = r.Qc(t.value, e);
                if (o.parsed) {
                    const e = o.expr
                      , t = e => "pi" === e || "theta" === e
                      , r = e => t(e) ? e.toUpperCase() : e
                      , a = e => i.xR.includes(e);
                    for (const t of e.getVars()) {
                        const e = r(t);
                        a(e) && (n[e] = !0)
                    }
                    for (const t of e.getConsts()) {
                        const e = r(t);
                        a(e) && (s[e] = !0)
                    }
                }
            }
            let o = [...Object.keys(n).sort(), ...Object.keys(s).sort()];
            return o.length || (o = ["PI"]),
            {
                keypadType: t,
                extraKeys: o,
                times: e.times
            }
        }
          , Wt = me.forwardRef(( (e, t) => {
            const n = yt();
            return me.createElement(Ht, nt({
                ref: t,
                analytics: n.analytics
            }, e))
        }
        ));
        Wt.getUserInputFromProps = Ht.getUserInputFromProps;
        var Vt = {
            name: "expression",
            displayName: "Expression / Equation",
            accessible: !0,
            defaultAlignment: "inline-block",
            widget: Wt,
            transform: e => {
                const {times: t, functions: n, buttonSets: r, buttonsVisible: i, visibleLabel: s, ariaLabel: o} = e;
                return {
                    keypadConfiguration: Gt(e),
                    times: t,
                    functions: n,
                    buttonSets: r,
                    buttonsVisible: i,
                    visibleLabel: s,
                    ariaLabel: o
                }
            }
            ,
            version: {
                major: 1,
                minor: 0
            },
            propUpgrades: {
                1: e => ({
                    times: e.times,
                    buttonSets: e.buttonSets,
                    functions: e.functions,
                    buttonsVisible: e.buttonsVisible,
                    visibleLabel: e.visibleLabel,
                    ariaLabel: e.ariaLabel,
                    answerForms: [{
                        considered: "correct",
                        form: e.form,
                        simplify: e.simplify,
                        value: e.value
                    }]
                })
            },
            isLintable: !0,
            scorer: function(e, t, n, i) {
                const o = function(e) {
                    return "" === e ? {
                        type: "invalid",
                        message: null
                    } : null
                }(e);
                if (o)
                    return o;
                const a = ve().clone(t);
                ve().extend(a, {
                    decimal_separator: Pt(i)
                });
                const l = e => {
                    const i = r.Qc(e.value, t);
                    return i.parsed ? zt.expression.createValidatorFunctional(i.expr, ve()({}).extend(a, {
                        simplify: e.simplify,
                        form: e.form
                    }), n) : (Ot.error("Unable to parse solution answer for expression", s.D1.InvalidInput, {
                        loggedMetadata: {
                            rubric: JSON.stringify(t)
                        }
                    }),
                    null)
                }
                ;
                let c, h, p, u = !0;
                for (const n of t.answerForms || []) {
                    const t = l(n);
                    if (!t)
                        continue;
                    const r = t(e);
                    if (r.correct) {
                        c = n,
                        h = r.message || "";
                        break
                    }
                    u = u && r.empty,
                    "correct" === n.considered && r.ungraded && !p && (p = r)
                }
                return c ? "ungraded" === c.considered ? {
                    type: "invalid",
                    message: h
                } : {
                    type: "points",
                    earned: "correct" === c.considered ? 1 : 0,
                    total: 1,
                    message: h
                } : p ? {
                    type: "invalid",
                    message: p.message,
                    suppressAlmostThere: p.suppressAlmostThere
                } : u ? {
                    type: "invalid",
                    message: null
                } : {
                    type: "points",
                    earned: 0,
                    total: 1
                }
            },
            getOneCorrectAnswerFromRubric(e) {
                const t = (e.answerForms || []).filter((e => "correct" === e.considered));
                if (0 !== t.length)
                    return t[0].value
            }
        };
        const $t = {
            assetStatuses: {},
            setAssetStatus: (e, t) => {}
        }
          , jt = me.createContext($t)
          , Kt = /^web\+graphie:/
          , Zt = /^file\+graphie:/;
        function Yt(e) {
            return Xt(e) ? Qt(e) : e
        }
        function Xt(e) {
            return Kt.test(e) || Zt.test(e)
        }
        function Jt(e) {
            return e.replace(Kt, "https:").replace(Zt, "file:")
        }
        function Qt(e) {
            return Jt(e) + ".svg"
        }
        let en = !1;
        const tn = /^\[\[\u2603 (([a-z-]+) ([0-9]+))\]\]/
          , nn = new RegExp(tn.source + "$")
          , rn = {
            type: "points",
            earned: 0,
            total: 0,
            message: null
        }
          , sn = function(e) {
            let t = e;
            return function() {
                let e = t;
                return e = e + 2127912214 + (e << 12) & 4294967295,
                e = 4294967295 & (3345072700 ^ e ^ e >>> 19),
                e = e + 374761393 + (e << 5) & 4294967295,
                e = 4294967295 & (e + 3550635116 ^ e << 9),
                e = e + 4251993797 + (e << 3) & 4294967295,
                e = 4294967295 & (3042594569 ^ e ^ e >>> 16),
                (t = 268435455 & e) / 268435456
            }
        };
        const on = "x".split(/(.)/g).length ? function(e, t) {
            return e.split(t)
        }
        : function(e, t) {
            const n = [];
            let r, i = t.lastIndex = 0;
            for (; r = t.exec(e); ) {
                const t = r;
                n.push(e.slice(i, t.index)),
                n.push(...t.slice(1)),
                i = t.index + t[0].length
            }
            return n.push(e.slice(i)),
            n
        }
        ;
        function an(e, t) {
            let n;
            if ("points" === e.type && "points" === t.type)
                return n = e.message && t.message && e.message !== t.message ? null : e.message || t.message,
                {
                    type: "points",
                    earned: e.earned + t.earned,
                    total: e.total + t.total,
                    message: n
                };
            if ("points" === e.type && "invalid" === t.type)
                return t;
            if ("invalid" === e.type && "points" === t.type)
                return e;
            if ("invalid" === e.type && "invalid" === t.type)
                return n = e.message && t.message && e.message !== t.message ? null : e.message || t.message,
                {
                    type: "invalid",
                    message: n
                };
            throw new s.uI("PerseusScore with unknown type encountered",s.D1.InvalidInput,{
                metadata: {
                    scoreA: JSON.stringify(e),
                    scoreB: JSON.stringify(t)
                }
            })
        }
        function ln(e) {
            return "points" === e.type && e.earned >= e.total
        }
        function cn(e, t) {
            const n = e * t
              , r = e
              , i = Math.pow(10, Math.floor(Math.log(r) / Math.LN10))
              , s = Math.floor(r / i);
            return n < 25 ? e : n < 50 ? 5 === s ? e : e / 2 : 1 === s ? e / 2 : 2 === s ? e / 4 : 5 === s ? e / 5 : void 0
        }
        function hn(e, t) {
            return t / (e[1] - e[0])
        }
        function pn(e, t) {
            let n = Math.pow(10, Math.floor(Math.log(e / t) / Math.LN10));
            const r = t / e * n;
            return r <= .15 ? n *= 10 : r <= .35 ? n *= 5 : r <= .75 && (n *= 2),
            n
        }
        const un = (e, t) => {
            const n = t[1] - t[0]
              , r = n / e;
            return r <= 10 ? e : r <= 20 ? 2 * e : pn(n, 10)
        }
        ;
        function dn(e, t) {
            return "number" == typeof e && "number" == typeof t ? Math.abs(e - t) < 1e-9 : e === t
        }
        const mn = {
            pointerDown: !1,
            currentTouchIdentifier: null
        };
        const fn = {
            getWordBeforeCursor: function(e) {
                const t = e.value
                  , n = e.selectionStart - 1
                  , r = Math.max(t.lastIndexOf("\n", n), t.lastIndexOf(" ", n)) + 1;
                return {
                    string: t.substring(r, n + 1),
                    pos: {
                        start: r,
                        end: n
                    }
                }
            },
            moveCursor: function(e, t) {
                e.selectionStart = t,
                e.selectionEnd = t
            }
        }
          , gn = sn(4294967295 & (new Date).getTime());
        const vn = {
            inputPathsEqual: function(e, t) {
                return null == e || null == t ? null == e == (null == t) : e.length === t.length && e.every(( (e, n) => t[n] === e))
            },
            nestedMap: function e(t, n, r) {
                return Array.isArray(t) ? ve().map(t, (function(t) {
                    return e(t, n)
                }
                )) : n.call(r, t)
            },
            rWidgetRule: tn,
            rTypeFromWidgetId: /^([a-z-]+) ([0-9]+)$/,
            rWidgetParts: nn,
            snowman: "☃",
            noScore: rn,
            seededRNG: sn,
            shuffle: function(e, t, n=!1) {
                const r = ve().clone(e);
                if (!r.length || ve().all(r, (function(e) {
                    return ve().isEqual(e, r[0])
                }
                )))
                    return r;
                let i;
                i = "function" == typeof t ? t : sn(t);
                do {
                    for (let e = r.length; e > 0; e--) {
                        const t = Math.floor(i() * e)
                          , n = r[t];
                        r[t] = r[e - 1],
                        r[e - 1] = n
                    }
                } while (n && ve().isEqual(e, r));
                return r
            },
            split: on,
            combineScores: an,
            flattenScores: function(e) {
                return Object.values(e).reduce(an, rn)
            },
            keScoreFromPerseusScore: function(e, t, n) {
                if ("points" === e.type)
                    return {
                        empty: !1,
                        correct: ln(e),
                        message: e.message,
                        guess: t,
                        state: n
                    };
                if ("invalid" === e.type)
                    return {
                        empty: !0,
                        correct: !1,
                        message: e.message,
                        suppressAlmostThere: e.suppressAlmostThere,
                        guess: t,
                        state: n
                    };
                throw new s.uI("Invalid score type: " + e.type,s.D1.InvalidInput,{
                    metadata: {
                        score: JSON.stringify(e),
                        guess: JSON.stringify(t),
                        state: JSON.stringify(n)
                    }
                })
            },
            firstNumericalParse: function(e, t) {
                let n;
                return zt.predicate.createValidatorFunctional((function(e) {
                    return n = e,
                    !0
                }
                ), {
                    simplify: "optional",
                    inexact: !0,
                    forms: "integer, proper, improper, pi, log, mixed, decimal"
                }, t)(e),
                n
            },
            stringArrayOfSize: function(e) {
                return ve()(e).times((function() {
                    return ""
                }
                ))
            },
            gridDimensionConfig: function(e, t, n, r) {
                const i = hn(t, n);
                return {
                    scale: i,
                    tickStep: e / r,
                    unityLabel: e * i > 30
                }
            },
            getGridStep: function(e, t, n) {
                return ve()(2).times((function(r) {
                    const i = hn(e[r], n);
                    return cn(t[r], i)
                }
                ))
            },
            snapStepFromGridStep: function(e) {
                return [e[0] / 2, e[1] / 2]
            },
            scaleFromExtent: hn,
            tickStepFromExtent: function(e, t) {
                const n = e[1] - e[0];
                let r;
                return r = 15 < n && n <= 20 ? 23 : n > 100 || n < 5 ? 10 : 16,
                pn(n, r * (t / 500))
            },
            gridStepFromTickStep: cn,
            tickStepFromNumTicks: pn,
            constrainedTickStepsFromTickSteps: function(e, t) {
                return [un(e[0], t[0]), un(e[1], t[1])]
            },
            eq: dn,
            deepEq: function e(t, n) {
                if (Array.isArray(t) && Array.isArray(n)) {
                    if (t.length !== n.length)
                        return !1;
                    for (let r = 0; r < t.length; r++)
                        if (!e(t[r], n[r]))
                            return !1;
                    return !0
                }
                return !Array.isArray(t) && !Array.isArray(n) && ("function" == typeof t && "function" == typeof n ? dn(t, n) : "function" != typeof t && "function" != typeof n && ("object" == typeof t && "object" == typeof n && t && n ? t === n || ve().all(t, (function(t, r) {
                    return e(n[r], t)
                }
                )) && ve().all(n, (function(n, r) {
                    return e(t[r], n)
                }
                )) : !("object" == typeof t && t || "object" == typeof n && n) && dn(t, n)))
            },
            parseQueryString: function(e) {
                e = e || window.location.search.substring(1);
                const t = {}
                  , n = /\+/g
                  , r = /([^&=]+)=?([^&]*)/g
                  , i = function(e) {
                    return decodeURIComponent(e.replace(n, " "))
                };
                let s;
                for (; s = r.exec(e); ) {
                    const e = s;
                    t[i(e[1])] = i(e[2])
                }
                return t
            },
            updateQueryString: function(e, t, n) {
                n = encodeURIComponent(n);
                const r = new RegExp("([?&])" + t + "=.*?(&|$)","i")
                  , i = -1 !== e.indexOf("?") ? "&" : "?";
                return e.match(r) ? e.replace(r, "$1" + t + "=" + n + "$2") : e + i + t + "=" + n
            },
            strongEncodeURIComponent: function(e) {
                return encodeURIComponent(e).replace(/['()!]/g, window.escape).replace(/\*/g, "%2A")
            },
            scoreIsEmpty: function(e) {
                return "invalid" === e.type && (!e.message || 0 === e.message.length)
            },
            touchHandlers: mn,
            resetTouchHandlers: function() {
                Object.assign(mn, {
                    pointerDown: !1,
                    currentTouchIdentifier: null
                })
            },
            extractPointerLocation: function(e) {
                let t;
                if (mn.pointerDown) {
                    if (null != mn.currentTouchIdentifier) {
                        const n = e.changedTouches ? e.changedTouches.length : 0;
                        for (let r = 0; r < n; r++)
                            e.changedTouches[r].identifier === mn.currentTouchIdentifier && (t = e.changedTouches[r])
                    } else
                        t = e;
                    const n = "touchend" === e.type || "touchcancel" === e.type;
                    t && n && (mn.pointerDown = !1,
                    mn.currentTouchIdentifier = null)
                } else
                    mn.pointerDown = !0,
                    e.changedTouches ? (t = e.changedTouches[0],
                    mn.currentTouchIdentifier = t.identifier) : t = e;
                if (t)
                    return {
                        left: t.pageX,
                        top: t.pageY
                    }
            },
            supportsPassiveEvents: () => {
                try {
                    const e = Object.defineProperty({}, "passive", {
                        get: function() {
                            en = !0
                        }
                    });
                    window.addEventListener("testPassive", null, e),
                    window.removeEventListener("testPassive", null, e)
                } catch (e) {}
                return en
            }
            ,
            captureScratchpadTouchStart: function(e) {
                e.stopPropagation()
            },
            getImageSize: function(e, t) {
                const n = new Image;
                n.onload = function() {
                    var e;
                    0 === n.width && 0 === n.height ? (null == (e = document.body) || e.appendChild(n),
                    ve().defer((function() {
                        var e;
                        t(n.clientWidth, n.clientHeight),
                        null == (e = document.body) || e.removeChild(n)
                    }
                    ))) : t(n.width, n.height)
                }
                ,
                n.src = Yt(e)
            },
            getImageSizeModern: async function(e) {
                const t = new Image;
                return new Promise(( (n, r) => {
                    t.onload = () => {
                        n([t.naturalWidth, t.naturalHeight])
                    }
                    ,
                    t.onerror = r,
                    t.src = Yt(e)
                }
                ))
            },
            getRealImageUrl: Yt,
            isLabeledSVG: Xt,
            getBaseUrl: Jt,
            getSvgUrl: Qt,
            getDataUrl: function(e) {
                return Jt(e) + "-data.json"
            },
            textarea: fn,
            unescapeMathMode: e => e.startsWith("$") && e.endsWith("$") ? e.slice(1, -1) : e,
            random: gn,
            deepClone: function e(t) {
                return Array.isArray(t) ? t.map(e) : t
            }
        };
        function yn(e, t) {
            const n = window.scrollX
              , r = window.scrollY
              , i = document.querySelector("meta[name=viewport]");
            i ? i.setAttribute("content", e) : ke()("head").append(`<meta name="viewport" content="${e}">`),
            document.body.style.opacity = .9999,
            setTimeout(( () => {
                document.body.style.opacity = 1,
                window.scrollTo(n, r),
                t && setTimeout(t, 0)
            }
            ), 0)
        }
        function bn() {}
        function xn(e, t) {
            this._fullHeight = this._fullWidth = this._overlay = null,
            this._targetImage = e,
            this._enableMobilePinch = t,
            this._$body = ke()(document.body)
        }
        ke().fn.emulateTransitionEnd = function(e) {
            let t = !1;
            const n = this;
            ke()(this).one("bsTransitionEnd", (function() {
                t = !0
            }
            ));
            return setTimeout((function() {
                t || ke()(n).trigger(ke().support.transition.end)
            }
            ), e),
            this
        }
        ,
        ke()((function() {
            ke().support.transition = function() {
                const e = document.createElement("bootstrap")
                  , t = {
                    WebkitTransition: "webkitTransitionEnd",
                    MozTransition: "transitionend",
                    OTransition: "oTransitionEnd otransitionend",
                    transition: "transitionend"
                };
                for (const n in t)
                    if (void 0 !== e.style[n])
                        return {
                            end: t[n]
                        };
                return !1
            }(),
            ke().support.transition && (ke().event.special.bsTransitionEnd = {
                bindType: ke().support.transition.end,
                delegateType: ke().support.transition.end,
                handle: function(e) {
                    if (ke()(e.target).is(this))
                        return e.handleObj.handler.apply(this, arguments)
                }
            })
        }
        )),
        bn.prototype._initialize = function(e) {
            this._$document || (this._activeZoom = this._initialScrollPosition = this._initialTouchPosition = this._touchMoveListener = null,
            this._$document = ke()(document),
            this._$window = ke()(window),
            this._$body = ke()(document.body),
            this._boundClick = ke().proxy(this._clickHandler, this),
            this._enableMobilePinch = e)
        }
        ,
        bn.prototype.handleZoomClick = function(e, t) {
            this._initialize(t);
            const n = e.target;
            if (n && "IMG" === n.tagName && !this._$body.hasClass("zoom-overlay-open"))
                return e.metaKey || e.ctrlKey ? window.open(e.target.src, "_blank") : void (!t && n.width >= window.innerWidth - xn.getOffset() || (this._activeZoomClose(!0),
                t ? yn("width=device-width, initial-scale=1, minimum-scale=1", ( () => this._zoom(n))) : this._zoom(n),
                t || (this._$window.on("scroll.zoom", ke().proxy(this._scrollHandler, this)),
                this._$document.on("keyup.zoom", ke().proxy(this._keyHandler, this)),
                this._$document.on("touchstart.zoom", ke().proxy(this._touchStart, this))),
                document.addEventListener("click", this._boundClick, !0),
                e.stopPropagation()))
        }
        ,
        bn.prototype._zoom = function(e) {
            this._activeZoom = new xn(e,this._enableMobilePinch),
            this._activeZoom.zoomImage()
        }
        ,
        bn.prototype._activeZoomClose = function(e) {
            this._activeZoom && (e ? (this._activeZoom.dispose(),
            this._disposeActiveZoom()) : yn("width=device-width, initial-scale=1, minimum-scale=1,\n            maximum-scale=1", ( () => {
                this._activeZoom && (this._activeZoom.close(),
                this._disposeActiveZoom())
            }
            )))
        }
        ,
        bn.prototype._disposeActiveZoom = function() {
            this._$window.off(".zoom"),
            this._$document.off(".zoom"),
            document.removeEventListener("click", this._boundClick, !0),
            this._activeZoom = null
        }
        ,
        bn.prototype._scrollHandler = function(e) {
            null === this._initialScrollPosition && (this._initialScrollPosition = window.scrollY);
            const t = this._initialScrollPosition - window.scrollY;
            Math.abs(t) >= 40 && this._activeZoomClose()
        }
        ,
        bn.prototype._keyHandler = function(e) {
            27 === e.keyCode && this._activeZoomClose()
        }
        ,
        bn.prototype._clickHandler = function(e) {
            e.stopPropagation(),
            e.preventDefault(),
            this._activeZoomClose()
        }
        ,
        bn.prototype._touchStart = function(e) {
            this._initialTouchPosition = e.originalEvent.touches[0].pageY,
            ke()(e.target).on("touchmove.zoom", ke().proxy(this._touchMove, this))
        }
        ,
        bn.prototype._touchMove = function(e) {
            Math.abs(e.originalEvent.touches[0].pageY - this._initialTouchPosition) > 10 && (this._activeZoomClose(),
            ke()(e.target).off("touchmove.zoom"))
        }
        ,
        xn._OFFSET = 80,
        xn._MAX_WIDTH = 2560,
        xn._MAX_HEIGHT = 4096,
        xn.getOffset = function(e) {
            return e ? 0 : xn._OFFSET
        }
        ,
        xn.prototype.getOffset = function() {
            return xn.getOffset(this._enableMobilePinch)
        }
        ,
        xn.prototype.zoomImage = function() {
            const e = document.createElement("img")
              , t = ke()(e);
            e.onload = function() {
                this._fullHeight = Number(e.height),
                this._fullWidth = Number(e.width);
                const n = this._imageOffset = ke()(this._targetImage).offset()
                  , r = this._left = n.left - ke()(window).scrollLeft()
                  , i = this._top = n.top - ke()(window).scrollTop();
                t.css({
                    left: r,
                    top: i,
                    width: this._targetImage.width,
                    height: this._targetImage.height
                }),
                this._zoomOriginal()
            }
            .bind(this),
            e.src = this._targetImage.src,
            this.$zoomedImage = t
        }
        ,
        xn.prototype._zoomOriginal = function() {
            var e, t, n;
            this.$zoomedImage.addClass("zoom-img").attr("data-action", "zoom-out"),
            ke()(this._targetImage).css("visibility", "hidden"),
            this._backdrop = document.createElement("div"),
            this._backdrop.className = "zoom-backdrop",
            null == (e = document.body) || e.appendChild(this._backdrop),
            this._overlay = document.createElement("div"),
            this._overlay.className = "zoom-overlay",
            null == (t = document.body) || t.appendChild(this._overlay),
            null == (n = this._overlay) || n.appendChild(this.$zoomedImage[0]),
            this._calculateZoom(),
            this._triggerAnimation()
        }
        ,
        xn.prototype._calculateZoom = function() {
            const e = this._fullWidth
              , t = this._fullHeight
              , n = window.innerHeight - this.getOffset()
              , r = window.innerWidth - this.getOffset()
              , i = e / this._targetImage.width
              , s = e / t
              , o = r / n;
            this._imgScaleFactor = e < r && t < n ? i : s < o ? n / t * i : r / (null != e ? e : 0) * i
        }
        ,
        xn.prototype._triggerAnimation = function() {
            const e = ke()(window).scrollTop() + window.innerHeight / 2
              , t = ke()(window).scrollLeft() + window.innerWidth / 2
              , n = this._imgScaleFactor
              , r = this._imageOffset.top + this._targetImage.height / 2
              , i = this._imageOffset.left + this._targetImage.width / 2;
            this._translateY = (e - r) / n,
            this._translateX = (t - i) / n,
            this._zoomedInTransformString = `\n        scale(${n})\n        translate3d(${this._translateX}px, ${this._translateY}px, 0)\n    `,
            this.$zoomedImage.css({
                transform: this._zoomedInTransformString
            }).addClass("zoom-transition").one(ke().support.transition.end, ke().proxy(this._onZoomInFinish, this)).emulateTransitionEnd(300),
            this._$body.addClass("zoom-overlay-open")
        }
        ,
        xn.prototype._onZoomInFinish = function() {
            const e = this._targetImage.height * this._imgScaleFactor
              , t = this._targetImage.width * this._imgScaleFactor;
            let n = 0
              , r = 0
              , i = 0
              , s = 0
              , o = 0
              , a = 0;
            t < window.innerWidth ? (n = "50%",
            i = -t / 2) : o = (t - window.innerWidth) / 2,
            e < window.innerHeight ? (r = "50%",
            s = -e / 2) : a = (e - window.innerHeight) / 2,
            this.$zoomedImage.css({
                height: e,
                left: n,
                marginLeft: i,
                marginTop: s,
                top: r,
                transform: "",
                width: t
            }).removeClass("zoom-transition"),
            ke()(this._overlay).scrollLeft(o).scrollTop(a)
        }
        ,
        xn.prototype.close = function() {
            this._$body.removeClass("zoom-overlay-open").addClass("zoom-overlay-transitioning"),
            this.$zoomedImage.css({
                height: this._targetImage.height,
                left: this._left,
                marginLeft: 0,
                marginTop: 0,
                top: this._top,
                transform: this._zoomedInTransformString,
                width: this._targetImage.width
            }).removeClass("zoom-transition"),
            ke()(this._overlay).scrollLeft(0).scrollTop(0),
            setTimeout(( () => {
                this.$zoomedImage.css({
                    transform: "scale(1)"
                }).addClass("zoom-transition").one(ke().support.transition.end, ke().proxy(this.dispose, this)).emulateTransitionEnd(300)
            }
            ), 10)
        }
        ,
        xn.prototype.dispose = function() {
            this.$zoomedImage && this.$zoomedImage[0].parentNode && (this.$zoomedImage.remove(),
            this.$zoomedImage = null,
            this._overlay.parentNode.removeChild(this._overlay),
            this._backdrop.parentNode.removeChild(this._backdrop),
            this._$body.removeClass("zoom-overlay-transitioning")),
            ke()(this._targetImage).css("visibility", "visible"),
            this._targetImage.focus()
        }
        ;
        const wn = new bn
          , kn = "'Lato', sans-serif"
          , Sn = "'Lato-Bold', 'Lato', sans-serif"
          , En = "#71B307"
          , Mn = "#FFFFFF"
          , Cn = "#F6F7F7"
          , Tn = "#D6D8DA"
          , _n = "#BABEC2"
          , An = "#888D93"
          , In = "#21242c"
          , Rn = "#F9F9F9"
          , Nn = 16
          , Pn = -16
          , On = 16
          , Ln = {
            defaultBoxSize: 400,
            defaultBoxSizeSmall: 288
        }
          , Dn = "#f86700"
          , Fn = "#df5c00"
          , zn = "#c75300"
          , Bn = "#be2612"
          , qn = "#BABEC2";
        var Hn = Object.freeze({
            __proto__: null,
            baseFontFamily: kn,
            boldFontFamily: Sn,
            kaGreen: En,
            white: Mn,
            gray97: Cn,
            gray85: Tn,
            gray76: _n,
            gray68: An,
            gray17: In,
            pureSmMin: "568px",
            pureMdMin: "768px",
            pureLgMin: "1024px",
            pureXlMin: "1280px",
            pureXsMax: "567px",
            pureSmMax: "767px",
            pureMdMax: "1023px",
            pureLgMax: "1279px",
            tableBackgroundAccent: Rn,
            zIndexAboveScratchpad: 2,
            zIndexInteractiveComponent: 3,
            phoneMargin: Nn,
            negativePhoneMargin: Pn,
            hintBorderWidth: 4,
            baseUnitPx: On,
            interactiveSizes: Ln,
            circleSize: 24,
            radioMarginWidth: 2,
            warningColor: Dn,
            warningColorHover: Fn,
            warningColorActive: zn,
            publishBlockingErrorColor: Bn,
            radioBorderColor: qn,
            checkedColor: "#71B307",
            articleMaxWidthInPx: 688,
            articleMaxWidthTableInPx: 512
        });
        class Un extends me.Component {
            constructor(...e) {
                super(...e),
                this._isMounted = !1,
                this.state = {
                    viewportHeight: null,
                    viewportWidth: null
                },
                this._cacheViewportSize = () => {
                    this._isMounted && this.setState({
                        viewportHeight: Math.max(480, window.innerHeight),
                        viewportWidth: window.innerWidth
                    })
                }
            }
            componentDidMount() {
                this._isMounted = !0,
                window.innerHeight < 480 ? setTimeout(this._cacheViewportSize, 800) : this._cacheViewportSize()
            }
            componentWillUnmount() {
                this._isMounted = !1
            }
            render() {
                const e = this.props.width / this.props.height
                  , t = me.createElement("div", {
                    style: {
                        paddingBottom: 100 * (1 / e).toFixed(4) + "%"
                    }
                });
                let {width: n, height: r} = this.props;
                if (this.props.constrainHeight && this.state.viewportHeight) {
                    const t = 2 / 3 * this.state.viewportHeight;
                    this.props.height >= t && (r = t,
                    n = t * e)
                }
                const i = {
                    maxWidth: n,
                    maxHeight: r
                }
                  , s = de()("fixed-to-responsive", this.props.className)
                  , o = me.createElement("div", {
                    className: s,
                    style: i
                }, t, this.props.children);
                return this.props.allowFullBleed && this.state.viewportWidth && n >= this.state.viewportWidth ? me.createElement("div", {
                    style: {
                        marginLeft: Pn,
                        marginRight: Pn
                    }
                }, o) : o
            }
        }
        function Gn(e, t) {
            return e + ":" + t
        }
        Un.defaultProps = {
            className: "",
            constrainHeight: !1,
            allowFullBleed: !1
        };
        const Wn = {
            _fireEvent: function(e, ...t) {
                for (const n of e)
                    n.call(this, ...t)
            },
            _applyConstraints: function(e, t, n) {
                let r = !1;
                return ve().reduce(this.state.constraints, ( (e, i) => {
                    if (!1 === e)
                        return !1;
                    if (r)
                        return e;
                    const o = i.call(this, e, t, nt({
                        onSkipRemaining: () => {
                            r = !0
                        }
                    }, n));
                    if (!1 === o)
                        return !1;
                    if (Re.xm.is(o, 2))
                        return o;
                    if (!0 === o || null == o)
                        return e;
                    throw new s.uI("Constraint returned invalid result: " + o,s.D1.Internal)
                }
                ), e, this)
            },
            draw: function() {
                const e = this.cloneState();
                Wn._fireEvent.call(this, this.state.draw, e, this.prevState),
                this.prevState = e
            },
            listen: function(e, t, n) {
                this._listenerMap = this._listenerMap || {};
                const r = Gn(e, t)
                  , i = this._listenerMap[r] = this._listenerMap[r] || this.state[e].length;
                this.state[e][i] = n
            },
            unlisten: function(e, t) {
                this._listenerMap = this._listenerMap || {};
                const n = Gn(e, t)
                  , r = this._listenerMap[n];
                if (void 0 !== r) {
                    this.state[e].splice(r, 1),
                    delete this._listenerMap[n];
                    const t = ve().keys(this._listenerMap);
                    ve().each(t, (function(t) {
                        (function(e) {
                            return e.split(":")[0]
                        }
                        )(t) === e && this._listenerMap[t] > r && this._listenerMap[t]--
                    }
                    ), this)
                }
            }
        };
        let Vn = null;
        let $n = null;
        const jn = ["add", "modify", "draw", "remove", "constraints", "onMoveStart", "onMove", "onMoveEnd", "onClick"]
          , Kn = {
            assert: function(e, t) {
                if (!e)
                    throw new s.uI("Assertion Error" + (t ? ": " + t : ""),s.D1.Internal)
            },
            createGettersFor: function(e, t) {
                ve().each(ve().keys(t), (function(t) {
                    void 0 === e.prototype[t] && (e.prototype[t] = function() {
                        return this.state[t]
                    }
                    )
                }
                ))
            },
            addMovableHelperMethodsTo: function(e) {
                ve().each(Wn, (function(t, n) {
                    void 0 === e.prototype[n] && (e.prototype[n] = t)
                }
                ))
            },
            arrayify: function(e) {
                return null == e ? [] : ve().isArray(e) ? ve().filter(ve().flatten(e), ve().identity) : [e]
            },
            normalizeOptions: function(e) {
                const t = nt({}, e);
                return jn.forEach((function(n) {
                    void 0 !== e[n] && (t[n] = Kn.arrayify(e[n]))
                }
                )),
                t
            },
            getPrefixedTransform: function() {
                return Vn = Vn || function() {
                    const e = document.createElement("div");
                    let t = null;
                    return ve().each(["transform", "msTransform", "MozTransform", "WebkitTransform", "OTransform"], (function(n) {
                        void 0 !== e.style[n] && (t = n)
                    }
                    )),
                    t
                }(),
                Vn
            },
            getCanUse3dTransform: function() {
                return null == $n && ($n = function() {
                    const e = document.createElement("div")
                      , t = Kn.getPrefixedTransform();
                    return e.style[t] = "translateZ(0px)",
                    !!e.style[t]
                }()),
                $n
            }
        };
        function Zn(e, t) {
            if (!{}.hasOwnProperty.call(e, t))
                throw new TypeError("attempted to use private field on non-instance");
            return e
        }
        var Yn = 0;
        function Xn(e) {
            return "__private_" + Yn++ + "_" + e
        }
        /*!
 * Raphael 1.5.2 - JavaScript Vector Library
 *
 * Copyright (c) 2010 Dmitry Baranovskiy (http://raphaeljs.com)
 * Licensed under the MIT (http://raphaeljs.com/license.html) license.
 */
        var Jn = function() {
            var e;
            function t() {
                if (t.is(arguments[0], P)) {
                    for (var e = arguments[0], n = Ve[d](t, e.splice(0, 3 + t.is(e[0], R))), r = n.set(), s = 0, o = e[S]; s < o; s++) {
                        var l = e[s] || {};
                        i[a](l.type) && r[F](n[l.type]().attr(l))
                    }
                    return r
                }
                return Ve[d](t, arguments)
            }
            e = "".trim ? function(e, t, n) {
                e.setAttribute(t, String(n).trim())
            }
            : function(e, t, n) {
                e.setAttribute(t, String(n))
            }
            ,
            t.version = "1.5.2";
            var n, r = /[, ]+/, i = {
                circle: 1,
                rect: 1,
                path: 1,
                ellipse: 1,
                text: 1,
                image: 1
            }, s = /\{(\d+)\}/g, o = "prototype", a = "hasOwnProperty", l = document, c = window, h = {
                was: Object[o][a].call(c, "Raphael"),
                is: c.Raphael
            }, p = function() {
                this.customAttributes = {}
            }, u = "appendChild", d = "apply", m = "concat", f = "createTouch"in l, g = "", v = " ", y = String, b = "split", x = "click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend orientationchange touchcancel gesturestart gesturechange gestureend"[b](v), w = {
                mousedown: "touchstart",
                mousemove: "touchmove",
                mouseup: "touchend"
            }, k = "join", S = "length", E = y[o].toLowerCase, M = Math, C = M.max, T = M.min, _ = M.abs, A = M.pow, I = M.PI, R = "number", N = "string", P = "array", O = "toString", L = "fill", D = Object[o][O], F = "push", z = /^url\(['"]?([^\)]+?)['"]?\)$/i, B = /^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\))\s*$/i, q = {
                NaN: 1,
                Infinity: 1,
                "-Infinity": 1
            }, H = /^(?:cubic-)?bezier\(([^,]+),([^,]+),([^,]+),([^\)]+)\)/, U = M.round, G = parseFloat, W = parseInt, V = " progid:DXImageTransform.Microsoft", $ = y[o].toUpperCase, j = {
                blur: 0,
                "clip-rect": "0 0 1e9 1e9",
                cursor: "default",
                cx: 0,
                cy: 0,
                fill: "#fff",
                "fill-opacity": 1,
                font: '10px "Arial"',
                "font-family": '"Arial"',
                "font-size": "10",
                "font-style": "normal",
                "font-weight": 400,
                gradient: 0,
                height: 0,
                href: "http://raphaeljs.com/",
                opacity: 1,
                path: "M0,0",
                r: 0,
                rotation: 0,
                rx: 0,
                ry: 0,
                scale: "1 1",
                src: "",
                stroke: "#000",
                "stroke-dasharray": "",
                "stroke-linecap": "butt",
                "stroke-linejoin": "butt",
                "stroke-miterlimit": 0,
                "stroke-opacity": 1,
                "stroke-width": 1,
                target: "_blank",
                "text-anchor": "middle",
                title: "Raphael",
                translation: "0 0",
                width: 0,
                x: 0,
                y: 0
            }, K = {
                along: "along",
                blur: R,
                "clip-rect": "csv",
                cx: R,
                cy: R,
                fill: "colour",
                "fill-opacity": R,
                "font-size": R,
                height: R,
                opacity: R,
                path: "path",
                r: R,
                rotation: "csv",
                rx: R,
                ry: R,
                scale: "csv",
                stroke: "colour",
                "stroke-opacity": R,
                "stroke-width": R,
                translation: "csv",
                width: R,
                x: R,
                y: R
            }, Z = "replace", Y = /^(from|to|\d+%?)$/, X = /\s*,\s*/, J = {
                hs: 1,
                rg: 1
            }, Q = /,?([achlmqrstvxz]),?/gi, ee = /([achlmqstvz])[\s,]*((-?\d*\.?\d*(?:e[-+]?\d+)?\s*,?\s*)+)/gi, te = /(-?\d*\.?\d*(?:e[-+]?\d+)?)\s*,?\s*/gi, ne = /^r(?:\(([^,]+?)\s*,\s*([^\)]+?)\))?/, re = function(e, t) {
                return e.key - t.key
            };
            if (t.type = c.SVGAngle || l.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1") ? "SVG" : "VML",
            "VML" == t.type) {
                var ie, se = l.createElement("div");
                if (se.innerHTML = '<v:shape adj="1"/>',
                (ie = se.firstChild).style.behavior = "url(#default#VML)",
                !ie || "object" != typeof ie.adj)
                    return t.type = null;
                se = null
            }
            function oe() {
                for (var e = [], t = 0; t < 32; t++)
                    e[t] = (~~(16 * M.random()))[O](16);
                return e[12] = 4,
                e[16] = (3 & e[16] | 8)[O](16),
                "r-" + e[k]("")
            }
            t.svg = !(t.vml = "VML" == t.type),
            p[o] = t[o],
            n = p[o],
            t._id = 0,
            t._oid = 0,
            t.fn = {},
            t.is = function(e, t) {
                return "finite" == (t = E.call(t)) ? !q[a](+e) : "null" == t && null === e || t == typeof e || "object" == t && e === Object(e) || "array" == t && Array.isArray && Array.isArray(e) || D.call(e).slice(8, -1).toLowerCase() == t
            }
            ,
            t.angle = function(e, n, r, i, s, o) {
                if (null == s) {
                    var a = e - r
                      , l = n - i;
                    return a || l ? (180 * (a < 0) + 180 * M.atan(-l / -a) / I + 360) % 360 : 0
                }
                return t.angle(e, n, s, o) - t.angle(r, i, s, o)
            }
            ,
            t.rad = function(e) {
                return e % 360 * I / 180
            }
            ,
            t.deg = function(e) {
                return 180 * e / I % 360
            }
            ,
            t.snapTo = function(e, n, r) {
                if (r = t.is(r, "finite") ? r : 10,
                t.is(e, P)) {
                    for (var i = e.length; i--; )
                        if (_(e[i] - n) <= r)
                            return e[i]
                } else {
                    var s = n % (e = +e);
                    if (s < r)
                        return n - s;
                    if (s > e - r)
                        return n - s + e
                }
                return n
            }
            ,
            t.setWindow = function(e) {
                l = (c = e).document
            }
            ;
            var ae = function(e) {
                if (t.vml) {
                    var n, r = /^\s+|\s+$/g;
                    try {
                        var i = new ActiveXObject("htmlfile");
                        i.write("<body>"),
                        i.close(),
                        n = i.body
                    } catch (e) {
                        n = createPopup().document.body
                    }
                    var s = n.createTextRange();
                    ae = pe((function(e) {
                        try {
                            n.style.color = y(e)[Z](r, g);
                            var t = s.queryCommandValue("ForeColor");
                            return "#" + ("000000" + (t = (255 & t) << 16 | 65280 & t | (16711680 & t) >>> 16)[O](16)).slice(-6)
                        } catch (e) {
                            return "none"
                        }
                    }
                    ))
                } else {
                    var o = l.createElement("i");
                    o.title = "Raphaël Colour Picker",
                    o.style.display = "none",
                    l.body[u](o),
                    ae = pe((function(e) {
                        return o.style.color = e,
                        l.defaultView.getComputedStyle(o, g).getPropertyValue("color")
                    }
                    ))
                }
                return ae(e)
            }
              , le = function() {
                return "hsb(" + [this.h, this.s, this.b] + ")"
            }
              , ce = function() {
                return "hsl(" + [this.h, this.s, this.l] + ")"
            }
              , he = function() {
                return this.hex
            };
            function pe(e, t, n) {
                return function r() {
                    var i = Array[o].slice.call(arguments, 0)
                      , s = i[k]("►")
                      , l = r.cache = r.cache || {}
                      , c = r.count = r.count || [];
                    return l[a](s) || (c[S] >= 1e3 && delete l[c.shift()],
                    c[F](s),
                    l[s] = e[d](t, i)),
                    n ? n(l[s]) : l[s]
                }
            }
            t.hsb2rgb = function(e, n, r, i) {
                return t.is(e, "object") && "h"in e && "s"in e && "b"in e && (r = e.b,
                n = e.s,
                i = (e = e.h).o),
                t.hsl2rgb(e, n, r / 2, i)
            }
            ,
            t.hsl2rgb = function(e, n, r, i) {
                t.is(e, "object") && "h"in e && "s"in e && "l"in e && (r = e.l,
                n = e.s,
                e = e.h),
                (e > 1 || n > 1 || r > 1) && (e /= 360,
                n /= 100,
                r /= 100);
                var s, o, a, l = {}, c = ["r", "g", "b"];
                if (n) {
                    o = 2 * r - (s = r < .5 ? r * (1 + n) : r + n - r * n);
                    for (var h = 0; h < 3; h++)
                        (a = e + 1 / 3 * -(h - 1)) < 0 && a++,
                        a > 1 && a--,
                        l[c[h]] = 6 * a < 1 ? o + 6 * (s - o) * a : 2 * a < 1 ? s : 3 * a < 2 ? o + (s - o) * (2 / 3 - a) * 6 : o
                } else
                    l = {
                        r,
                        g: r,
                        b: r
                    };
                return l.r *= 255,
                l.g *= 255,
                l.b *= 255,
                l.hex = "#" + (16777216 | l.b | l.g << 8 | l.r << 16).toString(16).slice(1),
                t.is(i, "finite") && (l.opacity = i),
                l.toString = he,
                l
            }
            ,
            t.rgb2hsb = function(e, n, r) {
                if (null == n && t.is(e, "object") && "r"in e && "g"in e && "b"in e && (r = e.b,
                n = e.g,
                e = e.r),
                null == n && t.is(e, N)) {
                    var i = t.getRGB(e);
                    e = i.r,
                    n = i.g,
                    r = i.b
                }
                (e > 1 || n > 1 || r > 1) && (e /= 255,
                n /= 255,
                r /= 255);
                var s, o = C(e, n, r), a = T(e, n, r);
                if (a == o)
                    return {
                        h: 0,
                        s: 0,
                        b: o,
                        toString: le
                    };
                var l = o - a;
                return s = e == o ? (n - r) / l : n == o ? 2 + (r - e) / l : 4 + (e - n) / l,
                (s /= 6) < 0 && s++,
                s > 1 && s--,
                {
                    h: s,
                    s: l / o,
                    b: o,
                    toString: le
                }
            }
            ,
            t.rgb2hsl = function(e, n, r) {
                if (null == n && t.is(e, "object") && "r"in e && "g"in e && "b"in e && (r = e.b,
                n = e.g,
                e = e.r),
                null == n && t.is(e, N)) {
                    var i = t.getRGB(e);
                    e = i.r,
                    n = i.g,
                    r = i.b
                }
                (e > 1 || n > 1 || r > 1) && (e /= 255,
                n /= 255,
                r /= 255);
                var s, o, a = C(e, n, r), l = T(e, n, r), c = (a + l) / 2;
                if (l == a)
                    o = {
                        h: 0,
                        s: 0,
                        l: c
                    };
                else {
                    var h = a - l;
                    s = e == a ? (n - r) / h : n == a ? 2 + (r - e) / h : 4 + (e - n) / h,
                    (s /= 6) < 0 && s++,
                    s > 1 && s--,
                    o = {
                        h: s,
                        s: c < .5 ? h / (a + l) : h / (2 - a - l),
                        l: c
                    }
                }
                return o.toString = ce,
                o
            }
            ,
            t._path2string = function() {
                return this.join(",")[Z](Q, "$1")
            }
            ,
            t.getRGB = pe((function(e) {
                if (!e || (e = y(e)).indexOf("-") + 1)
                    return {
                        r: -1,
                        g: -1,
                        b: -1,
                        hex: "none",
                        error: 1
                    };
                if ("none" == e)
                    return {
                        r: -1,
                        g: -1,
                        b: -1,
                        hex: "none"
                    };
                !J[a](e.toLowerCase().substring(0, 2)) && "#" != e.charAt() && (e = ae(e));
                var n, r, i, s, o, l, c = e.match(B);
                return c ? (c[2] && (i = W(c[2].substring(5), 16),
                r = W(c[2].substring(3, 5), 16),
                n = W(c[2].substring(1, 3), 16)),
                c[3] && (i = W((o = c[3].charAt(3)) + o, 16),
                r = W((o = c[3].charAt(2)) + o, 16),
                n = W((o = c[3].charAt(1)) + o, 16)),
                c[4] && (l = c[4][b](X),
                n = G(l[0]),
                "%" == l[0].slice(-1) && (n *= 2.55),
                r = G(l[1]),
                "%" == l[1].slice(-1) && (r *= 2.55),
                i = G(l[2]),
                "%" == l[2].slice(-1) && (i *= 2.55),
                "rgba" == c[1].toLowerCase().slice(0, 4) && (s = G(l[3])),
                l[3] && "%" == l[3].slice(-1) && (s /= 100)),
                c[5] ? (l = c[5][b](X),
                n = G(l[0]),
                "%" == l[0].slice(-1) && (n *= 2.55),
                r = G(l[1]),
                "%" == l[1].slice(-1) && (r *= 2.55),
                i = G(l[2]),
                "%" == l[2].slice(-1) && (i *= 2.55),
                ("deg" == l[0].slice(-3) || "°" == l[0].slice(-1)) && (n /= 360),
                "hsba" == c[1].toLowerCase().slice(0, 4) && (s = G(l[3])),
                l[3] && "%" == l[3].slice(-1) && (s /= 100),
                t.hsb2rgb(n, r, i, s)) : c[6] ? (l = c[6][b](X),
                n = G(l[0]),
                "%" == l[0].slice(-1) && (n *= 2.55),
                r = G(l[1]),
                "%" == l[1].slice(-1) && (r *= 2.55),
                i = G(l[2]),
                "%" == l[2].slice(-1) && (i *= 2.55),
                ("deg" == l[0].slice(-3) || "°" == l[0].slice(-1)) && (n /= 360),
                "hsla" == c[1].toLowerCase().slice(0, 4) && (s = G(l[3])),
                l[3] && "%" == l[3].slice(-1) && (s /= 100),
                t.hsl2rgb(n, r, i, s)) : ((c = {
                    r: n,
                    g: r,
                    b: i
                }).hex = "#" + (16777216 | i | r << 8 | n << 16).toString(16).slice(1),
                t.is(s, "finite") && (c.opacity = s),
                c)) : {
                    r: -1,
                    g: -1,
                    b: -1,
                    hex: "none",
                    error: 1
                }
            }
            ), t),
            t.getColor = function(e) {
                var t = this.getColor.start = this.getColor.start || {
                    h: 0,
                    s: 1,
                    b: e || .75
                }
                  , n = this.hsb2rgb(t.h, t.s, t.b);
                return t.h += .075,
                t.h > 1 && (t.h = 0,
                t.s -= .2,
                t.s <= 0 && (this.getColor.start = {
                    h: 0,
                    s: 1,
                    b: t.b
                })),
                n.hex
            }
            ,
            t.getColor.reset = function() {
                delete this.start
            }
            ,
            t.parsePathString = pe((function(e) {
                if (!e)
                    return null;
                var n = {
                    a: 7,
                    c: 6,
                    h: 1,
                    l: 2,
                    m: 2,
                    q: 4,
                    s: 4,
                    t: 2,
                    v: 1,
                    z: 0
                }
                  , r = [];
                return t.is(e, P) && t.is(e[0], P) && (r = de(e)),
                r[S] || y(e)[Z](ee, (function(e, t, i) {
                    var s = []
                      , o = E.call(t);
                    for (i[Z](te, (function(e, t) {
                        t && s[F](+t)
                    }
                    )),
                    "m" == o && s[S] > 2 && (r[F]([t][m](s.splice(0, 2))),
                    o = "l",
                    t = "m" == t ? "l" : "L"); s[S] >= n[o] && (r[F]([t][m](s.splice(0, n[o]))),
                    n[o]); )
                        ;
                }
                )),
                r[O] = t._path2string,
                r
            }
            )),
            t.findDotsAtSegment = function(e, t, n, r, i, s, o, a, l) {
                var c = 1 - l
                  , h = A(c, 3) * e + 3 * A(c, 2) * l * n + 3 * c * l * l * i + A(l, 3) * o
                  , p = A(c, 3) * t + 3 * A(c, 2) * l * r + 3 * c * l * l * s + A(l, 3) * a
                  , u = e + 2 * l * (n - e) + l * l * (i - 2 * n + e)
                  , d = t + 2 * l * (r - t) + l * l * (s - 2 * r + t)
                  , m = n + 2 * l * (i - n) + l * l * (o - 2 * i + n)
                  , f = r + 2 * l * (s - r) + l * l * (a - 2 * s + r)
                  , g = (1 - l) * e + l * n
                  , v = (1 - l) * t + l * r
                  , y = (1 - l) * i + l * o
                  , b = (1 - l) * s + l * a
                  , x = 90 - 180 * M.atan((u - m) / (d - f)) / I;
                return (u > m || d < f) && (x += 180),
                {
                    x: h,
                    y: p,
                    m: {
                        x: u,
                        y: d
                    },
                    n: {
                        x: m,
                        y: f
                    },
                    start: {
                        x: g,
                        y: v
                    },
                    end: {
                        x: y,
                        y: b
                    },
                    alpha: x
                }
            }
            ;
            var ue = pe((function(e) {
                if (!e)
                    return {
                        x: 0,
                        y: 0,
                        width: 0,
                        height: 0
                    };
                for (var t, n = 0, r = 0, i = [], s = [], o = 0, a = (e = we(e))[S]; o < a; o++)
                    if ("M" == (t = e[o])[0])
                        n = t[1],
                        r = t[2],
                        i[F](n),
                        s[F](r);
                    else {
                        var l = xe(n, r, t[1], t[2], t[3], t[4], t[5], t[6]);
                        i = i[m](l.min.x, l.max.x),
                        s = s[m](l.min.y, l.max.y),
                        n = t[5],
                        r = t[6]
                    }
                var c = T[d](0, i)
                  , h = T[d](0, s);
                return {
                    x: c,
                    y: h,
                    width: C[d](0, i) - c,
                    height: C[d](0, s) - h
                }
            }
            ))
              , de = function(e) {
                var n = [];
                t.is(e, P) && t.is(e && e[0], P) || (e = t.parsePathString(e));
                for (var r = 0, i = e[S]; r < i; r++) {
                    n[r] = [];
                    for (var s = 0, o = e[r][S]; s < o; s++)
                        n[r][s] = e[r][s]
                }
                return n[O] = t._path2string,
                n
            }
              , me = pe((function(e) {
                t.is(e, P) && t.is(e && e[0], P) || (e = t.parsePathString(e));
                var n = []
                  , r = 0
                  , i = 0
                  , s = 0
                  , o = 0
                  , a = 0;
                "M" == e[0][0] && (s = r = e[0][1],
                o = i = e[0][2],
                a++,
                n[F](["M", r, i]));
                for (var l = a, c = e[S]; l < c; l++) {
                    var h = n[l] = []
                      , p = e[l];
                    if (p[0] != E.call(p[0]))
                        switch (h[0] = E.call(p[0]),
                        h[0]) {
                        case "a":
                            h[1] = p[1],
                            h[2] = p[2],
                            h[3] = p[3],
                            h[4] = p[4],
                            h[5] = p[5],
                            h[6] = +(p[6] - r).toFixed(3),
                            h[7] = +(p[7] - i).toFixed(3);
                            break;
                        case "v":
                            h[1] = +(p[1] - i).toFixed(3);
                            break;
                        case "m":
                            s = p[1],
                            o = p[2];
                        default:
                            for (var u = 1, d = p[S]; u < d; u++)
                                h[u] = +(p[u] - (u % 2 ? r : i)).toFixed(3)
                        }
                    else {
                        h = n[l] = [],
                        "m" == p[0] && (s = p[1] + r,
                        o = p[2] + i);
                        for (var m = 0, f = p[S]; m < f; m++)
                            n[l][m] = p[m]
                    }
                    var g = n[l][S];
                    switch (n[l][0]) {
                    case "z":
                        r = s,
                        i = o;
                        break;
                    case "h":
                        r += +n[l][g - 1];
                        break;
                    case "v":
                        i += +n[l][g - 1];
                        break;
                    default:
                        r += +n[l][g - 2],
                        i += +n[l][g - 1]
                    }
                }
                return n[O] = t._path2string,
                n
            }
            ), 0, de)
              , fe = pe((function(e) {
                t.is(e, P) && t.is(e && e[0], P) || (e = t.parsePathString(e));
                var n = []
                  , r = 0
                  , i = 0
                  , s = 0
                  , o = 0
                  , a = 0;
                "M" == e[0][0] && (s = r = +e[0][1],
                o = i = +e[0][2],
                a++,
                n[0] = ["M", r, i]);
                for (var l = a, c = e[S]; l < c; l++) {
                    var h = n[l] = []
                      , p = e[l];
                    if (p[0] != $.call(p[0]))
                        switch (h[0] = $.call(p[0]),
                        h[0]) {
                        case "A":
                            h[1] = p[1],
                            h[2] = p[2],
                            h[3] = p[3],
                            h[4] = p[4],
                            h[5] = p[5],
                            h[6] = +(p[6] + r),
                            h[7] = +(p[7] + i);
                            break;
                        case "V":
                            h[1] = +p[1] + i;
                            break;
                        case "H":
                            h[1] = +p[1] + r;
                            break;
                        case "M":
                            s = +p[1] + r,
                            o = +p[2] + i;
                        default:
                            for (var u = 1, d = p[S]; u < d; u++)
                                h[u] = +p[u] + (u % 2 ? r : i)
                        }
                    else
                        for (var m = 0, f = p[S]; m < f; m++)
                            n[l][m] = p[m];
                    switch (h[0]) {
                    case "Z":
                        r = s,
                        i = o;
                        break;
                    case "H":
                        r = h[1];
                        break;
                    case "V":
                        i = h[1];
                        break;
                    case "M":
                        s = n[l][n[l][S] - 2],
                        o = n[l][n[l][S] - 1];
                    default:
                        r = n[l][n[l][S] - 2],
                        i = n[l][n[l][S] - 1]
                    }
                }
                return n[O] = t._path2string,
                n
            }
            ), null, de)
              , ge = function(e, t, n, r) {
                return [e, t, n, r, n, r]
            }
              , ve = function(e, t, n, r, i, s) {
                var o = 1 / 3
                  , a = 2 / 3;
                return [o * e + a * n, o * t + a * r, o * i + a * n, o * s + a * r, i, s]
            }
              , ye = function e(t, n, r, i, s, o, a, l, c, h) {
                var p, u = 120 * I / 180, d = I / 180 * (+s || 0), f = [], g = pe((function(e, t, n) {
                    return {
                        x: e * M.cos(n) - t * M.sin(n),
                        y: e * M.sin(n) + t * M.cos(n)
                    }
                }
                ));
                if (h)
                    R = h[0],
                    N = h[1],
                    T = h[2],
                    A = h[3];
                else {
                    t = (p = g(t, n, -d)).x,
                    n = p.y;
                    var v = (t - (l = (p = g(l, c, -d)).x)) / 2
                      , y = (n - (c = p.y)) / 2
                      , x = v * v / (r * r) + y * y / (i * i);
                    x > 1 && (r *= x = M.sqrt(x),
                    i *= x);
                    var w = r * r
                      , E = i * i
                      , C = (o == a ? -1 : 1) * M.sqrt(_((w * E - w * y * y - E * v * v) / (w * y * y + E * v * v)))
                      , T = C * r * y / i + (t + l) / 2
                      , A = C * -i * v / r + (n + c) / 2
                      , R = M.asin(((n - A) / i).toFixed(9))
                      , N = M.asin(((c - A) / i).toFixed(9));
                    (R = t < T ? I - R : R) < 0 && (R = 2 * I + R),
                    (N = l < T ? I - N : N) < 0 && (N = 2 * I + N),
                    a && R > N && (R -= 2 * I),
                    !a && N > R && (N -= 2 * I)
                }
                var P = N - R;
                if (_(P) > u) {
                    var O = N
                      , L = l
                      , D = c;
                    N = R + u * (a && N > R ? 1 : -1),
                    f = e(l = T + r * M.cos(N), c = A + i * M.sin(N), r, i, s, 0, a, L, D, [N, O, T, A])
                }
                P = N - R;
                var F = M.cos(R)
                  , z = M.sin(R)
                  , B = M.cos(N)
                  , q = M.sin(N)
                  , H = M.tan(P / 4)
                  , U = 4 / 3 * r * H
                  , G = 4 / 3 * i * H
                  , W = [t, n]
                  , V = [t + U * z, n - G * F]
                  , $ = [l + U * q, c - G * B]
                  , j = [l, c];
                if (V[0] = 2 * W[0] - V[0],
                V[1] = 2 * W[1] - V[1],
                h)
                    return [V, $, j][m](f);
                for (var K = [], Z = 0, Y = (f = [V, $, j][m](f)[k]()[b](","))[S]; Z < Y; Z++)
                    K[Z] = Z % 2 ? g(f[Z - 1], f[Z], d).y : g(f[Z], f[Z + 1], d).x;
                return K
            }
              , be = function(e, t, n, r, i, s, o, a, l) {
                var c = 1 - l;
                return {
                    x: A(c, 3) * e + 3 * A(c, 2) * l * n + 3 * c * l * l * i + A(l, 3) * o,
                    y: A(c, 3) * t + 3 * A(c, 2) * l * r + 3 * c * l * l * s + A(l, 3) * a
                }
            }
              , xe = pe((function(e, t, n, r, i, s, o, a) {
                var l, c = i - 2 * n + e - (o - 2 * i + n), h = 2 * (n - e) - 2 * (i - n), p = e - n, u = (-h + M.sqrt(h * h - 4 * c * p)) / 2 / c, m = (-h - M.sqrt(h * h - 4 * c * p)) / 2 / c, f = [t, a], g = [e, o];
                return _(u) > "1e12" && (u = .5),
                _(m) > "1e12" && (m = .5),
                u > 0 && u < 1 && (l = be(e, t, n, r, i, s, o, a, u),
                g[F](l.x),
                f[F](l.y)),
                m > 0 && m < 1 && (l = be(e, t, n, r, i, s, o, a, m),
                g[F](l.x),
                f[F](l.y)),
                c = s - 2 * r + t - (a - 2 * s + r),
                p = t - r,
                u = (-(h = 2 * (r - t) - 2 * (s - r)) + M.sqrt(h * h - 4 * c * p)) / 2 / c,
                m = (-h - M.sqrt(h * h - 4 * c * p)) / 2 / c,
                _(u) > "1e12" && (u = .5),
                _(m) > "1e12" && (m = .5),
                u > 0 && u < 1 && (l = be(e, t, n, r, i, s, o, a, u),
                g[F](l.x),
                f[F](l.y)),
                m > 0 && m < 1 && (l = be(e, t, n, r, i, s, o, a, m),
                g[F](l.x),
                f[F](l.y)),
                {
                    min: {
                        x: T[d](0, g),
                        y: T[d](0, f)
                    },
                    max: {
                        x: C[d](0, g),
                        y: C[d](0, f)
                    }
                }
            }
            ))
              , we = pe((function(e, t) {
                for (var n = fe(e), r = t && fe(t), i = {
                    x: 0,
                    y: 0,
                    bx: 0,
                    by: 0,
                    X: 0,
                    Y: 0,
                    qx: null,
                    qy: null
                }, s = {
                    x: 0,
                    y: 0,
                    bx: 0,
                    by: 0,
                    X: 0,
                    Y: 0,
                    qx: null,
                    qy: null
                }, o = function(e, t) {
                    if (!e)
                        return ["C", t.x, t.y, t.x, t.y, t.x, t.y];
                    switch (!(e[0]in {
                        T: 1,
                        Q: 1
                    }) && (t.qx = t.qy = null),
                    e[0]) {
                    case "M":
                        t.X = e[1],
                        t.Y = e[2];
                        break;
                    case "A":
                        e = ["C"][m](ye[d](0, [t.x, t.y][m](e.slice(1))));
                        break;
                    case "S":
                        e = ["C", t.x + (t.x - (t.bx || t.x)), t.y + (t.y - (t.by || t.y))][m](e.slice(1));
                        break;
                    case "T":
                        t.qx = t.x + (t.x - (t.qx || t.x)),
                        t.qy = t.y + (t.y - (t.qy || t.y)),
                        e = ["C"][m](ve(t.x, t.y, t.qx, t.qy, e[1], e[2]));
                        break;
                    case "Q":
                        t.qx = e[1],
                        t.qy = e[2],
                        e = ["C"][m](ve(t.x, t.y, e[1], e[2], e[3], e[4]));
                        break;
                    case "L":
                        e = ["C"][m](ge(t.x, t.y, e[1], e[2]));
                        break;
                    case "H":
                        e = ["C"][m](ge(t.x, t.y, e[1], t.y));
                        break;
                    case "V":
                        e = ["C"][m](ge(t.x, t.y, t.x, e[1]));
                        break;
                    case "Z":
                        e = ["C"][m](ge(t.x, t.y, t.X, t.Y))
                    }
                    return e
                }, a = function(e, t) {
                    if (e[t][S] > 7) {
                        e[t].shift();
                        for (var i = e[t]; i[S]; )
                            e.splice(t++, 0, ["C"][m](i.splice(0, 6)));
                        e.splice(t, 1),
                        h = C(n[S], r && r[S] || 0)
                    }
                }, l = function(e, t, i, s, o) {
                    e && t && "M" == e[o][0] && "M" != t[o][0] && (t.splice(o, 0, ["M", s.x, s.y]),
                    i.bx = 0,
                    i.by = 0,
                    i.x = e[o][1],
                    i.y = e[o][2],
                    h = C(n[S], r && r[S] || 0))
                }, c = 0, h = C(n[S], r && r[S] || 0); c < h; c++) {
                    n[c] = o(n[c], i),
                    a(n, c),
                    r && (r[c] = o(r[c], s)),
                    r && a(r, c),
                    l(n, r, i, s, c),
                    l(r, n, s, i, c);
                    var p = n[c]
                      , u = r && r[c]
                      , f = p[S]
                      , g = r && u[S];
                    i.x = p[f - 2],
                    i.y = p[f - 1],
                    i.bx = G(p[f - 4]) || i.x,
                    i.by = G(p[f - 3]) || i.y,
                    s.bx = r && (G(u[g - 4]) || s.x),
                    s.by = r && (G(u[g - 3]) || s.y),
                    s.x = r && u[g - 2],
                    s.y = r && u[g - 1]
                }
                return r ? [n, r] : n
            }
            ), null, de)
              , ke = pe((function(e) {
                for (var n = [], r = 0, i = e[S]; r < i; r++) {
                    var s = {}
                      , o = e[r].match(/^([^:]*):?([\d\.]*)/);
                    if (s.color = t.getRGB(o[1]),
                    s.color.error)
                        return null;
                    s.color = s.color.hex,
                    o[2] && (s.offset = o[2] + "%"),
                    n[F](s)
                }
                for (r = 1,
                i = n[S] - 1; r < i; r++)
                    if (!n[r].offset) {
                        for (var a = G(n[r - 1].offset || 0), l = 0, c = r + 1; c < i; c++)
                            if (n[c].offset) {
                                l = n[c].offset;
                                break
                            }
                        l || (l = 100,
                        c = i);
                        for (var h = ((l = G(l)) - a) / (c - r + 1); r < c; r++)
                            a += h,
                            n[r].offset = a + "%"
                    }
                return n
            }
            ))
              , Se = function(e, n, r, i) {
                var s;
                return t.is(e, N) || t.is(e, "object") ? (s = t.is(e, N) ? l.getElementById(e) : e).tagName ? null == n ? {
                    container: s,
                    width: s.style.pixelWidth || s.offsetWidth,
                    height: s.style.pixelHeight || s.offsetHeight
                } : {
                    container: s,
                    width: n,
                    height: r
                } : void 0 : {
                    container: 1,
                    x: e,
                    y: n,
                    width: r,
                    height: i
                }
            }
              , Ee = function e(t, n) {
                var r = this;
                for (var i in n)
                    if (n[a](i) && !(i in t))
                        switch (typeof n[i]) {
                        case "function":
                            !function(e) {
                                t[i] = t === r ? e : function() {
                                    return e[d](r, arguments)
                                }
                            }(n[i]);
                            break;
                        case "object":
                            t[i] = t[i] || {},
                            e.call(this, t[i], n[i]);
                            break;
                        default:
                            t[i] = n[i]
                        }
            }
              , Me = function(e, t) {
                e == t.top && (t.top = e.prev),
                e == t.bottom && (t.bottom = e.next),
                e.next && (e.next.prev = e.prev),
                e.prev && (e.prev.next = e.next)
            }
              , Ce = function(e, t) {
                t.top !== e && (Me(e, t),
                e.next = null,
                e.prev = t.top,
                t.top.next = e,
                t.top = e)
            }
              , Te = function(e, t) {
                t.bottom !== e && (Me(e, t),
                e.next = t.bottom,
                e.prev = null,
                t.bottom.prev = e,
                t.bottom = e)
            }
              , _e = function(e, t, n) {
                Me(e, n),
                t == n.top && (n.top = e),
                t.next && (t.next.prev = e),
                e.next = t.next,
                e.prev = t,
                t.next = e
            }
              , Ae = function(e, t, n) {
                Me(e, n),
                t == n.bottom && (n.bottom = e),
                t.prev && (t.prev.next = e),
                e.prev = t.prev,
                t.prev = e,
                e.next = t
            }
              , Ie = function(e) {
                return function() {
                    throw new Error("Raphaël: you are calling to method “" + e + "” of removed object")
                }
            };
            if (t.pathToRelative = me,
            t.svg) {
                n.svgns = "http://www.w3.org/2000/svg",
                n.xlink = "http://www.w3.org/1999/xlink",
                U = function(e) {
                    return +e + .5 * (~~e === e)
                }
                ;
                var Re = function(t, r) {
                    if (!r)
                        return (t = l.createElementNS(n.svgns, t)).style.webkitTapHighlightColor = "rgba(0,0,0,0)",
                        t;
                    for (var i in r)
                        r[a](i) && e(t, i, y(r[i]))
                };
                t[O] = function() {
                    return "Your browser supports SVG.\nYou are running Raphaël " + this.version
                }
                ;
                var Ne = function(e, t) {
                    var n = Re("path");
                    t.canvas && t.canvas[u](n);
                    var r = new Fe(n,t);
                    return r.type = "path",
                    Le(r, {
                        fill: "none",
                        stroke: "#000",
                        path: e
                    }),
                    r
                }
                  , Pe = function(e, t, n) {
                    var r = "linear"
                      , i = .5
                      , s = .5
                      , o = e.style;
                    if (t = (t = y(t)[Z](ne, (function(e, t, n) {
                        if (r = "radial",
                        t && n) {
                            i = G(t);
                            var o = 2 * ((s = G(n)) > .5) - 1;
                            A(i - .5, 2) + A(s - .5, 2) > .25 && (s = M.sqrt(.25 - A(i - .5, 2)) * o + .5) && .5 != s && (s = s.toFixed(5) - 1e-5 * o)
                        }
                        return g
                    }
                    )))[b](/\s*\-\s*/),
                    "linear" == r) {
                        var a = t.shift();
                        if (a = -G(a),
                        isNaN(a))
                            return null;
                        var c = [0, 0, M.cos(a * I / 180), M.sin(a * I / 180)]
                          , h = 1 / (C(_(c[2]), _(c[3])) || 1);
                        c[2] *= h,
                        c[3] *= h,
                        c[2] < 0 && (c[0] = -c[2],
                        c[2] = 0),
                        c[3] < 0 && (c[1] = -c[3],
                        c[3] = 0)
                    }
                    var p = ke(t);
                    if (!p)
                        return null;
                    var d = e.getAttribute(L);
                    (d = d.match(/^url\(#(.*)\)$/)) && n.defs.removeChild(l.getElementById(d[1]));
                    var m = Re(r + "Gradient");
                    m.id = oe(),
                    Re(m, "radial" == r ? {
                        fx: i,
                        fy: s
                    } : {
                        x1: c[0],
                        y1: c[1],
                        x2: c[2],
                        y2: c[3]
                    }),
                    n.defs[u](m);
                    for (var f = 0, v = p[S]; f < v; f++) {
                        var x = Re("stop");
                        Re(x, {
                            offset: p[f].offset ? p[f].offset : f ? "100%" : "0%",
                            "stop-color": p[f].color || "#fff"
                        }),
                        m[u](x)
                    }
                    return Re(e, {
                        fill: "url(#" + m.id + ")",
                        opacity: 1,
                        "fill-opacity": 1
                    }),
                    o.fill = g,
                    o.opacity = 1,
                    o.fillOpacity = 1,
                    1
                }
                  , Oe = function(e) {
                    var n = e.getBBox();
                    Re(e.pattern, {
                        patternTransform: t.format("translate({0},{1})", n.x, n.y)
                    })
                }
                  , Le = function(n, i) {
                    var s = {
                        "": [0],
                        none: [0],
                        "-": [3, 1],
                        ".": [1, 1],
                        "-.": [3, 1, 1, 1],
                        "-..": [3, 1, 1, 1, 1, 1],
                        ". ": [1, 3],
                        "- ": [4, 3],
                        "--": [8, 3],
                        "- .": [4, 3, 1, 3],
                        "--.": [8, 3, 1, 3],
                        "--..": [8, 3, 1, 3, 1, 3]
                    }
                      , o = n.node
                      , c = n.attrs
                      , h = n.rotate()
                      , p = function(e, t) {
                        if (t = s[E.call(t)]) {
                            for (var n = e.attrs["stroke-width"] || "1", r = {
                                round: n,
                                square: n,
                                butt: 0
                            }[e.attrs["stroke-linecap"] || i["stroke-linecap"]] || 0, a = [], l = t[S]; l--; )
                                a[l] = t[l] * n + (l % 2 ? 1 : -1) * r;
                            Re(o, {
                                "stroke-dasharray": a[k](",")
                            })
                        }
                    };
                    i[a]("rotation") && (h = i.rotation);
                    var d = y(h)[b](r);
                    for (var m in d.length - 1 ? (d[1] = +d[1],
                    d[2] = +d[2]) : d = null,
                    G(h) && n.rotate(0, !0),
                    i)
                        if (i[a](m)) {
                            if (!j[a](m))
                                continue;
                            var f = i[m];
                            switch (c[m] = f,
                            m) {
                            case "blur":
                                n.blur(f);
                                break;
                            case "rotation":
                                n.rotate(f, !0);
                                break;
                            case "href":
                            case "title":
                            case "target":
                                var x = o.parentNode;
                                if ("a" != E.call(x.tagName)) {
                                    var w = Re("a");
                                    x.insertBefore(w, o),
                                    w[u](o),
                                    x = w
                                }
                                "target" == m && "blank" == f ? x.setAttributeNS(n.paper.xlink, "show", "new") : x.setAttributeNS(n.paper.xlink, m, f);
                                break;
                            case "cursor":
                                o.style.cursor = f;
                                break;
                            case "clip-rect":
                                var M = y(f)[b](r);
                                if (4 == M[S]) {
                                    n.clip && n.clip.parentNode.parentNode.removeChild(n.clip.parentNode);
                                    var C = Re("clipPath")
                                      , T = Re("rect");
                                    C.id = oe(),
                                    Re(T, {
                                        x: M[0],
                                        y: M[1],
                                        width: M[2],
                                        height: M[3]
                                    }),
                                    C[u](T),
                                    n.paper.defs[u](C),
                                    Re(o, {
                                        "clip-path": "url(#" + C.id + ")"
                                    }),
                                    n.clip = T
                                }
                                if (!f) {
                                    var _ = l.getElementById(o.getAttribute("clip-path")[Z](/(^url\(#|\)$)/g, g));
                                    _ && _.parentNode.removeChild(_),
                                    Re(o, {
                                        "clip-path": g
                                    }),
                                    delete n.clip
                                }
                                break;
                            case "path":
                                "path" == n.type && Re(o, {
                                    d: f ? c.path = fe(f) : "M0,0"
                                });
                                break;
                            case "width":
                                if (e(o, m, f),
                                !c.fx)
                                    break;
                                m = "x",
                                f = c.x;
                            case "x":
                                c.fx && (f = -c.x - (c.width || 0));
                            case "rx":
                                if ("rx" == m && "rect" == n.type)
                                    break;
                            case "cx":
                                d && ("x" == m || "cx" == m) && (d[1] += f - c[m]),
                                e(o, m, f),
                                n.pattern && Oe(n);
                                break;
                            case "height":
                                if (e(o, m, f),
                                !c.fy)
                                    break;
                                m = "y",
                                f = c.y;
                            case "y":
                                c.fy && (f = -c.y - (c.height || 0));
                            case "ry":
                                if ("ry" == m && "rect" == n.type)
                                    break;
                            case "cy":
                                d && ("y" == m || "cy" == m) && (d[2] += f - c[m]),
                                e(o, m, f),
                                n.pattern && Oe(n);
                                break;
                            case "r":
                                "rect" == n.type ? Re(o, {
                                    rx: f,
                                    ry: f
                                }) : e(o, m, f);
                                break;
                            case "src":
                                "image" == n.type && o.setAttributeNS(n.paper.xlink, "href", f);
                                break;
                            case "stroke-width":
                                o.style.strokeWidth = f,
                                e(o, m, f),
                                c["stroke-dasharray"] && p(n, c["stroke-dasharray"]);
                                break;
                            case "stroke-dasharray":
                                p(n, f);
                                break;
                            case "translation":
                                var A = y(f)[b](r);
                                A[0] = +A[0] || 0,
                                A[1] = +A[1] || 0,
                                d && (d[1] += A[0],
                                d[2] += A[1]),
                                wt.call(n, A[0], A[1]);
                                break;
                            case "scale":
                                A = y(f)[b](r),
                                n.scale(+A[0] || 1, +A[1] || +A[0] || 1, isNaN(G(A[2])) ? null : +A[2], isNaN(G(A[3])) ? null : +A[3]);
                                break;
                            case L:
                                var I = y(f).match(z);
                                if (I) {
                                    C = Re("pattern");
                                    var R = Re("image");
                                    C.id = oe(),
                                    Re(C, {
                                        x: 0,
                                        y: 0,
                                        patternUnits: "userSpaceOnUse",
                                        height: 1,
                                        width: 1
                                    }),
                                    Re(R, {
                                        x: 0,
                                        y: 0
                                    }),
                                    R.setAttributeNS(n.paper.xlink, "href", I[1]),
                                    C[u](R);
                                    var N = l.createElement("img");
                                    N.style.cssText = "position:absolute;left:-9999em;top-9999em",
                                    N.onload = function() {
                                        Re(C, {
                                            width: this.offsetWidth,
                                            height: this.offsetHeight
                                        }),
                                        Re(R, {
                                            width: this.offsetWidth,
                                            height: this.offsetHeight
                                        }),
                                        l.body.removeChild(this),
                                        n.paper.safari()
                                    }
                                    ,
                                    l.body[u](N),
                                    N.src = I[1],
                                    n.paper.defs[u](C),
                                    o.style.fill = "url(#" + C.id + ")",
                                    Re(o, {
                                        fill: "url(#" + C.id + ")"
                                    }),
                                    n.pattern = C,
                                    n.pattern && Oe(n);
                                    break
                                }
                                var P = t.getRGB(f);
                                if (P.error) {
                                    if (({
                                        circle: 1,
                                        ellipse: 1
                                    }[a](n.type) || "r" != y(f).charAt()) && Pe(o, f, n.paper)) {
                                        c.gradient = f,
                                        c.fill = "none";
                                        break
                                    }
                                } else
                                    delete i.gradient,
                                    delete c.gradient,
                                    !t.is(c.opacity, "undefined") && t.is(i.opacity, "undefined") && Re(o, {
                                        opacity: c.opacity
                                    }),
                                    !t.is(c["fill-opacity"], "undefined") && t.is(i["fill-opacity"], "undefined") && Re(o, {
                                        "fill-opacity": c["fill-opacity"]
                                    });
                                P[a]("opacity") && Re(o, {
                                    "fill-opacity": P.opacity > 1 ? P.opacity / 100 : P.opacity
                                });
                            case "stroke":
                                P = t.getRGB(f),
                                e(o, m, P.hex),
                                "stroke" == m && P[a]("opacity") && Re(o, {
                                    "stroke-opacity": P.opacity > 1 ? P.opacity / 100 : P.opacity
                                });
                                break;
                            case "gradient":
                                ({
                                    circle: 1,
                                    ellipse: 1
                                }[a](n.type) || "r" != y(f).charAt()) && Pe(o, f, n.paper);
                                break;
                            case "opacity":
                                c.gradient && !c[a]("stroke-opacity") && Re(o, {
                                    "stroke-opacity": f > 1 ? f / 100 : f
                                });
                            case "fill-opacity":
                                if (c.gradient) {
                                    var O = l.getElementById(o.getAttribute(L)[Z](/^url\(#|\)$/g, g));
                                    if (O) {
                                        var D = O.getElementsByTagName("stop");
                                        e(D[D[S] - 1], "stop-opacity", f)
                                    }
                                    break
                                }
                            default:
                                "font-size" == m && (f = W(f, 10) + "px");
                                var F = m[Z](/(\-.)/g, (function(e) {
                                    return $.call(e.substring(1))
                                }
                                ));
                                o.style[F] = f,
                                e(o, m, f)
                            }
                        }
                    De(n, i),
                    d ? n.rotate(d.join(v)) : G(h) && n.rotate(h, !0)
                }
                  , De = function(e, n) {
                    if ("text" == e.type && (n[a]("text") || n[a]("font") || n[a]("font-size") || n[a]("x") || n[a]("y"))) {
                        var r = e.attrs
                          , i = e.node
                          , s = i.firstChild ? W(l.defaultView.getComputedStyle(i.firstChild, g).getPropertyValue("font-size"), 10) : 10;
                        if (n[a]("text")) {
                            for (r.text = n.text; i.firstChild; )
                                i.removeChild(i.firstChild);
                            for (var o = y(n.text)[b]("\n"), c = 0, h = o[S]; c < h; c++)
                                if (o[c]) {
                                    var p = Re("tspan");
                                    c && Re(p, {
                                        dy: 1.2 * s,
                                        x: r.x
                                    }),
                                    p[u](l.createTextNode(o[c])),
                                    i[u](p)
                                }
                        } else
                            for (c = 0,
                            h = (o = i.getElementsByTagName("tspan"))[S]; c < h; c++)
                                c && Re(o[c], {
                                    dy: 1.2 * s,
                                    x: r.x
                                });
                        Re(i, {
                            y: r.y
                        });
                        var d = e.getBBox()
                          , m = r.y - (d.y + d.height / 2);
                        m && t.is(m, "finite") && Re(i, {
                            y: r.y + m
                        })
                    }
                }
                  , Fe = function(e, n) {
                    this[0] = e,
                    this.id = t._oid++,
                    this.node = e,
                    e.raphael = this,
                    this.paper = n,
                    this.attrs = this.attrs || {},
                    this.transformations = [],
                    this._ = {
                        tx: 0,
                        ty: 0,
                        rt: {
                            deg: 0,
                            cx: 0,
                            cy: 0
                        },
                        sx: 1,
                        sy: 1
                    },
                    !n.bottom && (n.bottom = this),
                    this.prev = n.top,
                    n.top && (n.top.next = this),
                    n.top = this,
                    this.next = null
                }
                  , ze = Fe[o];
                Fe[o].rotate = function(e, n, i) {
                    if (this.removed)
                        return this;
                    if (null == e)
                        return this._.rt.cx ? [this._.rt.deg, this._.rt.cx, this._.rt.cy][k](v) : this._.rt.deg;
                    var s = this.getBBox();
                    return (e = y(e)[b](r))[S] - 1 && (n = G(e[1]),
                    i = G(e[2])),
                    e = G(e[0]),
                    null != n && !1 !== n ? this._.rt.deg = e : this._.rt.deg += e,
                    null == i && (n = null),
                    this._.rt.cx = n,
                    this._.rt.cy = i,
                    n = null == n ? s.x + s.width / 2 : n,
                    i = null == i ? s.y + s.height / 2 : i,
                    this._.rt.deg ? (this.transformations[0] = t.format("rotate({0} {1} {2})", this._.rt.deg, n, i),
                    this.clip && Re(this.clip, {
                        transform: t.format("rotate({0} {1} {2})", -this._.rt.deg, n, i)
                    })) : (this.transformations[0] = g,
                    this.clip && Re(this.clip, {
                        transform: g
                    })),
                    Re(this.node, {
                        transform: this.transformations[k](v)
                    }),
                    this
                }
                ,
                Fe[o].hide = function() {
                    return !this.removed && (this.node.style.display = "none"),
                    this
                }
                ,
                Fe[o].show = function() {
                    return !this.removed && (this.node.style.display = ""),
                    this
                }
                ,
                Fe[o].remove = function() {
                    if (!this.removed) {
                        for (var e in Me(this, this.paper),
                        this.node.parentNode.removeChild(this.node),
                        this)
                            delete this[e];
                        this.removed = !0
                    }
                }
                ,
                Fe[o].getBBox = function() {
                    if (this.removed)
                        return this;
                    if ("path" == this.type)
                        return ue(this.attrs.path);
                    if ("none" == this.node.style.display) {
                        this.show();
                        var e = !0
                    }
                    var t = {};
                    try {
                        t = this.node.getBBox()
                    } catch (e) {} finally {
                        t = t || {}
                    }
                    if ("text" == this.type) {
                        t = {
                            x: t.x,
                            y: 1 / 0,
                            width: 0,
                            height: 0
                        };
                        for (var n = 0, r = this.node.getNumberOfChars(); n < r; n++) {
                            var i = this.node.getExtentOfChar(n);
                            i.y < t.y && (t.y = i.y),
                            i.y + i.height - t.y > t.height && (t.height = i.y + i.height - t.y),
                            i.x + i.width - t.x > t.width && (t.width = i.x + i.width - t.x)
                        }
                    }
                    return e && this.hide(),
                    t
                }
                ,
                Fe[o].attr = function(e, n) {
                    if (this.removed)
                        return this;
                    if (null == e) {
                        var r = {};
                        for (var i in this.attrs)
                            this.attrs[a](i) && (r[i] = this.attrs[i]);
                        return this._.rt.deg && (r.rotation = this.rotate()),
                        (1 != this._.sx || 1 != this._.sy) && (r.scale = this.scale()),
                        r.gradient && "none" == r.fill && (r.fill = r.gradient) && delete r.gradient,
                        r
                    }
                    if (null == n && t.is(e, N))
                        return "translation" == e ? wt.call(this) : "rotation" == e ? this.rotate() : "scale" == e ? this.scale() : e == L && "none" == this.attrs.fill && this.attrs.gradient ? this.attrs.gradient : this.attrs[e];
                    if (null == n && t.is(e, P)) {
                        for (var s = {}, o = 0, l = e.length; o < l; o++)
                            s[e[o]] = this.attr(e[o]);
                        return s
                    }
                    if (null != n) {
                        var c = {};
                        c[e] = n
                    } else
                        null != e && t.is(e, "object") && (c = e);
                    for (var h in this.paper.customAttributes)
                        if (this.paper.customAttributes[a](h) && c[a](h) && t.is(this.paper.customAttributes[h], "function")) {
                            var p = this.paper.customAttributes[h].apply(this, [][m](c[h]));
                            for (var u in this.attrs[h] = c[h],
                            p)
                                p[a](u) && (c[u] = p[u])
                        }
                    return Le(this, c),
                    this
                }
                ,
                Fe[o].toFront = function() {
                    if (this.removed)
                        return this;
                    this.node.parentNode[u](this.node);
                    var e = this.paper;
                    return e.top != this && Ce(this, e),
                    this
                }
                ,
                Fe[o].toBack = function() {
                    return this.removed || this.node.parentNode.firstChild != this.node && (this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild),
                    Te(this, this.paper),
                    this.paper),
                    this
                }
                ,
                Fe[o].insertAfter = function(e) {
                    if (this.removed)
                        return this;
                    var t = e.node || e[e.length - 1].node;
                    return t.nextSibling ? t.parentNode.insertBefore(this.node, t.nextSibling) : t.parentNode[u](this.node),
                    _e(this, e, this.paper),
                    this
                }
                ,
                Fe[o].insertBefore = function(e) {
                    if (this.removed)
                        return this;
                    var t = e.node || e[0].node;
                    return t.parentNode.insertBefore(this.node, t),
                    Ae(this, e, this.paper),
                    this
                }
                ,
                Fe[o].blur = function(e) {
                    var t = this;
                    if (0 != +e) {
                        var n = Re("filter")
                          , r = Re("feGaussianBlur");
                        t.attrs.blur = e,
                        n.id = oe(),
                        Re(r, {
                            stdDeviation: +e || 1.5
                        }),
                        n.appendChild(r),
                        t.paper.defs.appendChild(n),
                        t._blur = n,
                        Re(t.node, {
                            filter: "url(#" + n.id + ")"
                        })
                    } else
                        t._blur && (t._blur.parentNode.removeChild(t._blur),
                        delete t._blur,
                        delete t.attrs.blur),
                        t.node.removeAttribute("filter")
                }
                ;
                var Be = function(e, t, n, r) {
                    var i = Re("circle");
                    e.canvas && e.canvas[u](i);
                    var s = new Fe(i,e);
                    return s.attrs = {
                        cx: t,
                        cy: n,
                        r,
                        fill: "none",
                        stroke: "#000"
                    },
                    s.type = "circle",
                    Re(i, s.attrs),
                    s
                }
                  , qe = function(e, t, n, r, i, s) {
                    var o = Re("rect");
                    e.canvas && e.canvas[u](o);
                    var a = new Fe(o,e);
                    return a.attrs = {
                        x: t,
                        y: n,
                        width: r,
                        height: i,
                        r: s || 0,
                        rx: s || 0,
                        ry: s || 0,
                        fill: "none",
                        stroke: "#000"
                    },
                    a.type = "rect",
                    Re(o, a.attrs),
                    a
                }
                  , He = function(e, t, n, r, i) {
                    var s = Re("ellipse");
                    e.canvas && e.canvas[u](s);
                    var o = new Fe(s,e);
                    return o.attrs = {
                        cx: t,
                        cy: n,
                        rx: r,
                        ry: i,
                        fill: "none",
                        stroke: "#000"
                    },
                    o.type = "ellipse",
                    Re(s, o.attrs),
                    o
                }
                  , Ue = function(e, t, n, r, i, s) {
                    var o = Re("image");
                    Re(o, {
                        x: n,
                        y: r,
                        width: i,
                        height: s,
                        preserveAspectRatio: "none"
                    }),
                    o.setAttributeNS(e.xlink, "href", t),
                    e.canvas && e.canvas[u](o);
                    var a = new Fe(o,e);
                    return a.attrs = {
                        x: n,
                        y: r,
                        width: i,
                        height: s,
                        src: t
                    },
                    a.type = "image",
                    a
                }
                  , Ge = function(e, t, n, r) {
                    var i = Re("text");
                    Re(i, {
                        x: t,
                        y: n,
                        "text-anchor": "middle"
                    }),
                    e.canvas && e.canvas[u](i);
                    var s = new Fe(i,e);
                    return s.attrs = {
                        x: t,
                        y: n,
                        "text-anchor": "middle",
                        text: r,
                        font: j.font,
                        stroke: "none",
                        fill: "#000"
                    },
                    s.type = "text",
                    Le(s, s.attrs),
                    s
                }
                  , We = function(t, n) {
                    return this.width = t || this.width,
                    this.height = n || this.height,
                    e(this.canvas, "width", this.width),
                    e(this.canvas, "height", this.height),
                    this
                }
                  , Ve = function() {
                    var e = Se[d](0, arguments)
                      , n = e && e.container
                      , r = e.x
                      , i = e.y
                      , s = e.width
                      , o = e.height;
                    if (!n)
                        throw new Error("SVG container not found.");
                    var a = Re("svg");
                    return r = r || 0,
                    i = i || 0,
                    Re(a, {
                        xmlns: "http://www.w3.org/2000/svg",
                        version: 1.1,
                        width: s = s || 512,
                        height: o = o || 342
                    }),
                    1 == n ? (a.style.cssText = "position:absolute;left:" + r + "px;top:" + i + "px",
                    l.body[u](a)) : n.firstChild ? n.insertBefore(a, n.firstChild) : n[u](a),
                    (n = new p).width = s,
                    n.height = o,
                    n.canvas = a,
                    Ee.call(n, n, t.fn),
                    n.clear(),
                    n
                };
                n.clear = function() {
                    for (var e = this.canvas; e.firstChild; )
                        e.removeChild(e.firstChild);
                    this.bottom = this.top = null,
                    (this.desc = Re("desc"))[u](l.createTextNode("Created with Raphaël")),
                    e[u](this.desc),
                    e[u](this.defs = Re("defs"))
                }
                ,
                n.remove = function() {
                    for (var e in this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas),
                    this)
                        this[e] = Ie(e)
                }
            }
            if (t.vml) {
                var $e, je = {
                    M: "m",
                    L: "l",
                    C: "c",
                    Z: "x",
                    m: "t",
                    l: "r",
                    c: "v",
                    z: "x"
                }, Ke = /([clmz]),?([^clmz]*)/gi, Ze = / progid:\S+Blur\([^\)]+\)/g, Ye = /-?[^,\s-]+/g, Xe = "1000 1000", Je = 10, Qe = {
                    path: 1,
                    rect: 1
                };
                function Ct(e, n, r, i, s) {
                    return s ? t.format("M{0},{1}l{2},0a{3},{3},0,0,1,{3},{3}l0,{5}a{3},{3},0,0,1,{4},{3}l{6},0a{3},{3},0,0,1,{4},{4}l0,{7}a{3},{3},0,0,1,{3},{4}z", e + s, n, r - 2 * s, s, -s, i - 2 * s, 2 * s - r, 2 * s - i) : t.format("M{0},{1}l{2},0,0,{3},{4},0z", e, n, r, i, -r)
                }
                t[O] = function() {
                    return "Your browser doesn’t support SVG. Falling down to VML.\nYou are running Raphaël " + this.version
                }
                ,
                Ne = function(e, t) {
                    var n = $e("group");
                    n.style.cssText = "position:absolute;left:0;top:0;width:" + t.width + "px;height:" + t.height + "px",
                    n.coordsize = t.coordsize,
                    n.coordorigin = t.coordorigin;
                    var r = $e("shape")
                      , i = r.style;
                    i.width = t.width + "px",
                    i.height = t.height + "px",
                    r.coordsize = Xe,
                    r.coordorigin = t.coordorigin,
                    n[u](r);
                    var s = new Fe(r,n,t)
                      , o = {
                        fill: "none",
                        stroke: "#000"
                    };
                    return e && (o.path = e),
                    s.type = "path",
                    s.path = [],
                    s.Path = g,
                    Le(s, o),
                    t.canvas[u](n),
                    s
                }
                ,
                Le = function(e, n) {
                    e.attrs = e.attrs || {};
                    var i, s = e.node, o = e.attrs, c = s.style, h = (n.x != o.x || n.y != o.y || n.width != o.width || n.height != o.height || n.r != o.r) && "rect" == e.type, p = e;
                    for (var d in n)
                        n[a](d) && (o[d] = n[d]);
                    if (h && (o.path = Ct(o.x, o.y, o.width, o.height, o.r),
                    e.X = o.x,
                    e.Y = o.y,
                    e.W = o.width,
                    e.H = o.height),
                    n.href && (s.href = n.href),
                    n.title && (s.title = n.title),
                    n.target && (s.target = n.target),
                    n.cursor && (c.cursor = n.cursor),
                    "blur"in n && e.blur(n.blur),
                    (n.path && "path" == e.type || h) && (s.path = function(e) {
                        var t = /[ahqstv]/gi
                          , n = fe;
                        if (y(e).match(t) && (n = we),
                        t = /[clmz]/g,
                        n == fe && !y(e).match(t)) {
                            var r = y(e)[Z](Ke, (function(e, t, n) {
                                var r = []
                                  , i = "m" == E.call(t)
                                  , s = je[t];
                                return n[Z](Ye, (function(e) {
                                    i && 2 == r[S] && (s += r + je["m" == t ? "l" : "L"],
                                    r = []),
                                    r[F](U(e * Je))
                                }
                                )),
                                s + r
                            }
                            ));
                            return r
                        }
                        var i, s, o = n(e);
                        r = [];
                        for (var a = 0, l = o[S]; a < l; a++) {
                            i = o[a],
                            "z" == (s = E.call(o[a][0])) && (s = "x");
                            for (var c = 1, h = i[S]; c < h; c++)
                                s += U(i[c] * Je) + (c != h - 1 ? "," : g);
                            r[F](s)
                        }
                        return r[k](v)
                    }(o.path)),
                    null != n.rotation && e.rotate(n.rotation, !0),
                    n.translation && (i = y(n.translation)[b](r),
                    wt.call(e, i[0], i[1]),
                    null != e._.rt.cx && (e._.rt.cx += +i[0],
                    e._.rt.cy += +i[1],
                    e.setBox(e.attrs, i[0], i[1]))),
                    n.scale && (i = y(n.scale)[b](r),
                    e.scale(+i[0] || 1, +i[1] || +i[0] || 1, +i[2] || null, +i[3] || null)),
                    "clip-rect"in n) {
                        var m = y(n["clip-rect"])[b](r);
                        if (4 == m[S]) {
                            m[2] = +m[2] + +m[0],
                            m[3] = +m[3] + +m[1];
                            var f = s.clipRect || l.createElement("div")
                              , x = f.style
                              , w = s.parentNode;
                            x.clip = t.format("rect({1}px {2}px {3}px {0}px)", m),
                            s.clipRect || (x.position = "absolute",
                            x.top = 0,
                            x.left = 0,
                            x.width = e.paper.width + "px",
                            x.height = e.paper.height + "px",
                            w.parentNode.insertBefore(f, w),
                            f[u](w),
                            s.clipRect = f)
                        }
                        n["clip-rect"] || s.clipRect && (s.clipRect.style.clip = g)
                    }
                    if ("image" == e.type && n.src && (s.src = n.src),
                    "image" == e.type && n.opacity && (s.filterOpacity = V + ".Alpha(opacity=" + 100 * n.opacity + ")",
                    c.filter = (s.filterMatrix || g) + (s.filterOpacity || g)),
                    n.font && (c.font = n.font),
                    n["font-family"] && (c.fontFamily = '"' + n["font-family"][b](",")[0][Z](/^['"]+|['"]+$/g, g) + '"'),
                    n["font-size"] && (c.fontSize = n["font-size"]),
                    n["font-weight"] && (c.fontWeight = n["font-weight"]),
                    n["font-style"] && (c.fontStyle = n["font-style"]),
                    null != n.opacity || null != n["stroke-width"] || null != n.fill || null != n.stroke || null != n["stroke-width"] || null != n["stroke-opacity"] || null != n["fill-opacity"] || null != n["stroke-dasharray"] || null != n["stroke-miterlimit"] || null != n["stroke-linejoin"] || null != n["stroke-linecap"]) {
                        var M = (s = e.shape || s).getElementsByTagName(L) && s.getElementsByTagName(L)[0]
                          , _ = !1;
                        if (!M && (_ = M = $e(L)),
                        "fill-opacity"in n || "opacity"in n) {
                            var A = ((+o["fill-opacity"] + 1 || 2) - 1) * ((+o.opacity + 1 || 2) - 1) * ((+t.getRGB(n.fill).o + 1 || 2) - 1);
                            A = T(C(A, 0), 1),
                            M.opacity = A
                        }
                        if (n.fill && (M.on = !0),
                        null != M.on && "none" != n.fill || (M.on = !1),
                        M.on && n.fill) {
                            var I = n.fill.match(z);
                            I ? (M.src = I[1],
                            M.type = "tile") : (M.color = t.getRGB(n.fill).hex,
                            M.src = g,
                            M.type = "solid",
                            t.getRGB(n.fill).error && (p.type in {
                                circle: 1,
                                ellipse: 1
                            } || "r" != y(n.fill).charAt()) && Pe(p, n.fill) && (o.fill = "none",
                            o.gradient = n.fill))
                        }
                        _ && s[u](M);
                        var R = s.getElementsByTagName("stroke") && s.getElementsByTagName("stroke")[0]
                          , N = !1;
                        !R && (N = R = $e("stroke")),
                        (n.stroke && "none" != n.stroke || n["stroke-width"] || null != n["stroke-opacity"] || n["stroke-dasharray"] || n["stroke-miterlimit"] || n["stroke-linejoin"] || n["stroke-linecap"]) && (R.on = !0),
                        ("none" == n.stroke || null == R.on || 0 == n.stroke || 0 == n["stroke-width"]) && (R.on = !1);
                        var P = t.getRGB(n.stroke);
                        R.on && n.stroke && (R.color = P.hex),
                        A = ((+o["stroke-opacity"] + 1 || 2) - 1) * ((+o.opacity + 1 || 2) - 1) * ((+P.o + 1 || 2) - 1);
                        var O = .75 * (G(n["stroke-width"]) || 1);
                        if (A = T(C(A, 0), 1),
                        null == n["stroke-width"] && (O = o["stroke-width"]),
                        n["stroke-width"] && (R.weight = O),
                        O && O < 1 && (A *= O) && (R.weight = 1),
                        R.opacity = A,
                        n["stroke-linejoin"] && (R.joinstyle = n["stroke-linejoin"] || "miter"),
                        R.miterlimit = n["stroke-miterlimit"] || 8,
                        n["stroke-linecap"] && (R.endcap = "butt" == n["stroke-linecap"] ? "flat" : "square" == n["stroke-linecap"] ? "square" : "round"),
                        n["stroke-dasharray"]) {
                            var D = {
                                "-": "shortdash",
                                ".": "shortdot",
                                "-.": "shortdashdot",
                                "-..": "shortdashdotdot",
                                ". ": "dot",
                                "- ": "dash",
                                "--": "longdash",
                                "- .": "dashdot",
                                "--.": "longdashdot",
                                "--..": "longdashdotdot"
                            };
                            R.dashstyle = D[a](n["stroke-dasharray"]) ? D[n["stroke-dasharray"]] : g
                        }
                        N && s[u](R)
                    }
                    if ("text" == p.type)
                        switch (c = p.paper.span.style,
                        o.font && (c.font = o.font),
                        o["font-family"] && (c.fontFamily = o["font-family"]),
                        o["font-size"] && (c.fontSize = o["font-size"]),
                        o["font-weight"] && (c.fontWeight = o["font-weight"]),
                        o["font-style"] && (c.fontStyle = o["font-style"]),
                        p.node.string && (p.paper.span.innerHTML = y(p.node.string)[Z](/</g, "&#60;")[Z](/&/g, "&#38;")[Z](/\n/g, "<br>")),
                        p.W = o.w = p.paper.span.offsetWidth,
                        p.H = o.h = p.paper.span.offsetHeight,
                        p.X = o.x,
                        p.Y = o.y + U(p.H / 2),
                        o["text-anchor"]) {
                        case "start":
                            p.node.style["v-text-align"] = "left",
                            p.bbx = U(p.W / 2);
                            break;
                        case "end":
                            p.node.style["v-text-align"] = "right",
                            p.bbx = -U(p.W / 2);
                            break;
                        default:
                            p.node.style["v-text-align"] = "center"
                        }
                }
                ,
                Pe = function(e, t) {
                    e.attrs = e.attrs || {},
                    e.attrs;
                    var n, r = "linear", i = ".5 .5";
                    if (e.attrs.gradient = t,
                    t = (t = y(t)[Z](ne, (function(e, t, n) {
                        return r = "radial",
                        t && n && (t = G(t),
                        n = G(n),
                        A(t - .5, 2) + A(n - .5, 2) > .25 && (n = M.sqrt(.25 - A(t - .5, 2)) * (2 * (n > .5) - 1) + .5),
                        i = t + v + n),
                        g
                    }
                    )))[b](/\s*\-\s*/),
                    "linear" == r) {
                        var s = t.shift();
                        if (s = -G(s),
                        isNaN(s))
                            return null
                    }
                    var o = ke(t);
                    if (!o)
                        return null;
                    if (!(n = (e = e.shape || e.node).getElementsByTagName(L)[0] || $e(L)).parentNode && e.appendChild(n),
                    o[S]) {
                        n.on = !0,
                        n.method = "none",
                        n.color = o[0].color,
                        n.color2 = o[o[S] - 1].color;
                        for (var a = [], l = 0, c = o[S]; l < c; l++)
                            o[l].offset && a[F](o[l].offset + v + o[l].color);
                        n.colors && (n.colors.value = a[S] ? a[k]() : "0% " + n.color),
                        "radial" == r ? (n.type = "gradientradial",
                        n.focus = "100%",
                        n.focussize = i,
                        n.focusposition = i) : (n.type = "gradient",
                        n.angle = (270 - s) % 360)
                    }
                    return 1
                }
                ,
                (ze = (Fe = function(e, n, r) {
                    this[0] = e,
                    this.id = t._oid++,
                    this.node = e,
                    e.raphael = this,
                    this.X = 0,
                    this.Y = 0,
                    this.attrs = {},
                    this.Group = n,
                    this.paper = r,
                    this._ = {
                        tx: 0,
                        ty: 0,
                        rt: {
                            deg: 0
                        },
                        sx: 1,
                        sy: 1
                    },
                    !r.bottom && (r.bottom = this),
                    this.prev = r.top,
                    r.top && (r.top.next = this),
                    r.top = this,
                    this.next = null
                }
                )[o]).rotate = function(e, t, n) {
                    return this.removed ? this : null == e ? this._.rt.cx ? [this._.rt.deg, this._.rt.cx, this._.rt.cy][k](v) : this._.rt.deg : ((e = y(e)[b](r))[S] - 1 && (t = G(e[1]),
                    n = G(e[2])),
                    e = G(e[0]),
                    null != t ? this._.rt.deg = e : this._.rt.deg += e,
                    null == n && (t = null),
                    this._.rt.cx = t,
                    this._.rt.cy = n,
                    this.setBox(this.attrs, t, n),
                    this.Group.style.rotation = this._.rt.deg,
                    this)
                }
                ,
                ze.setBox = function(e, t, n) {
                    if (this.removed)
                        return this;
                    var r = this.Group.style
                      , i = this.shape && this.shape.style || this.node.style;
                    for (var s in e = e || {})
                        e[a](s) && (this.attrs[s] = e[s]);
                    t = t || this._.rt.cx,
                    n = n || this._.rt.cy;
                    var o, l, c, h, p = this.attrs;
                    switch (this.type) {
                    case "circle":
                        o = p.cx - p.r,
                        l = p.cy - p.r,
                        c = h = 2 * p.r;
                        break;
                    case "ellipse":
                        o = p.cx - p.rx,
                        l = p.cy - p.ry,
                        c = 2 * p.rx,
                        h = 2 * p.ry;
                        break;
                    case "image":
                        o = +p.x,
                        l = +p.y,
                        c = p.width || 0,
                        h = p.height || 0;
                        break;
                    case "text":
                        this.textpath.v = ["m", U(p.x), ", ", U(p.y - 2), "l", U(p.x) + 1, ", ", U(p.y - 2)][k](g),
                        o = p.x - U(this.W / 2),
                        l = p.y - this.H / 2,
                        c = this.W,
                        h = this.H;
                        break;
                    case "rect":
                    case "path":
                        if (this.attrs.path) {
                            var u = ue(this.attrs.path);
                            o = u.x,
                            l = u.y,
                            c = u.width,
                            h = u.height
                        } else
                            o = 0,
                            l = 0,
                            c = this.paper.width,
                            h = this.paper.height;
                        break;
                    default:
                        o = 0,
                        l = 0,
                        c = this.paper.width,
                        h = this.paper.height
                    }
                    n = null == n ? l + h / 2 : n;
                    var d, m = (t = null == t ? o + c / 2 : t) - this.paper.width / 2, f = n - this.paper.height / 2;
                    r.left != (d = m + "px") && (r.left = d),
                    r.top != (d = f + "px") && (r.top = d),
                    this.X = Qe[a](this.type) ? -m : o,
                    this.Y = Qe[a](this.type) ? -f : l,
                    this.W = c,
                    this.H = h,
                    Qe[a](this.type) ? (i.left != (d = -m * Je + "px") && (i.left = d),
                    i.top != (d = -f * Je + "px") && (i.top = d)) : "text" == this.type ? (i.left != (d = -m + "px") && (i.left = d),
                    i.top != (d = -f + "px") && (i.top = d)) : (r.width != (d = this.paper.width + "px") && (r.width = d),
                    r.height != (d = this.paper.height + "px") && (r.height = d),
                    i.left != (d = o - m + "px") && (i.left = d),
                    i.top != (d = l - f + "px") && (i.top = d),
                    i.width != (d = c + "px") && (i.width = d),
                    i.height != (d = h + "px") && (i.height = d))
                }
                ,
                ze.hide = function() {
                    return !this.removed && (this.Group.style.display = "none"),
                    this
                }
                ,
                ze.show = function() {
                    return !this.removed && (this.Group.style.display = "block"),
                    this
                }
                ,
                ze.getBBox = function() {
                    return this.removed ? this : Qe[a](this.type) ? ue(this.attrs.path) : {
                        x: this.X + (this.bbx || 0),
                        y: this.Y,
                        width: this.W,
                        height: this.H
                    }
                }
                ,
                ze.remove = function() {
                    if (!this.removed) {
                        for (var e in Me(this, this.paper),
                        this.node.parentNode.removeChild(this.node),
                        this.Group.parentNode.removeChild(this.Group),
                        this.shape && this.shape.parentNode.removeChild(this.shape),
                        this)
                            delete this[e];
                        this.removed = !0
                    }
                }
                ,
                ze.attr = function(e, n) {
                    if (this.removed)
                        return this;
                    if (null == e) {
                        var r = {};
                        for (var i in this.attrs)
                            this.attrs[a](i) && (r[i] = this.attrs[i]);
                        return this._.rt.deg && (r.rotation = this.rotate()),
                        (1 != this._.sx || 1 != this._.sy) && (r.scale = this.scale()),
                        r.gradient && "none" == r.fill && (r.fill = r.gradient) && delete r.gradient,
                        r
                    }
                    if (null == n && t.is(e, "string"))
                        return "translation" == e ? wt.call(this) : "rotation" == e ? this.rotate() : "scale" == e ? this.scale() : e == L && "none" == this.attrs.fill && this.attrs.gradient ? this.attrs.gradient : this.attrs[e];
                    if (this.attrs && null == n && t.is(e, P)) {
                        var s, o = {};
                        for (i = 0,
                        s = e[S]; i < s; i++)
                            o[e[i]] = this.attr(e[i]);
                        return o
                    }
                    var l;
                    if (null != n && ((l = {})[e] = n),
                    null == n && t.is(e, "object") && (l = e),
                    l) {
                        for (var c in this.paper.customAttributes)
                            if (this.paper.customAttributes[a](c) && l[a](c) && t.is(this.paper.customAttributes[c], "function")) {
                                var h = this.paper.customAttributes[c].apply(this, [][m](l[c]));
                                for (var p in this.attrs[c] = l[c],
                                h)
                                    h[a](p) && (l[p] = h[p])
                            }
                        l.text && "text" == this.type && (this.node.string = l.text),
                        Le(this, l),
                        l.gradient && ({
                            circle: 1,
                            ellipse: 1
                        }[a](this.type) || "r" != y(l.gradient).charAt()) && Pe(this, l.gradient),
                        (!Qe[a](this.type) || this._.rt.deg) && this.setBox(this.attrs)
                    }
                    return this
                }
                ,
                ze.toFront = function() {
                    return !this.removed && this.Group.parentNode[u](this.Group),
                    this.paper.top != this && Ce(this, this.paper),
                    this
                }
                ,
                ze.toBack = function() {
                    return this.removed || this.Group.parentNode.firstChild != this.Group && (this.Group.parentNode.insertBefore(this.Group, this.Group.parentNode.firstChild),
                    Te(this, this.paper)),
                    this
                }
                ,
                ze.insertAfter = function(e) {
                    return this.removed || (e.constructor == Et && (e = e[e.length - 1]),
                    e.Group.nextSibling ? e.Group.parentNode.insertBefore(this.Group, e.Group.nextSibling) : e.Group.parentNode[u](this.Group),
                    _e(this, e, this.paper)),
                    this
                }
                ,
                ze.insertBefore = function(e) {
                    return this.removed || (e.constructor == Et && (e = e[0]),
                    e.Group.parentNode.insertBefore(this.Group, e.Group),
                    Ae(this, e, this.paper)),
                    this
                }
                ,
                ze.blur = function(e) {
                    var n = this.node.runtimeStyle
                      , r = n.filter;
                    r = r.replace(Ze, g),
                    0 != +e ? (this.attrs.blur = e,
                    n.filter = r + v + V + ".Blur(pixelradius=" + (+e || 1.5) + ")",
                    n.margin = t.format("-{0}px 0 0 -{0}px", U(+e || 1.5))) : (n.filter = r,
                    n.margin = 0,
                    delete this.attrs.blur)
                }
                ,
                Be = function(e, t, n, r) {
                    var i = $e("group")
                      , s = $e("oval");
                    s.style,
                    i.style.cssText = "position:absolute;left:0;top:0;width:" + e.width + "px;height:" + e.height + "px",
                    i.coordsize = Xe,
                    i.coordorigin = e.coordorigin,
                    i[u](s);
                    var o = new Fe(s,i,e);
                    return o.type = "circle",
                    Le(o, {
                        stroke: "#000",
                        fill: "none"
                    }),
                    o.attrs.cx = t,
                    o.attrs.cy = n,
                    o.attrs.r = r,
                    o.setBox({
                        x: t - r,
                        y: n - r,
                        width: 2 * r,
                        height: 2 * r
                    }),
                    e.canvas[u](i),
                    o
                }
                ,
                qe = function(e, t, n, r, i, s) {
                    var o = Ct(t, n, r, i, s)
                      , a = e.path(o)
                      , l = a.attrs;
                    return a.X = l.x = t,
                    a.Y = l.y = n,
                    a.W = l.width = r,
                    a.H = l.height = i,
                    l.r = s,
                    l.path = o,
                    a.type = "rect",
                    a
                }
                ,
                He = function(e, t, n, r, i) {
                    var s = $e("group")
                      , o = $e("oval");
                    o.style,
                    s.style.cssText = "position:absolute;left:0;top:0;width:" + e.width + "px;height:" + e.height + "px",
                    s.coordsize = Xe,
                    s.coordorigin = e.coordorigin,
                    s[u](o);
                    var a = new Fe(o,s,e);
                    return a.type = "ellipse",
                    Le(a, {
                        stroke: "#000"
                    }),
                    a.attrs.cx = t,
                    a.attrs.cy = n,
                    a.attrs.rx = r,
                    a.attrs.ry = i,
                    a.setBox({
                        x: t - r,
                        y: n - i,
                        width: 2 * r,
                        height: 2 * i
                    }),
                    e.canvas[u](s),
                    a
                }
                ,
                Ue = function(e, t, n, r, i, s) {
                    var o = $e("group")
                      , a = $e("image");
                    o.style.cssText = "position:absolute;left:0;top:0;width:" + e.width + "px;height:" + e.height + "px",
                    o.coordsize = Xe,
                    o.coordorigin = e.coordorigin,
                    a.src = t,
                    o[u](a);
                    var l = new Fe(a,o,e);
                    return l.type = "image",
                    l.attrs.src = t,
                    l.attrs.x = n,
                    l.attrs.y = r,
                    l.attrs.w = i,
                    l.attrs.h = s,
                    l.setBox({
                        x: n,
                        y: r,
                        width: i,
                        height: s
                    }),
                    e.canvas[u](o),
                    l
                }
                ,
                Ge = function(e, n, r, i) {
                    var s = $e("group")
                      , o = $e("shape")
                      , a = o.style
                      , l = $e("path");
                    l.style;
                    var c = $e("textpath");
                    s.style.cssText = "position:absolute;left:0;top:0;width:" + e.width + "px;height:" + e.height + "px",
                    s.coordsize = Xe,
                    s.coordorigin = e.coordorigin,
                    l.v = t.format("m{0},{1}l{2},{1}", U(10 * n), U(10 * r), U(10 * n) + 1),
                    l.textpathok = !0,
                    a.width = e.width,
                    a.height = e.height,
                    c.string = y(i),
                    c.on = !0,
                    o[u](c),
                    o[u](l),
                    s[u](o);
                    var h = new Fe(c,s,e);
                    return h.shape = o,
                    h.textpath = l,
                    h.type = "text",
                    h.attrs.text = i,
                    h.attrs.x = n,
                    h.attrs.y = r,
                    h.attrs.w = 1,
                    h.attrs.h = 1,
                    Le(h, {
                        font: j.font,
                        stroke: "none",
                        fill: "#000"
                    }),
                    h.setBox(),
                    e.canvas[u](s),
                    h
                }
                ,
                We = function(e, t) {
                    var n = this.canvas.style;
                    return e == +e && (e += "px"),
                    t == +t && (t += "px"),
                    n.width = e,
                    n.height = t,
                    n.clip = "rect(0 " + e + " " + t + " 0)",
                    this
                }
                ,
                l.createStyleSheet().addRule(".rvml", "behavior:url(#default#VML)");
                try {
                    !l.namespaces.rvml && l.namespaces.add("rvml", "urn:schemas-microsoft-com:vml"),
                    $e = function(e) {
                        return l.createElement("<rvml:" + e + ' class="rvml">')
                    }
                } catch (Tt) {
                    $e = function(e) {
                        return l.createElement("<" + e + ' xmlns="urn:schemas-microsoft.com:vml" class="rvml">')
                    }
                }
                Ve = function() {
                    var e = Se[d](0, arguments)
                      , n = e.container
                      , r = e.height
                      , i = e.width
                      , s = e.x
                      , o = e.y;
                    if (!n)
                        throw new Error("VML container not found.");
                    var a = new p
                      , c = a.canvas = l.createElement("div")
                      , h = c.style;
                    return s = s || 0,
                    o = o || 0,
                    (i = i || 512) == +i && (i += "px"),
                    (r = r || 342) == +r && (r += "px"),
                    a.width = 1e3,
                    a.height = 1e3,
                    a.coordsize = "10000 10000",
                    a.coordorigin = "0 0",
                    a.span = l.createElement("span"),
                    a.span.style.cssText = "position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;",
                    c[u](a.span),
                    h.cssText = t.format("top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden", i, r),
                    1 == n ? (l.body[u](c),
                    h.left = s + "px",
                    h.top = o + "px",
                    h.position = "absolute") : n.firstChild ? n.insertBefore(c, n.firstChild) : n[u](c),
                    Ee.call(a, a, t.fn),
                    a
                }
                ,
                n.clear = function() {
                    this.canvas.innerHTML = g,
                    this.span = l.createElement("span"),
                    this.span.style.cssText = "position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;",
                    this.canvas[u](this.span),
                    this.bottom = this.top = null
                }
                ,
                n.remove = function() {
                    for (var e in this.canvas.parentNode.removeChild(this.canvas),
                    this)
                        this[e] = Ie(e);
                    return !0
                }
            }
            var et = navigator.userAgent.match(/Version\/(.*?)\s/);
            "Apple Computer, Inc." == navigator.vendor && (et && et[1] < 4 || "iP" == navigator.platform.slice(0, 2)) ? n.safari = function() {
                var e = this.rect(-99, -99, this.width + 99, this.height + 99).attr({
                    stroke: "none"
                });
                c.setTimeout((function() {
                    e.remove()
                }
                ))
            }
            : n.safari = function() {}
            ;
            for (var tt = function() {
                this.returnValue = !1
            }, nt = function() {
                return this.originalEvent.preventDefault()
            }, rt = function() {
                this.cancelBubble = !0
            }, it = function() {
                return this.originalEvent.stopPropagation()
            }, st = l.addEventListener ? function(e, t, n, r) {
                var i = f && w[t] ? w[t] : t
                  , s = function(i) {
                    if (f && w[a](t))
                        for (var s = 0, o = i.targetTouches && i.targetTouches.length; s < o; s++)
                            if (i.targetTouches[s].target == e) {
                                var l = i;
                                (i = i.targetTouches[s]).originalEvent = l,
                                i.preventDefault = nt,
                                i.stopPropagation = it;
                                break
                            }
                    return n.call(r, i)
                };
                return e.addEventListener(i, s, !1),
                function() {
                    return e.removeEventListener(i, s, !1),
                    !0
                }
            }
            : l.attachEvent ? function(e, t, n, r) {
                var i = function(e) {
                    return (e = e || c.event).preventDefault = e.preventDefault || tt,
                    e.stopPropagation = e.stopPropagation || rt,
                    n.call(r, e)
                };
                return e.attachEvent("on" + t, i),
                function() {
                    return e.detachEvent("on" + t, i),
                    !0
                }
            }
            : void 0, ot = [], at = function(e) {
                for (var t, n = e.clientX, r = e.clientY, i = l.documentElement.scrollTop || l.body.scrollTop, s = l.documentElement.scrollLeft || l.body.scrollLeft, o = ot.length; o--; ) {
                    if (t = ot[o],
                    f) {
                        for (var a, c = e.touches.length; c--; )
                            if ((a = e.touches[c]).identifier == t.el._drag.id) {
                                n = a.clientX,
                                r = a.clientY,
                                (e.originalEvent ? e.originalEvent : e).preventDefault();
                                break
                            }
                    } else
                        e.preventDefault();
                    n += s,
                    r += i,
                    t.move && t.move.call(t.move_scope || t.el, n - t.el._drag.x, r - t.el._drag.y, n, r, e)
                }
            }, lt = function e(n) {
                t.unmousemove(at).unmouseup(e);
                for (var r, i = ot.length; i--; )
                    (r = ot[i]).el._drag = {},
                    r.end && r.end.call(r.end_scope || r.start_scope || r.move_scope || r.el, n);
                ot = []
            }, ct = x[S]; ct--; )
                !function(e) {
                    t[e] = Fe[o][e] = function(n, r) {
                        return t.is(n, "function") && (this.events = this.events || [],
                        this.events.push({
                            name: e,
                            f: n,
                            unbind: st(this.shape || this.node || l, e, n, r || this)
                        })),
                        this
                    }
                    ,
                    t["un" + e] = Fe[o]["un" + e] = function(t) {
                        for (var n = this.events, r = n[S]; r--; )
                            if (n[r].name == e && n[r].f == t)
                                return n[r].unbind(),
                                n.splice(r, 1),
                                !n.length && delete this.events,
                                this;
                        return this
                    }
                }(x[ct]);
            function ht() {
                return this.x + v + this.y
            }
            ze.hover = function(e, t, n, r) {
                return this.mouseover(e, n).mouseout(t, r || n)
            }
            ,
            ze.unhover = function(e, t) {
                return this.unmouseover(e).unmouseout(t)
            }
            ,
            ze.drag = function(e, n, r, i, s, o) {
                return this._drag = {},
                this.mousedown((function(a) {
                    (a.originalEvent || a).preventDefault();
                    var c = l.documentElement.scrollTop || l.body.scrollTop
                      , h = l.documentElement.scrollLeft || l.body.scrollLeft;
                    this._drag.x = a.clientX + h,
                    this._drag.y = a.clientY + c,
                    this._drag.id = a.identifier,
                    n && n.call(s || i || this, a.clientX + h, a.clientY + c, a),
                    !ot.length && t.mousemove(at).mouseup(lt),
                    ot.push({
                        el: this,
                        move: e,
                        end: r,
                        move_scope: i,
                        start_scope: s,
                        end_scope: o
                    })
                }
                )),
                this
            }
            ,
            ze.undrag = function(e, n, r) {
                for (var i = ot.length; i--; )
                    ot[i].el == this && ot[i].move == e && ot[i].end == r && ot.splice(i++, 1);
                !ot.length && t.unmousemove(at).unmouseup(lt)
            }
            ,
            n.circle = function(e, t, n) {
                return Be(this, e || 0, t || 0, n || 0)
            }
            ,
            n.rect = function(e, t, n, r, i) {
                return qe(this, e || 0, t || 0, n || 0, r || 0, i || 0)
            }
            ,
            n.ellipse = function(e, t, n, r) {
                return He(this, e || 0, t || 0, n || 0, r || 0)
            }
            ,
            n.path = function(e) {
                return e && !t.is(e, N) && !t.is(e[0], P) && (e += g),
                Ne(t.format[d](t, arguments), this)
            }
            ,
            n.image = function(e, t, n, r, i) {
                return Ue(this, e || "about:blank", t || 0, n || 0, r || 0, i || 0)
            }
            ,
            n.text = function(e, t, n) {
                return Ge(this, e || 0, t || 0, y(n))
            }
            ,
            n.set = function(e) {
                return arguments[S] > 1 && (e = Array[o].splice.call(arguments, 0, arguments[S])),
                new Et(e)
            }
            ,
            n.setSize = We,
            n.top = n.bottom = null,
            n.raphael = t,
            ze.resetScale = function() {
                if (this.removed)
                    return this;
                this._.sx = 1,
                this._.sy = 1,
                this.attrs.scale = "1 1"
            }
            ,
            ze.scale = function(t, n, r, i) {
                if (this.removed)
                    return this;
                if (null == t && null == n)
                    return {
                        x: this._.sx,
                        y: this._.sy,
                        toString: ht
                    };
                !+(n = n || t) && (n = t);
                var s, o, a = this.attrs;
                if (0 != t) {
                    var l = this.getBBox()
                      , c = l.x + l.width / 2
                      , h = l.y + l.height / 2
                      , p = _(t / this._.sx)
                      , u = _(n / this._.sy);
                    r = +r || 0 == r ? r : c,
                    i = +i || 0 == i ? i : h;
                    var d = this._.sx > 0
                      , f = this._.sy > 0
                      , y = ~~(t / _(t))
                      , b = ~~(n / _(n))
                      , x = p * y
                      , w = u * b
                      , E = this.node.style
                      , M = r + _(c - r) * x * (c > r == d ? 1 : -1)
                      , C = i + _(h - i) * w * (h > i == f ? 1 : -1)
                      , T = t * y > n * b ? u : p;
                    switch (this.type) {
                    case "rect":
                    case "image":
                        var A = a.width * p
                          , I = a.height * u;
                        this.attr({
                            height: I,
                            r: a.r * T,
                            width: A,
                            x: M - A / 2,
                            y: C - I / 2
                        });
                        break;
                    case "circle":
                    case "ellipse":
                        this.attr({
                            rx: a.rx * p,
                            ry: a.ry * u,
                            r: a.r * T,
                            cx: M,
                            cy: C
                        });
                        break;
                    case "text":
                        this.attr({
                            x: M,
                            y: C
                        });
                        break;
                    case "path":
                        for (var R = me(a.path), N = !0, P = d ? x : p, O = f ? w : u, L = 0, D = R[S]; L < D; L++) {
                            var F = R[L]
                              , z = $.call(F[0]);
                            if ("M" != z || !N)
                                if (N = !1,
                                "A" == z)
                                    F[R[L][S] - 2] *= P,
                                    F[R[L][S] - 1] *= O,
                                    F[1] *= p,
                                    F[2] *= u,
                                    F[5] = +(y + b ? !!+F[5] : !+F[5]);
                                else if ("H" == z)
                                    for (var B = 1, q = F[S]; B < q; B++)
                                        F[B] *= P;
                                else if ("V" == z)
                                    for (B = 1,
                                    q = F[S]; B < q; B++)
                                        F[B] *= O;
                                else
                                    for (B = 1,
                                    q = F[S]; B < q; B++)
                                        F[B] *= B % 2 ? P : O
                        }
                        var H = ue(R);
                        s = M - H.x - H.width / 2,
                        o = C - H.y - H.height / 2,
                        R[0][1] += s,
                        R[0][2] += o,
                        this.attr({
                            path: R
                        })
                    }
                    !(this.type in {
                        text: 1,
                        image: 1
                    }) || 1 == y && 1 == b ? this.transformations ? (this.transformations[2] = g,
                    e(this.node, "transform", this.transformations[k](v)),
                    a.fx = 0,
                    a.fy = 0) : (this.node.filterMatrix = g,
                    E.filter = (this.node.filterMatrix || g) + (this.node.filterOpacity || g)) : this.transformations ? (this.transformations[2] = "scale("[m](y, ",", b, ")"),
                    e(this.node, "transform", this.transformations[k](v)),
                    s = -1 == y ? -a.x - (A || 0) : a.x,
                    o = -1 == b ? -a.y - (I || 0) : a.y,
                    this.attr({
                        x: s,
                        y: o
                    }),
                    a.fx = y - 1,
                    a.fy = b - 1) : (this.node.filterMatrix = V + ".Matrix(M11="[m](y, ", M12=0, M21=0, M22=", b, ", Dx=0, Dy=0, sizingmethod='auto expand', filtertype='bilinear')"),
                    E.filter = (this.node.filterMatrix || g) + (this.node.filterOpacity || g)),
                    a.scale = [t, n, r, i][k](v),
                    this._.sx = t,
                    this._.sy = n
                }
                return this
            }
            ,
            ze.clone = function() {
                if (this.removed)
                    return null;
                var e = this.attr();
                return delete e.scale,
                delete e.translation,
                this.paper[this.type]().attr(e)
            }
            ;
            var pt = {}
              , ut = function e(n, r, i, s, o, a, l, c, h) {
                if (n === i && r === s && o === l && a == c) {
                    var p = l - n
                      , u = c - r
                      , d = Math.sqrt(p * p + u * u);
                    if (null == h)
                        return d;
                    var m = h / d;
                    return {
                        start: {
                            x: n,
                            y: r
                        },
                        m: {
                            x: n,
                            y: r
                        },
                        n: {
                            x: l,
                            y: c
                        },
                        end: {
                            x: l,
                            y: c
                        },
                        x: n + m * p,
                        y: r + m * u,
                        alpha: 90 - 180 * M.atan(p / u) / I
                    }
                }
                var f, g, v = 0, y = 100, b = [n, r, i, s, o, a, l, c].join(), x = pt[b];
                (!x && (pt[b] = x = {
                    data: []
                }),
                x.timer && clearTimeout(x.timer),
                x.timer = setTimeout((function() {
                    delete pt[b]
                }
                ), 2e3),
                null != h) && (y = 10 * ~~e(n, r, i, s, o, a, l, c));
                for (var w = 0; w < y + 1; w++) {
                    if (x.data[h] > w ? g = x.data[w * y] : (g = t.findDotsAtSegment(n, r, i, s, o, a, l, c, w / y),
                    x.data[w] = g),
                    w && (v += A(A(f.x - g.x, 2) + A(f.y - g.y, 2), .5)),
                    null != h && v >= h)
                        return g;
                    f = g
                }
                if (null == h)
                    return v
            }
              , dt = function(e, n) {
                return function(r, i, s) {
                    for (var o, a, l, c, h, p = "", u = {}, d = 0, m = 0, f = (r = we(r)).length; m < f; m++) {
                        if ("M" == (l = r[m])[0])
                            o = +l[1],
                            a = +l[2];
                        else {
                            if (d + (c = ut(o, a, l[1], l[2], l[3], l[4], l[5], l[6])) > i) {
                                if (n && !u.start) {
                                    if (p += ["C", (h = ut(o, a, l[1], l[2], l[3], l[4], l[5], l[6], i - d)).start.x, h.start.y, h.m.x, h.m.y, h.x, h.y],
                                    s)
                                        return p;
                                    u.start = p,
                                    p = ["M", h.x, h.y + "C", h.n.x, h.n.y, h.end.x, h.end.y, l[5], l[6]][k](),
                                    d += c,
                                    o = +l[5],
                                    a = +l[6];
                                    continue
                                }
                                if (!e && !n)
                                    return {
                                        x: (h = ut(o, a, l[1], l[2], l[3], l[4], l[5], l[6], i - d)).x,
                                        y: h.y,
                                        alpha: h.alpha
                                    }
                            }
                            d += c,
                            o = +l[5],
                            a = +l[6]
                        }
                        p += l
                    }
                    return u.end = p,
                    (h = e ? d : n ? u : t.findDotsAtSegment(o, a, l[1], l[2], l[3], l[4], l[5], l[6], 1)).alpha && (h = {
                        x: h.x,
                        y: h.y,
                        alpha: h.alpha
                    }),
                    h
                }
            }
              , mt = dt(1)
              , ft = dt()
              , gt = dt(0, 1);
            ze.getTotalLength = function() {
                if ("path" == this.type)
                    return this.node.getTotalLength ? this.node.getTotalLength() : mt(this.attrs.path)
            }
            ,
            ze.getPointAtLength = function(e) {
                if ("path" == this.type)
                    return ft(this.attrs.path, e)
            }
            ,
            ze.getSubpath = function(e, t) {
                if ("path" == this.type) {
                    if (_(this.getTotalLength() - t) < "1e-6")
                        return gt(this.attrs.path, e).end;
                    var n = gt(this.attrs.path, t, 1);
                    return e ? gt(n, e).end : n
                }
            }
            ,
            t.easing_formulas = {
                linear: function(e) {
                    return e
                },
                "<": function(e) {
                    return A(e, 3)
                },
                ">": function(e) {
                    return A(e - 1, 3) + 1
                },
                "<>": function(e) {
                    return (e *= 2) < 1 ? A(e, 3) / 2 : (A(e -= 2, 3) + 2) / 2
                },
                backIn: function(e) {
                    var t = 1.70158;
                    return e * e * ((t + 1) * e - t)
                },
                backOut: function(e) {
                    var t = 1.70158;
                    return (e -= 1) * e * ((t + 1) * e + t) + 1
                },
                elastic: function(e) {
                    if (0 == e || 1 == e)
                        return e;
                    return A(2, -10 * e) * M.sin(2 * I * (e - .075) / .3) + 1
                },
                bounce: function(e) {
                    var t = 7.5625
                      , n = 2.75;
                    return e < 1 / n ? t * e * e : e < 2 / n ? t * (e -= 1.5 / n) * e + .75 : e < 2.5 / n ? t * (e -= 2.25 / n) * e + .9375 : t * (e -= 2.625 / n) * e + .984375
                }
            };
            var vt = []
              , yt = function e() {
                for (var n = +new Date, r = 0; r < vt[S]; r++) {
                    var i = vt[r];
                    if (!i.stop && !i.el.removed) {
                        var s, o = n - i.start, l = i.ms, c = i.easing, h = i.from, p = i.diff, u = i.to, d = i.t, m = i.el, f = {};
                        if (o < l) {
                            var y = c(o / l);
                            for (var b in h)
                                if (h[a](b)) {
                                    switch (K[b]) {
                                    case "along":
                                        s = y * l * p[b],
                                        u.back && (s = u.len - s);
                                        var x = ft(u[b], s);
                                        m.translate(p.sx - p.x || 0, p.sy - p.y || 0),
                                        p.x = x.x,
                                        p.y = x.y,
                                        m.translate(x.x - p.sx, x.y - p.sy),
                                        u.rot && m.rotate(p.r + x.alpha, x.x, x.y);
                                        break;
                                    case R:
                                        s = +h[b] + y * l * p[b];
                                        break;
                                    case "colour":
                                        s = "rgb(" + [xt(U(h[b].r + y * l * p[b].r)), xt(U(h[b].g + y * l * p[b].g)), xt(U(h[b].b + y * l * p[b].b))][k](",") + ")";
                                        break;
                                    case "path":
                                        s = [];
                                        for (var w = 0, E = h[b][S]; w < E; w++) {
                                            s[w] = [h[b][w][0]];
                                            for (var M = 1, C = h[b][w][S]; M < C; M++)
                                                s[w][M] = +h[b][w][M] + y * l * p[b][w][M];
                                            s[w] = s[w][k](v)
                                        }
                                        s = s[k](v);
                                        break;
                                    case "csv":
                                        switch (b) {
                                        case "translation":
                                            var T = y * l * p[b][0] - d.x
                                              , _ = y * l * p[b][1] - d.y;
                                            d.x += T,
                                            d.y += _,
                                            s = T + v + _;
                                            break;
                                        case "rotation":
                                            s = +h[b][0] + y * l * p[b][0],
                                            h[b][1] && (s += "," + h[b][1] + "," + h[b][2]);
                                            break;
                                        case "scale":
                                            s = [+h[b][0] + y * l * p[b][0], +h[b][1] + y * l * p[b][1], 2 in u[b] ? u[b][2] : g, 3 in u[b] ? u[b][3] : g][k](v);
                                            break;
                                        case "clip-rect":
                                            for (s = [],
                                            w = 4; w--; )
                                                s[w] = +h[b][w] + y * l * p[b][w]
                                        }
                                        break;
                                    default:
                                        var A = [].concat(h[b]);
                                        for (s = [],
                                        w = m.paper.customAttributes[b].length; w--; )
                                            s[w] = +A[w] + y * l * p[b][w]
                                    }
                                    f[b] = s
                                }
                            m.attr(f),
                            m._run && m._run.call(m)
                        } else
                            u.along && (x = ft(u.along, u.len * !u.back),
                            m.translate(p.sx - (p.x || 0) + x.x - p.sx, p.sy - (p.y || 0) + x.y - p.sy),
                            u.rot && m.rotate(p.r + x.alpha, x.x, x.y)),
                            (d.x || d.y) && m.translate(-d.x, -d.y),
                            u.scale && (u.scale += g),
                            m.attr(u),
                            vt.splice(r--, 1)
                    }
                }
                t.svg && m && m.paper && m.paper.safari(),
                vt[S] && setTimeout(e)
            }
              , bt = function(e, n, r, i, s) {
                var o = r - i;
                n.timeouts.push(setTimeout((function() {
                    t.is(s, "function") && s.call(n),
                    n.animate(e, o, e.easing)
                }
                ), i))
            }
              , xt = function(e) {
                return C(T(e, 255), 0)
            }
              , wt = function(e, t) {
                if (null == e)
                    return {
                        x: this._.tx,
                        y: this._.ty,
                        toString: ht
                    };
                switch (this._.tx += +e,
                this._.ty += +t,
                this.type) {
                case "circle":
                case "ellipse":
                    this.attr({
                        cx: +e + this.attrs.cx,
                        cy: +t + this.attrs.cy
                    });
                    break;
                case "rect":
                case "image":
                case "text":
                    this.attr({
                        x: +e + this.attrs.x,
                        y: +t + this.attrs.y
                    });
                    break;
                case "path":
                    var n = me(this.attrs.path);
                    n[0][1] += +e,
                    n[0][2] += +t,
                    this.attr({
                        path: n
                    })
                }
                return this
            };
            function kt(e) {
                return function(n, r, i, s) {
                    var o = {
                        back: e
                    };
                    return t.is(i, "function") ? s = i : o.rot = i,
                    n && n.constructor == Fe && (n = n.attrs.path),
                    n && (o.along = n),
                    this.animate(o, r, s)
                }
            }
            function St(e, t, n, r, i, s) {
                var o = 3 * t
                  , a = 3 * (r - t) - o
                  , l = 1 - o - a
                  , c = 3 * n
                  , h = 3 * (i - n) - c
                  , p = 1 - c - h;
                function u(e) {
                    return ((l * e + a) * e + o) * e
                }
                return function(e, t) {
                    var n = function(e, t) {
                        var n, r, i, s, c, h;
                        for (i = e,
                        h = 0; h < 8; h++) {
                            if (s = u(i) - e,
                            _(s) < t)
                                return i;
                            if (_(c = (3 * l * i + 2 * a) * i + o) < 1e-6)
                                break;
                            i -= s / c
                        }
                        if (r = 1,
                        i = e,
                        i < (n = 0))
                            return n;
                        if (i > r)
                            return r;
                        for (; n < r; ) {
                            if (s = u(i),
                            _(s - e) < t)
                                return i;
                            e > s ? n = i : r = i,
                            i = (r - n) / 2 + n
                        }
                        return i
                    }(e, t);
                    return ((p * n + h) * n + c) * n
                }(e, 1 / (200 * s))
            }
            ze.animateWith = function(e, t, n, r, i) {
                for (var s = 0, o = vt.length; s < o; s++)
                    vt[s].el.id == e.id && (t.start = vt[s].start);
                return this.animate(t, n, r, i)
            }
            ,
            ze.animateAlong = kt(),
            ze.animateAlongBack = kt(1),
            ze.onAnimation = function(e) {
                return this._run = e || 0,
                this
            }
            ,
            ze.animate = function(e, n, i, s) {
                var o = this;
                if (o.timeouts = o.timeouts || [],
                !t.is(i, "function") && i || (s = i || null),
                o.removed)
                    return s && s.call(o),
                    o;
                var l = {}
                  , c = {}
                  , h = !1
                  , p = {};
                for (var u in e)
                    if (e[a](u) && (K[a](u) || o.paper.customAttributes[a](u)))
                        switch (h = !0,
                        l[u] = o.attr(u),
                        null == l[u] && (l[u] = j[u]),
                        c[u] = e[u],
                        K[u]) {
                        case "along":
                            var d = mt(e[u])
                              , m = ft(e[u], d * !!e.back)
                              , f = o.getBBox();
                            p[u] = d / n,
                            p.tx = f.x,
                            p.ty = f.y,
                            p.sx = m.x,
                            p.sy = m.y,
                            c.rot = e.rot,
                            c.back = e.back,
                            c.len = d,
                            e.rot && (p.r = G(o.rotate()) || 0);
                            break;
                        case R:
                            p[u] = (c[u] - l[u]) / n;
                            break;
                        case "colour":
                            l[u] = t.getRGB(l[u]);
                            var g = t.getRGB(c[u]);
                            p[u] = {
                                r: (g.r - l[u].r) / n,
                                g: (g.g - l[u].g) / n,
                                b: (g.b - l[u].b) / n
                            };
                            break;
                        case "path":
                            var v = we(l[u], c[u]);
                            l[u] = v[0];
                            var x = v[1];
                            p[u] = [];
                            for (var w = 0, k = l[u][S]; w < k; w++) {
                                p[u][w] = [0];
                                for (var E = 1, M = l[u][w][S]; E < M; E++)
                                    p[u][w][E] = (x[w][E] - l[u][w][E]) / n
                            }
                            break;
                        case "csv":
                            var C = y(e[u])[b](r)
                              , T = y(l[u])[b](r);
                            switch (u) {
                            case "translation":
                                l[u] = [0, 0],
                                p[u] = [C[0] / n, C[1] / n];
                                break;
                            case "rotation":
                                l[u] = T[1] == C[1] && T[2] == C[2] ? T : [0, C[1], C[2]],
                                p[u] = [(C[0] - l[u][0]) / n, 0, 0];
                                break;
                            case "scale":
                                e[u] = C,
                                l[u] = y(l[u])[b](r),
                                p[u] = [(C[0] - l[u][0]) / n, (C[1] - l[u][1]) / n, 0, 0];
                                break;
                            case "clip-rect":
                                for (l[u] = y(l[u])[b](r),
                                p[u] = [],
                                w = 4; w--; )
                                    p[u][w] = (C[w] - l[u][w]) / n
                            }
                            c[u] = C;
                            break;
                        default:
                            for (C = [].concat(e[u]),
                            T = [].concat(l[u]),
                            p[u] = [],
                            w = o.paper.customAttributes[u][S]; w--; )
                                p[u][w] = ((C[w] || 0) - (T[w] || 0)) / n
                        }
                if (h) {
                    var _ = t.easing_formulas[i];
                    if (!_)
                        if ((_ = y(i).match(H)) && 5 == _[S]) {
                            var A = _;
                            _ = function(e) {
                                return St(e, +A[1], +A[2], +A[3], +A[4], n)
                            }
                        } else
                            _ = function(e) {
                                return e
                            }
                            ;
                    vt.push({
                        start: e.start || +new Date,
                        ms: n,
                        easing: _,
                        from: l,
                        diff: p,
                        to: c,
                        el: o,
                        t: {
                            x: 0,
                            y: 0
                        }
                    }),
                    t.is(s, "function") && (o._ac = setTimeout((function() {
                        s.call(o)
                    }
                    ), n)),
                    1 == vt[S] && setTimeout(yt)
                } else {
                    var I, N = [];
                    for (var P in e)
                        e[a](P) && Y.test(P) && (u = {
                            value: e[P]
                        },
                        "from" == P && (P = 0),
                        "to" == P && (P = 100),
                        u.key = W(P, 10),
                        N.push(u));
                    for (N.sort(re),
                    N[0].key && N.unshift({
                        key: 0,
                        value: o.attrs
                    }),
                    w = 0,
                    k = N[S]; w < k; w++)
                        bt(N[w].value, o, n / 100 * N[w].key, n / 100 * (N[w - 1] && N[w - 1].key || 0), N[w - 1] && N[w - 1].value.callback);
                    (I = N[N[S] - 1].value.callback) && o.timeouts.push(setTimeout((function() {
                        I.call(o)
                    }
                    ), n))
                }
                return this
            }
            ,
            ze.stop = function() {
                for (var e = 0; e < vt.length; e++)
                    vt[e].el.id == this.id && vt.splice(e--, 1);
                for (e = 0,
                ii = this.timeouts && this.timeouts.length; e < ii; e++)
                    clearTimeout(this.timeouts[e]);
                return this.timeouts = [],
                clearTimeout(this._ac),
                delete this._ac,
                this
            }
            ,
            ze.translate = function(e, t) {
                return this.attr({
                    translation: e + " " + t
                })
            }
            ,
            ze[O] = function() {
                return "Raphaël’s object"
            }
            ,
            t.ae = vt;
            var Et = function e(t) {
                if (this.items = [],
                this[S] = 0,
                this.type = "set",
                t)
                    for (var n = 0, r = t[S]; n < r; n++)
                        !t[n] || t[n].constructor != Fe && t[n].constructor != e || (this[this.items[S]] = this.items[this.items[S]] = t[n],
                        this[S]++)
            };
            for (var Mt in Et[o][F] = function() {
                for (var e, t, n = 0, r = arguments[S]; n < r; n++)
                    !(e = arguments[n]) || e.constructor != Fe && e.constructor != Et || (this[t = this.items[S]] = this.items[t] = e,
                    this[S]++);
                return this
            }
            ,
            Et[o].pop = function() {
                return delete this[this[S]--],
                this.items.pop()
            }
            ,
            ze)
                ze[a](Mt) && (Et[o][Mt] = function(e) {
                    return function() {
                        for (var t = 0, n = this.items[S]; t < n; t++)
                            this.items[t][e][d](this.items[t], arguments);
                        return this
                    }
                }(Mt));
            return Et[o].attr = function(e, n) {
                if (e && t.is(e, P) && t.is(e[0], "object"))
                    for (var r = 0, i = e[S]; r < i; r++)
                        this.items[r].attr(e[r]);
                else
                    for (var s = 0, o = this.items[S]; s < o; s++)
                        this.items[s].attr(e, n);
                return this
            }
            ,
            Et[o].animate = function(e, n, r, i) {
                (t.is(r, "function") || !r) && (i = r || null);
                var s, o, a = this.items[S], l = a, c = this;
                for (i && (o = function() {
                    !--a && i.call(c)
                }
                ),
                r = t.is(r, N) ? r : o,
                s = this.items[--l].animate(e, n, r, o); l--; )
                    this.items[l] && !this.items[l].removed && this.items[l].animateWith(s, e, n, r, o);
                return this
            }
            ,
            Et[o].insertAfter = function(e) {
                for (var t = this.items[S]; t--; )
                    this.items[t].insertAfter(e);
                return this
            }
            ,
            Et[o].getBBox = function() {
                for (var e = [], t = [], n = [], r = [], i = this.items[S]; i--; ) {
                    var s = this.items[i].getBBox();
                    e[F](s.x),
                    t[F](s.y),
                    n[F](s.x + s.width),
                    r[F](s.y + s.height)
                }
                return {
                    x: e = T[d](0, e),
                    y: t = T[d](0, t),
                    width: C[d](0, n) - e,
                    height: C[d](0, r) - t
                }
            }
            ,
            Et[o].clone = function(e) {
                e = new Et;
                for (var t = 0, n = this.items[S]; t < n; t++)
                    e[F](this.items[t].clone());
                return e
            }
            ,
            t.registerFont = function(e) {
                if (!e.face)
                    return e;
                this.fonts = this.fonts || {};
                var t = {
                    w: e.w,
                    face: {},
                    glyphs: {}
                }
                  , n = e.face["font-family"];
                for (var r in e.face)
                    e.face[a](r) && (t.face[r] = e.face[r]);
                if (this.fonts[n] ? this.fonts[n][F](t) : this.fonts[n] = [t],
                !e.svg)
                    for (var i in t.face["units-per-em"] = W(e.face["units-per-em"], 10),
                    e.glyphs)
                        if (e.glyphs[a](i)) {
                            var s = e.glyphs[i];
                            if (t.glyphs[i] = {
                                w: s.w,
                                k: {},
                                d: s.d && "M" + s.d[Z](/[mlcxtrv]/g, (function(e) {
                                    return {
                                        l: "L",
                                        c: "C",
                                        x: "z",
                                        t: "m",
                                        r: "l",
                                        v: "c"
                                    }[e] || "M"
                                }
                                )) + "z"
                            },
                            s.k)
                                for (var o in s.k)
                                    s[a](o) && (t.glyphs[i].k[o] = s.k[o])
                        }
                return e
            }
            ,
            n.getFont = function(e, n, r, i) {
                if (i = i || "normal",
                r = r || "normal",
                n = +n || {
                    normal: 400,
                    bold: 700,
                    lighter: 300,
                    bolder: 800
                }[n] || 400,
                t.fonts) {
                    var s, o = t.fonts[e];
                    if (!o) {
                        var l = new RegExp("(^|\\s)" + e[Z](/[^\w\d\s+!~.:_-]/g, g) + "(\\s|$)","i");
                        for (var c in t.fonts)
                            if (t.fonts[a](c) && l.test(c)) {
                                o = t.fonts[c];
                                break
                            }
                    }
                    if (o)
                        for (var h = 0, p = o[S]; h < p && ((s = o[h]).face["font-weight"] != n || s.face["font-style"] != r && s.face["font-style"] || s.face["font-stretch"] != i); h++)
                            ;
                    return s
                }
            }
            ,
            n.print = function(e, n, i, s, o, a, l) {
                a = a || "middle",
                l = C(T(l || 0, 1), -1);
                var c, h = this.set(), p = y(i)[b](g), u = 0;
                if (t.is(s, i) && (s = this.getFont(s)),
                s) {
                    c = (o || 16) / s.face["units-per-em"];
                    for (var d = s.face.bbox.split(r), m = +d[0], f = +d[1] + ("baseline" == a ? d[3] - d[1] + +s.face.descent : (d[3] - d[1]) / 2), v = 0, x = p[S]; v < x; v++) {
                        var w = v && s.glyphs[p[v - 1]] || {}
                          , k = s.glyphs[p[v]];
                        u += v ? (w.w || s.w) + (w.k && w.k[p[v]] || 0) + s.w * l : 0,
                        k && k.d && h[F](this.path(k.d).attr({
                            fill: "#000",
                            stroke: "none",
                            translation: [u, 0]
                        }))
                    }
                    h.scale(c, c, m, f).translate(e - m, n - f)
                }
                return h
            }
            ,
            t.format = function(e, n) {
                var r = t.is(n, P) ? [0][m](n) : arguments;
                return e && t.is(e, N) && r[S] - 1 && (e = e[Z](s, (function(e, t) {
                    return null == r[++t] ? g : r[t]
                }
                ))),
                e || g
            }
            ,
            t.ninja = function() {
                return h.was ? c.Raphael = h.is : Raphael = void 0,
                t
            }
            ,
            t.el = ze,
            t.st = Et[o],
            t
        }();
        const Qn = {
            BLUE: xe.color.blue,
            ORANGE: "#FFA500",
            PINK: "#FF00AF",
            GREEN: xe.color.green,
            PURPLE: "#9D38BD",
            RED: "#DF0030",
            GRAY: "gray",
            BLACK: "black",
            LIGHT_BLUE: "#9AB8ED",
            LIGHT_ORANGE: "#EDD19B",
            LIGHT_PINK: "#ED9BD3",
            LIGHT_GREEN: "#9BEDCE",
            LIGHT_PURPLE: "#DA9BED",
            LIGHT_RED: "#ED9AAC",
            LIGHT_GRAY: "#ED9B9B",
            LIGHT_BLACK: "#ED9B9B",
            GRAY10: "#D6D6D6",
            GRAY20: "#CDCDCD",
            GRAY30: "#B3B3B3",
            GRAY40: "#9A9A9A",
            GRAY50: "#808080",
            GRAY60: "#666666",
            GRAY70: "#4D4D4D",
            GRAY80: "#333333",
            GRAY90: "#1A1A1A",
            BLUE_A: "#CCFAFF",
            BLUE_B: "#80F6FF",
            BLUE_C: "#63D9EA",
            BLUE_D: "#11ACCD",
            BLUE_E: "#0C7F99",
            TEAL_A: "#94FFF5",
            TEAL_B: "#26EDD5",
            TEAL_C: "#01D1C1",
            TEAL_D: "#01A995",
            TEAL_E: "#208170",
            GREEN_A: "#B6FFB0",
            GREEN_B: "#8AF281",
            GREEN_C: "#74CF70",
            GREEN_D: "#1FAB54",
            GREEN_E: "#0D923F",
            GOLD_A: "#FFD0A9",
            GOLD_B: "#FFBB71",
            GOLD_C: "#FF9C39",
            GOLD_D: "#E07D10",
            GOLD_E: "#A75A05",
            RED_A: "#FCA9A9",
            RED_B: "#FF8482",
            RED_C: "#F9685D",
            RED_D: "#E84D39",
            RED_E: "#BC2612",
            MAROON_A: "#FFBDE0",
            MAROON_B: "#FF92C6",
            MAROON_C: "#ED5FA6",
            MAROON_D: "#CA337C",
            MAROON_E: "#9E034E",
            PURPLE_A: "#DDD7FF",
            PURPLE_B: "#C6B9FC",
            PURPLE_C: "#AA87FF",
            PURPLE_D: "#7854AB",
            PURPLE_E: "#543B78",
            MINT_A: "#F5F9E8",
            MINT_B: "#EDF2DF",
            MINT_C: "#E0E5CC",
            GRAY_A: "#F6F7F7",
            GRAY_B: "#F0F1F2",
            GRAY_C: "#E3E5E6",
            GRAY_D: "#D6D8DA",
            GRAY_E: "#BABEC2",
            GRAY_F: "#888D93",
            GRAY_G: "#626569",
            GRAY_H: "#3B3E40",
            GRAY_I: "#21242C",
            KA_BLUE: "#314453",
            KA_GREEN: "#71B307",
            _BACKGROUND: "#FDFDFD",
            INTERACTING: xe.color.green,
            INTERACTIVE: xe.color.green,
            DYNAMIC: xe.color.blue
        };
        class er {
            constructor(e, t, n) {
                this.raphael = void 0,
                this.xScale = void 0,
                this.yScale = void 0,
                this.bounds = void 0,
                this.scaleVector = e => {
                    if ("number" == typeof e)
                        return this.scaleVector([e, e]);
                    const t = e[0]
                      , n = e[1];
                    return [t * this.xScale, n * this.yScale]
                }
                ,
                this.scalePoint = e => {
                    if ("number" == typeof e)
                        return this.scalePoint([e, e]);
                    const t = e[0]
                      , n = e[1];
                    return [(t - this.bounds.xMin) * this.xScale, (this.bounds.yMax - n) * this.yScale]
                }
                ,
                this.unscalePoint = e => {
                    if ("number" == typeof e)
                        return this.unscalePoint([e, e]);
                    const t = e[0]
                      , n = e[1];
                    return [t / this.xScale + this.bounds.xMin, this.bounds.yMax - n / this.yScale]
                }
                ,
                this.unscaleVector = e => "number" == typeof e ? this.unscaleVector([e, e]) : [e[0] / this.xScale, e[1] / this.yScale],
                this.setScale = e => {
                    "number" == typeof e && (e = [e, e]),
                    this.xScale = e[0],
                    this.yScale = e[1],
                    this.raphael.setSize(...this.canvasDimensions())
                }
                ,
                this.canvasDimensions = () => [this.bounds.width() * this.xScale, this.bounds.height() * this.yScale],
                this.pixelsPerUnitX = () => this.xScale,
                this.pixelsPerUnitY = () => this.yScale,
                this.raphael = e,
                this.bounds = n,
                this.xScale = t[0],
                this.yScale = t[1],
                this.setScale(t)
            }
        }
        class tr {
            constructor(e, t) {
                this.xMin = void 0,
                this.xMax = void 0,
                this.yMin = void 0,
                this.yMax = void 0,
                this.xMin = e[0],
                this.xMax = e[1],
                this.yMin = t[0],
                this.yMax = t[1]
            }
            width() {
                return this.xMax - this.xMin
            }
            height() {
                return this.yMax - this.yMin
            }
        }
        var nr;
        nr = fe.createRoot;
        const rr = new WeakMap;
        function ir(e, t) {
            const n = me.createElement(le.aX, {
                throwIfNested: !1
            }, e);
            let r = rr.get(t);
            null == r && (r = nr(t),
            rr.set(t, r)),
            r.render(n)
        }
        var sr = {
            processMath: async function(e, t, n, r) {
                const i = ke()(e);
                if (null == i.attr("data-math-formula") || n) {
                    const e = function(e, t) {
                        const n = ke()(e).find("." + t);
                        return 0 === n.length ? ke()("<span>").addClass(t).appendTo(ke()(e)) : n
                    }(i, "tex-holder");
                    null == t && i.attr("data-math-formula") && (t = i.attr("data-math-formula")),
                    t = null != t ? t + "" : "",
                    t = Lt.cleanMath(t),
                    i.attr("data-math-formula", t);
                    const {TeX: n} = await gt();
                    ir(me.createElement(n, {
                        children: t,
                        onRender: r
                    }), e[0])
                }
            }
        };
        const {processMath: or} = sr;
        function ar(e, t) {
            return "number" == typeof e && (e = [e, e]),
            t = t * Math.PI / 180,
            [e[0] * Math.cos(t), e[1] * Math.sin(t)]
        }
        var lr = Xn("bounds")
          , cr = Xn("drawingTransform");
        class hr {
            constructor(e) {
                this.el = void 0,
                Object.defineProperty(this, lr, {
                    writable: !0,
                    value: void 0
                }),
                Object.defineProperty(this, cr, {
                    writable: !0,
                    value: void 0
                }),
                this.raphael = void 0,
                this.mouselayer = void 0,
                this._mouselayerWrapper = void 0,
                this._visiblelayerWrapper = void 0,
                this.isMobile = !1,
                this.currentStyle = {
                    "stroke-width": 2,
                    fill: "none"
                },
                this.range = void 0,
                this.scale = void 0,
                this.dimensions = void 0,
                this.xpixels = void 0,
                this.ypixels = void 0,
                this.isDragging = void 0,
                this.label = (e, t, n, r, i) => {
                    const s = "object" == typeof r ? r : i
                      , o = "boolean" != typeof r || r;
                    return this.withStyle(s, ( () => {
                        const r = ke()("<span>").addClass("graphie-label")
                          , i = this.currentStyle["label-distance"];
                        r.css({
                            position: "absolute",
                            padding: (null != i ? i : 7) + "px",
                            color: "black"
                        }).data("labelDirection", n).appendTo(this.el),
                        r.setPosition = e => {
                            const t = this.scalePoint(e);
                            r.css({
                                left: t[0],
                                top: t[1]
                            })
                        }
                        ,
                        r.setPosition(e);
                        const s = r[0];
                        return r.processMath = function(e, t) {
                            or(s, e, t, (function() {
                                const e = s.scrollWidth
                                  , t = s.scrollHeight;
                                mr(s, [e, t])
                            }
                            ))
                        }
                        ,
                        r.processText = function(e) {
                            r.html(e);
                            const t = s.scrollWidth
                              , n = s.scrollHeight;
                            mr(s, [t, n])
                        }
                        ,
                        o ? r.processMath(t, !1) : r.processText(t),
                        r
                    }
                    ))
                }
                ,
                this.svgPath = (e, t) => e.map(( (e, n) => {
                    if (!0 === e)
                        return "z";
                    const r = t ? e : this.scalePoint(e);
                    return (0 === n ? "M" : "L") + Lt.bound(r[0]) + " " + Lt.bound(r[1])
                }
                )).join(""),
                this.svgParabolaPath = (e, t, n) => {
                    const r = function(r) {
                        return (e * r + t) * r + n
                    };
                    if (0 === e) {
                        const e = [[this.bounds().xMin, r(this.bounds().xMin)], [this.bounds().xMax, r(this.bounds().xMax)]];
                        return this.svgPath(e)
                    }
                    const i = -t / (2 * e)
                      , s = i + Math.max(Math.abs(i - this.bounds().xMin), Math.abs(i - this.bounds().xMax))
                      , o = [i, r(i)]
                      , a = [s, r(s)]
                      , l = [o[0], o[1] - (a[1] - o[1])]
                      , c = Math.abs(o[0] - a[0])
                      , h = [[o[0] - c, a[1]], l, [o[0] + c, a[1]]].map(this.scalePoint).flat().map(Lt.bound);
                    return "M" + h[0] + "," + h[1] + " Q" + h[2] + "," + h[3] + " " + h[4] + "," + h[5]
                }
                ,
                this.svgSinusoidPath = (e, t, n, r) => {
                    const i = Math.abs(Math.PI / (2 * t))
                      , s = function(i) {
                        return e * Math.sin(t * i - n) + r
                    }
                      , o = function(r) {
                        return e * t * Math.cos(n - t * r)
                    }
                      , a = (e, t) => {
                        const n = e + i * t
                          , r = n + i
                          , a = [n, 2 * n / 3 + 1 * r / 3, 1 * n / 3 + 2 * r / 3, r]
                          , l = [s(n), s(n) + o(n) * (r - n) / 3, s(r) - o(r) * (r - n) / 3, s(r)];
                        return Re.xr.zip(a, l).map(this.scalePoint)
                    }
                      , l = this.bounds().width()
                      , c = Math.ceil(l / i) + 1;
                    let h = n / t;
                    const p = h - this.bounds().xMin;
                    h -= i * Math.ceil(p / i);
                    let u = a(h, 0)
                      , d = "M" + u[0][0] + "," + u[0][1] + " C" + u[1][0] + "," + u[1][1] + " " + u[2][0] + "," + u[2][1] + " " + u[3][0] + "," + u[3][1];
                    for (let e = 1; e < c; e++)
                        u = a(h, e),
                        d += " C" + u[1][0] + "," + u[1][1] + " " + u[2][0] + "," + u[2][1] + " " + u[3][0] + "," + u[3][1];
                    return d
                }
                ,
                this.scalePoint = e => this.drawingTransform().scalePoint(e),
                this.scaleVector = e => this.drawingTransform().scaleVector(e),
                this.unscalePoint = e => this.drawingTransform().unscalePoint(e),
                this.unscaleVector = e => this.drawingTransform().unscaleVector(e),
                this.el = e,
                ke()(e).css("position", "relative"),
                this.raphael = Jn(e),
                ke()(e).children("div").css("position", "absolute")
            }
            init(e) {
                var t;
                let n = e.scale || [40, 40];
                if (n = "number" == typeof n ? [n, n] : n,
                null == e.range)
                    throw new s.uI("range should be specified in graph init",s.D1.Internal);
                Zn(this, lr)[lr] = new tr(...e.range),
                Zn(this, cr)[cr] = new er(this.raphael,n,this.bounds());
                const [r,i] = this.drawingTransform().canvasDimensions();
                return ke()(this.el).css({
                    width: r,
                    height: i
                }),
                this.range = e.range,
                this.scale = n,
                this.dimensions = [r, i],
                this.xpixels = r,
                this.ypixels = i,
                this.isMobile = null != (t = e.isMobile) && t,
                this
            }
            graphInit(e) {
                e = e || {};
                for (const [t,n] of (0,
                Ne.qh)(e))
                    t.match(/.*Opacity$/) || "range" === t || "number" != typeof n || (e[t] = [n, n]),
                    "range" !== t && "gridRange" !== t || (e[t] = ur(e[t]));
                const t = ur(e.range || [[-10, 10], [-10, 10]])
                  , n = ur(e.gridRange || t)
                  , r = e.scale || [20, 20]
                  , i = null == e.grid || e.grid
                  , s = e.gridOpacity || .1
                  , o = function(e) {
                    if (Array.isArray(e))
                        return e;
                    return [e, e]
                }(e.gridStep || [1, 1])
                  , a = null == e.axes || e.axes
                  , l = e.axisArrows || ""
                  , c = e.axisOpacity || 1
                  , h = e.axisCenter || [Math.min(Math.max(t[0][0], 0), t[0][1]), Math.min(Math.max(t[1][0], 0), t[1][1])]
                  , p = null != e.axisLabels && e.axisLabels
                  , u = null == e.ticks || e.ticks
                  , d = e.tickStep || [2, 2]
                  , m = e.tickLen || [5, 5]
                  , f = e.tickOpacity || 1
                  , g = e.labels || e.labelStep || !1
                  , v = e.labelStep || [1, 1]
                  , y = e.labelOpacity || 1;
                let b = e.unityLabels || !1;
                const x = e.labelFormat || function(e) {
                    return e
                }
                ;
                let w = e.xLabelFormat || x
                  , k = e.yLabelFormat || x;
                const S = [[t[0][0] - (t[0][0] > 0 ? 1 : 0), t[0][1] + (t[0][1] < 0 ? 1 : 0)], [t[1][0] - (t[1][0] > 0 ? 1 : 0), t[1][1] + (t[1][1] < 0 ? 1 : 0)]];
                Array.isArray(b) || (b = [b, b]);
                const E = function(e) {
                    return function(t) {
                        return (e(t) + "").replace(/-(\d)/g, "\\llap{-}$1")
                    }
                };
                if (w = E(w),
                k = E(k),
                this.init({
                    range: S,
                    scale: r,
                    isMobile: e.isMobile
                }),
                i && this.grid(n[0], n[1], {
                    stroke: e.isMobile ? Qn.GRAY_C : "#000000",
                    opacity: e.isMobile ? 1 : s,
                    step: o,
                    strokeWidth: e.isMobile ? 1 : 2
                }),
                a) {
                    if ("<->" === l || !0 === l) {
                        const r = this;
                        this.style({
                            stroke: e.isMobile ? Qn.GRAY_G : "#000000",
                            opacity: e.isMobile ? 1 : c,
                            strokeWidth: e.isMobile ? 1 : 2,
                            arrows: "->"
                        }, (function() {
                            t[1][0] < 0 && t[1][1] > 0 && (r.path([h, [n[0][0], h[1]]]),
                            r.path([h, [n[0][1], h[1]]])),
                            t[0][0] < 0 && t[0][1] > 0 && (r.path([h, [h[0], n[1][0]]]),
                            r.path([h, [h[0], n[1][1]]]))
                        }
                        ))
                    } else if ("->" === l || "" === l) {
                        const e = this;
                        this.style({
                            stroke: "#000000",
                            opacity: c,
                            strokeWidth: 2,
                            arrows: l
                        }, (function() {
                            e.path([[n[0][0], h[1]], [n[0][1], h[1]]]),
                            e.path([[h[0], n[1][0]], [h[0], n[1][1]]])
                        }
                        ))
                    }
                    p && 2 === p.length && (this.label([n[0][1], h[1]], p[0], "right"),
                    this.label([h[0], n[1][1]], p[1], "above"))
                }
                if (u) {
                    const i = e.isMobile
                      , s = this;
                    this.style({
                        stroke: e.isMobile ? Qn.GRAY_G : "#000000",
                        opacity: e.isMobile ? 1 : f,
                        strokeWidth: 1
                    }, ( () => {
                        let e = o[0] * d[0]
                          , a = m[0] / r[1]
                          , c = n[0][0]
                          , p = n[0][1];
                        if (t[1][0] < 0 && t[1][1] > 0) {
                            for (let t = e + h[0]; t <= p; t += e)
                                (t < p || !l) && s.line([t, -a + h[1]], [t, i ? 0 : a + h[1]]);
                            for (let t = -e + h[0]; t >= c; t -= e)
                                (t > c || !l) && s.line([t, -a + h[1]], [t, i ? 0 : a + h[1]])
                        }
                        if (e = o[1] * d[1],
                        a = m[1] / r[0],
                        c = n[1][0],
                        p = n[1][1],
                        t[0][0] < 0 && t[0][1] > 0) {
                            for (let t = e + h[1]; t <= p; t += e)
                                (t < p || !l) && this.line([-a + h[0], t], [i ? 0 : a + h[0], t]);
                            for (let t = -e + h[1]; t >= c; t -= e)
                                (t > c || !l) && this.line([-a + h[0], t], [i ? 0 : a + h[0], t])
                        }
                    }
                    ))
                }
                if (g) {
                    const t = this;
                    this.style({
                        stroke: e.isMobile ? Qn.GRAY_G : "#000000",
                        opacity: e.isMobile ? 1 : y
                    }, (function() {
                        let e = o[0] * d[0] * v[0]
                          , r = n[0][0]
                          , i = n[0][1];
                        const s = h[0] < 0 ? "above" : "below"
                          , a = h[0] < 0 ? "right" : "left"
                          , c = 0 === h[0] && 0 !== h[1]
                          , p = 0 !== h[0] && 0 === h[1]
                          , u = 0 !== h[0] || 0 !== h[1]
                          , m = b[0] || u
                          , f = b[1] || u;
                        for (let n = (c ? 0 : e) + h[0]; n <= i; n += e)
                            (n < i || !l) && t.label([n, h[1]], w(n), s);
                        for (let n = -e * (m ? 1 : 2) + h[0]; n >= r; n -= e)
                            (n > r || !l) && t.label([n, h[1]], w(n), s);
                        e = o[1] * d[1] * v[1],
                        r = n[1][0],
                        i = n[1][1];
                        for (let n = (p ? 0 : e) + h[1]; n <= i; n += e)
                            (n < i || !l) && t.label([h[0], n], k(n), a);
                        for (let n = -e * (f ? 1 : 2) + h[1]; n >= r; n -= e)
                            (n > r || !l) && t.label([h[0], n], k(n), a)
                    }
                    ))
                }
            }
            drawingTransform() {
                if (null == Zn(this, cr)[cr])
                    throw new Error("Can't get drawingTransform of an uninitialized Graphie");
                return Zn(this, cr)[cr]
            }
            bounds() {
                if (null == Zn(this, lr)[lr])
                    throw new Error("Can't get bounds of an uninitialized Graphie");
                return Zn(this, lr)[lr]
            }
            style(e, t) {
                const n = this.processAttributes(e);
                if ("function" == typeof t) {
                    const e = this.currentStyle;
                    this.currentStyle = nt({}, this.currentStyle, n);
                    const r = t.call(this);
                    return this.currentStyle = e,
                    r
                }
                Object.assign(this.currentStyle, n)
            }
            grid(e, t, n) {
                return this.withStyle(n, ( () => {
                    const n = this.currentStyle.step || [1, 1]
                      , r = this.raphael.set();
                    let i = n[0] * Math.ceil(e[0] / n[0]);
                    for (; i <= e[1]; i += n[0])
                        r.push(this.line([i, t[0]], [i, t[1]]));
                    let s = n[1] * Math.ceil(t[0] / n[1]);
                    for (; s <= t[1]; s += n[1])
                        r.push(this.line([e[0], s], [e[1], s]));
                    return r
                }
                ))
            }
            arc(e, t, n, r, i, s) {
                return this.withStyle(s, ( () => {
                    n = (n % 360 + 360) % 360,
                    r = (r % 360 + 360) % 360;
                    const s = this.scalePoint(e)
                      , o = this.scaleVector(t)
                      , a = ar(t, n)
                      , l = ar(t, r)
                      , c = e => Re.Rx.round(e, 6)
                      , h = this.scalePoint([c(e[0] + a[0]), c(e[1] + a[1])])
                      , p = this.scalePoint([c(e[0] + l[0]), c(e[1] + l[1])])
                      , u = ((r - n) % 360 + 360) % 360 > 180;
                    return this.raphael.path("M" + h.join(" ") + "A" + o.join(" ") + " 0 " + (u ? 1 : 0) + " 0 " + p.join(" ") + (i ? "L" + s.join(" ") + "z" : ""))
                }
                ))
            }
            circle(e, t, n) {
                return this.withStyle(n, ( () => this.raphael.ellipse(...this.scalePoint(e), ...this.scaleVector([t, t]))))
            }
            rect(e, t, n, r, i) {
                return this.withStyle(i, ( () => {
                    const i = this.scalePoint([e, t + r])
                      , s = this.scaleVector([n, r])
                      , o = this.raphael.rect(...i.concat(s));
                    return this.isMobile && (o.node.style.shapeRendering = "crispEdges"),
                    o
                }
                ))
            }
            ellipse(e, t, n) {
                return this.withStyle(n, ( () => this.raphael.ellipse(...this.scalePoint(e).concat(this.scaleVector(t)))))
            }
            fixedEllipse(e, t, n, r, i) {
                return this.withStyle(i, ( () => {
                    const i = this.scalePoint(e)
                      , s = this.scaleVector(t)
                      , o = 2 * s[0] * n + r
                      , a = 2 * s[1] * n + r
                      , l = i[0] - o / 2
                      , c = i[1] - a / 2
                      , h = document.createElement("div");
                    ke()(h).css({
                        position: "absolute",
                        width: o + "px",
                        height: a + "px",
                        left: l + "px",
                        top: c + "px"
                    });
                    return {
                        wrapper: h,
                        visibleShape: Jn(h, o, a).ellipse(o / 2, a / 2, s[0], s[1])
                    }
                }
                ))
            }
            unstyledPath(e) {
                const t = this.raphael.path(this.svgPath(e));
                return t.graphiePath = e,
                t
            }
            path(e, t) {
                return this.withStyle(t, ( () => this.unstyledPath(e)))
            }
            fixedPath(e, t, n) {
                e = e.map(this.scalePoint),
                t = t ? this.scalePoint(t) : null,
                n = n || this.svgPath;
                const r = e.map((e => e[0]))
                  , i = e.map((e => e[1]))
                  , s = Math.min(...r)
                  , o = Math.max(...r)
                  , a = Math.min(...i)
                  , l = Math.max(...i)
                  , c = [4, 4]
                  , h = [s, a];
                e = e.map((function(e) {
                    return Re.xr.add(Re.xr.subtract(e, h), Re.xr.scale(c, .5))
                }
                ));
                const p = o - s + c[0]
                  , u = l - a + c[1]
                  , d = h[0] - c[0] / 2
                  , m = h[1] - c[1] / 2
                  , f = document.createElement("div");
                ke()(f).css({
                    position: "absolute",
                    width: p + "px",
                    height: u + "px",
                    left: d + "px",
                    top: m + "px",
                    transformOrigin: t ? p / 2 + t[0] + "px " + (u / 2 + t[1]) + "px" : null
                });
                return {
                    wrapper: f,
                    visibleShape: Jn(f, p, u).path(n(e))
                }
            }
            scaledPath(e, t) {
                return this.withStyle(t, ( () => {
                    const t = this.raphael.path(this.svgPath(e, !0));
                    return t.graphiePath = e,
                    t
                }
                ))
            }
            line(e, t, n) {
                return this.withStyle(n, ( () => {
                    const n = this.unstyledPath([e, t]);
                    return this.isMobile && (n.node.style.shapeRendering = "crispEdges"),
                    n
                }
                ))
            }
            parabola(e, t, n, r) {
                return this.withStyle(r, ( () => this.raphael.path(this.svgParabolaPath(e, t, n))))
            }
            fixedLine(e, t, n) {
                const r = [n, n];
                e = this.scalePoint(e),
                t = this.scalePoint(t);
                const i = [Math.min(e[0], t[0]), Math.min(e[1], t[1])];
                e = Re.xr.add(Re.xr.subtract(e, i), Re.xr.scale(r, .5)),
                t = Re.xr.add(Re.xr.subtract(t, i), Re.xr.scale(r, .5));
                const s = i[0] - r[0] / 2
                  , o = i[1] - r[1] / 2
                  , a = Math.abs(e[0] - t[0]) + r[0]
                  , l = Math.abs(e[1] - t[1]) + r[1]
                  , c = document.createElement("div");
                ke()(c).css({
                    position: "absolute",
                    width: a + "px",
                    height: l + "px",
                    left: s + "px",
                    top: o + "px",
                    transformOrigin: e[0] + "px " + e[1] + "px"
                });
                const h = Jn(c, a, l)
                  , p = "M" + e[0] + " " + e[1] + " L" + t[0] + " " + t[1]
                  , u = h.path(p);
                return u.graphiePath = [e, t],
                {
                    wrapper: c,
                    visibleShape: u
                }
            }
            sinusoid(e, t, n, r, i) {
                return this.withStyle(i, ( () => this.raphael.path(this.svgSinusoidPath(e, t, n, r))))
            }
            plotParametric(e, t, n) {
                return this.withStyle(n, ( () => {
                    const n = t => {
                        return n = e(t),
                        Math.abs(n[1]) > 5e5 ? [n[0], Math.min(Math.max(n[1], -5e5), 5e5)] : n;
                        var n
                    }
                      , r = t[0]
                      , i = t[1];
                    let s = (i - r) / (this.currentStyle["plot-points"] || 800);
                    0 === s && (s = 1);
                    const o = this.raphael.set();
                    let a = []
                      , l = n(r)[1];
                    for (let e = r; e <= i; e += s) {
                        const t = n(e)
                          , r = t[1];
                        r > 0 != l > 0 && Math.abs(r - l) > 2 * this.drawingTransform().pixelsPerUnitY() || isNaN(r) ? (o.push(this.unstyledPath(a)),
                        a = []) : a.push(t),
                        l = r
                    }
                    return o.push(this.unstyledPath(a)),
                    o
                }
                ))
            }
            plot(e, t, n) {
                return this.withStyle(n, ( () => {
                    const n = t[0]
                      , r = t[1];
                    this.currentStyle["plot-points"] || (this.currentStyle["plot-points"] = 2 * (r - n) * this.drawingTransform().pixelsPerUnitX());
                    return this.plotParametric((t => [t, e(t)]), t)
                }
                ))
            }
            withStyle(e, t) {
                const n = this.currentStyle;
                this.currentStyle = nt({}, this.currentStyle, this.processAttributes(e));
                const r = this.postprocessDrawingResult(t());
                return this.currentStyle = n,
                r
            }
            postprocessDrawingResult(e) {
                const t = e.constructor.prototype;
                return t === Jn.el || t === Jn.st ? (e.attr(this.currentStyle),
                this.currentStyle.arrows && (e = this.addArrowheads(e))) : e instanceof ke() && e.css(nt({}, this.currentStyle, dr)),
                e
            }
            addArrowheads(e) {
                const t = e.constructor.prototype;
                if (t === Jn.el) {
                    if ("path" === e.type && void 0 === e.arrowheadsDrawn) {
                        const t = .6 + .4 * e.attr("stroke-width")
                          , n = e.getTotalLength()
                          , r = this.raphael.set()
                          , i = this.raphael.path(this.isMobile ? "M-4,4 C-4,4 -0.25,0 -0.25,0 C-0.25,0 -4,-4 -4,-4" : "M-3 4 C-2.75 2.5 0 0.25 0.75 0C0 -0.25 -2.75 -2.5 -3 -4")
                          , s = e.getPointAtLength(n - .4)
                          , o = e.getPointAtLength(n - .75 * t)
                          , a = 180 * Math.atan2(s.y - o.y, s.x - o.x) / Math.PI
                          , l = e.attr();
                        delete l.path;
                        let c = e.getSubpath(0, n - .75 * t);
                        return c = this.raphael.path(c).attr(l),
                        c.arrowheadsDrawn = !0,
                        e.remove(),
                        i.rotate(a, this.isMobile ? 1e-5 : .75, 0).scale(t, t, .75, 0).translate(o.x, o.y).attr(l).attr({
                            "stroke-linejoin": "round",
                            "stroke-linecap": "round"
                        }),
                        i.arrowheadsDrawn = !0,
                        r.push(c),
                        r.push(i),
                        r
                    }
                } else if (t === Jn.st)
                    for (let t = 0, n = e.items.length; t < n; t++)
                        this.addArrowheads(e.items[t]);
                return e
            }
            processAttributes(e) {
                const t = {
                    scale: e => {
                        this.drawingTransform().setScale(e)
                    }
                    ,
                    clipRect: e => {
                        const t = e[0]
                          , n = e[1];
                        return t[1] += n[1],
                        {
                            "clip-rect": this.scalePoint(t).concat(this.scaleVector(n)).join(" ")
                        }
                    }
                    ,
                    strokeWidth: function(e) {
                        return {
                            "stroke-width": parseFloat(e)
                        }
                    },
                    rx: e => ({
                        rx: this.scaleVector([e, 0])[0]
                    }),
                    ry: e => ({
                        ry: this.scaleVector([0, e])[1]
                    }),
                    r: e => {
                        const t = this.scaleVector([e, e]);
                        return {
                            rx: t[0],
                            ry: t[1]
                        }
                    }
                }
                  , n = {};
                return Object.entries(e || {}).forEach((function([e,r]) {
                    const i = t[e];
                    if ("function" == typeof i)
                        Object.assign(n, i(r));
                    else {
                        const t = String(e).replace(/([A-Z]+)([A-Z][a-z])/g, "$1-$2").replace(/([a-z\d])([A-Z])/g, "$1-$2").toLowerCase();
                        n[t] = r
                    }
                }
                )),
                n
            }
            addMouseLayer(e) {
                const t = nt({
                    allowScratchpad: !1,
                    setDrawingAreaAvailable: function() {}
                }, e);
                if (this.mouselayer = Jn(this.el, this.xpixels, this.ypixels),
                ke()(this.mouselayer.canvas).css("z-index", 2),
                t.onClick || t.onMouseDown || t.onMouseMove || t.onMouseOver || t.onMouseOut) {
                    const e = this.mouselayer.rect(0, 0, this.xpixels, this.ypixels).attr({
                        fill: "#000",
                        opacity: 0
                    });
                    let n = !1;
                    if (ke()(this.mouselayer.canvas).on("vmousedown", (r => {
                        if (r.target === e[0]) {
                            if (t.onMouseDown && t.onMouseDown(this.getMouseCoord(r)),
                            n = !0,
                            t.onMouseMove) {
                                const e = t.onMouseMove;
                                ke()(document).bind("vmousemove.mouseLayer", (t => {
                                    n && (t.preventDefault(),
                                    e(this.getMouseCoord(t)))
                                }
                                ))
                            }
                            ke()(document).bind("vmouseup.mouseLayer", (e => {
                                ke()(document).unbind(".mouseLayer"),
                                n && t.onClick && t.onClick(this.getMouseCoord(e)),
                                n = !1
                            }
                            ))
                        }
                    }
                    )),
                    t.onMouseOver) {
                        const e = t.onMouseOver;
                        ke()(this.mouselayer.canvas).on("vmouseover", (t => {
                            e(this.getMouseCoord(t))
                        }
                        ))
                    }
                    if (t.onMouseOut) {
                        const e = t.onMouseOut;
                        ke()(this.mouselayer.canvas).on("vmouseout", (t => {
                            e(this.getMouseCoord(t))
                        }
                        ))
                    }
                }
                t.allowScratchpad || null == t.setDrawingAreaAvailable || t.setDrawingAreaAvailable(!1),
                this._mouselayerWrapper = document.createElement("div"),
                ke()(this._mouselayerWrapper).css({
                    position: "absolute",
                    left: 0,
                    top: 0,
                    zIndex: 2
                }),
                this._visiblelayerWrapper = document.createElement("div"),
                ke()(this._visiblelayerWrapper).css({
                    position: "absolute",
                    left: 0,
                    top: 0
                });
                const n = this.el;
                n.appendChild(this._visiblelayerWrapper),
                n.appendChild(this._mouselayerWrapper),
                this.addToMouseLayerWrapper = e => {
                    var t;
                    null == (t = this._mouselayerWrapper) || t.appendChild(e)
                }
                ,
                this.addToVisibleLayerWrapper = e => {
                    var t;
                    null == (t = this._visiblelayerWrapper) || t.appendChild(e)
                }
            }
            addToMouseLayerWrapper(e) {
                throw new Error("addToMouseLayerWrapper is not ready. Call addMouseLayer() first.")
            }
            addToVisibleLayerWrapper(e) {
                throw new Error("addToVisibleLayerWrapper is not ready. Call addMouseLayer() first.")
            }
            getMousePx(e) {
                const t = ke()(this.el).offset();
                return [e.pageX - t.left, e.pageY - t.top]
            }
            getMouseCoord(e) {
                return this.unscalePoint(this.getMousePx(e))
            }
        }
        const pr = {
            center: [-.5, -.5],
            above: [-.5, -1],
            "above right": [0, -1],
            right: [0, -.5],
            "below right": [0, 0],
            below: [-.5, 0],
            "below left": [-1, 0],
            left: [-1, -.5],
            "above left": [-1, -1]
        };
        function ur(e) {
            function t(e) {
                return "number" == typeof e ? [-e, e] : e
            }
            if (null == e)
                return e;
            const [n,r] = function(e) {
                return Array.isArray(e) ? e : [e, e]
            }(e);
            return [t(n), t(r)]
        }
        const dr = {
            "stroke-width": null
        }
          , mr = function(e, t) {
            const n = ke()(e)
              , r = n.data("labelDirection");
            let[i,s] = t;
            if (0 === i && 0 === s && ([i,s] = [1, 1],
            Ot.log("Label size was 0x0 in graphie.js; using 1x1 instead")),
            n.css("visibility", ""),
            "number" == typeof r) {
                const e = Math.cos(r)
                  , t = Math.sin(r)
                  , o = Math.min(i / 2 / Math.abs(e), s / 2 / Math.abs(t));
                n.css({
                    marginLeft: -i / 2 + e * o,
                    marginTop: -s / 2 - t * o
                })
            } else {
                var o, a, l;
                const t = e.scrollHeight === s
                  , c = n.closest(".svg-image")
                  , h = n.closest(".graphie")
                  , p = c.length > 0 ? c : h;
                p.css("line-height", "normal"),
                t && e.scrollHeight !== s && (s = e.scrollHeight);
                const u = null != (o = p.css(["max-width", "width"])) ? o : {
                    "max-width": "0px"
                }
                  , d = "none" !== u["max-width"] ? u["max-width"] : u.width;
                let m = (null != (a = p.width()) ? a : 0) / parseInt(d.replace(/px$/, "")) * 100;
                (isNaN(m) || 0 === m) && (m = 100);
                const f = null != (l = n.css("padding")) ? l : "0px"
                  , g = "none" !== f ? f : "0px"
                  , v = Math.round(parseInt(g.replace(/px$/, "")) * m) / 100
                  , y = pr[r || "center"]
                  , b = {
                    marginLeft: Math.round(i * y[0] * m) / 100,
                    marginTop: Math.round(s * y[1] * m) / 100,
                    padding: `${v}px`
                };
                1 !== m && (b.fontSize = Math.round(100 * m) / 100 + "%"),
                n.css(b)
            }
        }
          , fr = {
            Graphie: hr,
            createGraphie: function(e) {
                return new hr(e)
            },
            unscaledSvgPath: function(e) {
                return !0 === e[0] ? "" : e.map((function(e, t) {
                    return !0 === e ? "z" : (0 === t ? "M" : "L") + e[0] + " " + e[1]
                }
                )).join("")
            },
            getDistance: function(e, t) {
                return Re.xm.distanceToPoint(e, t)
            },
            findAngleDeprecated: function(e, t, n) {
                if (void 0 === n) {
                    const n = e[0] - t[0]
                      , r = e[1] - t[1];
                    return n || r ? (180 + 180 * Math.atan2(-r, -n) / Math.PI + 360) % 360 : 0
                }
                return fr.findAngleDeprecated(e, n) - fr.findAngleDeprecated(t, n)
            },
            graphs: {}
        };
        !function(e, t, n, r) {
            if (void 0 !== e) {
                var i = "virtualMouseBindings"
                  , s = "virtualTouchID"
                  , o = "vmouseover vmousedown vmousemove vmouseup vclick vmouseout vmousecancel".split(" ")
                  , a = "clientX clientY pageX pageY screenX screenY".split(" ")
                  , l = e.event.mouseHooks ? e.event.mouseHooks.props : []
                  , c = e.event.props.concat(l)
                  , h = {}
                  , p = 0
                  , u = 0
                  , d = 0
                  , m = !1
                  , f = []
                  , g = !1
                  , v = !1
                  , y = "addEventListener"in n
                  , b = e(n)
                  , x = 1
                  , w = 0;
                e.vmouse = {
                    moveDistanceThreshold: 10,
                    clickDistanceThreshold: 10,
                    resetTimerDuration: 1500
                };
                for (var k = 0; k < o.length; k++)
                    e.event.special[o[k]] = F(o[k]);
                y && n.addEventListener("click", (function(t) {
                    var n, r, i, o, a, l = f.length, c = t.target;
                    if (l)
                        for (n = t.clientX,
                        r = t.clientY,
                        threshold = e.vmouse.clickDistanceThreshold,
                        i = c; i; ) {
                            for (o = 0; o < l; o++)
                                if (a = f[o],
                                i === c && Math.abs(a.x - n) < threshold && Math.abs(a.y - r) < threshold || e.data(i, s) === a.touchID)
                                    return t.preventDefault(),
                                    void t.stopPropagation();
                            i = i.parentNode
                        }
                }
                ), !0)
            }
            function S(e) {
                for (; e && void 0 !== e.originalEvent; )
                    e = e.originalEvent;
                return e
            }
            function E(t) {
                for (var n, r, s = {}; t; ) {
                    for (r in n = e.data(t, i))
                        n[r] && (s[r] = s.hasVirtualBinding = !0);
                    t = t.parentNode
                }
                return s
            }
            function M() {
                v = !0
            }
            function C() {
                v = !1
            }
            function T() {
                _(),
                p = setTimeout((function() {
                    p = 0,
                    w = 0,
                    f.length = 0,
                    g = !1,
                    M()
                }
                ), e.vmouse.resetTimerDuration)
            }
            function _() {
                p && (clearTimeout(p),
                p = 0)
            }
            function A(t, n, s) {
                var o;
                return (s && s[t] || !s && function(t, n) {
                    for (var r; t; ) {
                        if ((r = e.data(t, i)) && (!n || r[n]))
                            return t;
                        t = t.parentNode
                    }
                    return null
                }(n.target, t)) && (o = function(t, n) {
                    var i, s, o, l, h, p, u, d, m, f = t.type;
                    if ((t = e.Event(t)).type = n,
                    i = t.originalEvent,
                    s = e.event.props,
                    f.search(/mouse/) > -1 && (s = c),
                    i)
                        for (u = s.length; u; )
                            t[l = s[--u]] = i[l];
                    if (f.search(/mouse(down|up)|click/) > -1 && !t.which && (t.which = 1),
                    -1 !== f.search(/^touch/) && (f = (o = S(i)).touches,
                    h = o.changedTouches,
                    p = f && f.length ? f[0] : h && h.length ? h[0] : r))
                        for (d = 0,
                        m = a.length; d < m; d++)
                            t[l = a[d]] = p[l];
                    return t
                }(n, t),
                e(n.target).trigger(o)),
                o
            }
            function I(t) {
                var n = e.data(t.target, s);
                if (!(g || w && w === n)) {
                    var r = A("v" + t.type, t);
                    r && (r.isDefaultPrevented() && t.preventDefault(),
                    r.isPropagationStopped() && t.stopPropagation(),
                    r.isImmediatePropagationStopped() && t.stopImmediatePropagation())
                }
            }
            function R(t) {
                var n, r, i = S(t).touches;
                if (i && 1 === i.length && (r = E(n = t.target)).hasVirtualBinding) {
                    w = x++,
                    e.data(n, s, w),
                    _(),
                    C(),
                    m = !1;
                    var o = S(t).touches[0];
                    u = o.pageX,
                    d = o.pageY,
                    A("vmouseover", t, r),
                    A("vmousedown", t, r)
                }
            }
            function N(e) {
                v || (m || A("vmousecancel", e, E(e.target)),
                m = !0,
                T())
            }
            function P(t) {
                if (!v) {
                    var n = S(t).touches[0]
                      , r = s
                      , i = e.vmouse.moveDistanceThreshold
                      , s = s || Math.abs(n.pageX - u) > i || Math.abs(n.pageY - d) > i
                      , o = E(t.target);
                    s && !r && A("vmousecancel", t, o),
                    A("vmousemove", t, o),
                    T()
                }
            }
            function O(e) {
                if (!v) {
                    M();
                    var t, n = E(e.target);
                    if (A("vmouseup", e, n),
                    !m) {
                        var r = A("vclick", e, n);
                        r && r.isDefaultPrevented() && (t = S(e).changedTouches[0],
                        f.push({
                            touchID: w,
                            x: t.clientX,
                            y: t.clientY
                        }),
                        g = !0)
                    }
                    A("vmouseout", e, n),
                    m = !1,
                    T()
                }
            }
            function L(t) {
                var n, r = e.data(t, i);
                if (r)
                    for (n in r)
                        if (r[n])
                            return !0;
                return !1
            }
            function D() {}
            function F(t) {
                var n = t.substr(1);
                return {
                    setup: function(r, s) {
                        L(this) || e.data(this, i, {}),
                        e.data(this, i)[t] = !0,
                        h[t] = (h[t] || 0) + 1,
                        1 === h[t] && b.bind(n, I),
                        e(this).bind(n, D),
                        y && (h.touchstart = (h.touchstart || 0) + 1,
                        1 === h.touchstart && b.bind("touchstart", R).bind("touchend", O).bind("touchmove", P).bind("scroll", N))
                    },
                    teardown: function(r, s) {
                        --h[t],
                        h[t] || b.unbind(n, I),
                        y && (--h.touchstart,
                        h.touchstart || b.unbind("touchstart", R).unbind("touchmove", P).unbind("touchend", O).unbind("scroll", N));
                        var o = e(this)
                          , a = e.data(this, i);
                        a && (a[t] = !1),
                        o.unbind(n, D),
                        L(this) || o.removeData(i)
                    }
                }
            }
        }(ke(), window, document);
        const gr = function(e, t, n) {
            const r = e.range[0][1] - e.range[0][0] + (e.range[1][1] - e.range[1][0])
              , i = e.unscaleVector(Re.xr.cartFromPolarDeg(1, n))
              , s = Re.xr.scale(Re.xr.normalize(i), r)
              , o = Re.xr.add(t, s)
              , a = Re.xr.polarDegFromCart(i)[1];
            return e.constrainToBoundsOnAngle(o, 4, a * Math.PI / 180)
        };
        class vr {
            constructor(e, t) {
                this.graphie = void 0,
                this.initialPoint = void 0,
                this.graphie = e,
                this.initialPoint = t
            }
            transform(e) {
                const t = Kn.getPrefixedTransform();
                this.wrapper.style[t] = e
            }
            toFront() {
                const e = this.wrapper.parentNode;
                e && e.appendChild(this.wrapper)
            }
            toBack() {
                const e = this.wrapper.parentNode;
                null != e && e.firstChild !== this.wrapper && e.insertBefore(this.wrapper, e.firstChild)
            }
            remove() {
                this.visibleShape.remove(),
                ke()(this.wrapper).remove()
            }
            getMouseTarget() {
                return this.visibleShape[0]
            }
            moveTo(e) {
                const t = Re.xr.subtract(this.graphie.scalePoint(e), this.graphie.scalePoint(this.initialPoint))
                  , n = Kn.getCanUse3dTransform()
                  , r = "translateX(" + t[0] + "px) translateY(" + t[1] + "px)" + (n ? " translateZ(0)" : "");
                this.transform(r)
            }
            hide() {
                this.visibleShape.hide()
            }
            show() {
                this.visibleShape.show()
            }
            attr(...e) {
                this.visibleShape.attr(...e)
            }
            animate(...e) {
                this.visibleShape.animate(...e)
            }
        }
        const yr = {
            center: null,
            createPath: null,
            mouselayer: !1
        };
        class br extends vr {
            constructor(e, t, n) {
                const r = e.scalePoint(ve().head(t));
                super(e, r),
                this.wrapper = void 0,
                this.visibleShape = void 0,
                n = ve().extend({}, yr, n);
                const i = e.fixedPath(t, n.center, n.createPath);
                this.wrapper = i.wrapper,
                this.visibleShape = i.visibleShape,
                n.mouselayer ? (this.wrapper.style.touchAction = "none",
                this.graphie.addToMouseLayerWrapper(this.wrapper)) : this.graphie.addToVisibleLayerWrapper(this.wrapper)
            }
        }
        class xr extends br {
            constructor(e, t) {
                const n = [.75, 0];
                super(e, [[-3, 4], [-2.75, 2.5], [0, .25], n, [0, -.25], [-2.75, -2.5], [-3, -4]].map((e => {
                    const t = Re.xr.subtract(e, n)
                      , r = Re.xr.scale(t, xr.scale);
                    return Re.xr.add(n, r)
                }
                )).map(e.unscalePoint), {
                    center: e.unscalePoint(n),
                    createPath: wr
                }),
                this.center = void 0,
                this.center = n,
                this.attr(ve().extend({
                    "stroke-linejoin": "round",
                    "stroke-linecap": "round",
                    "stroke-dasharray": ""
                }, t))
            }
            toCoordAtAngle(e, t) {
                const n = this.graphie.scalePoint(gr(this.graphie, e, t));
                this.transform("translateX(" + (n[0] + xr.scale * this.center[0]) + "px) translateY(" + (n[1] + xr.scale * this.center[1]) + "px) translateZ(0) rotate(" + (360 - Lt.bound(t)) + "deg)")
            }
        }
        xr.scale = 1.4;
        const wr = function(e) {
            let t = "M" + e[0][0] + " " + e[0][1];
            for (let n = 1; n < e.length; n += 3)
                t += "C" + e[n][0] + " " + e[n][1] + " " + e[n + 1][0] + " " + e[n + 1][1] + " " + e[n + 2][0] + " " + e[n + 2][1];
            return t
        }
          , kr = {
            maxScale: 1,
            mouselayer: !1,
            shadow: !1,
            disableMouseEventsOnWrapper: !1
        };
        class Sr extends vr {
            constructor(e, t, n, r) {
                super(e, t),
                this.initialPoint = void 0,
                this.wrapper = void 0,
                this.visibleShape = void 0,
                r = ve().extend({}, kr, r);
                const i = e.fixedEllipse(t, n, r.maxScale, r.padding);
                if (this.visibleShape = i.visibleShape,
                this.wrapper = i.wrapper,
                this.graphie = e,
                this.initialPoint = t,
                r.interactiveKindForTesting && this.wrapper.setAttribute("data-interactive-kind-for-testing", r.interactiveKindForTesting),
                r.mouselayer ? (this.wrapper.style.touchAction = "none",
                this.graphie.addToMouseLayerWrapper(this.wrapper)) : this.graphie.addToVisibleLayerWrapper(this.wrapper),
                r.shadow) {
                    const e = "drop-shadow(0px 0px 5px rgba(0, 0, 0, 0.5))";
                    this.wrapper.style.filter = e,
                    this.moveTo = function(e) {
                        const t = Re.xr.subtract(this.graphie.scalePoint(e), this.graphie.scalePoint(this.initialPoint))
                          , n = Kn.getCanUse3dTransform()
                          , r = "translateX(" + Math.round(t[0]) + "px) translateY(" + Math.round(t[1]) + "px)" + (n ? " translateZ(0)" : "");
                        this.transform(r)
                    }
                }
                r.disableMouseEventsOnWrapper && (this.wrapper.style.pointerEvents = "none",
                this.visibleShape.node.style.pointerEvents = "auto")
            }
        }
        const Er = {
            thickness: 2,
            mouselayer: !1
        };
        class Mr extends vr {
            constructor(e, t, n, r) {
                const i = [e.range[0][0], 0]
                  , s = [e.range[0][1], 0]
                  , o = e.scalePoint(i);
                super(e, o),
                this.initialLength = void 0,
                this.wrapper = void 0,
                this.visibleShape = void 0,
                r = ve().extend({}, Er, r);
                const a = e.fixedLine(i, s, r.thickness);
                this.wrapper = a.wrapper,
                this.visibleShape = a.visibleShape,
                r.interactiveKindForTesting && this.wrapper.setAttribute("data-interactive-kind-for-testing", r.interactiveKindForTesting),
                this.visibleShape.attr(r.normalStyle),
                this.initialPoint = o,
                this.initialLength = Re.xm.distanceToPoint(e.scalePoint(i), e.scalePoint(s)),
                r.mouselayer ? (this.wrapper.style.touchAction = "none",
                this.graphie.addToMouseLayerWrapper(this.wrapper)) : this.graphie.addToVisibleLayerWrapper(this.wrapper),
                this.moveTo(t, n)
            }
            getMouseTarget() {
                return this.wrapper
            }
            moveTo(e, t) {
                const n = this.graphie.scalePoint(e)
                  , r = this.graphie.scalePoint(t)
                  , i = Re.xr.polarDegFromCart(Re.xr.subtract(r, n))
                  , s = i[0]
                  , o = Lt.bound(i[1])
                  , a = Re.xr.subtract(n, this.initialPoint)
                  , l = Lt.bound(s / this.initialLength)
                  , c = Kn.getCanUse3dTransform()
                  , h = "translateX(" + a[0] + "px) translateY(" + a[1] + "px) " + (c ? " translateZ(0)" : "") + "rotate(" + o + "deg) scaleX(" + l + ") scaleY(1)";
                this.transform(h)
            }
        }
        const {eq: Cr, deepEq: Tr} = vn;
        function _r(e) {
            return Cr(e, 0) ? 0 : e > 0 ? 1 : -1
        }
        function Ar(e, t, n) {
            return (t[0] - e[0]) * (n[1] - e[1]) - (n[0] - e[0]) * (t[1] - e[1])
        }
        function Ir(e, t, n) {
            return Cr(Ar(e, t, n), 0)
        }
        function Rr(e, t, n) {
            return n[0] <= Math.max(e[0], t[0]) && n[0] >= Math.min(e[0], t[0]) && n[1] <= Math.max(e[1], t[1]) && n[1] >= Math.min(e[1], t[1])
        }
        function Nr(e, t) {
            const n = [[e[0], e[1], t[0]], [e[0], e[1], t[1]], [t[0], t[1], e[0]], [t[0], t[1], e[1]]]
              , r = ve().map(n, (function(e) {
                return _r(Ar(...e))
            }
            ));
            if (r[0] !== r[1] && r[2] !== r[3])
                return !0;
            for (let e = 0; e < 4; e++)
                if (0 === r[e] && Rr(...n[e]))
                    return !0;
            return !1
        }
        function Pr(e, t) {
            return ve().map(ve().zip(e, t), (function(e) {
                return e[0] - e[1]
            }
            ))
        }
        function Or(e) {
            return [-e[0], -e[1]]
        }
        function Lr(e) {
            const t = ve().zip(e, e.slice(1).concat(e.slice(0, 1)));
            return function(e) {
                return e.reduce(Dt, 0)
            }(ve().map(t, (function(e) {
                const t = e[0]
                  , n = e[1];
                return (n[0] - t[0]) * (n[1] + t[1])
            }
            ))) > 0
        }
        function Dr(e) {
            return Math.sqrt(ve().reduce(e, (function(e, t) {
                return e + Math.pow(t, 2)
            }
            ), 0))
        }
        function Fr(e) {
            return ve().zip(e, Ur(e)).map((function(e) {
                return Dr(Pr(...e))
            }
            ))
        }
        function zr(e) {
            const t = ve().zip(Ur(e, -1), e, Ur(e, 1))
              , n = ve().map(t, (function(e) {
                const t = Pr(e[1], e[0])
                  , n = Pr(e[2], e[1])
                  , r = Math.acos((i = t,
                s = n,
                ve().reduce(ve().zip(i, s), (function(e, t) {
                    return e + t[0] * t[1]
                }
                ), 0) / (Dr(t) * Dr(n))));
                var i, s;
                return _r(Ar(...e)) > 0 ? r : -r
            }
            ))
              , r = ve().reduce(n, (function(e, t) {
                return e + t
            }
            ), 0);
            return ve().map(n, (function(e) {
                return r > 0 ? Math.PI - e : Math.PI + e
            }
            ))
        }
        function Br(e, t, n) {
            if (e.length !== t.length)
                return !1;
            const r = e.length
              , i = zr(e)
              , s = zr(t)
              , o = Fr(e)
              , a = Fr(t);
            for (let e = 0; e < 2 * r; e++) {
                let t = s.slice()
                  , l = a.slice();
                if (e >= r && (t.reverse(),
                l.reverse(),
                l = Ur(l, 1)),
                t = Ur(t, e),
                l = Ur(l, e),
                Tr(i, t)) {
                    const e = ve().zip(o, l)
                      , t = ve().map(e, (function(e) {
                        return e[0] / e[1]
                    }
                    ))
                      , r = ve().all(t, (function(e) {
                        return Cr(t[0], e)
                    }
                    ))
                      , i = ve().all(e, (function(e) {
                        return Re.Rx.equal(e[0], e[1], n)
                    }
                    ));
                    if (r && i)
                        return !0
                }
            }
            return !1
        }
        function qr(e, t, n) {
            return 180 * Math.acos((e * e + t * t - n * n) / (2 * e * t)) / Math.PI
        }
        function Hr([e,t,n,r]) {
            e < 0 && (e *= -1,
            t *= -1,
            n *= -1);
            const i = 2 * Math.PI;
            for (t < 0 && (t *= -1,
            n *= -1,
            n += i / 2); n > 0; )
                n -= i;
            for (; n < 0; )
                n += i;
            return [e, t, n, r]
        }
        function Ur(e, t) {
            return t = void 0 === t ? 1 : t % e.length,
            e.slice(t).concat(e.slice(0, t))
        }
        function Gr(e, t) {
            if (Cr(e[0], t[0]))
                return "x = " + e[0].toFixed(3);
            const n = (t[1] - e[1]) / (t[0] - e[0])
              , r = e[1] - n * e[0];
            return "y = " + n.toFixed(3) + "x + " + r.toFixed(3)
        }
        function Wr(e) {
            const t = 11.374597405497571;
            return 58.919514629750836 * Math.exp(-.037587715462826674 * e) + t
        }
        function Vr(e, t) {
            return [e * Math.cos(t), e * Math.sin(t) * -1]
        }
        function $r(e, t) {
            return Vr(e, t * Math.PI / 180)
        }
        let jr = !1;
        const Kr = {
            animate: function() {},
            attr: function() {},
            remove: function() {}
        };
        function Zr(e, t) {
            this.set = e.raphael.set(),
            this.cx = t[0],
            this.cy = t[1];
            const n = this
              , r = e.unscaleVector(180.5)[0]
              , i = e.scalePoint([this.cx - r, this.cy + r - e.unscaleVector(10.5)[1]])
              , s = e.mouselayer.image("https://ka-perseus-graphie.s3.amazonaws.com/e9d032f2ab8b95979f674fbfa67056442ba1ff6a.png", i[0], i[1], 360, 180);
            this.set.push(s),
            s.node.addEventListener("touchstart", (function(e) {
                e.preventDefault()
            }
            ), {
                passive: !1
            });
            const o = function(n, i) {
                const s = e.scaleVector(r);
                s[0] -= 16,
                s[1] -= 16;
                const o = e.scalePoint(t);
                return Math.sin((n + 90) * Math.PI / 180) * (s[0] + i) + o[0] + "," + (Math.cos((n + 90) * Math.PI / 180) * (s[1] + i) + o[1])
            }
              , a = e.raphael.path(" M" + o(180, 6) + " L" + o(180, 2) + " L" + o(183, 10) + " L" + o(180, 18) + " L" + o(180, 14) + " A" + (e.scaleVector(r)[0] + 10) + "," + (e.scaleVector(r)[1] + 10) + ",0,0,1," + o(170, 14) + " L" + o(170, 18) + " L" + o(167, 10) + " L" + o(170, 2) + " L" + o(170, 6) + " A" + (e.scaleVector(r)[0] + 10) + "," + (e.scaleVector(r)[1] + 10) + ",0,0,0," + o(180, 6) + " Z").attr({
                stroke: null,
                fill: Qn.INTERACTIVE
            });
            this.set.push(a),
            this.centerPoint = e.addMovablePoint({
                coord: t,
                visible: !1
            }),
            this.rotateHandle = e.addMovablePoint({
                bounded: !1,
                coord: [Math.sin(275 * Math.PI / 180) * r + this.cx, Math.cos(275 * Math.PI / 180) * r + this.cy],
                onMove: function(e, t) {
                    const r = 180 * Math.atan2(n.centerPoint.coord[1] - t, n.centerPoint.coord[0] - e) / Math.PI;
                    n.rotate(-r - 5, !0)
                }
            }),
            this.rotateHandle.constraints.fixedDistance.dist = r,
            this.rotateHandle.constraints.fixedDistance.point = this.centerPoint,
            this.rotateHandle.visibleShape.remove(),
            this.rotateHandle.mouseTarget.attr({
                scale: 2
            });
            let l = !1
              , c = !1;
            const h = function() {
                return c || l
            }
              , p = ke()(this.rotateHandle.mouseTarget.getMouseTarget());
            p.bind("vmousedown", (function(e) {
                l = !0,
                p.css("cursor", "-webkit-grabbing"),
                p.css("cursor", "grabbing"),
                a.animate({
                    scale: 1.5,
                    fill: Qn.INTERACTING
                }, 50),
                ke()(document).bind("vmouseup.rotateHandle", (function(e) {
                    l = !1,
                    p.css("cursor", "-webkit-grab"),
                    p.css("cursor", "grab"),
                    h() || a.animate({
                        scale: 1,
                        fill: Qn.INTERACTIVE
                    }, 50),
                    ke()(document).unbind("vmouseup.rotateHandle")
                }
                ))
            }
            )),
            p.bind("vmouseover", (function(e) {
                c = !0,
                a.animate({
                    scale: 1.5,
                    fill: Qn.INTERACTING
                }, 50)
            }
            )),
            p.bind("vmouseout", (function(e) {
                c = !1,
                h() || a.animate({
                    scale: 1,
                    fill: Qn.INTERACTIVE
                }, 50)
            }
            ));
            const u = ke().map(this.set, (function(e) {
                return e.node
            }
            ));
            return this.makeTranslatable = function() {
                ke()(u).css("cursor", "move"),
                p.css("cursor", "-webkit-grab"),
                p.css("cursor", "grab"),
                ke()(u).bind("vmousedown", (function(t) {
                    t.preventDefault();
                    let r = t.pageX - ke()(e.raphael.canvas.parentNode).offset().left
                      , i = t.pageY - ke()(e.raphael.canvas.parentNode).offset().top;
                    ke()(document).bind("vmousemove.protractor", (function(t) {
                        let s = t.pageX - ke()(e.raphael.canvas.parentNode).offset().left
                          , o = t.pageY - ke()(e.raphael.canvas.parentNode).offset().top;
                        s = Math.max(10, Math.min(e.xpixels - 10, s)),
                        o = Math.max(10, Math.min(e.ypixels - 10, o));
                        const a = s - r
                          , l = o - i;
                        ke().each(n.set.items, (function() {
                            this.translate(a, l)
                        }
                        )),
                        n.centerPoint.setCoord([n.centerPoint.coord[0] + a / e.scale[0], n.centerPoint.coord[1] - l / e.scale[1]]),
                        n.rotateHandle.setCoord([n.rotateHandle.coord[0] + a / e.scale[0], n.rotateHandle.coord[1] - l / e.scale[1]]),
                        r = s,
                        i = o
                    }
                    )),
                    ke()(document).one("vmouseup", (function(e) {
                        ke()(document).unbind("vmousemove.protractor")
                    }
                    ))
                }
                ))
            }
            ,
            this.rotation = 0,
            this.rotate = function(t, n) {
                const r = e.scalePoint(this.centerPoint.coord);
                return n && (this.rotation = 0),
                this.set.rotate(this.rotation + t, r[0], r[1]),
                this.rotation = this.rotation + t,
                this
            }
            ,
            this.moveTo = function(t, r) {
                const i = e.scalePoint(n.centerPoint.coord)
                  , s = e.scalePoint([t, r])
                  , o = 2 * fr.getDistance(i, s);
                ke()({
                    x: i[0],
                    y: i[1]
                }).animate({
                    x: s[0],
                    y: s[1]
                }, {
                    duration: o,
                    step: function(t, r) {
                        let i = 0
                          , s = 0;
                        "x" === r.prop ? i = t - e.scalePoint(n.centerPoint.coord)[0] : "y" === r.prop && (s = t - e.scalePoint(n.centerPoint.coord)[1]),
                        ke().each(n.set.items, (function() {
                            this.translate(i, s)
                        }
                        )),
                        n.centerPoint.setCoord([n.centerPoint.coord[0] + i / e.scale[0], n.centerPoint.coord[1] - s / e.scale[1]]),
                        n.rotateHandle.setCoord([n.rotateHandle.coord[0] + i / e.scale[0], n.rotateHandle.coord[1] - s / e.scale[1]])
                    }
                })
            }
            ,
            this.rotateTo = function(e) {
                Math.abs(this.rotation - e) > 180 && (this.rotation += 360);
                const t = 5 * Math.abs(this.rotation - e);
                ke()({
                    0: this.rotation
                }).animate({
                    0: e
                }, {
                    duration: t,
                    step: function(e, t) {
                        n.rotate(e, !0),
                        n.rotateHandle.setCoord([Math.sin((e + 275) * Math.PI / 180) * r + n.centerPoint.coord[0], Math.cos((e + 275) * Math.PI / 180) * r + n.centerPoint.coord[1]])
                    }
                })
            }
            ,
            this.remove = function() {
                this.set.remove()
            }
            ,
            this.makeTranslatable(),
            this
        }
        function Yr(e, t) {
            ve().defaults(t, {
                center: [0, 0],
                pixelsPerUnit: 40,
                ticksPerUnit: 10,
                units: 10,
                label: "",
                style: {
                    fill: null,
                    stroke: Qn.GRAY
                }
            });
            const n = ve().extend({}, t.style, {
                strokeWidth: 1
            })
              , r = ve().extend({}, t.style, {
                strokeWidth: 2
            })
              , i = t.units * t.pixelsPerUnit
              , s = e.unscalePoint(Re.xr.subtract(e.scalePoint(t.center), Re.xr.scale([i, -50], .5)))
              , o = t.pixelsPerUnit / e.scale[0]
              , a = 50 / e.scale[0]
              , l = Re.xr.add(s, [t.units * o, a]);
            let c;
            if (10 === t.ticksPerUnit)
                c = {
                    10: 1,
                    5: .55,
                    1: .35
                };
            else {
                const e = [1, .6, .45, .3];
                c = {};
                for (let n = t.ticksPerUnit; n >= 1; n /= 2)
                    c[n] = 1 * (e.shift() || .2)
            }
            const h = ve().keys(c).sort((function(e, t) {
                return t - e
            }
            ));
            const p = s[0]
              , u = s[1]
              , d = l[0]
              , m = l[1]
              , f = t.units * t.ticksPerUnit + 1
              , g = e.raphael.set()
              , v = 1 / e.scale[0];
            g.push(e.line([p - v, u], [d + v, u], r)),
            g.push(e.line([p - v, m], [d + v, m], r)),
            ve().times(f, (function(i) {
                const s = i / t.ticksPerUnit
                  , l = p + s * o
                  , d = function(e) {
                    for (let t = 0; t < h.length; t++) {
                        const n = h[t];
                        if (e % n == 0)
                            return c[n]
                    }
                    return 0
                }(i) * a
                  , v = 0 === i || i === f - 1 ? r : n;
                if (g.push(e.line([l, u], [l, u + d], v)),
                s % 1 == 0) {
                    const n = e.scalePoint([l, m]);
                    let r, i;
                    0 === s ? (r = t.label,
                    i = {
                        mm: 13,
                        cm: 11,
                        m: 8,
                        km: 11,
                        in: 8,
                        ft: 8,
                        yd: 10,
                        mi: 10
                    }[r] || 3 * r.toString().length) : (r = s,
                    i = -3 * (s.toString().length + 1));
                    const o = e.raphael.text(n[0] + i, n[1] + 10, r);
                    o.attr({
                        "font-family": "KaTeX_Main",
                        "font-size": "12px",
                        color: "#444"
                    }),
                    g.push(o)
                }
            }
            ));
            const y = e.mouselayer.path(e.svgPath([s, [p, m], l, [d, u], !0]));
            y.attr({
                fill: "#000",
                opacity: 0,
                stroke: "#000",
                "stroke-width": 2
            }),
            g.push(y),
            y.node.addEventListener("touchstart", (function(e) {
                e.preventDefault()
            }
            ), {
                passive: !1
            });
            const b = ke().map(g, (function(e) {
                return e.node
            }
            ));
            ke()(b).css("cursor", "move"),
            ke()(b).bind("vmousedown", (function(t) {
                t.preventDefault();
                let n = t.pageX - ke()(e.raphael.canvas.parentNode).offset().left
                  , r = t.pageY - ke()(e.raphael.canvas.parentNode).offset().top;
                ke()(document).bind("vmousemove.ruler", (function(t) {
                    let i = t.pageX - ke()(e.raphael.canvas.parentNode).offset().left
                      , s = t.pageY - ke()(e.raphael.canvas.parentNode).offset().top;
                    i = Math.max(10, Math.min(e.xpixels - 10, i)),
                    s = Math.max(10, Math.min(e.ypixels - 10, s));
                    const o = i - n
                      , a = s - r;
                    g.translate(o, a),
                    x.setCoord([x.coord[0] + o / e.scale[0], x.coord[1] - a / e.scale[1]]),
                    w.setCoord([w.coord[0] + o / e.scale[0], w.coord[1] - a / e.scale[1]]),
                    n = i,
                    r = s
                }
                )),
                ke()(document).one("vmouseup", (function(e) {
                    ke()(document).unbind("vmousemove.ruler")
                }
                ))
            }
            ));
            const x = e.addMovablePoint({
                coord: s,
                normalStyle: {
                    fill: Qn.INTERACTIVE,
                    "fill-opacity": 0,
                    stroke: Qn.INTERACTIVE
                },
                highlightStyle: {
                    fill: Qn.INTERACTING,
                    "fill-opacity": .1,
                    stroke: Qn.INTERACTING
                },
                pointSize: 6,
                onMove: function(t, n) {
                    const r = w.coord[1] - n
                      , i = w.coord[0] - t
                      , s = 180 * Math.atan2(r, i) / Math.PI
                      , o = Re.xr.scale(Re.xr.add([t, n], w.coord), .5)
                      , a = e.scalePoint(o)
                      , l = Re.xr.scale(Re.xr.add(x.coord, w.coord), .5)
                      , c = e.scalePoint(l)
                      , h = Re.xr.subtract(a, c);
                    g.rotate(-s, c[0], c[1]),
                    g.translate(h[0], h[1])
                }
            })
              , w = e.addMovablePoint({
                coord: [d, u],
                normalStyle: {
                    fill: Qn.INTERACTIVE,
                    "fill-opacity": 0,
                    stroke: Qn.INTERACTIVE
                },
                highlightStyle: {
                    fill: Qn.INTERACTING,
                    "fill-opacity": .1,
                    stroke: Qn.INTERACTING
                },
                pointSize: 6,
                onMove: function(t, n) {
                    const r = n - x.coord[1]
                      , i = t - x.coord[0]
                      , s = 180 * Math.atan2(r, i) / Math.PI
                      , o = Re.xr.scale(Re.xr.add([t, n], x.coord), .5)
                      , a = e.scalePoint(o)
                      , l = Re.xr.scale(Re.xr.add(x.coord, w.coord), .5)
                      , c = e.scalePoint(l)
                      , h = Re.xr.subtract(a, c);
                    g.rotate(-s, c[0], c[1]),
                    g.translate(h[0], h[1])
                }
            });
            return x.constraints.fixedDistance.dist = i / e.scale[0],
            x.constraints.fixedDistance.point = w,
            w.constraints.fixedDistance.dist = i / e.scale[0],
            w.constraints.fixedDistance.point = x,
            this.remove = function() {
                g.remove(),
                x.remove(),
                w.remove()
            }
            ,
            this
        }
        function Xr(e, t) {
            if (this.graphie = e,
            ve().extend(this, t),
            ve().defaults(this, {
                normalStyle: {
                    stroke: Qn.INTERACTIVE,
                    "stroke-width": 2,
                    fill: Qn.INTERACTIVE
                },
                highlightStyle: {
                    stroke: Qn.INTERACTING,
                    "stroke-width": 2,
                    fill: Qn.INTERACTING
                },
                labelStyle: {
                    stroke: Qn.DYNAMIC,
                    "stroke-width": 1,
                    color: Qn.DYNAMIC
                },
                angleStyle: {
                    stroke: Qn.DYNAMIC,
                    "stroke-width": 1,
                    color: Qn.DYNAMIC
                },
                allowReflex: !0
            }),
            !this.points || 3 !== this.points.length)
                throw new s.uI("MovableAngle requires 3 points",s.D1.InvalidInput);
            this.points = ve().map(t.points, (function(t) {
                return ve().isArray(t) ? e.addMovablePoint({
                    coord: t,
                    visible: !1,
                    constraints: {
                        fixed: !0
                    },
                    normalStyle: this.normalStyle
                }) : t
            }
            ), this),
            this.coords = ve().pluck(this.points, "coord"),
            null == this.reflex && (this.allowReflex ? this.reflex = this._getClockwiseAngle(this.coords) > 180 : this.reflex = !1),
            this.rays = ve().map([0, 2], (function(t) {
                return e.addMovableLineSegment({
                    pointA: this.points[1],
                    pointZ: this.points[t],
                    fixed: !0,
                    extendRay: !0
                })
            }
            ), this),
            this.temp = [],
            this.labeledAngle = e.label([0, 0], "", "center", this.labelStyle),
            this.fixed || (this.addMoveHandlers(),
            this.addHighlightHandlers()),
            this.update()
        }
        ve().extend(fr.Graphie.prototype, {
            labelAngle: function(e) {
                const t = this;
                ve().defaults(e, {
                    point1: [0, 0],
                    vertex: [0, 0],
                    point3: [0, 0],
                    label: null,
                    numArcs: 1,
                    showRightAngleMarker: !0,
                    pushOut: 0,
                    clockwise: !1,
                    style: {}
                });
                let n = void 0 === e.text ? "" : e.text;
                const r = e.vertex
                  , i = t.scalePoint(r);
                let s, o;
                e.clockwise ? (s = e.point1,
                o = e.point3) : (s = e.point3,
                o = e.point1);
                const a = fr.findAngleDeprecated(s, r)
                  , l = fr.findAngleDeprecated(o, r)
                  , c = (l + 360 - a) % 360
                  , h = (a + c / 2) % 360;
                let p = 5 * e.pushOut + Wr(c);
                const u = [];
                if (Math.abs(c - 90) < 1e-9 && e.showRightAngleMarker) {
                    const n = Re.xr.add(i, $r(p, a))
                      , r = Re.xr.add(i, $r(p, l));
                    p *= Math.SQRT2;
                    const s = Re.xr.add(i, $r(p, h));
                    ve().each([n, r], (function(n) {
                        u.push(t.scaledPath([n, s], e.style))
                    }
                    ))
                } else
                    ve().times(e.numArcs, (function(n) {
                        u.push(t.arc(r, t.unscaleVector(p), a, l, e.style)),
                        p += 3
                    }
                    ));
                if (n) {
                    const r = n.match(/\$deg(\d)?/);
                    if (r) {
                        const e = r[1] || 1;
                        n = n.replace(r[0], Lt.toFixedApprox(c, e) + "^{\\circ}")
                    }
                    const s = $r(p + 15, h)
                      , o = Re.xr.add(i, s)
                      , a = t.unscalePoint(o);
                    e.label ? (e.label.setPosition(a),
                    e.label.processMath(n, !0)) : t.label(a, n, "center", e.style)
                }
                return u
            },
            labelSide: function(e) {
                const t = this;
                let n, r;
                ve().defaults(e, {
                    point1: [0, 0],
                    point2: [0, 0],
                    label: null,
                    text: "",
                    numTicks: 0,
                    numArrows: 0,
                    clockwise: !1,
                    style: {}
                }),
                e.clockwise ? (n = e.point1,
                r = e.point2) : (n = e.point2,
                r = e.point1);
                const i = [(n[0] + r[0]) / 2, (n[1] + r[1]) / 2]
                  , s = t.scalePoint(i)
                  , o = Math.atan2(r[1] - n[1], r[0] - n[0])
                  , a = o + Math.PI / 2
                  , l = [];
                let c = 0;
                if (e.numTicks) {
                    const n = e.numTicks
                      , r = 5
                      , i = 5
                      , h = ve().extend({}, e.style, {
                        strokeWidth: 2
                    });
                    ve().times(n, (function(e) {
                        const c = Vr(r * (e - (n - 1) / 2), o)
                          , p = Vr(i, a)
                          , u = [Re.xr.add(s, c, p), Re.xr.add(s, c, Or(p))];
                        l.push(t.scaledPath(u, h))
                    }
                    )),
                    c += r * (n - 1) + 15
                }
                if (e.numArrows) {
                    const i = e.numArrows
                      , a = [n, r].sort((function(e, t) {
                        return e[1] === t[1] ? e[0] - t[0] : e[1] - t[1]
                    }
                    ))[0]
                      , h = t.scalePoint(a)
                      , p = ve().extend({}, e.style, {
                        arrows: "->",
                        strokeWidth: 2
                    })
                      , u = 5;
                    ve().times(i, (function(e) {
                        let r = Vr(c + u * e, o);
                        a !== n && (r = Or(r));
                        const i = Re.xr.add(s, r);
                        l.push(t.scaledPath([h, i], p))
                    }
                    ))
                }
                let h = e.text;
                if (h) {
                    const i = h.match(/\$len(\d)?/);
                    if (i) {
                        const e = fr.getDistance(n, r)
                          , t = i[1] || 1;
                        h = h.replace(i[0], Lt.toFixedApprox(e, t))
                    }
                    const o = Vr(20, a)
                      , l = Re.xr.add(s, o)
                      , c = t.unscalePoint(l);
                    e.label ? (e.label.setPosition(c),
                    e.label.processMath(h, !0)) : t.label(c, h, "center", e.style)
                }
                return l
            },
            labelVertex: function(e) {
                const t = this;
                if (ve().defaults(e, {
                    point1: null,
                    vertex: [0, 0],
                    point3: null,
                    label: null,
                    text: "",
                    clockwise: !1,
                    style: {}
                }),
                !e.text)
                    return;
                const n = e.vertex
                  , r = t.scalePoint(n);
                let i, s;
                e.clockwise ? (i = e.point1,
                s = e.point3) : (i = e.point3,
                s = e.point1);
                let o, a = 135;
                if (i && s) {
                    const e = fr.findAngleDeprecated(i, n);
                    a = (fr.findAngleDeprecated(s, n) + 360 - e) % 360,
                    o = (e + a / 2 + 180) % 360
                } else if (i) {
                    o = fr.findAngleDeprecated(n, i) + 90
                } else if (s) {
                    o = fr.findAngleDeprecated(s, n) + 90
                } else
                    o = 135;
                const l = $r(10 + Wr(360 - a), o)
                  , c = Re.xr.add(r, l)
                  , h = t.unscalePoint(c);
                e.label ? (e.label.setPosition(h),
                e.label.processMath(e.text, !0)) : t.label(h, e.text, "center", e.style)
            },
            addMovablePoint: function(e) {
                const t = ke().extend(!0, {
                    graph: this,
                    coord: [0, 0],
                    snapX: 0,
                    snapY: 0,
                    pointSize: 4,
                    highlight: !1,
                    dragging: !1,
                    visible: !0,
                    bounded: !0,
                    constraints: {
                        fixed: !1,
                        constrainX: !1,
                        constrainY: !1,
                        fixedAngle: {},
                        fixedDistance: {}
                    },
                    lineStarts: [],
                    lineEnds: [],
                    polygonVertices: [],
                    normalStyle: {},
                    highlightStyle: {
                        fill: Qn.INTERACTING,
                        stroke: Qn.INTERACTING
                    },
                    labelStyle: {
                        color: Qn.INTERACTIVE
                    },
                    vertexLabel: "",
                    mouseTarget: null
                }, e)
                  , n = t.constraints.fixed ? Qn.DYNAMIC : Qn.INTERACTIVE;
                t.normalStyle = ve().extend({}, {
                    fill: n,
                    stroke: n
                }, e.normalStyle),
                void 0 !== e.coordX && (t.coord[0] = e.coordX),
                void 0 !== e.coordY && (t.coord[1] = e.coordY);
                const r = t.graph
                  , i = function(e) {
                    t.visible && t.bounded && !t.constraints.fixed && (e = r.constrainToBounds(e, 10));
                    let n = e[0]
                      , i = e[1];
                    if (0 !== t.snapX && (n = Math.round(n / t.snapX) * t.snapX),
                    0 !== t.snapY && (i = Math.round(i / t.snapY) * t.snapY),
                    t.constraints.fixedDistance.snapPoints) {
                        const s = r.scalePoint(e);
                        let o = s[0]
                          , a = s[1];
                        const l = 2 * Math.PI / t.constraints.fixedDistance.snapPoints
                          , c = t.constraints.fixedDistance.dist
                          , h = t.constraints.fixedDistance.point
                          , p = (h[0] - r.range[0][0]) * r.scale[0]
                          , u = (-h[1] + r.range[1][1]) * r.scale[1];
                        let d = o - p
                          , m = -a + u
                          , f = Math.atan(m / d);
                        d < 0 && (f += Math.PI),
                        f = Math.round(f / l) * l,
                        d = c * Math.cos(f),
                        m = c * Math.sin(f),
                        o = d + p,
                        a = -m + u,
                        n = Lt.roundTo(5, o / r.scale[0] + r.range[0][0]),
                        i = Lt.roundTo(5, r.range[1][1] - a / r.scale[1])
                    }
                    return t.applyConstraint([n, i])
                };
                t.applyConstraint = function(e, n, r) {
                    let i = e.slice();
                    const s = {};
                    if (r ? ke().extend(s, {
                        fixed: !1,
                        constrainX: !1,
                        constrainY: !1,
                        fixedAngle: {},
                        fixedDistance: {}
                    }, n) : ke().extend(s, this.constraints, n),
                    s.constrainX)
                        i = [this.coord[0], e[1]];
                    else if (s.constrainY)
                        i = [e[0], this.coord[1]];
                    else if ("number" == typeof s.fixedAngle.angle && "number" == typeof s.fixedDistance.dist) {
                        const e = s.fixedAngle.vertex.coord || s.fixedAngle.vertex
                          , t = s.fixedAngle.ref.coord || s.fixedAngle.ref
                          , n = s.fixedDistance.point.coord || s.fixedDistance.point
                          , r = (s.fixedAngle.angle + fr.findAngleDeprecated(t, e)) * Math.PI / 180
                          , o = s.fixedDistance.dist;
                        i[0] = o * Math.cos(r) + n[0],
                        i[1] = o * Math.sin(r) + n[1]
                    } else if ("number" == typeof s.fixedAngle.angle) {
                        const t = s.fixedAngle.vertex.coord || s.fixedAngle.vertex
                          , n = s.fixedAngle.ref.coord || s.fixedAngle.ref
                          , r = (s.fixedAngle.angle + fr.findAngleDeprecated(n, t)) * Math.PI / 180
                          , o = fr.findAngleDeprecated(e, t) * Math.PI / 180;
                        let a = fr.getDistance(e, t) * Math.cos(r - o);
                        a = a < 1 ? 1 : a,
                        i[0] = a * Math.cos(r) + t[0],
                        i[1] = a * Math.sin(r) + t[1]
                    } else if ("number" == typeof s.fixedDistance.dist) {
                        const t = s.fixedDistance.point.coord || s.fixedDistance.point;
                        let n = fr.findAngleDeprecated(e, t);
                        const r = s.fixedDistance.dist;
                        n = n * Math.PI / 180,
                        i[0] = r * Math.cos(n) + t[0],
                        i[1] = r * Math.sin(n) + t[1]
                    } else
                        s.fixed && (i = t.coord);
                    return i
                }
                ,
                t.coord = i(t.coord);
                if (t.visible && r.style(t.normalStyle, (function() {
                    const e = [t.pointSize / r.scale[0], t.pointSize / r.scale[1]]
                      , n = {
                        maxScale: 2,
                        padding: 2
                    };
                    t.visibleShape = new Sr(r,t.coord,e,n),
                    t.visibleShape.attr(ve().omit(t.normalStyle, "scale")),
                    t.visibleShape.toFront()
                }
                )),
                t.normalStyle.scale = 1,
                t.highlightStyle.scale = 2,
                t.vertexLabel && (t.labeledVertex = this.label([0, 0], "", "center", t.labelStyle)),
                t.drawLabel = function() {
                    t.vertexLabel && t.graph.labelVertex({
                        vertex: t.coord,
                        label: t.labeledVertex,
                        text: t.vertexLabel,
                        style: t.labelStyle
                    })
                }
                ,
                t.drawLabel(),
                t.grab = function(e) {
                    e = e || [0, 0],
                    ke()(document).bind("vmousemove.point vmouseup.point", (function(n) {
                        n.preventDefault(),
                        t.dragging = !0,
                        jr = !0;
                        let s = Re.xr.add(r.getMouseCoord(n), e);
                        s = i(s);
                        let o, a, l = s[0], c = s[1];
                        if ("vmousemove" === n.type) {
                            let e = !0;
                            if (ve().isFunction(t.onMove)) {
                                const n = t.onMove(l, c);
                                !1 === n && (e = !1),
                                ve().isArray(n) && (l = n[0],
                                c = n[1])
                            }
                            if (o = (l - r.range[0][0]) * r.scale[0],
                            a = (-c + r.range[1][1]) * r.scale[1],
                            e) {
                                const e = r.unscalePoint([o, a]);
                                t.visibleShape.moveTo(e),
                                t.mouseTarget.moveTo(e),
                                t.coord = [l, c],
                                t.updateLineEnds(),
                                ke()(t).trigger("move")
                            }
                            t.drawLabel()
                        } else if ("vmouseup" === n.type) {
                            if (ke()(document).unbind(".point"),
                            t.dragging = !1,
                            jr = !1,
                            ve().isFunction(t.onMoveEnd)) {
                                const e = t.onMoveEnd(l, c);
                                if (ve().isArray(e)) {
                                    l = e[0],
                                    c = e[1],
                                    o = (l - r.range[0][0]) * r.scale[0],
                                    a = (-c + r.range[1][1]) * r.scale[1];
                                    const n = r.unscalePoint([o, a]);
                                    t.visibleShape.moveTo(n),
                                    t.mouseTarget.moveTo(n),
                                    t.coord = [l, c]
                                }
                            }
                            t.highlight || (t.visibleShape.animate(t.normalStyle, 50),
                            t.onUnhighlight && t.onUnhighlight())
                        }
                    }
                    ))
                }
                ,
                t.visible && !t.constraints.fixed) {
                    if (!t.mouseTarget) {
                        const e = r.unscaleVector(16)
                          , n = {
                            mouselayer: !0,
                            padding: 0,
                            disableMouseEventsOnWrapper: !0,
                            interactiveKindForTesting: "movable-point"
                        };
                        t.mouseTarget = new Sr(r,t.coord,e,n),
                        t.mouseTarget.attr({
                            fill: "#000",
                            opacity: 0
                        })
                    }
                    const e = ke()(t.mouseTarget.getMouseTarget());
                    e.css("cursor", "move"),
                    e.bind("vmousedown vmouseover vmouseout", (function(e) {
                        if ("vmouseover" === e.type)
                            t.highlight = !0,
                            jr || (t.visibleShape.animate(t.highlightStyle, 50),
                            t.onHighlight && t.onHighlight());
                        else if ("vmouseout" === e.type)
                            t.highlight = !1,
                            t.dragging || jr || (t.visibleShape.animate(t.normalStyle, 50),
                            t.onUnhighlight && t.onUnhighlight());
                        else if ("vmousedown" === e.type && (1 === e.which || 0 === e.which)) {
                            e.preventDefault();
                            const n = t.coord
                              , i = r.getMouseCoord(e)
                              , s = !("ontouchstart"in window) ? [0, 0] : Re.xr.subtract(n, i);
                            t.grab(s)
                        }
                    }
                    ))
                }
                return t.moveTo = function(e, n, r) {
                    const i = 5 * fr.getDistance(this.graph.scalePoint([e, n]), this.graph.scalePoint(this.coord))
                      , s = r && function(e) {
                        t.coord = e,
                        t.updateLineEnds()
                    }
                    ;
                    this.visibleShape.animateTo([e, n], i, s),
                    this.mouseTarget.animateTo([e, n], i, s),
                    this.coord = [e, n],
                    ve().isFunction(this.onMove) && this.onMove(e, n)
                }
                ,
                t.updateLineEnds = function() {
                    ke()(this.lineStarts).each((function() {
                        this.coordA = t.coord,
                        this.transform()
                    }
                    )),
                    ke()(this.lineEnds).each((function() {
                        this.coordZ = t.coord,
                        this.transform()
                    }
                    )),
                    ke()(this.polygonVertices).each((function() {
                        this.transform()
                    }
                    ))
                }
                ,
                t.setCoord = function(e) {
                    this.visible && (this.visibleShape.moveTo(e),
                    null != this.mouseTarget && this.mouseTarget.moveTo(e)),
                    this.coord = e.slice()
                }
                ,
                t.setCoordConstrained = function(e) {
                    this.setCoord(i(e))
                }
                ,
                t.toBack = function() {
                    this.visible && (null != this.mouseTarget && this.mouseTarget.toBack(),
                    this.visibleShape.toBack())
                }
                ,
                t.toFront = function() {
                    this.visible && (null != this.mouseTarget && this.mouseTarget.toFront(),
                    this.visibleShape.toFront())
                }
                ,
                t.remove = function() {
                    this.visibleShape && this.visibleShape.remove(),
                    this.mouseTarget && this.mouseTarget.remove(),
                    this.labeledVertex && this.labeledVertex.remove()
                }
                ,
                t
            },
            addMovableLineSegment: function(e) {
                const t = ke().extend({
                    graph: this,
                    coordA: [0, 0],
                    coordZ: [1, 1],
                    snapX: 0,
                    snapY: 0,
                    fixed: !1,
                    ticks: 0,
                    normalStyle: {},
                    highlightStyle: {
                        stroke: Qn.INTERACTING,
                        "stroke-width": 6
                    },
                    labelStyle: {
                        stroke: Qn.INTERACTIVE,
                        color: Qn.INTERACTIVE
                    },
                    highlight: !1,
                    dragging: !1,
                    tick: [],
                    extendLine: !1,
                    extendRay: !1,
                    constraints: {
                        fixed: !1,
                        constrainX: !1,
                        constrainY: !1
                    },
                    sideLabel: "",
                    vertexLabels: [],
                    numArrows: 0,
                    numTicks: 0,
                    movePointsWithLine: !1
                }, e)
                  , n = t.fixed ? Qn.DYNAMIC : Qn.INTERACTIVE;
                t.normalStyle = ve().extend({}, {
                    "stroke-width": 2,
                    stroke: n
                }, e.normalStyle),
                t.arrowStyle = ve().extend({}, t.normalStyle, {
                    color: t.normalStyle.stroke
                }),
                void 0 !== e.pointA ? (t.coordA = e.pointA.coord,
                t.pointA.lineStarts.push(t)) : void 0 !== e.coordA && (t.coordA = e.coordA.slice()),
                void 0 !== e.pointZ ? (t.coordZ = e.pointZ.coord,
                t.pointZ.lineEnds.push(t)) : void 0 !== e.coordA && (t.coordA = t.coordA.slice());
                const r = t.graph;
                r.style(t.normalStyle);
                for (let e = 0; e < t.ticks; ++e)
                    t.tick[e] = Kr;
                let i = fr.unscaledSvgPath([[0, 0], [1, 0]]);
                for (let e = 0; e < t.ticks; ++e) {
                    const n = .5 - (t.ticks - 1 + 2 * e) / r.scale[0];
                    i += fr.unscaledSvgPath([[n, -7], [n, 7]])
                }
                if (e = {
                    thickness: Math.max(t.normalStyle["stroke-width"], t.highlightStyle["stroke-width"])
                },
                t.visibleLine = new Mr(r,[0, 0],[1, 0],e),
                t.visibleLine.attr(t.normalStyle),
                !t.fixed) {
                    const e = {
                        thickness: 30,
                        mouselayer: !0,
                        interactiveKindForTesting: "movable-line"
                    };
                    t.mouseTarget = new Mr(r,[0, 0],[1, 0],e),
                    t.mouseTarget.attr({
                        fill: "#000",
                        opacity: 0
                    })
                }
                if (t.transform = function(e) {
                    e && ("object" == typeof this.pointA && (this.coordA = this.pointA.coord),
                    "object" == typeof this.pointZ && (this.coordZ = this.pointZ.coord));
                    const n = function(e, n, r) {
                        const i = (e = t.graph).range[0][1] - e.range[0][0] + (e.range[1][1] - e.range[1][0])
                          , s = e.unscaleVector(Re.xr.cartFromPolarDeg(1, r))
                          , o = Re.xr.scale(Re.xr.normalize(s), i)
                          , a = Re.xr.add(n, o)
                          , l = Re.xr.polarDegFromCart(s)[1];
                        return e.constrainToBoundsOnAngle(a, 4, l * Math.PI / 180)
                    }
                      , i = function(e) {
                        const t = e.graph.scalePoint(e.coordA)
                          , n = e.graph.scalePoint(e.coordZ);
                        return Re.xr.polarDegFromCart(Re.xr.subtract(n, t))[1]
                    }(this);
                    let s = this.coordA
                      , o = this.coordZ;
                    this.extendLine ? (s = n(r, s, 360 - i),
                    o = n(r, o, (540 - i) % 360)) : this.extendRay && (o = n(r, s, 360 - i));
                    const a = [this.visibleLine];
                    this.fixed || a.push(this.mouseTarget),
                    ve().each(a, (function(e) {
                        e.moveTo(s, o)
                    }
                    )),
                    null == this._arrows && (this._arrows = [],
                    this.extendLine ? (this._arrows.push(new xr(r,this.normalStyle)),
                    this._arrows.push(new xr(r,this.normalStyle))) : this.extendRay && this._arrows.push(new xr(r,this.normalStyle)));
                    const l = [this.coordA, this.coordZ]
                      , c = [360 - i, (540 - i) % 360];
                    ve().each(this._arrows, (function(e, t) {
                        e.toCoordAtAngle(l[t], c[t])
                    }
                    )),
                    ve().invoke(this.temp, "remove"),
                    this.temp = [];
                    const h = this.coordA[0] < this.coordZ[0] || this.coordA[0] === this.coordZ[0] && this.coordA[1] > this.coordZ[1];
                    this.sideLabel && this.temp.push(this.graph.labelSide({
                        point1: this.coordA,
                        point2: this.coordZ,
                        label: this.labeledSide,
                        text: this.sideLabel,
                        numArrows: this.numArrows,
                        numTicks: this.numTicks,
                        clockwise: h,
                        style: this.labelStyle
                    })),
                    this.vertexLabels.length && (this.graph.labelVertex({
                        vertex: this.coordA,
                        point3: this.coordZ,
                        label: this.labeledVertices[0],
                        text: this.vertexLabels[0],
                        clockwise: h,
                        style: this.labelStyle
                    }),
                    this.graph.labelVertex({
                        point1: this.coordA,
                        vertex: this.coordZ,
                        label: this.labeledVertices[1],
                        text: this.vertexLabels[1],
                        clockwise: h,
                        style: this.labelStyle
                    })),
                    this.temp = ve().flatten(this.temp)
                }
                ,
                t.toBack = function() {
                    t.fixed || t.mouseTarget.toBack(),
                    t.visibleLine.toBack()
                }
                ,
                t.toFront = function() {
                    t.fixed || t.mouseTarget.toFront(),
                    t.visibleLine.toFront()
                }
                ,
                t.remove = function() {
                    t.fixed || t.mouseTarget.remove(),
                    t.visibleLine.remove(),
                    t.labeledSide && t.labeledSide.remove(),
                    t.labeledVertices && ve().invoke(t.labeledVertices, "remove"),
                    t._arrows && ve().invoke(t._arrows, "remove"),
                    t.temp.length && ve().invoke(t.temp, "remove")
                }
                ,
                t.hide = function() {
                    t.visibleLine.hide(),
                    t.temp.length && ve().invoke(t.temp, "hide"),
                    t._arrows && ve().invoke(t._arrows, "hide")
                }
                ,
                t.show = function() {
                    t.visibleLine.show(),
                    t.temp.length && ve().invoke(t.temp, "show"),
                    t._arrows && ve().invoke(t._arrows, "show")
                }
                ,
                t.sideLabel && (t.labeledSide = this.label([0, 0], "", "center", t.labelStyle)),
                t.vertexLabels.length && (t.labeledVertices = ve().map(t.vertexLabels, (function(e) {
                    return this.label([0, 0], "", "center", t.labelStyle)
                }
                ), this)),
                !t.fixed && !t.constraints.fixed) {
                    const e = ke()(t.mouseTarget.getMouseTarget());
                    e.css("cursor", "move"),
                    e.bind("vmousedown vmouseover vmouseout", (function(e) {
                        if ("vmouseover" === e.type)
                            jr || (t.highlight = !0,
                            t.visibleLine.animate(t.highlightStyle, 50),
                            t.arrowStyle = ve().extend({}, t.arrowStyle, {
                                color: t.highlightStyle.stroke,
                                stroke: t.highlightStyle.stroke
                            }),
                            t.transform());
                        else if ("vmouseout" === e.type)
                            t.highlight = !1,
                            t.dragging || (t.visibleLine.animate(t.normalStyle, 50),
                            t.arrowStyle = ve().extend({}, t.arrowStyle, {
                                color: t.normalStyle.stroke,
                                stroke: t.normalStyle.stroke
                            }),
                            t.transform());
                        else if ("vmousedown" === e.type && (1 === e.which || 0 === e.which)) {
                            e.preventDefault();
                            let n = (e.pageX - ke()(r.raphael.canvas.parentNode).offset().left) / r.scale[0] + r.range[0][0]
                              , i = r.range[1][1] - (e.pageY - ke()(r.raphael.canvas.parentNode).offset().top) / r.scale[1];
                            t.snapX > 0 && (n = Math.round(n / t.snapX) * t.snapX),
                            t.snapY > 0 && (i = Math.round(i / t.snapY) * t.snapY);
                            const s = [t.coordA[0] - n, t.coordA[1] - i]
                              , o = [t.coordZ[0] - n, t.coordZ[1] - i]
                              , a = -Math.min(r.scaleVector(s)[0], r.scaleVector(o)[0])
                              , l = Math.max(r.scaleVector(s)[0], r.scaleVector(o)[0])
                              , c = Math.max(r.scaleVector(s)[1], r.scaleVector(o)[1])
                              , h = -Math.min(r.scaleVector(s)[1], r.scaleVector(o)[1]);
                            ke()(document).bind("vmousemove.lineSegment vmouseup.lineSegment", (function(e) {
                                e.preventDefault(),
                                t.dragging = !0,
                                jr = !0;
                                let n = e.pageX - ke()(r.raphael.canvas.parentNode).offset().left
                                  , i = e.pageY - ke()(r.raphael.canvas.parentNode).offset().top;
                                n = Math.max(a + 10, Math.min(r.xpixels - 10 - l, n)),
                                i = Math.max(c + 10, Math.min(r.ypixels - 10 - h, i));
                                let p = n / r.scale[0] + r.range[0][0]
                                  , u = r.range[1][1] - i / r.scale[1];
                                if (t.snapX > 0 && (p = Math.round(p / t.snapX) * t.snapX),
                                t.snapY > 0 && (u = Math.round(u / t.snapY) * t.snapY),
                                "vmousemove" === e.type) {
                                    t.constraints.constrainX && (p = t.coordA[0] - s[0]),
                                    t.constraints.constrainY && (u = t.coordA[1] - s[1]);
                                    const e = p + s[0] - t.coordA[0]
                                      , n = u + s[1] - t.coordA[1];
                                    t.coordA = [p + s[0], u + s[1]],
                                    t.coordZ = [p + o[0], u + o[1]],
                                    t.transform(),
                                    t.movePointsWithLine && ("object" == typeof t.pointA && t.pointA.setCoord([t.pointA.coord[0] + e, t.pointA.coord[1] + n]),
                                    "object" == typeof t.pointZ && t.pointZ.setCoord([t.pointZ.coord[0] + e, t.pointZ.coord[1] + n])),
                                    ve().isFunction(t.onMove) && t.onMove(e, n)
                                } else
                                    "vmouseup" === e.type && (ke()(document).unbind(".lineSegment"),
                                    t.dragging = !1,
                                    jr = !1,
                                    t.highlight || (t.visibleLine.animate(t.normalStyle, 50),
                                    t.arrowStyle = ve().extend({}, t.arrowStyle, {
                                        color: t.normalStyle.stroke,
                                        stroke: t.normalStyle.stroke
                                    }),
                                    t.transform()),
                                    ve().isFunction(t.onMoveEnd) && t.onMoveEnd());
                                ke()(t).trigger("move")
                            }
                            ))
                        }
                    }
                    ))
                }
                return void 0 !== t.pointA && t.pointA.toFront(),
                void 0 !== t.pointZ && t.pointZ.toFront(),
                t.transform(),
                t
            },
            addMovablePolygon: function(e) {
                const t = this
                  , n = ke().extend({
                    snapX: 0,
                    snapY: 0,
                    fixed: !1,
                    constrainToGraph: !0,
                    normalStyle: {},
                    highlightStyle: {
                        stroke: Qn.INTERACTING,
                        "stroke-width": 2,
                        fill: Qn.INTERACTING,
                        "fill-opacity": .05
                    },
                    pointHighlightStyle: {
                        fill: Qn.INTERACTING,
                        stroke: Qn.INTERACTING
                    },
                    labelStyle: {
                        stroke: Qn.DYNAMIC,
                        "stroke-width": 1,
                        color: Qn.DYNAMIC
                    },
                    angleLabels: [],
                    showRightAngleMarkers: [],
                    sideLabels: [],
                    vertexLabels: [],
                    numArcs: [],
                    numArrows: [],
                    numTicks: [],
                    updateOnPointMove: !0,
                    closed: !0
                }, ve().omit(e, "points"))
                  , r = n.fixed ? Qn.DYNAMIC : Qn.INTERACTIVE;
                n.normalStyle = ve().extend({
                    "stroke-width": 2,
                    "fill-opacity": 0,
                    fill: r,
                    stroke: r
                }, e.normalStyle),
                n.points = e.points;
                const i = function(e) {
                    return !ve().isArray(e)
                };
                if (n.update = function() {
                    const e = n.points.length;
                    n.coords = ve().map(n.points, (function(e, t) {
                        return i(e) ? e.coord : e
                    }
                    )),
                    n.left = ve().min(ve().pluck(n.coords, 0)),
                    n.right = ve().max(ve().pluck(n.coords, 0)),
                    n.top = ve().max(ve().pluck(n.coords, 1)),
                    n.bottom = ve().min(ve().pluck(n.coords, 1));
                    let r = ve().map(n.coords, (function(e) {
                        return t.scalePoint(e)
                    }
                    ));
                    n.closed ? r.push(!0) : r = r.concat(ve().clone(r).reverse()),
                    n.path = fr.unscaledSvgPath(r),
                    ve().invoke(n.temp, "remove"),
                    n.temp = [];
                    const s = Lr(n.coords);
                    (n.angleLabels.length || n.showRightAngleMarkers.length) && ve().each(n.labeledAngles, (function(r, i) {
                        n.temp.push(t.labelAngle({
                            point1: n.coords[(i - 1 + e) % e],
                            vertex: n.coords[i],
                            point3: n.coords[(i + 1) % e],
                            label: r,
                            text: n.angleLabels[i],
                            showRightAngleMarker: n.showRightAngleMarkers[i],
                            numArcs: n.numArcs[i],
                            clockwise: s,
                            style: n.labelStyle
                        }))
                    }
                    )),
                    n.sideLabels.length && ve().each(n.labeledSides, (function(r, i) {
                        n.temp.push(t.labelSide({
                            point1: n.coords[i],
                            point2: n.coords[(i + 1) % e],
                            label: r,
                            text: n.sideLabels[i],
                            numArrows: n.numArrows[i],
                            numTicks: n.numTicks[i],
                            clockwise: s,
                            style: n.labelStyle
                        }))
                    }
                    )),
                    n.vertexLabels.length && ve().each(n.labeledVertices, (function(r, i) {
                        t.labelVertex({
                            point1: n.coords[(i - 1 + e) % e],
                            vertex: n.coords[i],
                            point3: n.coords[(i + 1) % e],
                            label: r,
                            text: n.vertexLabels[i],
                            clockwise: s,
                            style: n.labelStyle
                        })
                    }
                    )),
                    n.temp = ve().flatten(n.temp)
                }
                ,
                n.transform = function() {
                    n.update(),
                    n.visibleShape.attr({
                        path: n.path
                    }),
                    n.fixed || n.mouseTarget.attr({
                        path: n.path
                    })
                }
                ,
                n.remove = function() {
                    n.visibleShape.remove(),
                    n.fixed || n.mouseTarget.remove(),
                    n.labeledAngles && ve().invoke(n.labeledAngles, "remove"),
                    n.labeledSides && ve().invoke(n.labeledSides, "remove"),
                    n.labeledVertices && ve().invoke(n.labeledVertices, "remove"),
                    n.temp.length && ve().invoke(n.temp, "remove")
                }
                ,
                n.toBack = function() {
                    n.fixed || n.mouseTarget.toBack(),
                    n.visibleShape.toBack()
                }
                ,
                n.toFront = function() {
                    n.fixed || n.mouseTarget.toFront(),
                    n.visibleShape.toFront()
                }
                ,
                n.updateOnPointMove && ve().each(ve().filter(n.points, i), (function(e) {
                    e.polygonVertices.push(n)
                }
                )),
                n.coords = new Array(n.points.length),
                n.angleLabels.length) {
                    const e = Math.max(n.angleLabels.length, n.showRightAngleMarkers.length);
                    n.labeledAngles = ve().times(e, (function() {
                        return this.label([0, 0], "", "center", n.labelStyle)
                    }
                    ), this)
                }
                return n.sideLabels.length && (n.labeledSides = ve().map(n.sideLabels, (function(e) {
                    return this.label([0, 0], "", "center", n.labelStyle)
                }
                ), this)),
                n.vertexLabels.length && (n.labeledVertices = ve().map(n.vertexLabels, (function(e) {
                    return this.label([0, 0], "", "center", n.labelStyle)
                }
                ), this)),
                n.update(),
                n.visibleShape = t.raphael.path(n.path),
                n.visibleShape.attr(n.normalStyle),
                n.fixed || (n.mouseTarget = t.mouselayer.path(n.path),
                n.mouseTarget.attr({
                    fill: "#000",
                    opacity: 0,
                    cursor: "move"
                }),
                ke()(n.mouseTarget[0]).bind("vmousedown vmouseover vmouseout", (function(e) {
                    if ("vmouseover" === e.type)
                        jr && !n.dragging || (n.highlight = !0,
                        n.visibleShape.animate(n.highlightStyle, 50),
                        ve().each(ve().filter(n.points, i), (function(e) {
                            e.visibleShape.animate(n.pointHighlightStyle, 50)
                        }
                        )));
                    else if ("vmouseout" === e.type) {
                        if (n.highlight = !1,
                        !n.dragging) {
                            n.visibleShape.animate(n.normalStyle, 50);
                            const e = ve().filter(n.points, i);
                            ve().any(ve().pluck(e, "dragging")) || ve().each(e, (function(e) {
                                e.visibleShape.animate(e.normalStyle, 50)
                            }
                            ))
                        }
                    } else if ("vmousedown" === e.type && (1 === e.which || 0 === e.which)) {
                        e.preventDefault(),
                        ve().each(ve().filter(n.points, i), (function(e) {
                            e.dragging = !0
                        }
                        ));
                        let r = (e.pageX - ke()(t.raphael.canvas.parentNode).offset().left) / t.scale[0] + t.range[0][0]
                          , s = t.range[1][1] - (e.pageY - ke()(t.raphael.canvas.parentNode).offset().top) / t.scale[1];
                        n.snapX > 0 && (r = Math.round(r / n.snapX) * n.snapX),
                        n.snapY > 0 && (s = Math.round(s / n.snapY) * n.snapY);
                        let o = r
                          , a = s;
                        const l = n.coords.slice()
                          , c = (r - n.left) * t.scale[0]
                          , h = (n.right - r) * t.scale[0]
                          , p = (n.top - s) * t.scale[1]
                          , u = (s - n.bottom) * t.scale[1];
                        ke()(document).bind("vmousemove.polygon vmouseup.polygon", (function(e) {
                            e.preventDefault(),
                            n.dragging = !0,
                            jr = !0;
                            let d = e.pageX - ke()(t.raphael.canvas.parentNode).offset().left
                              , m = e.pageY - ke()(t.raphael.canvas.parentNode).offset().top;
                            n.constrainToGraph && (d = Math.max(c + 10, Math.min(t.xpixels - 10 - h, d)),
                            m = Math.max(p + 10, Math.min(t.ypixels - 10 - u, m)));
                            let f = d / t.scale[0] + t.range[0][0]
                              , g = t.range[1][1] - m / t.scale[1];
                            if (n.snapX > 0 && (f = Math.round(f / n.snapX) * n.snapX),
                            n.snapY > 0 && (g = Math.round(g / n.snapY) * n.snapY),
                            "vmousemove" === e.type) {
                                let e = f - r
                                  , t = g - s
                                  , c = !0;
                                if (ve().isFunction(n.onMove)) {
                                    const i = n.onMove(e, t);
                                    !1 === i ? c = !1 : ve().isArray(i) && (e = i[0],
                                    t = i[1],
                                    f = r + e,
                                    g = s + t)
                                }
                                const h = function(n) {
                                    return [l[n][0] + e, l[n][1] + t]
                                };
                                c && (ve().each(n.points, (function(e, t) {
                                    i(e) ? e.setCoord(h(t)) : n.points[t] = h(t)
                                }
                                )),
                                n.transform(),
                                ke()(n).trigger("move"),
                                o = f,
                                a = g)
                            } else if ("vmouseup" === e.type) {
                                ke()(document).unbind(".polygon");
                                const e = ve().filter(n.points, i);
                                ve().each(e, (function(e) {
                                    e.dragging = !1
                                }
                                )),
                                n.dragging = !1,
                                jr = !1,
                                n.highlight || (n.visibleShape.animate(n.normalStyle, 50),
                                ve().each(e, (function(e) {
                                    e.visibleShape.animate(e.normalStyle, 50)
                                }
                                ))),
                                ve().isFunction(n.onMoveEnd) && n.onMoveEnd(o - r, a - s)
                            }
                        }
                        ))
                    }
                }
                ))),
                ve().invoke(ve().filter(n.points, i), "toFront"),
                n
            },
            constrainToBounds: function(e, t) {
                const n = this.unscalePoint([t, this.ypixels - t])
                  , r = this.unscalePoint([this.xpixels - t, t]);
                return [Math.max(n[0], Math.min(r[0], e[0])), Math.max(n[1], Math.min(r[1], e[1]))]
            },
            constrainToBoundsOnAngle: function(e, t, n) {
                const r = this.unscalePoint([t, this.ypixels - t])
                  , i = this.unscalePoint([this.xpixels - t, t]);
                let s = e.slice();
                return s[0] < r[0] ? s = [r[0], s[1] + (r[0] - s[0]) * Math.tan(n)] : s[0] > i[0] && (s = [i[0], s[1] - (s[0] - i[0]) * Math.tan(n)]),
                s[1] < r[1] ? s = [s[0] + (r[1] - s[1]) / Math.tan(n), r[1]] : s[1] > i[1] && (s = [s[0] - (s[1] - i[1]) / Math.tan(n), i[1]]),
                s
            },
            addMovableAngle: function(e) {
                return new Xr(this,e)
            },
            addCircleGraph: function(e) {
                const t = this
                  , n = ke().extend({
                    center: [0, 0],
                    radius: 2,
                    snapX: .5,
                    snapY: .5,
                    snapRadius: .5,
                    minRadius: 1,
                    centerConstraints: {},
                    centerNormalStyle: {},
                    centerHighlightStyle: {
                        stroke: Qn.INTERACTING,
                        fill: Qn.INTERACTING
                    },
                    circleNormalStyle: {
                        stroke: Qn.INTERACTIVE,
                        "fill-opacity": 0
                    },
                    circleHighlightStyle: {
                        stroke: Qn.INTERACTING,
                        fill: Qn.INTERACTING,
                        "fill-opacity": .05
                    }
                }, e)
                  , r = n.centerConstraints.fixed ? Qn.DYNAMIC : Qn.INTERACTIVE
                  , i = e ? e.centerNormalStyle : null;
                n.centerNormalStyle = ve().extend({}, {
                    fill: r,
                    stroke: r
                }, i),
                n.centerPoint = t.addMovablePoint({
                    graph: t,
                    coord: n.center,
                    normalStyle: n.centerNormalStyle,
                    snapX: n.snapX,
                    snapY: n.snapY,
                    constraints: n.centerConstraints
                }),
                n.circ = t.circle(n.center, n.radius, n.circleNormalStyle),
                n.perim = t.mouselayer.circle(t.scalePoint(n.center)[0], t.scalePoint(n.center)[1], t.scaleVector(n.radius)[0]).attr({
                    "stroke-width": 20,
                    opacity: .002
                }),
                n.centerConstraints.fixed || ke()(n.centerPoint.mouseTarget.getMouseTarget()).on("vmouseover vmouseout", (function(e) {
                    n.centerPoint.highlight || n.centerPoint.dragging ? n.circ.animate(n.circleHighlightStyle, 50) : n.circ.animate(n.circleNormalStyle, 50)
                }
                )),
                n.toFront = function() {
                    n.circ.toFront(),
                    n.perim.toFront(),
                    n.centerPoint.visibleShape.toFront(),
                    n.centerConstraints.fixed || n.centerPoint.mouseTarget.toFront()
                }
                ,
                n.centerPoint.onMove = function(e, r) {
                    n.toFront(),
                    n.circ.attr({
                        cx: t.scalePoint(e)[0],
                        cy: t.scalePoint(r)[1]
                    }),
                    n.perim.attr({
                        cx: t.scalePoint(e)[0],
                        cy: t.scalePoint(r)[1]
                    }),
                    n.onMove && n.onMove(e, r)
                }
                ,
                ke()(n.centerPoint).on("move", (function() {
                    n.center = this.coord,
                    ke()(n).trigger("move")
                }
                )),
                n.setCenter = function(e, t) {
                    n.centerPoint.setCoord([e, t]),
                    n.centerPoint.onMove(e, t),
                    n.center = [e, t]
                }
                ,
                n.setRadius = function(e) {
                    n.radius = e,
                    n.perim.attr({
                        r: t.scaleVector(e)[0]
                    }),
                    n.circ.attr({
                        rx: t.scaleVector(e)[0],
                        ry: t.scaleVector(e)[1]
                    })
                }
                ,
                n.remove = function() {
                    n.centerPoint.remove(),
                    n.circ.remove(),
                    n.perim.remove()
                }
                ;
                const s = [[-1 * Math.PI, -.875 * Math.PI, "ew-resize"], [-.875 * Math.PI, -.625 * Math.PI, "nesw-resize"], [-.625 * Math.PI, -.375 * Math.PI, "ns-resize"], [-.375 * Math.PI, -.125 * Math.PI, "nwse-resize"], [-.125 * Math.PI, .125 * Math.PI, "ew-resize"], [.125 * Math.PI, .375 * Math.PI, "nesw-resize"], [.375 * Math.PI, .625 * Math.PI, "ns-resize"], [.625 * Math.PI, .875 * Math.PI, "nwse-resize"], [.875 * Math.PI, 1 * Math.PI, "ew-resize"]];
                return ke()(n.perim.node).on("vmousemove", (e => {
                    let[t,r] = this.getMouseCoord(e);
                    t -= n.center[0],
                    r -= n.center[1];
                    const i = Math.atan2(r, t);
                    s.forEach((function(e) {
                        const [t,r,s] = e;
                        i >= t && i < r && ke()(n.perim.node).css("cursor", s)
                    }
                    ))
                }
                )),
                ke()(n.perim.node).css("cursor", "nesw-resize"),
                n.perim.node.addEventListener("touchstart", (function(e) {
                    e.preventDefault()
                }
                ), {
                    passive: !1
                }),
                ke()(n.perim.node).on("vmouseover vmouseout vmousedown", (function(e) {
                    if ("vmouseover" === e.type)
                        n.highlight = !0,
                        jr || (n.circ.animate(n.circleHighlightStyle, 50),
                        n.centerPoint.visibleShape.animate(n.centerHighlightStyle, 50));
                    else if ("vmouseout" === e.type)
                        n.highlight = !1,
                        n.dragging || n.centerPoint.dragging || (n.circ.animate(n.circleNormalStyle, 50),
                        n.centerPoint.visibleShape.animate(n.centerNormalStyle, 50));
                    else if ("vmousedown" === e.type && (1 === e.which || 0 === e.which)) {
                        e.preventDefault(),
                        n.toFront();
                        const r = n.radius;
                        ke()(document).on("vmousemove vmouseup", (function(e) {
                            if (e.preventDefault(),
                            n.dragging = !0,
                            jr = !0,
                            "vmousemove" === e.type) {
                                const r = t.constrainToBounds(t.getMouseCoord(e), 10);
                                let i = fr.getDistance(n.centerPoint.coord, r);
                                i = Math.max(n.minRadius, Math.round(i / n.snapRadius) * n.snapRadius);
                                const s = n.radius;
                                let o = !0;
                                if (n.onResize) {
                                    const e = n.onResize(i, s);
                                    ve().isNumber(e) ? i = e : !1 === e && (o = !1)
                                }
                                o && (n.setRadius(i),
                                ke()(n).trigger("move"))
                            } else
                                "vmouseup" === e.type && (ke()(document).off("vmousemove vmouseup"),
                                n.dragging = !1,
                                jr = !1,
                                n.onResizeEnd && n.onResizeEnd(n.radius, r))
                        }
                        ))
                    }
                }
                )),
                n
            },
            addRotateHandle: function(e) {
                const t = this;
                let n = e.center;
                const r = e.radius
                  , i = e.lengthAngle || 30
                  , s = e.hideArrow || !1
                  , o = e.mouseTarget
                  , a = ve().uniqueId("rotateHandle");
                ve().isArray(n) && (n = {
                    coord: n
                });
                const l = t.addMovablePoint({
                    coord: Re.xm.addVector(n.coord, Re.xr.cartFromPolarDeg(r, e.angleDeg || 0)),
                    constraints: {
                        fixedDistance: {
                            dist: r,
                            point: n
                        }
                    },
                    mouseTarget: o
                });
                n.toFront();
                let c, h = n.coord, p = l.coord, u = p, d = !1, m = !1;
                const f = function(r) {
                    if (s)
                        return;
                    const o = Re.xr.subtract(r, n.coord)
                      , a = Re.xr.polarDegFromCart(o)[1];
                    c && c.remove(),
                    c = function(e, t, n, r, i, s, o) {
                        const a = function(r, i) {
                            const o = n + i
                              , a = Re.xr.cartFromPolarDeg(o, s + r)
                              , l = Re.xr.add(t, a)
                              , c = e.scalePoint(l);
                            return c[0] + "," + c[1]
                        }
                          , l = e.scaleVector(n - r)
                          , c = e.scaleVector(n + r);
                        return e.raphael.path(" M" + a(i, -r) + " L" + a(i, -3 * r) + " L" + a(2 * i, 0) + " L" + a(i, 3 * r) + " L" + a(i, r) + " A" + c[0] + "," + c[1] + ",0,0,1," + a(-i, r) + " L" + a(-i, 3 * r) + " L" + a(-2 * i, 0) + " L" + a(-i, -3 * r) + " L" + a(-i, -r) + " A" + l[0] + "," + l[1] + ",0,0,0," + a(i, -r) + " Z").attr({
                            stroke: null,
                            fill: o ? Qn.INTERACTING : Qn.INTERACTIVE
                        })
                    }(t, n.coord, e.radius, d || m ? e.hoverWidth / 2 : e.width / 2, i, a, d || m)
                };
                ke()(n).on("move." + a, (function() {
                    const e = Re.xr.subtract(n.coord, h);
                    l.setCoord(Re.xr.add(l.coord, e)),
                    f(l.coord),
                    h = n.coord,
                    l.constraints.fixedDistance.point = n,
                    p = l.coord
                }
                )),
                l.onMove = function(t, r) {
                    d || (u = p,
                    d = !0);
                    let i = [t, r];
                    if (e.onMove) {
                        const t = Re.xr.polarDegFromCart(Re.xr.subtract(p, n.coord))
                          , r = Re.xr.polarDegFromCart(Re.xr.subtract(i, n.coord))
                          , s = t[1]
                          , o = r[1];
                        let a = e.onMove(o, s);
                        null != a && !0 !== a && (!1 === a && (a = s),
                        i = Re.xr.add(n.coord, Re.xr.cartFromPolarDeg(t[0], a)))
                    }
                    return f(i),
                    p = i,
                    i
                }
                ,
                l.onMoveEnd = function() {
                    if (d = !1,
                    f(l.coord),
                    e.onMoveEnd) {
                        const t = Re.xr.polarDegFromCart(Re.xr.subtract(u, n.coord))
                          , r = Re.xr.polarDegFromCart(Re.xr.subtract(l.coord, n.coord));
                        e.onMoveEnd(r[1], t[1])
                    }
                }
                ,
                l.visibleShape.remove(),
                o || l.mouseTarget.attr({
                    scale: 2
                });
                const g = ke()(l.mouseTarget.getMouseTarget());
                g.bind("vmouseover", (function(e) {
                    m = !0,
                    f(l.coord)
                }
                )),
                g.bind("vmouseout", (function(e) {
                    m = !1,
                    f(l.coord)
                }
                )),
                f(l.coord);
                const v = l.remove;
                return l.remove = function() {
                    v.call(l),
                    c && c.remove(),
                    ke()(n).off("move." + a)
                }
                ,
                l.update = function() {
                    f(l.coord)
                }
                ,
                l
            },
            addReflectButton: function(e) {
                const t = this
                  , n = e.line
                  , r = t.addMovablePoint({
                    constraints: e.constraints,
                    coord: Re.jv.midpoint([n.pointA.coord, n.pointZ.coord]),
                    snapX: t.snap[0],
                    snapY: t.snap[1],
                    onMove: function(e, t) {
                        return !1
                    },
                    onMoveEnd: function(t, n) {
                        e.onMoveEnd && e.onMoveEnd.call(this, t, n)
                    }
                });
                let i, s = !1, o = !1;
                const a = function() {
                    return s
                }
                  , l = ve().map([0, 1], (function(t) {
                    const n = t ? e.highlightStyle : e.normalStyle;
                    return ve().map([0, 1], (function(e) {
                        return ve().defaults({
                            "fill-opacity": e
                        }, n)
                    }
                    ))
                }
                ))
                  , c = function(e) {
                    return o && (e = !e),
                    l[+a()][+e]
                }
                  , h = function(n, r) {
                    i && i.remove(),
                    i = function(e, t, n, r, i, s, o) {
                        Re.xm.equal(n[0], n[1]) && (n = [n[0], Re.xm.addVector(n[0], [1, 1])]);
                        const a = Re.xr.normalize(Re.xr.subtract(n[1], n[0]))
                          , l = Re.xr.scale(a, r / 2)
                          , c = Re.xr.scale(a, i)
                          , h = Re.xr.rotateDeg(c, 90)
                          , p = Re.xr.rotateDeg(c, -90)
                          , u = Re.xr.negate(l)
                          , d = Re.xr.rotateDeg(l, 90)
                          , m = Re.xr.rotateDeg(l, -90)
                          , f = Re.xm.addVectors(t, h)
                          , g = Re.xm.addVectors(t, p)
                          , v = Re.xm.addVectors(t, h, l, d)
                          , y = Re.xm.addVectors(t, h, u, d)
                          , b = Re.xm.addVectors(t, p, l, m)
                          , x = Re.xm.addVectors(t, p, u, m)
                          , w = e.path([f, v, y, !0], s)
                          , k = e.path([g, b, x, !0], o);
                        return {
                            remove: function() {
                                w.remove(),
                                k.remove()
                            }
                        }
                    }(t, n, r, a() ? 1.5 * e.size : e.size, a() ? .125 * e.size : .25, c(0), c(1))
                }
                  , p = function(e, t) {
                    e = e || n.pointA.coord,
                    t = t || n.pointZ.coord;
                    const i = Re.jv.midpoint([e, t]);
                    r.setCoord(i),
                    h(i, [e, t])
                };
                ke()(n).on("move", ve().bind(p, r, null, null));
                const u = ke()(r.mouseTarget.getMouseTarget());
                u.on("vclick", (function() {
                    !1 !== e.onClick() && (o = !o,
                    h(r.coord, [n.pointA.coord, n.pointZ.coord]))
                }
                )),
                n.pointA.toFront(),
                n.pointZ.toFront(),
                r.visibleShape.remove();
                const d = t.scaleVector(e.size)[0] / 20;
                r.mouseTarget.attr({
                    scale: 1.5 * d
                }),
                u.css("cursor", "pointer"),
                u.bind("vmouseover", (function(e) {
                    s = !0,
                    h(r.coord, [n.pointA.coord, n.pointZ.coord])
                }
                )),
                u.bind("vmouseout", (function(e) {
                    s = !1,
                    h(r.coord, [n.pointA.coord, n.pointZ.coord])
                }
                ));
                const m = r.remove;
                return r.remove = function() {
                    i.remove(),
                    m.call(r)
                }
                ,
                r.update = p,
                r.isFlipped = function() {
                    return o
                }
                ,
                p(),
                r
            },
            protractor: function(e) {
                return new Zr(this,e)
            },
            ruler: function(e) {
                return new Yr(this,e || {})
            },
            addPoints: Re.xr.add
        }),
        ve().extend(Xr.prototype, {
            points: [],
            snapDegrees: 0,
            snapOffsetDeg: 0,
            angleLabel: "",
            numArcs: 1,
            pushOut: 0,
            fixed: !1,
            addMoveHandlers: function() {
                const e = this.graphie;
                function t(t, n) {
                    return fr.getDistance(e.scalePoint(t), e.scalePoint(n)) < 30
                }
                const n = this.points;
                n[1].onMove = function(r, i) {
                    const s = n[1].coord
                      , o = [r, i]
                      , a = Re.xr.add(o, Or(s));
                    let l = !0;
                    const c = {};
                    return ve().each([0, 2], (function(r) {
                        const i = n[r].coord;
                        let s = Re.xr.add(i, a)
                          , h = fr.findAngleDeprecated(o, s);
                        h *= Math.PI / 180,
                        s = e.constrainToBoundsOnAngle(s, 10, h),
                        c[r] = s,
                        t(o, s) && (l = !1)
                    }
                    )),
                    l && ve().each(c, (function(e, t) {
                        n[t].setCoord(e)
                    }
                    )),
                    l
                }
                ;
                const r = this.snapDegrees
                  , i = this.snapOffsetDeg;
                ve().each([0, 2], (function(e) {
                    n[e].onMove = function(e, s) {
                        const o = [e, s]
                          , a = n[1].coord;
                        if (t(a, o))
                            return !1;
                        if (r) {
                            let e = fr.findAngleDeprecated(o, a);
                            e = Math.round((e - i) / r) * r + i;
                            const t = fr.getDistance(o, a);
                            return Re.xr.add(a, ar(t, e))
                        }
                        return !0
                    }
                }
                )),
                ke()(n).on("move", function() {
                    this.update(),
                    ke()(this).trigger("move")
                }
                .bind(this))
            },
            addHighlightHandlers: function() {
                const e = this.points[1];
                e.onHighlight = function() {
                    ve().each(this.points, (function(e) {
                        e.visibleShape.animate(this.highlightStyle, 50)
                    }
                    ), this),
                    ve().each(this.rays, (function(e) {
                        e.visibleLine.animate(this.highlightStyle, 50),
                        e.arrowStyle = ve().extend({}, e.arrowStyle, {
                            color: this.highlightStyle.stroke,
                            stroke: this.highlightStyle.stroke
                        })
                    }
                    ), this),
                    this.angleStyle = ve().extend({}, this.angleStyle, {
                        color: this.highlightStyle.stroke,
                        stroke: this.highlightStyle.stroke
                    }),
                    this.update()
                }
                .bind(this),
                e.onUnhighlight = function() {
                    ve().each(this.points, (function(e) {
                        e.visibleShape.animate(this.normalStyle, 50)
                    }
                    ), this),
                    ve().each(this.rays, (function(e) {
                        e.visibleLine.animate(e.normalStyle, 50),
                        e.arrowStyle = ve().extend({}, e.arrowStyle, {
                            color: e.normalStyle.stroke,
                            stroke: e.normalStyle.stroke
                        })
                    }
                    ), this),
                    this.angleStyle = ve().extend({}, this.angleStyle, {
                        color: Qn.DYNAMIC,
                        stroke: Qn.DYNAMIC
                    }),
                    this.update()
                }
                .bind(this)
            },
            _getClockwiseAngle: function(e) {
                return fr.findAngleDeprecated(e[2], e[0], e[1]) + 0
            },
            isReflex: function() {
                return this.reflex
            },
            isClockwise: function() {
                return this._getClockwiseAngle(this.coords) > 180 === this.reflex
            },
            getClockwiseCoords: function() {
                return this.isClockwise() ? ve().clone(this.coords) : ve().clone(this.coords).reverse()
            },
            update: function(e) {
                const t = this.coords;
                this.coords = ve().pluck(this.points, "coord"),
                ve().invoke(this.points, "updateLineEnds");
                const n = this._getClockwiseAngle(t)
                  , r = this._getClockwiseAngle(this.coords)
                  , i = n > 180
                  , s = r > 180;
                this.allowReflex && (null == e && (e = i !== s && Math.abs(r - n) < 180),
                e && (this.reflex = !this.reflex)),
                ve().invoke(this.temp, "remove"),
                this.temp = this.graphie.labelAngle({
                    point1: this.coords[0],
                    vertex: this.coords[1],
                    point3: this.coords[2],
                    label: this.labeledAngle,
                    text: this.angleLabel,
                    numArcs: this.numArcs,
                    pushOut: this.pushOut,
                    clockwise: this.reflex === s,
                    style: this.angleStyle
                })
            },
            remove: function() {
                ve().invoke(this.rays, "remove"),
                ve().invoke(this.temp, "remove"),
                this.labeledAngle.remove()
            }
        });
        const Jr = vn.nestedMap
          , Qr = vn.deepEq;
        function ei(e) {
            ve().extend(this, e)
        }
        const ti = function() {
            throw new s.uI("Abstract method! Must be implemented by Graphie Movable" + this.constructor.displayName,s.D1.NotAllowed)
        };
        ve().extend(ei.prototype, {
            movableProps: [],
            add: ti,
            modify: ti,
            remove: ti,
            toFront: function() {},
            componentDidMount: function() {}
        });
        const ni = function(e) {
            const t = function e(t) {
                if (!(this instanceof e))
                    throw new s.uI("Use createElement or JSX with graphie movables",s.D1.NotAllowed);
                return this.props = function(e, t) {
                    return ve().extend({}, e, {
                        children: ve().filter(ve().flatten(t), ve().identity)
                    })
                }(t, t.children || []),
                this
            };
            return e.displayName = e.displayName || ve().uniqueId("GraphieClass"),
            t.displayName = e.displayName,
            (t.prototype = new ei(e)).constructor = t,
            t
        };
        var ri = {
            GraphieMovable: ei,
            createClass: ni,
            createSimpleClass: function(e) {
                return ni({
                    displayName: e.name || ve().uniqueId("GraphieSimpleClass"),
                    movableProps: ["children"],
                    add: function(t) {
                        this._elements = e(t, this.props),
                        this._prevProps = this.props
                    },
                    modify: function(e) {
                        if (!Qr(this.props, this._prevProps))
                            return this.remove(),
                            this.add(e),
                            this._prevProps = this.props,
                            "reordered"
                    },
                    remove: function() {
                        Jr(this._elements, (e => {
                            e && e.remove()
                        }
                        )),
                        this._elements = null,
                        this._prevProps = null
                    },
                    toFront: function() {
                        Jr(this._elements, (e => {
                            ve().isFunction(e.toFront) && e.toFront()
                        }
                        ))
                    }
                })
            }
        };
        const si = Kn.normalizeOptions
          , oi = Kn.assert
          , ai = {
            cursor: null
        }
          , li = {
            added: !1,
            isHovering: !1,
            isMouseOver: !1,
            isDragging: !1,
            mouseTarget: null
        };
        class ci {
            constructor(e, t) {
                this.graphie = void 0,
                this.state = void 0,
                this.prevState = void 0,
                this._listenerMap = {},
                this.graphie = e,
                this.state = {
                    id: ve().uniqueId("movable")
                },
                this.modify(nt({}, li, t))
            }
            modify(e) {
                this.update(nt({}, this._createDefaultState(), e))
            }
            _createDefaultState() {
                return nt({
                    id: this.state.id,
                    add: [],
                    modify: [],
                    draw: [],
                    remove: [],
                    onMoveStart: [],
                    onMove: [],
                    onMoveEnd: [],
                    onClick: []
                }, ai)
            }
            update(e) {
                const t = this.graphie
                  , n = this.cloneState()
                  , r = Object.assign(this.state, si(e));
                if (r.mouseTarget && !n.mouseTarget) {
                    let e;
                    e = r.mouseTarget.getMouseTarget ? ke()(r.mouseTarget.getMouseTarget()) : ke()(r.mouseTarget[0]);
                    !("ontouchstart"in window) && (e.on("vmouseover", ( () => {
                        r.isMouseOver = !0,
                        t.isDragging || (r.isHovering = !0),
                        this.state.added && this.draw()
                    }
                    )),
                    e.on("vmouseout", ( () => {
                        r.isMouseOver = !1,
                        r.isDragging || (r.isHovering = !1),
                        this.state.added && this.draw()
                    }
                    ))),
                    e[0].addEventListener("touchstart", (function(e) {
                        e.preventDefault()
                    }
                    ), {
                        passive: !1
                    }),
                    e.on("vmousedown", (e => {
                        if (0 !== e.which && 1 !== e.which)
                            return;
                        e.preventDefault();
                        const n = t.getMouseCoord(e);
                        this.grab(n)
                    }
                    ))
                }
                if (r.mouseTarget && void 0 !== r.cursor) {
                    let e;
                    e = r.mouseTarget.getMouseTarget ? ke()(r.mouseTarget.getMouseTarget()) : ke()(r.mouseTarget[0]),
                    e.css("cursor", r.cursor || "")
                }
                r.added || (this._fireEvent(r.modify, this.cloneState(), {}),
                r.added = !0,
                this.prevState = this.cloneState()),
                this._fireEvent(r.modify, this.cloneState(), this.prevState)
            }
            cloneState() {
                return nt({}, this.state)
            }
            _fireEvent(e, ...t) {
                if (null != e)
                    for (const n of e)
                        n.call(this, ...t)
            }
            draw() {
                const e = this.cloneState();
                this._fireEvent(this.state.draw, e, this.prevState),
                this.prevState = e
            }
            grab(e) {
                oi(Re.xm.is(e));
                const t = this.graphie
                  , n = this.state;
                n.isHovering = !0,
                n.isDragging = !0,
                t.isDragging = !0;
                const r = e;
                let i = r;
                this._fireEvent(n.onMoveStart, r, r);
                const s = e => {
                    e.preventDefault();
                    const r = t.getMouseCoord(e);
                    this._fireEvent(n.onMove, r, i),
                    this.draw(),
                    i = r
                }
                  , o = () => {
                    ke()(document).unbind("vmousemove", s),
                    ke()(document).unbind("vmouseup", o),
                    n.isHovering && this._fireEvent(n.onClick, i, r),
                    n.isHovering = this.state.isMouseOver,
                    n.isDragging = !1,
                    t.isDragging = !1,
                    this._fireEvent(n.onMoveEnd, i, r),
                    this.draw()
                }
                ;
                ke()(document).bind("vmousemove", s),
                ke()(document).bind("vmouseup", o)
            }
            _applyConstraints(e, t, n) {
                var r;
                let i = !1;
                return (null != (r = this.state.constraints) ? r : []).reduce(( (e, r) => {
                    if (!1 === e)
                        return !1;
                    if (i)
                        return e;
                    const o = r.call(this, e, t, nt({
                        onSkipRemaining: () => {
                            i = !0
                        }
                    }, n));
                    if (!1 === o)
                        return !1;
                    if (Re.xm.is(o, 2))
                        return o;
                    if (!0 === o || null == o)
                        return e;
                    throw new s.uI("Constraint returned invalid result: " + o,s.D1.Internal)
                }
                ), e)
            }
            toBack() {
                this.state.mouseTarget && this.state.mouseTarget.toBack()
            }
            toFront() {
                this.state.mouseTarget && this.state.mouseTarget.toFront()
            }
            listen(e, t, n) {
                this._listenerMap = this._listenerMap || {};
                const r = hi(e, t)
                  , i = this._listenerMap[r] = this._listenerMap[r] || this.state[e].length;
                this.state[e][i] = n
            }
            unlisten(e, t) {
                this._listenerMap = this._listenerMap || {};
                const n = hi(e, t)
                  , r = this._listenerMap[n];
                if (void 0 !== r) {
                    this.state[e].splice(r, 1),
                    delete this._listenerMap[n];
                    ve().keys(this._listenerMap).forEach((t => {
                        (function(e) {
                            return e.split(":")[0]
                        }
                        )(t) === e && this._listenerMap[t] > r && this._listenerMap[t]--
                    }
                    ))
                }
            }
            remove() {
                this.state.added = !1,
                this._fireEvent(this.state.remove),
                this.state.mouseTarget && (ke()(this.state.mouseTarget).off(),
                this.state.mouseTarget.remove(),
                this.state.mouseTarget = null)
            }
            cursor() {
                return this.state.cursor
            }
            added() {
                return this.state.added
            }
            isHovering() {
                return this.state.isHovering
            }
            isMouseOver() {
                return this.state.isMouseOver
            }
            isDragging() {
                return this.state.isDragging
            }
            mouseTarget() {
                return this.state.mouseTarget
            }
        }
        function hi(e, t) {
            return e + ":" + t
        }
        const pi = function(e) {
            const t = e.graphie.scalePoint(e.coord(0))
              , n = e.graphie.scalePoint(e.coord(1));
            return Re.xr.polarDegFromCart(Re.xr.subtract(n, t))[1]
        }
          , ui = {
            draw: function() {
                this.draw()
            },
            pointsToFront: function(e) {
                ve().invoke(e.points, "toFront")
            }
        };
        ui.standard = [ui.draw, ui.pointsToFront];
        const di = {
            draw: function() {
                this.draw()
            }
        };
        di.standard = [di.draw];
        const mi = {
            basic: function(e) {
                const t = this.graphie;
                let n = this.coord(0)
                  , r = this.coord(1);
                if (!this.state.visibleShape) {
                    const e = {
                        thickness: 10
                    };
                    this.state.visibleShape = new Mr(t,n,r,e),
                    this.state.visibleShape.attr(this.normalStyle()),
                    this.state.visibleShape.toFront(),
                    this.mouseTarget() && this.mouseTarget().toFront()
                }
                const i = pi(this);
                e.extendLine ? (n = gr(t, n, 360 - i),
                r = gr(t, r, (540 - i) % 360)) : e.extendRay && (r = gr(t, r, 360 - i));
                const s = [this.state.visibleShape];
                this.mouseTarget() && s.push(this.mouseTarget()),
                ve().each(s, (function(e) {
                    e.moveTo(n, r)
                }
                ))
            },
            arrows: function(e) {
                null == this._arrows && (this._arrows = [],
                e.extendLine ? (this._arrows.push(new xr(this.graphie,this.normalStyle())),
                this._arrows.push(new xr(this.graphie,this.normalStyle()))) : e.extendRay && this._arrows.push(new xr(this.graphie,this.normalStyle())));
                const t = pi(this)
                  , n = [360 - t, (540 - t) % 360];
                ve().each(this._arrows, (function(e, t) {
                    e.toCoordAtAngle(this.coord(t), n[t])
                }
                ), this)
            },
            highlight: function(e, t) {
                e.isHovering && !t.isHovering ? e.visibleShape.animate(e.highlightStyle, 50) : !e.isHovering && t.isHovering && e.visibleShape.animate(e.normalStyle, 50)
            }
        };
        mi.standard = [mi.basic, mi.arrows, mi.highlight];
        const fi = {
            basic: function() {
                this.state.visibleShape && this.state.visibleShape.remove()
            },
            arrows: function() {
                null != this._arrows && ve().invoke(this._arrows, "remove"),
                this._arrows = null
            }
        };
        fi.standard = [fi.basic, fi.arrows];
        const gi = {
            fixed: function() {
                return function() {
                    return !1
                }
            },
            snap: function(e) {
                return function(t, n) {
                    if (null === e)
                        return !0;
                    let r = Re.xr.subtract(t, n);
                    return e = e || this.graphie.snap,
                    r = Re.xm.roundTo(r, e),
                    Re.xr.add(n, r)
                }
            },
            bound: function(e, t, n) {
                return void 0 === n && (n = void 0 === e ? 10 : 0),
                function(r, i) {
                    const s = this.graphie
                      , o = Re.xr.subtract(r, i);
                    e = e || s.range,
                    void 0 === t && (t = s.snap);
                    let a = s.unscalePoint([n, s.ypixels - n])
                      , l = s.unscalePoint([s.xpixels - n, n]);
                    t && (a = Re.xm.ceilTo(a, t),
                    l = Re.xm.floorTo(l, t));
                    const c = ve().map(this.coords(), (function(e, t) {
                        const n = Re.xr.subtract(l, e);
                        return [Re.xr.subtract(a, e), n]
                    }
                    ))
                      , h = ve().reduce(c, (function(e, t) {
                        const n = t[0]
                          , r = t[1];
                        return [Math.max(n[0], Math.min(r[0], e[0])), Math.max(n[1], Math.min(r[1], e[1]))]
                    }
                    ), o);
                    return Re.xr.add(i, h)
                }
            },
            standard: null
        }
          , vi = {
            updatePoints: function(e, t) {
                const n = Re.xr.subtract(e, t);
                ve().each(this.state.points, (function(e) {
                    e.setCoord(Re.xr.add(e.coord(), n))
                }
                ))
            },
            standard: null
        };
        var yi = {
            add: ui,
            modify: di,
            draw: mi,
            remove: fi,
            onMoveStart: {
                standard: null
            },
            constraints: gi,
            onMove: vi,
            onMoveEnd: {
                standard: null
            }
        };
        var bi = {
            pluck: function(e, t) {
                return ve().object(ve().map(e, (function(e, n) {
                    return [n, e[t]]
                }
                )))
            },
            mapObject: function(e, t) {
                const n = {};
                return ve().each(ve().keys(e), (function(r) {
                    n[r] = t(e[r], r)
                }
                )),
                n
            },
            mapObjectFromArray: function(e, t) {
                const n = {};
                return ve().each(e, (function(e) {
                    n[e] = t(e)
                }
                )),
                n
            }
        };
        const xi = Kn.assert
          , wi = Kn.normalizeOptions
          , ki = {
            points: null,
            static: !1,
            cursor: "move",
            normalStyle: null,
            highlightStyle: null,
            extendLine: !1,
            extendRay: !1
        }
          , Si = {
            visibleShape: null,
            mouseTarget: null
        }
          , Ei = function(e, t, n) {
            xi(null != e),
            xi(null != n),
            ve().extend(this, {
                graphie: e,
                movable: t,
                state: {
                    id: ve().uniqueId("movableLine")
                }
            }),
            this.modify(ve().extend({}, Si, n))
        };
        ve().extend(Ei, yi),
        Kn.createGettersFor(Ei, ve().extend({}, ki, Si)),
        Kn.addMovableHelperMethodsTo(Ei),
        ve().extend(Ei.prototype, {
            cloneState: function() {
                return ve().extend(this.movable.cloneState(), {
                    coords: this.coords()
                }, this.state)
            },
            _createDefaultState: function() {
                return ve().extend({
                    id: this.state.id
                }, wi(bi.pluck(yi, "standard")), ki)
            },
            modify: function(e) {
                this.update(ve().extend(this._createDefaultState(), e))
            },
            update: function(e) {
                const t = this
                  , n = this.graphie
                  , r = t.state = ve().extend(t.state, wi(e))
                  , i = r.static ? Qn.DYNAMIC : Qn.INTERACTIVE;
                if (r.normalStyle = ve().extend({
                    stroke: i,
                    "stroke-width": 2
                }, r.normalStyle),
                r.highlightStyle = ve().extend({
                    stroke: Qn.INTERACTING,
                    "stroke-width": 3
                }, r.highlightStyle),
                !r.static && !r.mouseTarget) {
                    const e = {
                        thickness: 30,
                        mouselayer: !0,
                        interactiveKindForTesting: "movable-line"
                    };
                    r.mouseTarget = new Mr(n,this.coord(0),this.coord(1),e),
                    r.mouseTarget.attr({
                        fill: "#000",
                        opacity: 0
                    })
                }
                r.static && r.mouseTarget && (r.mouseTarget.remove(),
                r.mouseTarget = null),
                t.movable.modify(ve().extend({}, r, {
                    mouseTarget: r.mouseTarget,
                    add: null,
                    modify: null,
                    draw: t.draw.bind(t),
                    remove: null,
                    onMoveStart: function() {
                        t._initialRefCoord = t.coord(0),
                        t._prevRefCoord = t._initialRefCoord,
                        t._totalDelta = [0, 0],
                        t._fireEvent(t.state.onMoveStart, t.coord(0), t.coord(0))
                    },
                    onMove: function(e, n) {
                        const r = Re.xr.subtract(e, n);
                        t._totalDelta = Re.xr.add(t._totalDelta, r);
                        let i = Re.xr.add(t._initialRefCoord, t._totalDelta);
                        i = t._applyConstraints(i, t._prevRefCoord),
                        !1 !== i && (t._fireEvent(t.state.onMove, i, t._prevRefCoord),
                        t._prevRefCoord = i)
                    },
                    onMoveEnd: function() {
                        t._fireEvent(t.state.onMoveEnd, t._prevRefCoord, t._initialRefCoord)
                    }
                })),
                r.added || (t.prevState = {},
                t._fireEvent(r.add, t.cloneState(), t.prevState),
                r.added = !0,
                ve().invoke(r.points, "listen", "onMove", r.id, t.draw.bind(t)),
                t.prevState = t.cloneState()),
                t._fireEvent(r.modify, t.cloneState(), t.prevState)
            },
            coords: function() {
                return ve().invoke(this.state.points, "coord")
            },
            point: function(e) {
                return this.state.points[e]
            },
            coord: function(e) {
                return this.point(e).coord()
            },
            remove: function() {
                this.state.added = !1,
                this._fireEvent(this.state.remove),
                this.points && ve().invoke(this.points, "unlisten", "onMove", this.state.id),
                this.movable && this.movable.remove()
            },
            toBack: function() {
                this.movable.toBack(),
                this.state.visibleShape && this.state.visibleShape.toBack()
            },
            toFront: function() {
                this.state.visibleShape && this.state.visibleShape.toFront(),
                this.movable.toFront()
            },
            isHovering: function() {
                return this.movable.isHovering()
            },
            isDragging: function() {
                return this.movable.isDragging()
            },
            mouseTarget: function() {
                return this.movable.mouseTarget()
            }
        });
        const Mi = ({path: e, width: t, height: n, style: r={}, title: i}) => me.createElement("svg", {
            role: "img",
            "aria-hidden": !i,
            style: nt({
                verticalAlign: "middle"
            }, r),
            width: t / n + "em",
            height: "1em",
            viewBox: `0 0 ${t} ${n}`
        }, !!i && me.createElement("title", null, i), me.createElement("path", {
            d: e,
            fill: "currentColor"
        }))
          , Ci = {
            path: "M8.70710678,12.2928932 C8.31658249,11.9023689 7.68341751,11.9023689 7.29289322,12.2928932 C6.90236893,12.6834175 6.90236893,13.3165825 7.29289322,13.7071068 L9.82842712,16.2426407 C10.2207367,16.6349502 10.8574274,16.6328935 11.2471942,16.2380576 L16.7116603,10.7025237 C17.0996535,10.3094846 17.0955629,9.67633279 16.7025237,9.28833966 C16.3094846,8.90034653 15.6763328,8.90443714 15.2883397,9.29747629 L10.5309507,14.1167372 L8.70710678,12.2928932 Z",
            width: 24,
            height: 24
        }
          , Ti = {
            path: "M99.669 13.048q0 3.36-2.352 5.712l-41.664 41.664q-2.408 2.408-5.88 2.408t-5.712-2.408l-41.664-41.664q-2.408-2.24-2.408-5.712t2.408-5.88l4.76-4.816q2.52-2.352 5.88-2.352t5.656 2.352l31.136 31.136 31.08-31.136q2.352-2.352 5.712-2.352t5.88 2.352l4.816 4.816q2.352 2.52 2.352 5.88z",
            width: 100,
            height: 63.034
        }
          , _i = {
            path: "M100.035 50.046q.057 13.623-6.669 25.137t-18.24 18.183-25.08 6.669-25.137-6.726q-11.514-6.726-18.183-18.183-6.726-11.571-6.726-25.137t6.726-25.08 18.24-18.24 25.08-6.669q13.566 0 25.08 6.726 11.514 6.669 18.24 18.183t6.669 25.137z",
            width: 100,
            height: 100
        }
          , Ai = {
            path: "M50.046 8.322q-8.493 0-16.188 3.306-15.561 6.669-22.173 22.23-3.363 7.695-3.363 16.188t3.306 16.188 8.949 13.281q5.586 5.586 13.281 8.892t16.188 3.306 16.188-3.306 13.281-8.892 8.892-13.281 3.306-16.188-3.306-16.188-8.892-13.281-13.281-8.949q-7.695-3.306-16.188-3.306zm0 91.713q-13.623 0-25.137-6.726t-18.183-18.183q-6.726-11.571-6.726-25.137t6.726-25.08 18.24-18.24 25.08-6.669q13.566 0 25.08 6.726 11.514 6.669 18.24 18.183t6.726 25.137-6.726 25.137-18.24 18.126q-11.514 6.726-25.08 6.726z",
            width: 100,
            height: 99.944
        }
          , Ii = {
            path: "M37.964 76.048q-2.576 0-4.368-1.792l-31.864-31.864q-1.792-1.792-1.792-4.368t1.792-4.368l8.736-8.68q1.792-1.792 4.368-1.792t4.312 1.792l18.816 18.872 42-42.056q1.792-1.792 4.368-1.792t4.312 1.792l8.736 8.736q1.792 1.792 1.792 4.368t-1.792 4.312l-55.048 55.048q-1.792 1.792-4.368 1.792z",
            width: 100,
            height: 76.637
        }
          , Ri = {
            path: "M100.464 80.808q0 3.404-2.368 5.772l-11.47 11.544q-2.368 2.368-5.772 2.368t-5.698-2.368l-24.864-24.864-24.864 24.864q-2.368 2.368-5.772 2.368t-5.772-2.368l-11.47-11.544q-2.368-2.368-2.368-5.772t2.368-5.698l24.864-24.864-24.864-24.864q-2.368-2.368-2.368-5.772t2.368-5.772l11.47-11.47q2.368-2.368 5.772-2.368t5.772 2.368l24.864 24.864 24.864-24.864q2.294-2.368 5.698-2.368t5.772 2.368l11.47 11.47q2.368 2.368 2.368 5.772t-2.368 5.772l-24.864 24.864 24.864 24.864q2.368 2.294 2.368 5.698z",
            width: 100,
            height: 100
        }
          , Ni = {
            path: "M15.1052249,9.55978547 L22.0028147,9.55978545 C23.6568673,9.55978545 23.9349557,10.3753626 22.6181351,11.3858845 L16.9943688,15.7015366 L19.2518801,22.8294455 C19.7526645,24.4106317 19.0984455,24.8825885 17.769353,23.8673293 L12.0490577,19.4977438 L6.5116497,23.8422153 C5.20921411,24.8640642 4.53299569,24.4067544 5.00266927,22.8160582 L7.10332364,15.7015366 L1.42794544,11.3634306 C0.110226041,10.3562014 0.383967283,9.54239221 2.0409646,9.54574013 L8.9924676,9.55978547 L11.1485117,2.72669438 C11.6458693,1.15043244 12.4548928,1.15900049 12.9494787,2.72669438 L15.1052249,9.55978547 Z",
            width: 24,
            height: 24
        }
          , Pi = {
            path: "M3.74890556,17.9799506 C2.19251241,16.1970909 1.10103636,13.4971457 1.13090903,11.1491783 C1.17160478,7.95052637 4.01704076,0.865059407 11.7028044,0.865059407 C19.388568,0.865059407 22.3026521,7.35203035 22.3026521,11.5879453 C22.3026521,15.8238603 19.386629,20.5574509 13.6832464,21.7131548 L13.6757539,17.3722171 C17.0812986,16.2190517 18.331158,14.1944123 18.3311578,11.5879451 C18.3311574,8.16554692 15.6664205,5.03476549 11.7028048,5.20494205 C7.73918903,5.37511861 5.59244567,8.66930079 5.59244567,11.1491783 C5.59244567,12.9090077 6.11128139,14.1753512 6.93640437,15.3053215 L8.14052356,14.2949456 C8.98559348,13.5858477 9.6994861,13.9070448 9.73489556,15.0076413 L9.91284941,20.5388014 C9.94832683,21.6415103 9.09967118,22.3514475 8.02194403,22.1254594 L2.60571602,20.9897332 C1.5259204,20.7633114 1.34338662,19.9984207 2.18070755,19.295825 L3.74890556,17.9799506 Z",
            width: 23,
            height: 23
        }
          , Oi = {
            path: "M31.293 37.506q2.052 0 2.052 2.109l0 37.506q0 1.995-2.052 2.109l-4.218 0q-.912-.057-1.482-.627t-.57-1.482l0-37.506q0-2.109 2.052-2.109l4.218 0zm18.753 2.109l0 37.506q0 .912-.57 1.482t-1.539.627l-4.161 0q-1.995 0-2.109-2.109l0-37.506q.057-.912.627-1.482t1.482-.627l4.161 0q.969.057 1.539.627t.57 1.482zm14.592-2.109q2.052 0 2.052 2.109l0 37.506q0 1.995-2.052 2.109l-4.161 0q-.969-.057-1.539-.627t-.57-1.482l0-37.506q0-2.109 2.109-2.109l4.161 0zm10.431 49.248l0-61.731l-58.368 0l0 61.731q.057 2.679.969 3.819t1.083 1.14l54.207 0q.171 0 1.14-1.083t.969-3.876zm-43.776-70.11l29.184 0l-3.135-7.581q-.456-.57-1.14-.741l-20.634 0q-.627.114-1.083.741zm-31.293 2.109q0-1.995 2.109-2.109l20.121 0l4.56-10.83q.969-2.394 3.477-4.104 2.565-1.71 5.187-1.71l20.805 0q2.622 0 5.187 1.71t3.477 4.104l4.56 10.83l20.178 0q.912.057 1.482.627t.57 1.482l0 4.161q0 1.995-2.052 2.109l-6.27 0l0 61.731q0 5.415-3.078 9.348t-7.353 3.933l-54.207 0q-4.275 0-7.353-3.819t-3.078-9.177l0-62.016l-6.213 0q-.969 0-1.539-.57t-.57-1.539l0-4.161z",
            width: 91.681,
            height: 100
        }
          , Li = {
            path: "M8,13 L16,13 C16.5522847,13 17,12.5522847 17,12 C17,11.4477153 16.5522847,11 16,11 L8,11 C7.44771525,11 7,11.4477153 7,12 C7,12.5522847 7.44771525,13 8,13 Z",
            width: 24,
            height: 24
        }
          , Di = {
            constrain: function() {
                this.constrain()
            }
        };
        Di.standard = [Di.constrain];
        const Fi = {
            draw: function() {
                this.draw()
            }
        };
        Fi.standard = [Fi.draw];
        const zi = {
            basic: function(e, t) {
                const n = this.graphie;
                if (!this.state.visibleShape) {
                    const t = [this.pointSize() / n.scale[0], this.pointSize() / n.scale[1]]
                      , r = {
                        maxScale: Math.max(this.highlightStyle().scale, this.normalStyle().scale),
                        padding: 10,
                        shadow: e.shadow
                    };
                    this.state.visibleShape = new Sr(n,this.coord(),t,r),
                    this.state.visibleShape.attr(ve().omit(this.normalStyle(), "scale")),
                    this.state.visibleShape.toFront(),
                    this.mouseTarget() && this.mouseTarget().toFront()
                }
                e.normalStyle === t.normalStyle || ve().isEqual(e.normalStyle, t.normalStyle) || this.state.visibleShape.attr(this.normalStyle()),
                this.state.visibleShape.moveTo(this.coord()),
                this.mouseTarget() && this.mouseTarget().moveTo(this.coord())
            },
            highlight: function(e, t) {
                e.isHovering && !t.isHovering ? e.visibleShape.animate(this.highlightStyle(), 50) : !e.isHovering && t.isHovering && e.visibleShape.animate(this.normalStyle(), 50)
            }
        };
        zi.standard = [zi.basic, zi.highlight];
        const Bi = {
            basic: function() {
                this.state.visibleShape && (this.state.visibleShape.remove(),
                this.state.visibleShape = null)
            }
        };
        Bi.standard = Bi.basic;
        const qi = {
            fixed: function() {
                return function() {
                    return !1
                }
            },
            snap: function(e) {
                return function(t) {
                    return null === e || Re.xm.roundTo(t, e || this.graphie.snap)
                }
            },
            bound: function(e, t, n) {
                const r = void 0 === n ? void 0 === e ? 10 : 0 : n;
                return function(n, i, s) {
                    const o = this.graphie;
                    e = e || o.range,
                    void 0 === t && (t = o.snap);
                    let a = o.unscalePoint([r, o.ypixels - r])
                      , l = o.unscalePoint([o.xpixels - r, r]);
                    if (t && (a = Re.xm.ceilTo(a, t),
                    l = Re.xm.floorTo(l, t)),
                    s && s.onOutOfBounds)
                        return (n[0] > l[0] || n[0] < a[0] || n[1] > l[1] || n[1] < a[1]) && (s.onSkipRemaining(),
                        s.onOutOfBounds()),
                        n;
                    return [Math.max(a[0], Math.min(l[0], n[0])), Math.max(a[1], Math.min(l[1], n[1]))]
                }
            },
            standard: null
        };
        var Hi = {
            add: Di,
            modify: Fi,
            draw: zi,
            remove: Bi,
            onMoveStart: {
                standard: null
            },
            constraints: qi,
            onMove: {
                standard: null
            },
            onMoveEnd: {
                standard: null
            },
            onClick: {
                standard: null
            }
        };
        const Ui = Kn.assert
          , Gi = Kn.normalizeOptions
          , {processMath: Wi} = sr
          , Vi = {
            coord: [0, 0],
            pointSize: 4,
            static: !1,
            cursor: "move",
            normalStyle: null,
            highlightStyle: null,
            shadow: !1,
            tooltip: !1
        }
          , $i = {
            added: !1,
            hasMoved: !1,
            visibleShape: null,
            outOfBounds: !1,
            mouseTarget: null,
            touchOffset: null
        }
          , ji = [];
        class Ki {
            constructor(e, t, n) {
                this.graphie = void 0,
                this.movable = void 0,
                this.state = void 0,
                this.prevState = void 0,
                this._tooltip = void 0,
                this._listenerMap = {},
                this.graphie = e,
                this.movable = t,
                this.state = {
                    id: ve().uniqueId("movablePoint")
                },
                this.modify(nt({}, $i, n))
            }
            modify(e) {
                this.update(ve().extend(this._createDefaultState(), e))
            }
            _createDefaultState() {
                return nt({
                    id: this.state.id
                }, Gi(bi.pluck(Hi, "standard")), Vi)
            }
            cloneState() {
                return nt({}, this.movable.cloneState(), this.state)
            }
            update(e) {
                const t = this
                  , n = t.graphie
                  , r = ve().extend(t.state, Gi(e));
                Ui(Re.xm.is(r.coord));
                const i = r.static ? Qn.DYNAMIC : Qn.INTERACTIVE;
                if (r.normalStyle = ve().extend({
                    fill: i,
                    stroke: i,
                    scale: 1
                }, r.normalStyle),
                r.highlightStyle = ve().extend({
                    fill: Qn.INTERACTING,
                    stroke: Qn.INTERACTING,
                    scale: 2
                }, r.highlightStyle),
                !r.static && !r.mouseTarget) {
                    const e = t.state.coord
                      , i = n.unscaleVector(24)
                      , s = {
                        mouselayer: !0,
                        padding: 0,
                        interactiveKindForTesting: "movable-point"
                    };
                    r.mouseTarget = new Sr(n,e,i,s),
                    r.mouseTarget.attr({
                        fill: "#000",
                        opacity: 0
                    })
                }
                const s = () => {
                    this._showTooltip((e => {
                        ir(me.createElement("span", {
                            style: {
                                fontSize: "2em"
                            }
                        }, me.createElement(Mi, nt({}, Oi, {
                            style: {
                                position: "static",
                                color: Qn.INTERACTIVE,
                                marginLeft: 9,
                                marginRight: 9
                            }
                        }))), e)
                    }
                    ))
                }
                ;
                let o = r.coord;
                t.movable.modify(ve().extend({}, r, {
                    add: null,
                    modify: null,
                    draw: t.draw.bind(t),
                    remove: null,
                    onMoveStart: e => {
                        if (r.hasMoved = !1,
                        o = r.coord,
                        null == r.touchOffset) {
                            const t = !("ontouchstart"in window);
                            r.touchOffset = t ? [0, 0] : Re.xr.subtract(o, e)
                        }
                        const n = r.visibleShape.wrapper;
                        if (r.shadow) {
                            const e = "none";
                            n.style.filter = e
                        }
                        if (r.showHairlines && r.showHairlines(r.coord),
                        ji.forEach((e => e())),
                        r.tooltip && (r.xOnlyTooltip ? this._showTooltip(`${r.coord[0]}`) : this._showTooltip(`(${r.coord[0]}, ${r.coord[1]})`),
                        r.shadow)) {
                            const e = "drop-shadow(0px 0px 5px rgba(0, 0, 0, 0.5))";
                            n.getElementsByClassName("tooltip-content")[0].style.filter = e
                        }
                        t._fireEvent(r.onMoveStart, o, o),
                        t.draw()
                    }
                    ,
                    onMove: (e, n) => {
                        const i = Re.xr.add(e, r.touchOffset);
                        t.moveTo(i),
                        r.showHairlines && (this.state.outOfBounds ? r.hideHairlines() : r.showHairlines(r.coord)),
                        r.tooltip && (this.state.outOfBounds || (r.xOnlyTooltip ? this._showTooltip(`${r.coord[0]}`) : this._showTooltip(`(${r.coord[0]}, ${r.coord[1]})`))),
                        r.onRemove && this.state.outOfBounds && s()
                    }
                    ,
                    onMoveEnd: () => {
                        t.isHovering() && !r.hasMoved && t._fireEvent(r.onClick, r.coord, o);
                        const e = r.visibleShape.wrapper;
                        if (r.shadow) {
                            const t = "drop-shadow(0px 0px 5px rgba(0, 0, 0, 0.5))";
                            e.style.filter = t
                        }
                        if (r.hideHairlines && r.hideHairlines(),
                        r.hasMoved)
                            this._hideTooltip();
                        else if (r.onRemove) {
                            s();
                            e.getElementsByClassName("tooltip-content")[0].style.filter = "none",
                            this._tooltip.firstChild.addEventListener("touchstart", (e => {
                                e.stopPropagation()
                            }
                            ), !0),
                            this._tooltip.firstChild.addEventListener("touchend", (e => {
                                r.onRemove(),
                                e.stopPropagation()
                            }
                            ), !0)
                        } else
                            r.tooltip && this._hideTooltip();
                        r.outOfBounds && r.onRemove(),
                        t._fireEvent(r.onMoveEnd, r.coord, o),
                        r.hasMoved = !1,
                        r.touchOffset = null,
                        t.draw()
                    }
                })),
                r.added || (t.prevState = {},
                t._fireEvent(r.add, t.cloneState(), t.prevState),
                r.added = !0,
                t.prevState = t.cloneState()),
                t._fireEvent(r.modify, t.cloneState(), t.prevState)
            }
            draw() {
                const e = this.cloneState();
                this._fireEvent(this.state.draw, e, this.prevState),
                this.prevState = e
            }
            constrain() {
                const e = this._applyConstraints(this.coord(), this.coord());
                return Re.xm.is(e) && this.setCoord(e),
                !1 !== e
            }
            _fireEvent(e, ...t) {
                for (const n of e)
                    n.call(this, ...t)
            }
            _applyConstraints(e, t, n) {
                let r = !1;
                return this.state.constraints.reduce(( (e, i) => {
                    if (!1 === e)
                        return !1;
                    if (r)
                        return e;
                    const o = i.call(this, e, t, nt({
                        onSkipRemaining: () => {
                            r = !0
                        }
                    }, n));
                    if (!1 === o)
                        return !1;
                    if (Re.xm.is(o, 2))
                        return o;
                    if (!0 === o || null == o)
                        return e;
                    throw new s.uI("Constraint returned invalid result: " + o,s.D1.Internal)
                }
                ), e)
            }
            _showTooltip(e) {
                this._tooltip || (this._tooltip = document.createElement("div"),
                this._tooltip.className = "tooltip-content",
                this.state.visibleShape.wrapper.className = "tooltip",
                this.state.visibleShape.wrapper.appendChild(this._tooltip),
                ji.push(( () => {
                    this.state.added && this._hideTooltip()
                }
                ))),
                this._tooltip.firstChild && this._tooltip.removeChild(this._tooltip.firstChild),
                this.state.visibleShape.wrapper.className = "tooltip visible",
                this._tooltip.appendChild(document.createElement("span")),
                "string" == typeof e ? Wi(this._tooltip.firstChild, e, !1) : "function" == typeof e ? e(this._tooltip.firstChild) : this._tooltip.firstChild.appendChild(e)
            }
            _hideTooltip() {
                this._tooltip && (this.state.visibleShape.wrapper.className = "tooltip")
            }
            coord() {
                return this.state.coord
            }
            setCoord(e) {
                Ui(Re.xm.is(e, 2)),
                this.state.coord = ve().clone(e),
                this.draw()
            }
            setCoordConstrained(e) {
                Ui(Re.xm.is(e, 2));
                const t = this._applyConstraints(e, this.coord());
                !1 !== t && (this.state.coord = ve().clone(t),
                this.draw())
            }
            listen(e, t, n) {
                this._listenerMap = this._listenerMap || {};
                const r = Zi(e, t)
                  , i = this._listenerMap[r] = this._listenerMap[r] || this.state[e].length;
                this.state[e][i] = n
            }
            unlisten(e, t) {
                this._listenerMap = this._listenerMap || {};
                const n = Zi(e, t)
                  , r = this._listenerMap[n];
                if (void 0 !== r) {
                    this.state[e].splice(r, 1),
                    delete this._listenerMap[n];
                    const t = ve().keys(this._listenerMap);
                    ve().each(t, (t => {
                        (function(e) {
                            return e.split(":")[0]
                        }
                        )(t) === e && this._listenerMap[t] > r && this._listenerMap[t]--
                    }
                    ), this)
                }
            }
            grab(e) {
                this.state.touchOffset = [0, 0],
                this.movable.grab(e),
                this.moveTo(e)
            }
            moveTo(e) {
                const t = this.state;
                this.state.outOfBounds = !1;
                const n = this._applyConstraints(e, t.coord, t.onRemove ? {
                    onOutOfBounds: () => {
                        this.state.outOfBounds = !0
                    }
                    ,
                    onSkipRemaining: () => {}
                } : {
                    onSkipRemaining: () => {}
                });
                if (!1 !== n && (Re.xm.is(n) && (e = n),
                !Re.xm.equal(e, t.coord))) {
                    const n = t.coord;
                    t.coord = e,
                    t.hasMoved = !0,
                    this._fireEvent(t.onMove, t.coord, n),
                    this.draw()
                }
            }
            remove() {
                this.state.added = !1,
                this._fireEvent(this.state.remove),
                this.movable && this.movable.remove(),
                this.state.mouseTarget = null
            }
            pointSize() {
                return this.state.pointSize
            }
            static() {
                return this.state.static
            }
            cursor() {
                return this.state.cursor
            }
            normalStyle() {
                return this.state.normalStyle
            }
            highlightStyle() {
                return this.state.highlightStyle
            }
            shadow() {
                return this.state.shadow
            }
            tooltip() {
                return this.state.tooltip
            }
            added() {
                return this.state.added
            }
            hasMoved() {
                return this.state.hasMoved
            }
            visibleShape() {
                return this.state.visibleShape
            }
            outOfBounds() {
                return this.state.outOfBounds
            }
            mouseTarget() {
                return this.state.mouseTarget
            }
            touchOffset() {
                return this.state.touchOffset
            }
            isHovering() {
                return this.movable.isHovering()
            }
            isDragging() {
                return this.movable.isDragging()
            }
            toBack() {
                this.movable.toBack(),
                this.state.visibleShape && this.state.visibleShape.toBack()
            }
            toFront() {
                this.state.visibleShape && this.state.visibleShape.toFront(),
                this.movable.toFront()
            }
        }
        function Zi(e, t) {
            return e + ":" + t
        }
        function Yi(e) {
            const t = ve().zip(e, e.slice(1).concat(e.slice(0, 1)));
            return function(e) {
                return ve().reduce(e, (function(e, t) {
                    return e + t
                }
                ), 0)
            }(ve().map(t, (function(e) {
                const t = e[0]
                  , n = e[1];
                return (n[0] - t[0]) * (n[1] + t[1])
            }
            ))) > 0
        }
        Ki.add = Hi.add,
        Ki.modify = Hi.modify,
        Ki.draw = Hi.draw,
        Ki.remove = Hi.remove,
        Ki.onMoveStart = Hi.onMoveStart,
        Ki.constraints = Hi.constraints,
        Ki.onMove = Hi.onMove,
        Ki.onMoveEnd = Hi.onMoveEnd,
        Ki.onClick = Hi.onClick;
        const Xi = {
            constrain: function() {
                this.constrain()
            },
            pointsToFront: function(e) {
                ve().invoke(e.points, "toFront")
            }
        };
        Xi.standard = [Xi.constrain, Xi.pointsToFront];
        const Ji = {
            draw: function() {
                this.draw()
            }
        };
        Ji.standard = [Ji.draw];
        const Qi = {
            basic: function(e, t) {
                const n = this.graphie
                  , r = this.path(e);
                this.state.visibleShape || (this.state.visibleShape = n.raphael.path(r),
                this.state.visibleShape.attr(this.normalStyle())),
                e.normalStyle === t.normalStyle || ve().isEqual(e.normalStyle, t.normalStyle) || this.state.visibleShape.attr(this.normalStyle()),
                this.state.visibleShape.attr({
                    path: r
                }),
                this.mouseTarget() && this.mouseTarget().attr({
                    path: r
                })
            },
            labels: function(e, t) {
                const n = this.graphie
                  , r = this
                  , i = ve().invoke(e.points, "coord")
                  , s = Yi(i)
                  , o = i.length;
                null != r.state._labelCache && ve().invoke(r.state._labelCache, "remove"),
                r.state._labelCache = [],
                (e.angleLabels.length || e.showRightAngleMarkers.length) && (null == r.state._labeledAngles && (r.state._labeledAngles = ve().times(Math.max(e.angleLabels.length, e.showRightAngleMarkers.length), (function() {
                    return n.label([0, 0], "", "center", e.labelStyle)
                }
                ))),
                ve().each(r.state._labeledAngles, (function(t, a) {
                    r.state._labelCache.push(n.labelAngle({
                        point1: i[(a - 1 + o) % o],
                        vertex: i[a],
                        point3: i[(a + 1) % o],
                        label: t,
                        text: e.angleLabels[a],
                        showRightAngleMarker: e.showRightAngleMarkers[a],
                        numArcs: e.numArcs[a],
                        clockwise: s,
                        style: e.labelStyle
                    }))
                }
                ))),
                e.sideLabels.length && (null == r.state._labeledSides && (r.state._labeledSides = ve().map(e.sideLabels, (function(t) {
                    return n.label([0, 0], "", "center", e.labelStyle)
                }
                ))),
                ve().each(r.state._labeledSides, (function(t, a) {
                    r.state._labelCache.push(n.labelSide({
                        point1: i[a],
                        point2: i[(a + 1) % o],
                        label: t,
                        text: e.sideLabels[a],
                        numArrows: e.numArrows[a],
                        numTicks: e.numTicks[a],
                        clockwise: s,
                        style: e.labelStyle
                    }))
                }
                ))),
                e.vertexLabels.length && (null == r.state._labeledVertices && (r.state._labeledVertices = ve().map(e.vertexLabels, (function(t) {
                    return n.label([0, 0], "", "center", e.labelStyle)
                }
                ))),
                ve().each(r.state._labeledVertices, (function(t, a) {
                    r.state._labelCache.push(n.labelVertex({
                        point1: i[(a - 1 + o) % o],
                        vertex: i[a],
                        point3: i[(a + 1) % o],
                        label: t,
                        text: e.vertexLabels[a],
                        clockwise: s,
                        style: e.labelStyle
                    }))
                }
                ))),
                r.state._labelCache = ve().flatten(r.state._labelCache)
            },
            highlight: function(e, t) {
                e.isHovering && !t.isHovering ? e.visibleShape.animate(this.highlightStyle(), 50) : !e.isHovering && t.isHovering && e.visibleShape.animate(this.normalStyle(), 50)
            }
        };
        Qi.standard = [Qi.basic, Qi.labels, Qi.highlight];
        const es = {
            basic: function() {
                this.state.visibleShape && this.state.visibleShape.remove()
            },
            labels: function() {
                const e = [this.state._labeledSides, this.state._labeledVertices, this.state._labeledAngles, this.state._labelCache];
                ve().each(e, (function(e) {
                    null != e && e.length && ve().invoke(e, "remove")
                }
                ))
            }
        };
        es.standard = [es.basic, es.labels];
        const ts = {
            fixed: function() {
                return function() {
                    return !1
                }
            },
            snap: function(e) {
                return function(t) {
                    return null === e || (e = e || this.graphie.snap,
                    Re.xm.roundTo(t, e))
                }
            },
            bound: function(e, t, n) {
                return void 0 === n && (n = void 0 === e ? 10 : 0),
                function(r, i) {
                    const s = this.graphie
                      , o = Re.xr.subtract(r, i);
                    e = e || s.range,
                    void 0 === t && (t = s.snap);
                    let a = s.unscalePoint([n, s.ypixels - n])
                      , l = s.unscalePoint([s.xpixels - n, n]);
                    t && (a = Re.xm.ceilTo(a, t),
                    l = Re.xm.floorTo(l, t));
                    const c = ve().map(this.coords(), (function(e, t) {
                        const n = Re.xr.subtract(l, e);
                        return [Re.xr.subtract(a, e), n]
                    }
                    ))
                      , h = ve().reduce(c, (function(e, t) {
                        const n = t[0]
                          , r = t[1];
                        return [Math.max(n[0], Math.min(r[0], e[0])), Math.max(n[1], Math.min(r[1], e[1]))]
                    }
                    ), o);
                    return Re.xr.add(i, h)
                }
            },
            standard: null
        }
          , ns = {
            updatePoints: function(e, t) {
                const n = Re.xr.subtract(e, t);
                ve().each(this.state.points, (function(e) {
                    e.setCoord(Re.xr.add(e.coord(), n))
                }
                ))
            },
            standard: null
        };
        var rs = {
            add: Xi,
            modify: Ji,
            draw: Qi,
            remove: es,
            onMoveStart: {
                standard: null
            },
            constraints: ts,
            onMove: ns,
            onMoveEnd: {
                standard: null
            },
            onClick: {
                standard: null
            }
        };
        const is = Kn.assert
          , ss = Kn.normalizeOptions
          , os = {
            points: null,
            angleLabels: [],
            showRightAngleMarkers: [],
            sideLabels: [],
            vertexLabels: [],
            numArcs: [],
            numArrows: [],
            numTicks: [],
            closed: !0,
            static: !1,
            cursor: "move",
            normalStyle: null,
            highlightStyle: null,
            labelStyle: null
        }
          , as = {
            added: !1,
            hasMoved: !1,
            visibleShape: null,
            mouseTarget: null
        }
          , ls = function(e, t, n) {
            is(null != e),
            is(null != n),
            ve().extend(this, {
                graphie: e,
                movable: t,
                state: {
                    id: ve().uniqueId("movablePolygon")
                }
            }),
            this.modify(ve().extend({}, as, n))
        };
        ve().extend(ls, rs),
        Kn.createGettersFor(ls, ve().extend({}, os, as)),
        Kn.addMovableHelperMethodsTo(ls),
        ve().extend(ls.prototype, {
            cloneState: function() {
                return ve().extend(this.movable.cloneState(), this.state)
            },
            _createDefaultState: function() {
                return ve().extend({
                    id: this.state.id
                }, ss(bi.pluck(rs, "standard")), os)
            },
            modify: function(e) {
                this.update(ve().extend(this._createDefaultState(), e))
            },
            update: function(e) {
                const t = this
                  , n = t.graphie
                  , r = ve().extend(t.state, ss(e))
                  , i = r.static ? Qn.DYNAMIC : Qn.INTERACTIVE;
                r.normalStyle = ve().extend({}, r.normalStyle, {
                    "stroke-width": 2,
                    "fill-opacity": 0,
                    fill: i,
                    stroke: i
                }, e.normalStyle),
                r.highlightStyle = ve().extend({}, {
                    stroke: Qn.INTERACTING,
                    "stroke-width": 2,
                    fill: Qn.INTERACTING,
                    "fill-opacity": .05
                }, r.highlightStyle),
                r.labelStyle = ve().extend({}, {
                    stroke: Qn.DYNAMIC,
                    "stroke-width": 1,
                    color: Qn.DYNAMIC
                }, r.labelStyle),
                r.static || r.mouseTarget || (r.mouseTarget = n.mouselayer.path(this.path()),
                r.mouseTarget.attr({
                    fill: "#000",
                    opacity: 0,
                    cursor: "move"
                })),
                t.movable.modify(ve().extend({}, r, {
                    modify: null,
                    draw: t.draw.bind(t),
                    remove: null,
                    onMoveStart: function() {
                        t._initialRefCoord = t.coord(0),
                        t._prevRefCoord = t._initialRefCoord,
                        t._totalDelta = [0, 0],
                        t._fireEvent(t.state.onMoveStart, t.coord(0), t.coord(0))
                    },
                    onMove: function(e, n) {
                        const r = Re.xr.subtract(e, n);
                        t._totalDelta = Re.xr.add(t._totalDelta, r);
                        let i = Re.xr.add(t._initialRefCoord, t._totalDelta);
                        i = t._applyConstraints(i, t._prevRefCoord),
                        !1 !== i && (t._fireEvent(t.state.onMove, i, t._prevRefCoord),
                        t._prevRefCoord = i)
                    },
                    onMoveEnd: function() {
                        t._fireEvent(t.state.onMoveEnd, t._prevRefCoord, t._initialRefCoord)
                    }
                })),
                ve().invoke(r.points, "listen", "onMove", r.id, t.draw.bind(t)),
                r.added || (t.prevState = {},
                t._fireEvent(r.add, t.cloneState(), t.prevState),
                r.added = !0,
                t.prevState = t.cloneState()),
                t._fireEvent(r.modify, t.cloneState(), t.prevState)
            },
            path: function(e) {
                const t = this.graphie;
                e = e || this.state;
                let n = ve().map(e.points, (function(e) {
                    return t.scalePoint(e.coord())
                }
                ));
                return e.closed ? n.push(!0) : n = n.concat(ve().clone(n).reverse()),
                fr.unscaledSvgPath(n)
            },
            coords: function() {
                return ve().invoke(this.state.points, "coord")
            },
            point: function(e) {
                return this.state.points[e]
            },
            coord: function(e) {
                return this.point(e).coord()
            },
            remove: function() {
                this.state.added = !1,
                this._fireEvent(this.state.remove),
                this.state.points && ve().invoke(this.state.points, "unlisten", "onMove", this.state.id),
                this.movable && this.movable.remove(),
                this.state.mouseTarget = null
            },
            constrain: function() {
                if (null == this.points || 0 === this.points.length)
                    return;
                const e = this.coord(0)
                  , t = this._applyConstraints(e, e);
                !1 !== t && this._fireEvent(this.state.onMove, t, e)
            },
            normalStyle: function() {
                return ve().clone(this.state.normalStyle)
            },
            highlightStyle: function() {
                return ve().clone(this.state.highlightStyle)
            },
            toBack: function() {
                this.movable.toBack(),
                this.state.visibleShape && this.state.visibleShape.toBack()
            },
            toFront: function() {
                this.state.visibleShape && this.state.visibleShape.toFront(),
                this.movable.toFront()
            },
            isHovering: function() {
                return this.movable.isHovering()
            },
            isDragging: function() {
                return this.movable.isDragging()
            },
            mouseTarget: function() {
                return this.movable.mouseTarget()
            }
        });
        const cs = {
            MovablePoint: Ki,
            addMovablePoint: function(e, t) {
                const n = new ci(e,{});
                return new Ki(e,n,t)
            },
            MovableLine: Ei,
            addMovableLine: function(e, t) {
                const n = new ci(e,{});
                return new Ei(e,n,t)
            },
            MovablePolygon: ls,
            addMovablePolygon: function(e, t) {
                const n = new ci(e,{});
                return new ls(e,n,t)
            },
            addMaybeMobileMovablePoint: function(e, t) {
                const n = e.props.apiOptions.isMobile
                  , r = n ? {
                    stroke: "#ffffff",
                    "stroke-width": 3,
                    fill: Qn.INTERACTIVE
                } : {
                    stroke: Qn.INTERACTIVE,
                    fill: Qn.INTERACTIVE
                }
                  , i = Object.assign(r, t.normalStyle)
                  , s = Object.assign(n ? nt({}, r, {
                    "stroke-width": 0,
                    scale: .75
                }) : {}, t.highlightStyle)
                  , o = Object.assign({
                    normalStyle: i,
                    highlightStyle: s,
                    shadow: n,
                    tooltip: n && e.props.showTooltips,
                    showHairlines: e.showHairlines,
                    hideHairlines: e.hideHairlines
                }, n ? {
                    pointSize: 7
                } : {});
                return cs.addMovablePoint(e.graphie, Object.assign(t, o))
            }
        }
          , hs = ri.createClass({
            displayName: "MovablePoint",
            movableProps: ["children"],
            _getProps: function() {
                if (this.props.isMobile) {
                    const e = this.props.isMobile
                      , t = e ? {
                        stroke: "#ffffff",
                        "stroke-width": 3,
                        fill: Qn.INTERACTIVE
                    } : {
                        stroke: Qn.INTERACTIVE,
                        fill: Qn.INTERACTIVE
                    }
                      , n = e ? Object.assign(t, this.props.mobileStyleOverride || {}) : Object.assign(t, this.props.normalStyle)
                      , r = e ? nt({}, t, {
                        "stroke-width": 0,
                        scale: .75
                    }) : this.props.highlightStyle
                      , i = Object.assign({
                        normalStyle: n,
                        highlightStyle: r,
                        shadow: e,
                        tooltip: e && this.props.showTooltips
                    }, e ? {
                        pointSize: 7
                    } : {});
                    return Object.assign(this.props, i)
                }
                return this.props
            },
            add: function(e) {
                this.point = cs.addMovablePoint(e, this._getProps())
            },
            modify: function() {
                this.point.modify(this._getProps())
            },
            remove: function() {
                this.point.remove()
            },
            toFront: function() {
                this.point.toFront()
            },
            grab: function(e) {
                this.point.grab(e)
            }
        });
        ve().extend(hs, cs.MovablePoint);
        const ps = ri.createClass({
            displayName: "MovableLine",
            movableProps: ["children"],
            add: function(e) {
                const t = ve().pluck(this.props.children, "point")
                  , n = ve().extend({}, this.props, {
                    points: t
                });
                this.line = cs.addMovableLine(e, n)
            },
            modify: function() {
                const e = ve().pluck(this.props.children, "point")
                  , t = ve().extend({}, this.props, {
                    points: e
                });
                this.line.modify(t)
            },
            remove: function() {
                this.line.remove()
            },
            toFront: function() {
                this.line.toFront()
            }
        });
        ve().extend(ps, cs.MovableLine);
        const us = ri.createSimpleClass(( (e, t) => {
            let n = t.coord;
            t.unscaled && (n = e.unscalePoint(n));
            let r = null;
            return gt().JIPT.useJIPT ? (r = e.label(n, t.text, t.direction, !1, t.style),
            gt().graphieMovablesJiptLabels.addLabel(r, t.tex)) : r = e.label(n, t.text, t.direction, t.tex, t.style),
            r
        }
        ))
          , ds = ri.createClass({
            displayName: "Line",
            movableProps: ["children"],
            add: function(e) {
                const t = this.props;
                this.graphie = e,
                this.line = this.graphie.line(t.start, t.end, t.style)
            },
            modify: function() {
                const e = this.props
                  , t = this.graphie.svgPath([e.start, e.end]);
                this.line.attr(ve().extend({}, e.style, {
                    path: t
                }))
            },
            remove: function() {
                this.line.remove()
            },
            toFront: function() {
                this.line.toFront()
            }
        })
          , ms = ri.createClass({
            displayName: "Parabola",
            movableProps: ["children"],
            add: function(e) {
                const t = this.props;
                this.graphie = e,
                this.parabola = this.graphie.parabola(t.a, t.b, t.c, t.style)
            },
            modify: function() {
                const e = this.props
                  , t = this.graphie.svgParabolaPath(e.a, e.b, e.c);
                this.parabola.attr(ve().extend({}, e.style, {
                    path: t
                }))
            },
            remove: function() {
                this.parabola.remove()
            },
            toFront: function() {
                this.parabola.toFront()
            }
        })
          , fs = ri.createClass({
            displayName: "Sinusoid",
            movableProps: ["children"],
            add: function(e) {
                const t = this.props;
                this.graphie = e,
                this.sinusoid = this.graphie.sinusoid(t.a, t.b, t.c, t.d, t.style)
            },
            modify: function() {
                const e = this.props
                  , t = this.graphie.svgSinusoidPath(e.a, e.b, e.c, e.d);
                this.sinusoid.attr(ve().extend({}, e.style, {
                    path: t
                }))
            },
            remove: function() {
                this.sinusoid.remove()
            },
            toFront: function() {
                this.sinusoid.toFront()
            }
        })
          , gs = ri.createSimpleClass(( (e, t) => e.plot(t.fn, t.range, t.style)))
          , vs = ri.createSimpleClass(( (e, t) => e.plotParametric(t.fn, t.range, t.style)))
          , ys = ri.createSimpleClass(( (e, t) => e.ellipse(t.coord, e.unscaleVector([4, 4]), {
            fill: t.color || Qn.BLACK,
            stroke: t.color || Qn.BLACK
        })))
          , bs = ri.createClass({
            displayName: "Path",
            movableProps: ["children"],
            add: function(e) {
                const t = this.props;
                this.graphie = e,
                this.path = this.graphie.path(t.coords, t.style)
            },
            modify: function() {
                const e = this.props
                  , t = this.graphie.svgPath(e.coords);
                this.path.attr({
                    path: t
                })
            },
            remove: function() {
                this.path.remove()
            },
            toFront: function() {
                this.path.toFront()
            }
        });
        var xs = {
            Arc: ri.createSimpleClass(( (e, t) => {
                let n = t.center
                  , r = t.radius;
                return t.unscaled && (n = e.unscalePoint(n),
                r = e.unscaleVector(r)),
                e.arc(n, r, t.startAngle, t.endAngle, t.sector, t.style)
            }
            )),
            Circle: ri.createSimpleClass(( (e, t) => e.circle(t.center, t.radius, t.style))),
            Label: us,
            Line: ds,
            MovableLine: ps,
            MovablePoint: hs,
            Parabola: ms,
            Path: bs,
            Plot: gs,
            PlotParametric: vs,
            Point: ys,
            Sinusoid: fs,
            Rect: ri.createSimpleClass(( (e, t) => e.rect(t.x, t.y, t.width, t.height, t.style)))
        };
        const ws = ri.GraphieMovable
          , ks = fr.createGraphie
          , {deepEq: Ss, nestedMap: Es} = vn
          , {assert: Ms} = Kn;
        class Cs extends me.Component {
            constructor(...e) {
                super(...e),
                this.graphieDivRef = me.createRef(),
                this._graphie = new hr(document.createElement("div")),
                this._movables = {},
                this.movables = {},
                this.getGraphie = () => this._graphie,
                this._range = () => {
                    const e = e => e[0] >= e[1] ? [-10, 10] : e;
                    return [e(this.props.range[0]), e(this.props.range[1])]
                }
                ,
                this._box = () => {
                    const e = e => e > 0 ? e : 340;
                    return [e(this.props.box[0]), e(this.props.box[1])]
                }
                ,
                this._scale = () => {
                    const e = this._box()
                      , t = this._range();
                    return e.map(( (e, n) => e / (t[n][1] - t[n][0])))
                }
                ,
                this._setupGraphie = () => {
                    this._removeMovables();
                    const e = fe.findDOMNode(this.graphieDivRef.current);
                    if (null == e || e instanceof Text)
                        throw new Error("No graphie container div found");
                    e.innerHTML = "";
                    const t = this._graphie = ks(e);
                    t.init({
                        range: this._range(),
                        scale: this._scale(),
                        isMobile: this.props.isMobile
                    }),
                    this.props.addMouseLayer && t.addMouseLayer({
                        onClick: this.props.onClick,
                        onMouseDown: this.props.onMouseDown,
                        onMouseMove: this.props.onMouseMove,
                        setDrawingAreaAvailable: this.props.setDrawingAreaAvailable
                    }),
                    t.snap = this.props.options.snapStep || [1, 1],
                    this.props.responsive && (ke()(e).css({
                        width: "100%",
                        height: "100%"
                    }),
                    t.raphael.setSize("100%", "100%")),
                    this.props.setup(t, ve().extend({
                        range: this._range(),
                        scale: this._scale()
                    }, this.props.options))
                }
                ,
                this._removeMovables = () => {
                    ve().invoke(this._movables, "remove"),
                    this._movables = {}
                }
                ,
                this._renderMovables = (e, t) => {
                    const n = t.graphie
                      , r = t.oldMovables
                      , i = t.newMovables
                      , o = e => {
                        ve().each(e.movableProps, (n => {
                            e.props[n] = this._renderMovables(e.props[n], t)
                        }
                        ))
                    }
                    ;
                    let a = !1;
                    return Es(e, (e => {
                        if (!e)
                            return t.nextKey++,
                            e;
                        const l = new e.type(e.props);
                        Ms(l instanceof ws, "All children of a Graphie component must be Graphie movables");
                        const c = e.key
                          , h = null == c ? "_no_id_" + t.nextKey : c;
                        t.nextKey++;
                        const p = e.ref;
                        o(l);
                        const u = r[h];
                        if (u)
                            if (l.constructor === u.constructor) {
                                u.props = l.props;
                                "reordered" === u.modify(n) && (a = !0),
                                i[h] = u
                            } else
                                null == c && Ot.error("Replacing a <Graphie> child with a child of a different type. Please add keys to your <Graphie> children", s.D1.Internal),
                                u.remove(),
                                l.add(n),
                                a = !0,
                                i[h] = l;
                        else
                            l.add(n),
                            a = !0,
                            i[h] = l;
                        return a && i[h].toFront(),
                        p && (this.movables[p] = i[h]),
                        i[h]
                    }
                    ))
                }
                ,
                this._updateMovables = () => {
                    const e = this._graphie
                      , t = this._movables
                      , n = {};
                    this._movables = n,
                    this.movables = {},
                    this._renderMovables(this.props.children, {
                        nextKey: 1,
                        graphie: e,
                        oldMovables: t,
                        newMovables: n
                    }),
                    ve().each(t, ( (e, t) => {
                        n[t] || e.remove()
                    }
                    ))
                }
            }
            componentDidMount() {
                this._setupGraphie(),
                this._updateMovables()
            }
            shouldComponentUpdate(e) {
                return !ve().isEqual(this.props, e)
            }
            componentDidUpdate(e) {
                this.props.setup !== e.setup && Ot.error("<Graphie> was given a new setup function. This is a bad idea; please refactor your code to give the same setup function reference to <Graphie> on every render.", s.D1.Internal),
                Ss(this.props.options, e.options) && Ss(this.props.box, e.box) && Ss(this.props.range, e.range) || this._setupGraphie(),
                this._updateMovables()
            }
            render() {
                return me.createElement("div", {
                    className: "graphie-container"
                }, me.createElement("div", {
                    className: "graphie",
                    ref: this.graphieDivRef
                }))
            }
        }
        Cs.defaultProps = {
            range: [[-10, 10], [-10, 10]],
            options: {},
            responsive: !1,
            addMouseLayer: !0
        },
        ve().extend(Cs, ri),
        ve().extend(Cs, xs);
        const Ts = "pending"
          , _s = "loading"
          , As = "loaded"
          , Is = "failed";
        class Rs extends me.Component {
            constructor(e) {
                super(e),
                this.img = void 0,
                this.createLoader = () => {
                    this.destroyLoader(),
                    this.img = new Image,
                    this.img.onload = this.handleLoad,
                    this.img.onerror = this.handleError,
                    this.img.src = this.props.src
                }
                ,
                this.destroyLoader = () => {
                    this.img && (this.img.onload = null,
                    this.img.onerror = null,
                    this.img = null)
                }
                ,
                this.handleLoad = e => {
                    this.destroyLoader(),
                    this.setState({
                        status: As
                    }),
                    this.props.onLoad && this.props.onLoad(e)
                }
                ,
                this.handleError = e => {
                    this.destroyLoader(),
                    this.setState({
                        status: Is
                    }),
                    this.props.onError && this.props.onError(e)
                }
                ,
                this.renderImg = () => {
                    const {src: e, imgProps: t} = this.props;
                    let n, r;
                    null != t.onClick && (n = e => {
                        13 !== e.keyCode && 32 !== e.keyCode || t.onClick && t.onClick(e)
                    }
                    ,
                    r = e => {
                        32 === e.keyCode && e.preventDefault()
                    }
                    );
                    const i = gt().staticUrl;
                    return me.createElement("img", nt({
                        src: i(e),
                        onKeyUp: n,
                        onKeyDown: r
                    }, t))
                }
                ,
                this.state = {
                    status: e.src ? _s : Ts
                }
            }
            componentDidMount() {
                this.state.status === _s && this.createLoader()
            }
            UNSAFE_componentWillReceiveProps(e) {
                this.props.src !== e.src && this.setState({
                    status: e.src ? _s : Ts
                })
            }
            componentDidUpdate(e, t) {
                this.state.status !== _s || this.img || this.createLoader(),
                t.status !== this.state.status && this.props.onUpdate(this.state.status)
            }
            componentWillUnmount() {
                this.destroyLoader()
            }
            render() {
                switch (this.state.status) {
                case As:
                    return this.renderImg();
                case Is:
                    if (this.props.children)
                        return this.props.children;
                    break;
                default:
                    if (this.props.preloader)
                        return this.props.preloader()
                }
                return null
            }
        }
        const Ns = {}
          , Ps = /^file\+graphie:/
          , Os = /\/([^/]+)$/;
        function Ls(e) {
            return /\.(jpg|jpeg)$/i.test(e)
        }
        function Ds() {
            const {JIPT: e, kaLocale: t} = gt();
            return e.useJIPT ? "en-pt" : t
        }
        function Fs() {
            return "en" !== Ds()
        }
        const zs = /\/(?=[^/]+$)/;
        function Bs(e) {
            return me.createElement("span", {
                style: {
                    top: 0,
                    left: 0,
                    width: "100%",
                    height: "100%",
                    position: "absolute",
                    minWidth: "20px",
                    display: "flex",
                    justifyContent: "center",
                    alignContent: "center"
                }
            }, me.createElement(Pe.y, {
                size: "medium"
            }))
        }
        class qs extends me.Component {
            constructor(e) {
                super(e),
                this._isMounted = void 0,
                this.onDataLoaded = (e, t) => {
                    if (this._isMounted && e.labels && e.range) {
                        const n = e.labels.reduce(( (e, t) => nt({}, e, {
                            [t.content]: !1
                        })), {});
                        this.setState({
                            dataLoaded: !0,
                            labelDataIsLocalized: t,
                            labelsRendered: n,
                            labels: e.labels,
                            range: e.range
                        })
                    }
                }
                ,
                this.onImageLoad = () => {
                    this.sizeProvided() ? this.setState({
                        imageLoaded: !0
                    }) : vn.getImageSize(this.props.src, ( (e, t) => {
                        this._isMounted && this.setState({
                            imageLoaded: !0,
                            imageDimensions: [e, t]
                        })
                    }
                    ))
                }
                ,
                this.setupGraphie = (e, t) => {
                    ve().map(t.labels, (t => {
                        const {JIPT: n} = gt();
                        if (n.useJIPT && this.state.labelDataIsLocalized) {
                            const n = e.label(t.coordinates, t.content, t.alignment, !1);
                            gt().svgImageJiptLabels.addLabel(n, t.typesetAsMath)
                        } else if (t.coordinates) {
                            const n = 1 !== this.props.scale ? {
                                "font-size": 100 * this.props.scale + "%"
                            } : null
                              , r = e.label(t.coordinates, t.content, t.alignment, t.typesetAsMath, n)
                              , i = r[0].style;
                            let s = this._tryGetPixels(i.top)
                              , o = this._tryGetPixels(i.left);
                            if (null === s || null === o) {
                                const e = r.position();
                                s = e.top,
                                o = e.left
                            }
                            const a = (this.props.height || 0) * this.props.scale
                              , l = (this.props.width || 0) * this.props.scale;
                            r.css({
                                top: s / a * 100 + "%",
                                left: o / l * 100 + "%"
                            }),
                            ve().each(t.style, ( (e, t) => {
                                r.css(t, e)
                            }
                            ))
                        }
                        this.setState({
                            labelsRendered: nt({}, this.state.labelsRendered, {
                                [t.content]: !0
                            })
                        })
                    }
                    ))
                }
                ,
                this._handleZoomClick = e => {
                    (ke()(e.target).width() < this.props.width || this.props.zoomToFullSizeOnMobile) && wn.handleZoomClick(e, this.props.zoomToFullSizeOnMobile),
                    this.props.trackInteraction && this.props.trackInteraction()
                }
                ,
                this.handleUpdate = e => {
                    this.props.onUpdate(),
                    vn.isLabeledSVG(this.props.src) || "loaded" !== e || this.setState({
                        imageLoaded: !0
                    })
                }
                ,
                e.setAssetStatus(e.src, !1),
                this._isMounted = !1,
                this.state = {
                    imageLoaded: !1,
                    imageDimensions: null,
                    dataLoaded: !1,
                    labelDataIsLocalized: !1,
                    labels: [],
                    labelsRendered: {},
                    range: [[0, 0], [0, 0]]
                }
            }
            componentDidMount() {
                this._isMounted = !0,
                vn.isLabeledSVG(this.props.src) && this.loadResources()
            }
            UNSAFE_componentWillReceiveProps(e) {
                this.props.src !== e.src && this.setState({
                    imageLoaded: !1,
                    dataLoaded: !1
                })
            }
            shouldComponentUpdate(e, t) {
                if (!ve().isEqual(this.props, e))
                    return !0;
                return this.isLoadedInState(this.state) !== this.isLoadedInState(t)
            }
            componentDidUpdate(e, t) {
                const n = this.isLoadedInState(t)
                  , r = this.isLoadedInState(this.state);
                vn.isLabeledSVG(this.props.src) && !r && this.loadResources(),
                !n && r && this.props.setAssetStatus(this.props.src, !0)
            }
            componentWillUnmount() {
                this._isMounted = !1
            }
            isLoadedInState(e) {
                return vn.isLabeledSVG(this.props.src) ? e.imageLoaded && e.dataLoaded : e.imageLoaded
            }
            loadResources() {
                const e = function(e) {
                    const t = e.match(Os);
                    if (null == t)
                        throw new s.uI("not a valid URL",s.D1.InvalidInput);
                    return t && t[1]
                }(this.props.src);
                if (Ns[e])
                    if (Ns[e].loaded) {
                        const {data: t, localized: n} = Ns[e];
                        this.onDataLoaded(t, n)
                    } else
                        Ns[e].dataCallbacks.push(this.onDataLoaded);
                else {
                    const t = {
                        loaded: !1,
                        dataCallbacks: [this.onDataLoaded],
                        data: null,
                        localized: Fs()
                    };
                    Ns[e] = t;
                    const n = (n, r) => {
                        !function(e, t) {
                            t = nt({
                                callbackName: "callback",
                                success: ke().noop,
                                error: ke().noop
                            }, t);
                            const n = document.createElement("script");
                            function r() {
                                document.head && document.head.removeChild(n),
                                delete window[t.callbackName]
                            }
                            n.setAttribute("async", ""),
                            n.setAttribute("src", e),
                            window[t.callbackName] = function(...e) {
                                r(),
                                t.success.apply(null, e)
                            }
                            ,
                            n.addEventListener("error", (function(...e) {
                                r(),
                                t.error.apply(null, e)
                            }
                            )),
                            document.head && document.head.appendChild(n)
                        }(n, {
                            callbackName: "svgData" + e,
                            success: e => {
                                t.data = e,
                                t.loaded = !0,
                                ve().each(t.dataCallbacks, (e => {
                                    e(t.data, t.localized)
                                }
                                ))
                            }
                            ,
                            error: r
                        })
                    }
                    ;
                    Fs() ? n(function(e) {
                        if (Ps.test(e))
                            return vn.getDataUrl(e);
                        const [t,n] = vn.getBaseUrl(e).split(zs);
                        return `${t}/${Ds()}/${n}-data.json`
                    }(this.props.src), ( (e, r, i) => {
                        t.localized = !1,
                        n(vn.getDataUrl(this.props.src), ( (e, t, n) => {
                            Ot.error("Data load failed for svg-image", s.D1.Service, {
                                cause: n,
                                loggedMetadata: {
                                    dataUrl: vn.getDataUrl(this.props.src),
                                    status: t
                                }
                            })
                        }
                        ))
                    }
                    )) : n(vn.getDataUrl(this.props.src), ( (e, t, n) => {
                        Ot.error("Data load failed for svg-image", s.D1.Service, {
                            cause: n,
                            loggedMetadata: {
                                dataUrl: vn.getDataUrl(this.props.src),
                                status: t
                            }
                        })
                    }
                    ))
                }
            }
            sizeProvided() {
                return null != this.props.width && null != this.props.height
            }
            _tryGetPixels(e) {
                return (e = e || "").endsWith("px") && parseFloat(e) || null
            }
            render() {
                const e = this.props.src
                  , t = {
                    alt: this.props.alt,
                    title: this.props.title
                }
                  , n = this.props.width && this.props.width * this.props.scale
                  , r = this.props.height && this.props.height * this.props.scale
                  , i = {
                    width: n,
                    height: r
                }
                  , o = this.props.responsive && !(!n || !r);
                let a;
                this.props.extraGraphie && this.props.extraGraphie.labels.length && (a = me.createElement(Cs, {
                    box: this.props.extraGraphie.box,
                    range: this.props.extraGraphie.range,
                    options: {
                        labels: this.props.extraGraphie.labels
                    },
                    responsive: !0,
                    addMouseLayer: !1,
                    setup: this.setupGraphie
                }));
                const l = void 0 === this.props.preloader ? Bs : this.props.preloader
                  , c = l ? () => l(i) : null;
                if (!vn.isLabeledSVG(e)) {
                    if (o) {
                        const i = de()({
                            zoomable: (n || 0) > 700,
                            "svg-image": !0
                        });
                        return t.onClick = this._handleZoomClick,
                        me.createElement(Un, {
                            className: i,
                            width: n,
                            height: r,
                            constrainHeight: this.props.constrainHeight,
                            allowFullBleed: this.props.allowFullBleed && Ls(e)
                        }, me.createElement(Rs, {
                            src: e,
                            imgProps: t,
                            preloader: c,
                            onUpdate: this.handleUpdate
                        }), a)
                    }
                    return t.style = i,
                    me.createElement(Rs, {
                        src: e,
                        preloader: c,
                        imgProps: t,
                        onUpdate: this.handleUpdate
                    })
                }
                const h = vn.getSvgUrl(e);
                let p;
                if (this.isLoadedInState(this.state)) {
                    let e;
                    if (this.sizeProvided())
                        e = [n, r];
                    else {
                        if (!this.state.imageDimensions)
                            throw new s.uI("svg-image has no dimensions",s.D1.InvalidInput,{
                                metadata: {
                                    src: this.props.src
                                }
                            });
                        e = [this.state.imageDimensions[0] * this.props.scale, this.state.imageDimensions[1] * this.props.scale]
                    }
                    p = me.createElement(Cs, {
                        ref: "graphie",
                        box: e,
                        scale: [40 * this.props.scale, 40 * this.props.scale],
                        range: this.state.range,
                        options: ve().pick(this.state, "labels"),
                        responsive: o,
                        addMouseLayer: !1,
                        setup: this.setupGraphie
                    })
                }
                return o ? me.createElement(Un, {
                    className: "svg-image",
                    width: n,
                    height: r,
                    constrainHeight: this.props.constrainHeight
                }, me.createElement(Rs, {
                    src: h,
                    onLoad: this.onImageLoad,
                    onUpdate: this.handleUpdate,
                    preloader: c,
                    imgProps: t
                }), p, a) : (t.style = i,
                me.createElement("div", {
                    className: "unresponsive-svg-image",
                    style: i
                }, me.createElement(Rs, {
                    src: h,
                    onLoad: this.onImageLoad,
                    onUpdate: this.handleUpdate,
                    preloader: c,
                    imgProps: t
                }), p))
            }
        }
        qs.defaultProps = {
            constrainHeight: !1,
            onUpdate: () => {}
            ,
            responsive: !0,
            src: "",
            scale: 1,
            zoomToFullSizeOnMobile: !1,
            setAssetStatus: (e, t) => {}
        };
        class Hs extends me.Component {
            constructor(e) {
                super(e),
                this._hasRendered = void 0,
                this.handleRender = () => {
                    this.setState({
                        rendered: !0
                    }),
                    this.props.onRender(),
                    this._hasRendered || (this._hasRendered = !0,
                    this.props.setAssetStatus(this.props.children, !0))
                }
                ,
                this.props.setAssetStatus(this.props.children, !1),
                this.state = {
                    rendered: !1
                },
                this._hasRendered = !1
            }
            render() {
                const {TeX: e} = gt();
                return me.createElement(e, {
                    onRender: this.handleRender
                }, this.props.children)
            }
        }
        Hs.defaultProps = {
            onRender: () => {}
            ,
            setAssetStatus: (e, t) => {}
        };
        class Us extends me.Component {
            constructor(...e) {
                super(...e),
                this._isMounted = void 0,
                this._observer = void 0,
                this._measuringInitialized = void 0,
                this._originalWidth = void 0,
                this._node = void 0,
                this.state = {
                    visible: !1,
                    marginBottomPx: 0,
                    zoomed: !0
                },
                this.reset = () => {
                    this._isMounted && this.state.visible && (this._originalWidth = null,
                    this.setState({
                        visible: !1,
                        compactHeight: null,
                        expandedHeight: null,
                        zoomed: !0
                    }, ( () => {
                        this.measureAndScaleChildToFit(!1)
                    }
                    )))
                }
                ,
                this.stopPropagationIfZoomed = e => {
                    this.state.zoomed || e.stopPropagation()
                }
                ,
                this.handleClickIfZoomed = e => {
                    this.state.zoomed || (e.stopPropagation(),
                    this.handleClick())
                }
                ,
                this.handleClick = () => {
                    this.setState({
                        zoomed: !this.state.zoomed
                    })
                }
            }
            componentDidMount() {
                this._isMounted = !0,
                this.maybeInitializeMeasuring()
            }
            componentDidUpdate() {
                this.maybeInitializeMeasuring()
            }
            componentWillUnmount() {
                window.removeEventListener("resize", this.reset),
                this._observer && this._observer.disconnect(),
                this._isMounted = !1
            }
            maybeInitializeMeasuring() {
                const e = this.props.readyToMeasure && !this._measuringInitialized;
                this._isMounted && e && (this._measuringInitialized = !0,
                this._node = fe.findDOMNode(this),
                setTimeout(( () => this.measureAndScaleChildToFit(!1)), 0),
                window.MutationObserver && (this._observer = new MutationObserver((e => {
                    if (this._isMounted)
                        for (const t of e)
                            if (t.target !== this._node) {
                                this.measureAndScaleChildToFit(this.state.zoomed);
                                break
                            }
                }
                )),
                this._observer.observe(this._node, {
                    childList: !0,
                    subtree: !0,
                    attributes: !0
                })),
                window.addEventListener("resize", this.reset))
            }
            measureAndScaleChildToFit(e) {
                if (!this._isMounted)
                    return;
                const t = {
                    width: this._node.offsetWidth,
                    height: this._node.offsetHeight
                }
                  , n = this.props.computeChildBounds(this._node, t)
                  , r = n.width + 1
                  , i = n.height + 1;
                if (r > t.width) {
                    const n = t.width / r;
                    this.setState({
                        scale: n,
                        zoomed: e,
                        compactHeight: Math.ceil(n * i),
                        expandedHeight: i
                    }),
                    setTimeout(( () => {
                        this._isMounted && this.setState({
                            visible: !0
                        })
                    }
                    ))
                } else
                    this.setState({
                        visible: !0
                    })
            }
            render() {
                const {visible: e, scale: t, compactHeight: n, expandedHeight: r, zoomed: i} = this.state
                  , {animateHeight: s, disableEntranceAnimation: o} = this.props
                  , a = e ? {
                    transitionProperty: s ? "opacity transform height" : "opacity transform",
                    transitionDuration: "0.3s",
                    transitionTimingFunction: "ease-out"
                } : {}
                  , l = !o && !e
                  , c = l ? " translate(0, 8px)" : ""
                  , h = l ? 0 : 1
                  , p = (null != t ? t : 1).toString()
                  , u = nt({
                    display: "block",
                    width: "100%",
                    height: i ? r : n,
                    transform: i ? `scale(1, 1) ${c}` : `scale(${p}, ${p}) ${c}`,
                    transformOrigin: "0 0",
                    opacity: h,
                    WebkitTapHighlightColor: "transparent"
                }, a);
                return me.createElement("span", {
                    onClick: this.handleClick,
                    onClickCapture: this.handleClickIfZoomed,
                    onTouchCancelCapture: this.stopPropagationIfZoomed,
                    onTouchEndCapture: this.stopPropagationIfZoomed,
                    onTouchStartCapture: this.stopPropagationIfZoomed,
                    style: u
                }, this.props.children)
            }
        }
        Us.defaultProps = {
            animateHeight: !1,
            readyToMeasure: !0,
            disableEntranceAnimation: !1,
            computeChildBounds: e => {
                const t = e.firstElementChild;
                return {
                    width: t.offsetWidth,
                    height: t.offsetHeight
                }
            }
        };
        const Gs = (e, t) => {
            const n = e.querySelector(".katex-html") || e.querySelector(".MathJax")
              , r = {
                width: n.offsetWidth,
                height: n.offsetHeight
            };
            return {
                width: Math.max(t.width, r.width),
                height: Math.max(t.height, r.height)
            }
        }
        ;
        class Ws extends me.Component {
            constructor() {
                super(),
                this.handleRender = () => {
                    this.setState({
                        isRendered: !0
                    })
                }
                ,
                this.state = {
                    isRendered: !1
                }
            }
            render() {
                return me.createElement(Us, {
                    readyToMeasure: this.state.isRendered,
                    computeChildBounds: Gs,
                    animateHeight: !1,
                    disableEntranceAnimation: !0
                }, me.createElement(jt.Consumer, null, ( ({setAssetStatus: e}) => me.createElement(Hs, {
                    onRender: this.handleRender,
                    setAssetStatus: e
                }, this.props.children))))
            }
        }
        const Vs = {
            activeDefinitionId: null,
            setActiveDefinitionId: () => {}
        }
          , $s = me.createContext(Vs);
        class js extends me.Component {
            constructor(...e) {
                super(...e),
                this.state = {
                    activeDefinitionId: null
                },
                this.setActiveDefinitionId = e => {
                    this.setState((t => ({
                        activeDefinitionId: e
                    })))
                }
            }
            render() {
                const {children: e} = this.props
                  , {activeDefinitionId: t} = this.state
                  , {setActiveDefinitionId: n} = this;
                return me.createElement($s.Provider, {
                    value: {
                        activeDefinitionId: t,
                        setActiveDefinitionId: n
                    }
                }, e)
            }
        }
        const Ks = $s.Consumer;
        class Zs extends me.Component {
            constructor(e) {
                super(e),
                this.state = {
                    error: ""
                }
            }
            componentDidCatch(e, t) {
                var n, r;
                this.setState({
                    error: e.toString()
                }),
                null == (n = (r = this.props).onError) || n.call(r, e, t),
                Ot.error("Unhandled Perseus error: " + e.message, s.D1.Internal, {
                    cause: e,
                    loggedMetadata: nt({
                        componentStack: t && "componentStack"in t ? t.componentStack : "componentStack not provided"
                    }, this.props.metadata)
                })
            }
            render() {
                return this.state.error ? me.createElement("svg", {
                    height: "16",
                    width: "16",
                    viewBox: "0 0 16 16",
                    role: "img"
                }, me.createElement("title", null, "Rendering Error!"), me.createElement("path", {
                    d: "m8 16c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm0-3c0.55 0 1-0.45 1-1s-0.45-1-1-1-1 0.45-1 1 0.45 1 1 1zm0-9c-0.55 0-1 0.45-1 1v4c0 0.55.45 1 1 1s1-0.45 1-1v-4c0-0.55-0.45-1-1-1z",
                    fill: "#d92916",
                    fillRule: "evenodd"
                })) : this.props.children
            }
        }
        function Ys() {}
        class Xs {
            constructor(e, t, n, r) {
                this._tracked = void 0,
                this.setting = void 0,
                this.track = void 0,
                this.trackApi = void 0,
                this.widgetID = void 0,
                this.widgetType = void 0,
                this._track = e => {
                    this._tracked && !this.setting || (this._tracked = !0,
                    this.trackApi(nt({
                        type: this.widgetType,
                        id: this.widgetID
                    }, e)))
                }
                ,
                e ? (this._tracked = !1,
                this.trackApi = e,
                this.widgetType = t,
                this.widgetID = n,
                this.setting = r,
                this.track = this._track) : this.track = Ys
            }
        }
        const Js = {
            fence: {
                match: Oe.Z.defaultRules.fence.match,
                order: 1,
                parse: (e, t, n) => ({
                    type: "codeBlock",
                    lang: e[2] || void 0,
                    content: e[3]
                })
            },
            paragraph: {
                match: Oe.Z.defaultRules.paragraph.match,
                order: 2,
                parse: (e, t, n) => ({
                    content: e[1]
                })
            }
        }
          , Qs = Oe.Z.parserFor(Js);
        var eo = {
            parseToArray: e => {
                const t = e.replace(/^\n\s*\n/, "") + "\n\n";
                return Qs(t, {
                    inline: !1
                }).map((e => e.content))
            }
            ,
            joinFromArray: e => e.join("\n\n")
        };
        const to = {
            path: "M6 11a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm0-9a1 1 0 0 1 1 1v4a1 1 0 1 1-2 0V3a1 1 0 0 1 1-1z",
            height: 12,
            width: 12
        };
        var no = function(e) {
            return e[e.Error = 1] = "Error",
            e[e.Warning = 2] = "Warning",
            e[e.Recommendation = 3] = "Recommendation",
            e[e.OfflineReportingOnly = 4] = "OfflineReportingOnly",
            e
        }(no || {});
        class ro extends me.Component {
            constructor(...e) {
                super(...e),
                this._positionTimeout = void 0,
                this.state = {
                    tooltipAbove: !0
                },
                this.getPosition = () => {
                    const e = fe.findDOMNode(this).getBoundingClientRect();
                    this.setState({
                        tooltipAbove: e.top > 100
                    })
                }
                ,
                this.renderLink = e => {
                    const t = this.state.tooltipAbove;
                    let n, r, i;
                    return this.props.severity === no.Error ? (n = io.indicatorError,
                    r = "Error",
                    i = io.publishBlockingError) : this.props.severity === no.Warning ? (n = io.indicatorWarning,
                    r = "Warning",
                    i = io.warning) : (n = io.indicatorGuideline,
                    r = "Recommendation",
                    i = io.warning),
                    me.createElement("a", {
                        href: `https://khanacademy.org/r/linter-rules#${this.props.ruleName}`,
                        target: "lint-help-window",
                        className: (0,
                        pe.css)(e)
                    }, me.createElement("span", {
                        className: (0,
                        pe.css)(io.indicator, n)
                    }, 1 === this.props.severity && me.createElement(Mi, to)), me.createElement("div", {
                        className: (0,
                        pe.css)(io.tooltip, t && io.tooltipAbove)
                    }, this.props.message.split("\n\n").map(( (e, t) => me.createElement("p", {
                        key: t,
                        className: (0,
                        pe.css)(io.tooltipParagraph)
                    }, me.createElement("span", {
                        className: (0,
                        pe.css)(i)
                    }, r, ":", " "), e))), me.createElement("div", {
                        className: (0,
                        pe.css)(io.tail, t && io.tailAbove)
                    })))
                }
            }
            componentDidMount() {
                this._positionTimeout = window.setTimeout(this.getPosition)
            }
            componentWillUnmount() {
                window.clearTimeout(this._positionTimeout)
            }
            render() {
                const {children: e, inline: t, blockHighlight: n, insideTable: r} = this.props;
                return r ? t ? me.createElement("span", {
                    "data-lint-inside-table": "true"
                }, e) : me.createElement("div", {
                    "data-lint-inside-table": "true"
                }, e) : n ? me.createElement("span", {
                    className: (0,
                    pe.css)(io.lintContainer, io.lintContainerBlock)
                }, this.renderLink(io.radioWidgetHoverTarget), me.createElement("span", null, e)) : t ? me.createElement("span", {
                    className: (0,
                    pe.css)(io.lintContainer)
                }, this.renderLink(io.inlineHoverTarget), me.createElement("span", null, e)) : me.createElement("div", {
                    className: (0,
                    pe.css)(io.lintContainer)
                }, this.renderLink(io.hoverTarget), me.createElement("div", null, e))
            }
        }
        const io = pe.StyleSheet.create({
            lintContainer: {
                position: "relative"
            },
            lintContainerBlock: {
                display: "block"
            },
            hoverTarget: {
                position: "absolute",
                top: 0,
                right: -40,
                display: "block",
                width: 24,
                height: 24,
                ":hover > span": {
                    backgroundColor: Fn
                },
                ":hover div": {
                    display: "block"
                },
                ":hover ~ div": {
                    outline: "1px solid " + Dn
                },
                ":hover ~ div div[data-lint-inside-table]": {
                    outline: "1px solid " + Dn
                },
                ":hover ~ div span[data-lint-inside-table]": {
                    backgroundColor: Dn,
                    color: Mn
                }
            },
            inlineHoverTarget: {
                float: "right",
                position: "relative",
                marginRight: -40,
                display: "block",
                width: 24,
                height: 24,
                ":hover > span": {
                    backgroundColor: Fn
                },
                ":hover div": {
                    display: "block"
                },
                ":hover ~ span": {
                    backgroundColor: Dn,
                    color: Mn
                }
            },
            radioWidgetHoverTarget: {
                position: "absolute",
                left: -40,
                display: "block",
                width: 24,
                height: 24,
                minWidth: 264,
                ":hover > span": {
                    backgroundColor: Fn
                },
                ":hover > div": {
                    display: "block",
                    padding: 8,
                    width: 280
                },
                ":hover > div > div": {
                    left: 8
                },
                ":hover ~ span": {
                    backgroundColor: Dn,
                    color: Mn
                }
            },
            indicator: {
                alignItems: "center",
                borderRadius: 4,
                color: "white",
                display: "flex",
                fontSize: 12,
                height: 8,
                justifyContent: "center",
                margin: 8,
                width: 8
            },
            indicatorError: {
                backgroundColor: "#be2612",
                borderRadius: 8,
                height: 16,
                width: 16
            },
            indicatorWarning: {
                backgroundColor: "#f86700"
            },
            indicatorGuideline: {
                backgroundColor: "#ffbe26"
            },
            tooltip: {
                position: "absolute",
                right: -12,
                display: "none",
                zIndex: 1e3,
                color: Mn,
                backgroundColor: In,
                opacity: .9,
                fontFamily: kn,
                fontSize: "12px",
                lineHeight: "15px",
                width: "320px",
                borderRadius: "4px"
            },
            tooltipAbove: {
                bottom: 32
            },
            tail: {
                position: "absolute",
                top: -12,
                right: 16,
                width: 0,
                height: 0,
                borderLeft: "8px solid transparent",
                borderRight: "8px solid transparent",
                borderBottom: "12px solid " + In
            },
            tailAbove: {
                bottom: -12,
                borderBottom: "none",
                borderTop: "12px solid " + In,
                top: "auto"
            },
            tooltipParagraph: {
                margin: 12
            },
            warning: {
                color: Dn,
                fontFamily: Sn
            },
            publishBlockingError: {
                color: Bn
            }
        })
          , so = nt({}, Le.zA, {
            columns: nt({}, Le.zA.columns, {
                react: (e, t, n) => me.createElement("div", {
                    className: "perseus-two-columns",
                    key: n.key
                }, me.createElement("div", {
                    className: "perseus-column"
                }, me.createElement("div", {
                    className: "perseus-column-content"
                }, t(e.col1, n))), me.createElement("div", {
                    className: "perseus-column"
                }, me.createElement("div", {
                    className: "perseus-column-content"
                }, t(e.col2, n))))
            }),
            crowdinId: nt({}, Le.zA.crowdinId, {
                react: (e, t, n) => e.id
            }),
            table: nt({}, Le.zA.table, {
                react: function(e, t, n) {
                    const r = Oe.Z.defaultRules.table.react(e, t, n);
                    return n.isMobile ? me.cloneElement(r, {
                        tabIndex: 0
                    }) : r
                }
            }),
            titledTable: nt({}, Le.zA.titledTable, {
                react: (e, t, n) => {
                    let r;
                    if (e.table)
                        if ("lint" === e.table.type) {
                            var i;
                            r = "table" === (null == (i = e.table.content) ? void 0 : i.type) ? so.lint.react(nt({}, e.table, {
                                content: nt({}, e, {
                                    table: e.table.content
                                })
                            }), t, nt({}, n, {
                                unwrapTitledTableContents: !0
                            })) : so.lint.react(e.table, t, n)
                        } else {
                            const i = Oe.Z.defaultRules.table.react(e.table, t, n)
                              , s = me.createElement("caption", {
                                key: "caption",
                                className: "perseus-table-title"
                            }, t(e.title, n));
                            r = me.cloneElement(i, null, [s, ...i.props.children])
                        }
                    else
                        r = "//invalid table//";
                    return n.unwrapTitledTableContents ? r : me.createElement("div", {
                        className: "perseus-titled-table",
                        key: n.key
                    }, r)
                }
            }),
            widget: nt({}, Le.zA.widget, {
                react: (e, t, n) => me.createElement("em", {
                    key: n.key
                }, `[Widget: ${e.id}]`)
            }),
            blockMath: nt({}, Le.zA.blockMath, {
                react: (e, t, n) => {
                    const {TeX: r} = gt();
                    return me.createElement(r, {
                        key: n.key
                    }, e.content)
                }
            }),
            math: nt({}, Le.zA.math, {
                react: (e, t, n) => {
                    const {TeX: r} = gt();
                    return me.createElement(r, {
                        key: n.key
                    }, e.content)
                }
            }),
            unescapedDollar: nt({}, Le.zA.unescapedDollar, {
                react: (e, t, n) => "$"
            }),
            link: nt({}, Le.zA.link, {
                react: function(e, t, n) {
                    const r = Oe.Z.defaultRules.link.react(e, t, n)
                      , i = r.props.href;
                    let s = null;
                    !!i && i.match(/https?:\/\/[^\/]*khanacademy.org|^\//) || (s = "noopener noreferrer");
                    const o = nt({}, r.props, {
                        target: "_blank",
                        href: i,
                        rel: s
                    });
                    return n.baseElements && n.baseElements.Link ? n.baseElements.Link(o) : me.cloneElement(r, o)
                }
            }),
            codeBlock: nt({}, Le.zA.codeBlock, {
                react: (e, t, n) => "alt" === e.lang ? me.createElement("div", {
                    key: n.key,
                    className: "perseus-markdown-alt perseus-sr-only"
                }, t(e.content, n)) : Oe.Z.defaultRules.codeBlock.react(e, t, n)
            }),
            lint: nt({}, Le.zA.lint, {
                react: (e, t, n) => me.createElement(ro, {
                    message: e.message,
                    ruleName: e.ruleName,
                    inline: oo(e.content),
                    blockHighlight: e.blockHighlight,
                    insideTable: e.insideTable,
                    severity: e.severity
                }, t(e.content, n))
            })
        });
        function oo(e) {
            return !!(e && e.type && ao.hasOwnProperty(e.type))
        }
        const ao = {
            text: !0,
            math: !0,
            unescapedDollar: !0,
            link: !0,
            img: !0,
            strong: !0,
            u: !0,
            em: !0,
            del: !0,
            code: !0
        }
          , lo = Oe.Z.parserFor(so)
          , co = (e, t) => lo(e + "\n\n", nt({}, t, {
            inline: !1
        }))
          , ho = (e, t) => {
            ve().isArray(e) ? ve().each(e, (e => ho(e, t))) : ve().isObject(e) && (t(e),
            "table" === e.type ? (ho(e.header, t),
            ho(e.cells, t)) : "list" === e.type ? ho(e.items, t) : "titledTable" === e.type ? ho(e.table, t) : "columns" === e.type ? (ho(e.col1, t),
            ho(e.col2, t)) : ve().isArray(e.content) && ho(e.content, t))
        }
          , po = e => {
            if (ve().isArray(e))
                return ve().flatten(ve().map(e, po));
            if (e.content && ve().isString(e.content))
                return -1 !== e.type.toLowerCase().indexOf("code") ? ["", e.content, ""] : [e.content.replace(/\s+/g, " ")];
            const t = ve().chain(e).values().flatten().filter((e => null != e && ve().has(e, "type"))).value();
            if (!t.length)
                return [];
            const n = po(t);
            if ("paragraph" === e.type && n.length) {
                n[0] = n[0].replace(/^\s+/, "");
                const e = n.length - 1;
                n[e] = n[e].replace(/\s+$/, "")
            }
            return n
        }
        ;
        var uo = {
            characterCount: e => {
                const t = co(e);
                return po(t).join("").length
            }
            ,
            traverseContent: ho,
            parse: co,
            parseInline: (e, t) => lo(e, nt({}, t, {
                inline: !0
            })),
            reactFor: Oe.Z.reactFor,
            ruleOutput: Oe.Z.ruleOutput(so, "react"),
            basicOutput: Oe.Z.reactFor(Oe.Z.ruleOutput(so, "react")),
            sanitizeUrl: Oe.Z.sanitizeUrl
        };
        class mo extends me.Component {
            render() {
                var e;
                const t = this.props.className ? "paragraph " + this.props.className : "paragraph";
                return me.createElement("div", {
                    className: this.props.inline ? null != (e = this.props.className) ? e : void 0 : t,
                    "data-perseus-component-index": this.props.translationIndex,
                    "data-perseus-paragraph-index": this.props.paragraphIndex
                }, this.props.children)
            }
        }
        const fo = "block"
          , go = ["default"]
          , vo = {}
          , yo = {}
          , bo = (e, t) => {
            vo[e] = t
        }
          , xo = e => {
            e.forEach((e => {
                bo(e.name, e)
            }
            )),
            Do()
        }
          , wo = (e, t) => {
            const n = vo[t];
            if (!n) {
                const n = `Failed to replace ${e} with ${t}`;
                throw new s.uI(n,s.D1.Internal)
            }
            bo(e, n)
        }
          , ko = () => {
            wo("transformer", "deprecated-standin"),
            wo("lights-puzzle", "deprecated-standin"),
            wo("reaction-diagram", "deprecated-standin"),
            wo("sequence", "deprecated-standin"),
            wo("simulator", "deprecated-standin"),
            wo("unit-input", "deprecated-standin")
        }
          , So = (e, t) => {
            const n = yo[t];
            if (n || !Ot)
                yo[e] = n;
            else {
                const n = `Failed to replace editor ${e} with ${t}`;
                Ot.error(n, s.D1.Internal)
            }
        }
          , Eo = e => {
            var t, n, r;
            return ve().has(vo, e) ? null != (t = vo[e]) && t.getWidget ? null == (n = (r = vo[e]).getWidget) ? void 0 : n.call(r) : vo[e].widget : null
        }
          , Mo = e => {
            var t;
            return null != (t = vo[e]) ? t : null
        }
          , Co = e => {
            var t, n;
            return null != (t = null == (n = vo[e]) ? void 0 : n.scorer) ? t : null
        }
          , To = e => {
            if (vo[e])
                return vo[e].version || {
                    major: 0,
                    minor: 0
                }
        }
          , _o = () => {
            const e = {};
            return ve().each(ve().keys(vo), (function(t) {
                e[t] = To(t)
            }
            )),
            e
        }
          , Ao = e => {
            const t = vo[e.type].accessible;
            return "function" == typeof t ? t(e.options) : !!t
        }
          , Io = e => {
            const t = e.type;
            if (!ve().isString(t))
                throw new s.uI("widget type must be a string, but was: " + t,s.D1.Internal);
            const n = vo[t];
            if (null == n)
                return e;
            const r = e.version || {
                major: 0,
                minor: 0
            }
              , i = n.version || {
                major: 0,
                minor: 0
            };
            if (r.major > i.major || r.major === i.major && r.minor > i.minor)
                return e;
            let o = ve().clone(e.options) || {};
            const a = n.propUpgrades || {};
            if (0 !== ve().keys(o).length)
                for (let e = r.major + 1; e <= i.major; e++)
                    a[String(e)] ? o = a[String(e)](o) : Ot.error("No upgrade found for widget. Cannot render.", s.D1.Internal, {
                        loggedMetadata: {
                            type: t,
                            fromMajorVersion: e - 1,
                            toMajorVersion: e
                        }
                    });
            o = nt({}, t in yo ? yo[t].defaultProps : {}, o);
            let l = e.alignment;
            null != l && "default" !== l || (l = Po(t)[0]);
            let c = e.static;
            return null == c && (c = false),
            ve().extend({}, e, {
                version: i,
                graded: null == e.graded || e.graded,
                alignment: l,
                static: c,
                options: o
            })
        }
          , Ro = (e, t, n) => {
            const r = e.type
              , i = vo[r];
            if (null == i)
                return e;
            let s;
            return s = e.static ? Fo(r) || ve().identity : i.transform || ve().identity,
            s(e.options, t, n)
        }
          , No = (e, t) => {
            if (!t)
                throw new s.uI("traverseRenderer must be provided, but was not",s.D1.Internal);
            if (!e || !e.type || !vo[e.type])
                return e;
            const n = vo[e.type]
              , r = e.options;
            if (n.traverseChildWidgets && r) {
                const i = n.traverseChildWidgets(r, t);
                return ve().extend({}, e, {
                    options: i
                })
            }
            return e
        }
          , Po = e => {
            const t = vo[e];
            return t && t.supportedAlignments || go
        }
          , Oo = e => {
            const t = vo[e];
            let n;
            return t ? (n = t.getDefaultAlignment ? t.getDefaultAlignment() : t.defaultAlignment,
            n || fo) : fo
        }
          , Lo = ["block", "inline-block", "inline", "float-left", "float-right", "full-width"]
          , Do = () => {
            ve().each(vo, (function(e) {
                if (e.defaultAlignment && !ve().contains(Lo, e.defaultAlignment))
                    throw new s.uI("Widget '" + e.displayName + "' has an invalid defaultAlignment value: " + e.defaultAlignment,s.D1.InvalidInput);
                if (e.supportedAlignments) {
                    const t = ve().difference(e.supportedAlignments, Lo);
                    if (t.length)
                        throw new s.uI("Widget '" + e.displayName + "' has an invalid value for supportedAlignments: " + t.join(" "),s.D1.InvalidInput)
                }
            }
            ))
        }
          , Fo = e => {
            const t = vo[e];
            return t && t.staticTransform
        }
          , zo = e => {
            const t = vo[e];
            return t && t.tracking || ""
        }
          , Bo = e => {
            const t = vo[e];
            return t && t.isLintable || false
        }
        ;
        var qo = Object.freeze({
            __proto__: null,
            registerWidget: bo,
            registerWidgets: xo,
            replaceWidget: wo,
            replaceDeprecatedWidgets: ko,
            registerEditors: e => {
                e.forEach((e => {
                    if (!e.widgetName)
                        throw new s.uI(`Editor ${e.displayName} doesn't have a widgetName property`,s.D1.Internal);
                    yo[e.widgetName] = e
                }
                ))
            }
            ,
            replaceEditor: So,
            replaceDeprecatedEditors: () => {
                So("transformer", "deprecated-standin"),
                So("lights-puzzle", "deprecated-standin"),
                So("reaction-diagram", "deprecated-standin"),
                So("sequence", "deprecated-standin"),
                So("simulator", "deprecated-standin"),
                So("unit-input", "deprecated-standin")
            }
            ,
            getWidget: Eo,
            getWidgetExport: Mo,
            getWidgetScorer: Co,
            getEditor: e => ve().has(yo, e) ? yo[e] : null,
            getTransform: e => ve().has(vo, e) ? vo[e].transform || ve().identity : null,
            getVersion: To,
            getVersionVector: _o,
            getPublicWidgets: () => ve().pick(vo, ve().reject(ve().keys(vo), (function(e) {
                return vo[e].hidden
            }
            ))),
            isAccessible: Ao,
            getAllWidgetTypes: () => ve().keys(vo),
            upgradeWidgetInfoToLatestVersion: Io,
            getRendererPropsForWidgetInfo: Ro,
            traverseChildWidgets: No,
            getSupportedAlignments: Po,
            getDefaultAlignment: Oo,
            validateAlignments: Do,
            supportsStaticMode: e => {
                const t = vo[e];
                return t && null != t.staticTransform
            }
            ,
            getStaticTransform: Fo,
            getTracking: zo,
            isLintable: Bo
        });
        function Ho(e, t, n, r, i) {
            const s = t.filter((t => {
                const n = e[t]
                  , r = null == (null == n ? void 0 : n.graded) || n.graded
                  , i = !(null == n || !n.static);
                return r && !i
            }
            ))
              , o = {};
            return s.forEach((t => {
                const s = e[t];
                if (!s)
                    return;
                const a = n[t]
                  , l = Co(s.type);
                if ("group" === s.type) {
                    const e = Ho(s.options.widgets, Object.keys(s.options.widgets), n[t], r, i);
                    o[t] = vn.flattenScores(e)
                } else
                    l && (o[t] = l(a, s.options, r, i))
            }
            )),
            o
        }
        class Uo {
            constructor() {
                this.previousContent = null,
                this.runLinter = (0,
                ge.debounce)(( (e, t) => {
                    "undefined" != typeof KA && e !== this.previousContent && (this.previousContent = e,
                    "" !== e ? fetch("/api/internal/translations/lint_poentry?preview=1&lang=en", {
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            msgid: e,
                            msgstr: e,
                            format: "perseus_text",
                            filename: ""
                        }),
                        method: "POST"
                    }).then((e => e.status >= 400 ? {
                        status: "error",
                        message: "Could not run i18n linter."
                    } : e.json()), (e => ({
                        status: "error",
                        message: "Could not run i18n linter."
                    }))).then((e => {
                        "error" === e.status ? t(["Some part of this text makes it untranslatable. The specific message from the i18n linter was: " + e.message.replace(/\n/g, " ")]) : t([])
                    }
                    )) : t([]))
                }
                ), 1e3)
            }
            applyLintErrors(e, t) {
                if (t.length) {
                    const n = t.join("\n\n");
                    e.unshift({
                        content: {
                            type: "text",
                            content: ""
                        },
                        insideTable: !1,
                        message: n,
                        ruleName: "legacy-error",
                        severity: x.Severity.ERROR,
                        type: "lint"
                    })
                }
            }
        }
        var Go = e => e.replace(/\{align[*]?\}/g, "{aligned}").replace(/[\u00a0]/g, " ");
        const {interactiveSizes: Wo} = Hn
          , Vo = {
            SMALL: "small",
            MEDIUM: "medium",
            LARGE: "large",
            XLARGE: "xlarge"
        }
          , $o = e => e === Vo.SMALL ? [Wo.defaultBoxSizeSmall, Wo.defaultBoxSizeSmall] : [Wo.defaultBoxSize, Wo.defaultBoxSize];
        class jo extends me.Component {
            constructor(...e) {
                super(...e),
                this.widgetRef = me.createRef(),
                this.state = {
                    sizeClass: Vo.MEDIUM,
                    widgetProps: this.props.initialProps
                },
                this.getWidget = () => this.widgetRef.current,
                this.replaceWidgetProps = e => {
                    this.setState({
                        widgetProps: e
                    })
                }
            }
            componentDidMount() {
                if (this.state.widgetProps.apiOptions.isMobile) {
                    const t = fe.findDOMNode(this).offsetWidth;
                    this.setState({
                        sizeClass: (e = t,
                        e ? e <= 512 ? Vo.SMALL : e <= 688 ? Vo.MEDIUM : Vo.LARGE : Vo.MEDIUM)
                    })
                }
                var e
            }
            UNSAFE_componentWillReceiveProps(e) {
                if (this.props.type !== e.type)
                    throw new Error("WidgetContainer can't change widget type; set a different key instead to recreate the container.")
            }
            shouldComponentUpdate(e, t) {
                return this.props.shouldHighlight !== e.shouldHighlight || this.props.type !== e.type || this.state.widgetProps !== t.widgetProps || this.state.sizeClass !== t.sizeClass
            }
            render() {
                let e = de()({
                    "perseus-widget-container": !0,
                    "widget-highlight": this.props.shouldHighlight,
                    "widget-nohighlight": !this.props.shouldHighlight,
                    "perseus-widget__definition": "definition" === this.props.type
                });
                const t = this.props.type
                  , n = Eo(t);
                if (null == n)
                    return console.warn(`Widget type '${t}' not found!`),
                    me.createElement("div", {
                        className: e
                    });
                let r = this.state.widgetProps.alignment;
                "default" === r && (r = Oo(t)),
                e += " widget-" + r;
                const i = this.state.widgetProps.apiOptions
                  , s = this.state.widgetProps.static || i.readOnly
                  , o = {
                    width: "100%",
                    height: "100%",
                    position: "absolute",
                    top: 0,
                    left: 0,
                    zIndex: 3
                }
                  , a = Bo(t) ? this.props.linterContext : nt({}, this.props.linterContext, {
                    highlightLint: !1
                });
                return me.createElement("div", {
                    className: e,
                    style: s ? {
                        position: "relative",
                        overflow: "visible"
                    } : {}
                }, me.createElement(vt.Consumer, null, ( ({analytics: e}) => me.createElement(Zs, {
                    metadata: {
                        widget_type: t,
                        widget_id: this.props.id
                    },
                    onError: () => {
                        e.onAnalyticsEvent({
                            type: "perseus:widget-rendering-error",
                            payload: {
                                widgetType: t,
                                widgetId: this.props.id
                            }
                        })
                    }
                }, me.createElement(n, nt({}, this.state.widgetProps, {
                    linterContext: a,
                    containerSizeClass: this.state.sizeClass,
                    ref: this.widgetRef
                })), s && me.createElement("div", {
                    style: o
                })))))
            }
        }
        jo.defaultProps = {
            linterContext: se
        };
        const {mapObject: Ko} = bi
          , Zo = /\S/
          , Yo = /(web\+graphie|https):\/\/[^\s]*/
          , Xo = () => {}
          , Jo = ["content", "problemNum", "widgets"]
          , Qo = e => "container:" + e;
        class ea extends me.Component {
            constructor(e) {
                super(e),
                this._currentFocus = void 0,
                this._foundTextNodes = void 0,
                this._interactionTrackers = void 0,
                this._isMounted = void 0,
                this._isTwoColumn = void 0,
                this._translationLinter = void 0,
                this._widgetContainers = new Map,
                this.lastRenderedMarkdown = void 0,
                this.reuseMarkdown = void 0,
                this.translationIndex = void 0,
                this.widgetIds = void 0,
                this.getApiOptions = () => nt({}, Rt.defaults, this.props.apiOptions),
                this._getInitialWidgetState = e => {
                    const t = this._getAllWidgetsInfo(e);
                    return {
                        widgetInfo: t,
                        widgetProps: this._getAllWidgetsStartProps(t, e)
                    }
                }
                ,
                this._getAllWidgetsInfo = e => Ko(e.widgets, ( (e, t) => {
                    if (!e.type || !e.alignment) {
                        const n = {};
                        e.type || (n.type = t.split(" ")[0]),
                        e.alignment || (n.alignment = "default"),
                        e = ve().extend({}, e, n)
                    }
                    return Io(e)
                }
                )),
                this._getAllWidgetsStartProps = (e, t) => {
                    const {apiOptions: n, problemNum: r} = t
                      , i = {}
                      , {strings: s} = this.props;
                    return (0,
                    Ne.qh)(e).forEach(( ([e,t]) => {
                        i[e] = Ro(t, s, r)
                    }
                    )),
                    null == n || null == n.onWidgetStartProps || n.onWidgetStartProps(i),
                    i
                }
                ,
                this._getDefaultWidgetInfo = e => {
                    const t = vn.rTypeFromWidgetId.exec(e);
                    return null == t ? {} : {
                        type: t[1],
                        graded: !0,
                        options: {}
                    }
                }
                ,
                this._getWidgetInfo = e => this.state.widgetInfo[e] || this._getDefaultWidgetInfo(e),
                this.renderWidget = (e, t, n) => {
                    const r = this.state.widgetInfo[t];
                    if (r && "full-width" === r.alignment && (n.foundFullWidth = !0),
                    r) {
                        const n = r && r.type || e
                          , i = ve().contains(this.props.highlightedWidgets, t);
                        return me.createElement(jo, {
                            key: Qo(t),
                            id: t,
                            ref: e => {
                                const n = Qo(t);
                                null != e ? this._widgetContainers.set(n, e) : this._widgetContainers.delete(n)
                            }
                            ,
                            type: n,
                            initialProps: this.getWidgetProps(t),
                            shouldHighlight: i,
                            linterContext: ae(this.props.linterContext, "widget")
                        })
                    }
                    return null
                }
                ,
                this.getSerializedState = e => Ko(e || this.state.widgetProps, ( (e, t) => {
                    const n = this.getWidgetInstance(t);
                    return n && n.getSerializedState ? n.getSerializedState() : e
                }
                )),
                this.restoreSerializedState = (e, t) => {
                    const n = ve().keys(e)
                      , r = ve().keys(this.state.widgetProps);
                    if (n.length !== r.length || ve().intersection(n, r).length !== n.length)
                        return void Ot.error("Refusing to restore bad serialized state:", s.D1.Internal, {
                            loggedMetadata: {
                                serializedState: JSON.stringify(e),
                                currentProps: JSON.stringify(this.state.widgetProps)
                            }
                        });
                    let i = 1;
                    const o = () => {
                        --i,
                        t && 0 === i && t()
                    }
                    ;
                    this.setState({
                        widgetProps: Ko(e, ( (e, t) => {
                            const n = this.getWidgetInstance(t);
                            if (n && n.restoreSerializedState) {
                                ++i;
                                const r = n.restoreSerializedState(e, o);
                                return ve().extend({}, this.state.widgetProps[t], r)
                            }
                            return e
                        }
                        ))
                    }, ( () => {
                        setTimeout(o, 0)
                    }
                    ))
                }
                ,
                this.showRationalesForCurrentlySelectedChoices = () => {
                    Object.keys(this.props.widgets).forEach((e => {
                        const t = this.getWidgetInstance(e);
                        t && t.showRationalesForCurrentlySelectedChoices && t.showRationalesForCurrentlySelectedChoices(this._getWidgetInfo(e).options)
                    }
                    ))
                }
                ,
                this.deselectIncorrectSelectedChoices = () => {
                    Object.keys(this.props.widgets).forEach((e => {
                        const t = this.getWidgetInstance(e);
                        t && t.deselectIncorrectSelectedChoices && t.deselectIncorrectSelectedChoices()
                    }
                    ))
                }
                ,
                this.findInternalWidgets = e => {
                    let t;
                    if ("string" == typeof e)
                        if (-1 !== e.indexOf(" ")) {
                            const n = e;
                            t = (e, t, r) => e === n
                        } else {
                            const n = e;
                            t = (e, t, r) => t.type === n
                        }
                    else
                        t = e;
                    const n = this.widgetIds.filter((e => {
                        const n = this._getWidgetInfo(e)
                          , r = this.getWidgetInstance(e);
                        return t(e, n, r)
                    }
                    )).map(this.getWidgetInstance);
                    return n
                }
                ,
                this.findWidgets = e => [...this.findInternalWidgets(e), ...this.props.findExternalWidgets(e)],
                this.getWidgetInstance = e => {
                    const t = this._widgetContainers.get(Qo(e));
                    return t ? t.getWidget() : null
                }
                ,
                this._onWidgetFocus = (e, t=[]) => {
                    if (!ve().isArray(t))
                        throw new s.uI("widget props.onFocus focusPath must be an Array, but was" + JSON.stringify(t),s.D1.Internal);
                    this._setCurrentFocus([e].concat(t))
                }
                ,
                this._onWidgetBlur = (e, t) => {
                    const n = this._currentFocus
                      , r = [e].concat(t);
                    ve().isEqual(r, n) && ve().defer(( () => {
                        ve().isEqual(this._currentFocus, n) && this._setCurrentFocus(null)
                    }
                    ))
                }
                ,
                this.getContent = (e, t) => t.jiptContent || e.content,
                this.shouldRenderJiptPlaceholder = (e, t) => gt().JIPT.useJIPT && null == t.jiptContent && -1 !== e.content.indexOf("crwdns"),
                this.replaceJiptContent = (e, t) => {
                    if (null == t)
                        this.setState({
                            jiptContent: e
                        });
                    else {
                        /^\s*(`{3,}|~{3,})\s*(\S+)?\s*\n([\s\S]+?)\s*\1\s*$/.test(e) || (/\S\n\s*\n\S/.test(e) ? e = "$\\large{\\red{\\text{Please translate each paragraph to a single paragraph.}}}$" : /^\s*$/.test(e) && (e = "$\\large{\\red{\\text{Translated paragraph is currently empty}}}$"));
                        const n = this.getContent(this.props, this.state)
                          , r = eo.parseToArray(n);
                        r[t] = e,
                        this.setState({
                            jiptContent: eo.joinFromArray(r)
                        })
                    }
                }
                ,
                this.outputMarkdown = (e, t) => {
                    if (ve().isArray(e)) {
                        const n = t.key
                          , r = [];
                        let i = !1;
                        for (let n = 0; n < e.length; n++) {
                            t.key = n,
                            t.paragraphIndex = n;
                            const s = this.outputMarkdown(e[n], t)
                              , o = "string" == typeof s;
                            "string" == typeof s && i ? r[r.length - 1] += s : r.push(s),
                            i = o
                        }
                        return t.key = n,
                        r
                    }
                    this._foundTextNodes = !1,
                    t.foundFullWidth = !1;
                    const n = this.outputNested(e, t);
                    let r;
                    return r = null != this.translationIndex ? null : de()({
                        "perseus-paragraph-centered": !this._foundTextNodes,
                        "perseus-paragraph-full-width": t.foundFullWidth && 1 === e.content.length
                    }),
                    me.createElement(mo, {
                        key: t.key,
                        className: r,
                        translationIndex: this.translationIndex,
                        paragraphIndex: t.paragraphIndex,
                        inline: this.props.inline
                    }, me.createElement(Zs, null, n))
                }
                ,
                this.outputNested = (e, t) => {
                    if (ve().isArray(e)) {
                        const n = t.key
                          , r = [];
                        let i = !1;
                        for (let n = 0; n < e.length; n++) {
                            t.key = n;
                            const s = this.outputNested(e[n], t)
                              , o = "string" == typeof s;
                            "string" == typeof s && i ? r[r.length - 1] += s : r.push(s),
                            i = o
                        }
                        return t.key = n,
                        r
                    }
                    return this.outputNode(e, this.outputNested, t)
                }
                ,
                this.outputNode = (e, t, n) => {
                    const r = this.getApiOptions()
                      , i = r.imagePlaceholder;
                    if ("widget" === e.type) {
                        const t = r.widgetPlaceholder;
                        return t || (this._foundTextNodes = !0,
                        ve().contains(this.widgetIds, e.id) ? me.createElement("span", {
                            key: n.key,
                            className: "renderer-widget-error"
                        }, ["Widget [[", "☃", " ", e.id, "]] already exists."].join("")) : (this.widgetIds.push(e.id),
                        this.renderWidget(e.widgetType, e.id, n)))
                    }
                    if ("blockMath" === e.type) {
                        const t = Go(e.content)
                          , i = {
                            overflowX: "auto",
                            overflowY: "hidden",
                            paddingTop: 10,
                            paddingBottom: 10,
                            marginTop: -10,
                            marginBottom: -10
                        };
                        if (r.isMobile) {
                            const e = 16
                              , r = {
                                marginLeft: -e,
                                marginRight: -e
                            }
                              , s = {
                                paddingLeft: e,
                                paddingRight: e
                            }
                              , o = nt({}, i, ta.mobileZoomableParentFix);
                            return me.createElement("div", {
                                key: n.key,
                                className: "perseus-block-math",
                                style: r
                            }, me.createElement(Zs, null, me.createElement("div", {
                                className: "perseus-block-math-inner",
                                style: nt({}, o, s)
                            }, me.createElement(Ws, null, t))))
                        }
                        return me.createElement("div", {
                            key: n.key,
                            className: "perseus-block-math"
                        }, me.createElement(Zs, null, me.createElement("div", {
                            className: "perseus-block-math-inner",
                            style: i
                        }, me.createElement(jt.Consumer, null, ( ({setAssetStatus: e}) => me.createElement(Hs, {
                            setAssetStatus: e
                        }, t))))))
                    }
                    if ("math" === e.type) {
                        const t = e.content.replace(/\{align[*]?\}/g, "{aligned}");
                        return me.createElement("span", {
                            key: n.key,
                            style: {
                                whiteSpace: "nowrap"
                            }
                        }, me.createElement(Zs, null, me.createElement("span", null), me.createElement(jt.Consumer, null, ( ({setAssetStatus: e}) => me.createElement(Hs, {
                            onRender: this.props.onRender,
                            setAssetStatus: e
                        }, t))), me.createElement("span", null)))
                    }
                    if ("image" === e.type) {
                        if (i)
                            return i;
                        const t = ve().has(this.props.images, e.target) ? this.props.images[e.target] : null
                          , s = !n.inTable;
                        return me.createElement(Zs, {
                            key: n.key
                        }, me.createElement(jt.Consumer, null, ( ({setAssetStatus: n}) => me.createElement(qs, nt({
                            setAssetStatus: n,
                            src: uo.sanitizeUrl(e.target),
                            alt: e.alt,
                            title: e.title,
                            responsive: s,
                            onUpdate: this.props.onRender,
                            zoomToFullSizeOnMobile: r.isMobile && r.isArticle
                        }, t)))))
                    }
                    if ("columns" === e.type)
                        return this._isTwoColumn = !0,
                        me.createElement(Zs, {
                            key: n.key
                        }, uo.ruleOutput(e, t, n));
                    if ("text" === e.type)
                        return Zo.test(e.content) && (this._foundTextNodes = !0),
                        i && Yo.test(e.content) ? i : e.content;
                    if ("table" === e.type || "titledTable" === e.type) {
                        const i = uo.ruleOutput(e, t, nt({}, n, {
                            isMobile: r.isMobile,
                            inTable: !0
                        }));
                        if (!r.isMobile)
                            return i;
                        const s = 16
                          , o = {
                            marginLeft: -s,
                            marginRight: -s
                        }
                          , a = nt({}, {
                            paddingLeft: 0,
                            paddingRight: 0
                        }, ta.mobileZoomableParentFix)
                          , l = me.createElement("div", {
                            style: nt({}, a, {
                                overflowX: "auto"
                            })
                        }, me.createElement(Zs, null, me.createElement(Us, {
                            animateHeight: !0
                        }, i)));
                        return me.createElement("div", {
                            style: o
                        }, l)
                    }
                    return me.createElement(Zs, {
                        key: n.key
                    }, uo.ruleOutput(e, t, n))
                }
                ,
                this.handleRender = e => {
                    const t = this.props.onRender
                      , n = e.onRender;
                    if (t !== Xo || n !== Xo) {
                        const e = ke()(fe.findDOMNode(this)).find("img");
                        n !== Xo && e.off("load", n),
                        t !== Xo && e.on("load", t)
                    }
                    t()
                }
                ,
                this._setCurrentFocus = e => {
                    const t = this.getApiOptions();
                    if (n = e,
                    r = this._currentFocus,
                    !(null === n || null === r ? n === r : ve().every(n, ( (e, t) => {
                        if (null != r)
                            return ve().isEqual(e, r[t])
                    }
                    )))) {
                        const n = this._currentFocus;
                        n && this.blurPath(n),
                        this._currentFocus = e,
                        t.onFocusChange(this._currentFocus, n)
                    }
                    var n, r
                }
                ,
                this.focus = () => {
                    let e, t;
                    for (let n = 0; n < this.widgetIds.length; n++) {
                        const r = this.widgetIds[n]
                          , i = this.getWidgetInstance(r)
                          , s = null == i || null == i.focus ? void 0 : i.focus();
                        if (s) {
                            e = r,
                            t = s;
                            break
                        }
                    }
                    if (e) {
                        let n;
                        return "object" == typeof t ? (n = [e].concat(t.path || []),
                        Ot.error("Renderer received a focus result of type 'object' instead of the expected type 'boolean'", s.D1.Internal, {
                            loggedMetadata: {
                                focusResult: JSON.stringify(t),
                                currentProps: JSON.stringify(this.state.widgetProps)
                            }
                        })) : n = [e],
                        this._setCurrentFocus(n),
                        !0
                    }
                }
                ,
                this.getDOMNodeForPath = e => {
                    const t = ve().first(e)
                      , n = ve().rest(e)
                      , r = this.getWidgetInstance(t);
                    return null != r && r.getDOMNodeForPath ? r.getDOMNodeForPath(n) : 0 === n.length ? fe.findDOMNode(r) : void 0
                }
                ,
                this.getInputPaths = () => {
                    const e = [];
                    return ve().each(this.widgetIds, (t => {
                        const n = this.getWidgetInstance(t);
                        if (n && n.getInputPaths) {
                            const r = n.getInputPaths();
                            ve().each(r, (n => {
                                const r = [t].concat(n);
                                e.push(r)
                            }
                            ))
                        }
                    }
                    )),
                    e
                }
                ,
                this.focusPath = e => {
                    if (ve().isEqual(this._currentFocus, e))
                        return;
                    this._currentFocus && this.blurPath(this._currentFocus);
                    const t = ve().first(e)
                      , n = ve().rest(e)
                      , r = this.getWidgetInstance(t);
                    null == r || null == r.focusInputPath || r.focusInputPath(n)
                }
                ,
                this.blurPath = e => {
                    if (!ve().isEqual(this._currentFocus, e))
                        return;
                    const t = ve().first(e)
                      , n = ve().rest(e);
                    if (this.getWidgetInstance(t)) {
                        const e = this.getWidgetInstance(t);
                        null == e || null == e.blurInputPath || e.blurInputPath(n)
                    }
                }
                ,
                this.blur = () => {
                    this._currentFocus && this.blurPath(this._currentFocus)
                }
                ,
                this.serialize = () => {
                    const e = {};
                    return ve().each(this.state.widgetInfo, (function(t, n) {
                        const r = this.getWidgetInstance(n).serialize();
                        ve().isEmpty(r) || (e[n] = r)
                    }
                    ), this),
                    e
                }
                ,
                this._setWidgetProps = (e, t, n, r) => {
                    this.setState((n => {
                        const i = nt({}, n.widgetProps, {
                            [e]: nt({}, n.widgetProps[e], t)
                        })
                          , s = r ? n.lastUsedWidgetId : e;
                        return r || this.props.onSerializedStateUpdated(this.getSerializedState(i)),
                        {
                            lastUsedWidgetId: s,
                            widgetProps: i
                        }
                    }
                    ), ( () => {
                        setTimeout(( () => {
                            const t = n && n();
                            r || this.props.onInteractWithWidget(e),
                            !1 !== t && this._setCurrentFocus([e])
                        }
                        ), 0)
                    }
                    ))
                }
                ,
                this.setInputValue = (e, t, n) => {
                    const r = ve().first(e)
                      , i = ve().rest(e)
                      , s = this.getWidgetInstance(r);
                    null == s || null == s.setInputValue || s.setInputValue(i, t, n)
                }
                ,
                this.getWidgetIds = () => this.widgetIds,
                this.examples = () => {
                    const e = this.widgetIds
                      , t = ve().compact(ve().map(e, (e => {
                        const t = this.getWidgetInstance(e);
                        return null != t && t.examples ? t.examples() : null
                    }
                    )));
                    if (!t.length)
                        return null;
                    return ve().all(t, (function(e) {
                        return ve().isEqual(t[0], e)
                    }
                    )) ? t[0] : null
                }
                ,
                this.handletranslationLintErrors = e => {
                    this._isMounted && this.setState({
                        translationLintErrors: e
                    })
                }
                ,
                this._translationLinter = new Uo,
                this.state = nt({
                    jiptContent: null,
                    translationLintErrors: [],
                    lastUsedWidgetId: null
                }, this._getInitialWidgetState(e))
            }
            componentDidMount() {
                this._isMounted = !0,
                this.handleRender({}),
                this._currentFocus = null,
                this.props.serializedState && this.restoreSerializedState(this.props.serializedState),
                this.props.linterContext.highlightLint && this._translationLinter.runLinter(this.props.content, this.handletranslationLintErrors)
            }
            UNSAFE_componentWillReceiveProps(e) {
                ve().isEqual(ve().pick(this.props, Jo), ve().pick(e, Jo)) || this.setState(this._getInitialWidgetState(e))
            }
            shouldComponentUpdate(e, t) {
                if (this.props.alwaysUpdate)
                    return !0;
                const n = !ve().isEqual(this.state, t);
                return !ve().isEqual(this.props, e) || n
            }
            UNSAFE_componentWillUpdate(e, t) {
                const n = this.shouldRenderJiptPlaceholder(this.props, this.state)
                  , r = this.shouldRenderJiptPlaceholder(e, t)
                  , i = this.getContent(this.props, this.state)
                  , s = this.getContent(e, t)
                  , o = this.props.highlightedWidgets
                  , a = e.highlightedWidgets;
                this.reuseMarkdown = !n && !r && i === s && ve().isEqual(this.state.translationLintErrors, t.translationLintErrors) && (!this.props.linterContext.highlightLint || ve().isEqual(this.props.widgets, e.widgets)) && this.props.linterContext.highlightLint === e.linterContext.highlightLint && o === a
            }
            componentDidUpdate(e, t) {
                this.handleRender(e),
                this.widgetIds.forEach((e => {
                    const t = this._widgetContainers.get(Qo(e));
                    null == t || t.replaceWidgetProps(this.getWidgetProps(e))
                }
                )),
                this.props.serializedState && !ve().isEqual(this.props.serializedState, this.getSerializedState()) && this.restoreSerializedState(this.props.serializedState),
                this.props.linterContext.highlightLint && this._translationLinter.runLinter(this.props.content, this.handletranslationLintErrors)
            }
            componentWillUnmount() {
                this.widgetIds = [],
                null != this.translationIndex && gt().rendererTranslationComponents.removeComponentAtIndex(this.translationIndex),
                this._isMounted = !1
            }
            getWidgetProps(e) {
                const t = this.getApiOptions()
                  , n = this.state.widgetProps[e] || {}
                  , r = this.state.widgetInfo[e]
                  , i = this.props.reviewMode && r ? r.options : null;
                this._interactionTrackers || (this._interactionTrackers = {});
                let s = this._interactionTrackers[e];
                return s || (s = this._interactionTrackers[e] = new Xs(t.trackInteraction,r && r.type,e,zo(r && r.type))),
                nt({}, n, {
                    widgetId: e,
                    alignment: r && r.alignment,
                    static: null == r ? void 0 : r.static,
                    problemNum: this.props.problemNum,
                    apiOptions: this.getApiOptions(),
                    keypadElement: this.props.keypadElement,
                    questionCompleted: this.props.questionCompleted,
                    showSolutions: this.props.showSolutions,
                    onFocus: ve().partial(this._onWidgetFocus, e),
                    onBlur: ve().partial(this._onWidgetBlur, e),
                    findWidgets: this.findWidgets,
                    reviewModeRubric: i,
                    reviewMode: this.props.reviewMode,
                    onChange: (t, n, r=!1) => {
                        this._setWidgetProps(e, t, n, r)
                    }
                    ,
                    trackInteraction: s.track,
                    isLastUsedWidget: e === this.state.lastUsedWidgetId
                })
            }
            emptyWidgets() {
                return function(e, t, n, r, i) {
                    return t.filter((t => {
                        const s = e[t];
                        if (!s || s.static)
                            return !1;
                        let o = null;
                        const a = n[t]
                          , l = Co(s.type);
                        if ("group" === s.type) {
                            const e = Ho(s.options.widgets, Object.keys(s.options.widgets), n[t], r, i);
                            o = vn.flattenScores(e)
                        } else
                            l && (o = l(a, s.options, r, i));
                        return o ? vn.scoreIsEmpty(o) : void 0
                    }
                    ))
                }(this.state.widgetInfo, this.widgetIds, this.getUserInputMap(), this.props.strings, this.context.locale)
            }
            getUserInput() {
                return this.widgetIds.map((e => {
                    const t = this.getWidgetInstance(e);
                    if (t && t.getUserInput)
                        return t.getUserInput()
                }
                ))
            }
            getUserInputMap() {
                const e = {};
                return this.widgetIds.forEach((t => {
                    const n = this.getWidgetInstance(t);
                    null != n && n.getUserInputMap ? e[t] = n.getUserInputMap() : null != n && n.getUserInput && (e[t] = n.getUserInput())
                }
                )),
                e
            }
            getPromptJSON() {
                const {content: e} = this.props
                  , t = {};
                return this.widgetIds.forEach((e => {
                    const n = this.getWidgetInstance(e);
                    t[e] = (null == n || null == n.getPromptJSON ? void 0 : n.getPromptJSON()) || {}
                }
                )),
                {
                    content: e,
                    widgets: t
                }
            }
            scoreWidgets() {
                return Ho(this.state.widgetInfo, this.widgetIds, this.getUserInputMap(), this.props.strings, this.context.locale)
            }
            score() {
                const e = this.scoreWidgets();
                return vn.flattenScores(e)
            }
            guessAndScore() {
                return [this.getUserInput(), this.score()]
            }
            render() {
                const e = this.getApiOptions();
                if (this.reuseMarkdown)
                    return this.lastRenderedMarkdown;
                const t = this.getContent(this.props, this.state);
                if (this.widgetIds = [],
                this.shouldRenderJiptPlaceholder(this.props, this.state) && (this.translationIndex || (this.translationIndex = gt().rendererTranslationComponents.addComponent(this)),
                !e.isArticle))
                    return me.createElement(js, null, me.createElement("div", {
                        "data-perseus-component-index": this.translationIndex
                    }, t));
                this._isTwoColumn = !1;
                const n = this.props.inline ? uo.parseInline(t, {
                    isJipt: null != this.translationIndex
                }) : uo.parse(t, {
                    isJipt: null != this.translationIndex
                });
                if (this.props.linterContext.highlightLint) {
                    !function(e, t, n, r=oe) {
                        const i = []
                          , s = new ne(e);
                        s.traverse(( (e, t, n) => {
                            if (ne.isTextNode(e)) {
                                let n = t.nextSibling();
                                for (; ne.isTextNode(n); )
                                    e.content += n.content,
                                    t.removeNextSibling(),
                                    n = t.nextSibling()
                            }
                        }
                        ));
                        let o = []
                          , a = !1;
                        s.traverse(( (e, s, c) => {
                            const h = []
                              , p = r.filter((e => e.applies(t)))
                              , u = [...t.stack];
                            u.push(e.type);
                            const d = l({}, t, {
                                stack: u.join(".")
                            });
                            if (p.forEach((t => {
                                const r = t.check(e, s, c, d);
                                r && ((r.start || r.end) && (r.target = c.substring(r.start, r.end)),
                                i.push(r),
                                n && h.push(r))
                            }
                            )),
                            n && ("table" === e.type ? (o.length && h.push(...o),
                            a = !1,
                            o = []) : a || (a = s.ancestors().some((e => "table" === e.type))),
                            a && h.length && o.push(...h),
                            h.length))
                                if (h.sort(( (e, t) => e.severity - t.severity)),
                                "text" !== e.type || h.length > 1)
                                    s.replace({
                                        type: "lint",
                                        content: e,
                                        message: h.map((e => e.message)).join("\n\n"),
                                        ruleName: h[0].rule,
                                        blockHighlight: d.blockHighlight,
                                        insideTable: a,
                                        severity: h[0].severity
                                    });
                                else {
                                    const t = e.content
                                      , n = h[0]
                                      , r = n.start || 0
                                      , i = n.end || t.length
                                      , o = t.substring(0, r)
                                      , l = t.substring(r, i)
                                      , c = t.substring(i)
                                      , p = [];
                                    o && p.push({
                                        type: "text",
                                        content: o
                                    }),
                                    p.push({
                                        type: "lint",
                                        content: {
                                            type: "text",
                                            content: l
                                        },
                                        message: n.message,
                                        ruleName: n.rule,
                                        insideTable: a,
                                        severity: n.severity
                                    }),
                                    c && p.push({
                                        type: "text",
                                        content: c
                                    }),
                                    s.replace(...p)
                                }
                        }
                        ))
                    }(n, nt({
                        content: this.props.content,
                        widgets: this.props.widgets
                    }, this.props.linterContext), !0),
                    this._translationLinter.applyLintErrors(n, [...this.state.translationLintErrors, ...this.props.legacyPerseusLint || []])
                }
                const r = this.outputMarkdown(n, {
                    baseElements: e.baseElements
                })
                  , i = de()({
                    [Nt.RENDERER]: !0,
                    [Nt.RESPONSIVE_RENDERER]: !0,
                    [Nt.TWO_COLUMN_RENDERER]: this._isTwoColumn
                });
                return this.lastRenderedMarkdown = me.createElement(js, null, me.createElement("div", {
                    className: i
                }, r)),
                this.lastRenderedMarkdown
            }
        }
        ea.contextType = it,
        ea.defaultProps = {
            content: "",
            widgets: {},
            images: {},
            highlightedWidgets: [],
            questionCompleted: !1,
            showSolutions: "none",
            onRender: Xo,
            onInteractWithWidget: function() {},
            findExternalWidgets: () => [],
            alwaysUpdate: !1,
            reviewMode: !1,
            serializedState: null,
            onSerializedStateUpdated: () => {}
            ,
            linterContext: se
        };
        const ta = {
            mobileZoomableParentFix: {
                transform: "translate3d(0,0,0)"
            }
        };
        let na = 0;
        class ra extends me.Component {
            constructor(e) {
                super(e),
                this.id = void 0,
                this.focus = () => {
                    fe.findDOMNode(this).focus()
                }
                ,
                this.blur = () => {
                    fe.findDOMNode(this).blur()
                }
                ,
                this.getValue = () => {
                    var e;
                    return null == (e = fe.findDOMNode(this)) ? void 0 : e.value
                }
                ,
                this.getStringValue = () => {
                    var e;
                    return null == (e = fe.findDOMNode(this)) ? void 0 : e.value.toString()
                }
                ,
                this.setSelectionRange = (e, t) => {
                    fe.findDOMNode(this).setSelectionRange(e, t)
                }
                ,
                this.getSelectionStart = () => fe.findDOMNode(this).selectionStart,
                this.getSelectionEnd = () => fe.findDOMNode(this).selectionEnd,
                e.id ? this.id = e.id : this.id = function(e="input-") {
                    return na++,
                    `${e}${na}`
                }()
            }
            render() {
                const {labelText: e, value: t, onFocus: n, onBlur: r, disabled: i, placeholder: s, onKeyDown: o, style: a} = this.props
                  , l = null === t ? "" : t.toString();
                return me.createElement(De.nv, {
                    style: a,
                    disabled: i,
                    id: this.id,
                    value: l,
                    type: "text",
                    "aria-label": e,
                    onChange: e => this.props.onChange(e),
                    placeholder: s,
                    onFocus: n,
                    onBlur: r,
                    onKeyDown: o,
                    autoCorrect: "off",
                    autoCapitalize: "off",
                    autoComplete: "off"
                })
            }
        }
        function ia(e, t) {
            if (null == e)
                return {};
            var n = {};
            for (var r in e)
                if ({}.hasOwnProperty.call(e, r)) {
                    if (t.includes(r))
                        continue;
                    n[r] = e[r]
                }
            return n
        }
        ra.defaultProps = {
            value: "",
            disabled: !1
        };
        const sa = ["position", "visibility", "left", "top"];
        let oa = function(e) {
            return e.Left = "left",
            e.Right = "right",
            e
        }({})
          , aa = function(e) {
            return e.Top = "top",
            e.Bottom = "bottom",
            e
        }({});
        const la = e => {
            let t, n, r, i;
            const s = `${e.width}px solid transparent`;
            "right" === e.horizontalDirection ? t = s : n = s;
            const o = `${e.height}px solid ${e.color}`;
            return "top" === e.verticalDirection ? r = o : i = o,
            me.createElement("div", {
                style: {
                    display: "block",
                    height: 0,
                    width: 0,
                    position: "absolute",
                    left: e.left,
                    top: e.top,
                    borderLeft: t,
                    borderRight: n,
                    borderTop: r,
                    borderBottom: i
                }
            })
        }
          , ca = e => {
            let {position: t="relative", visibility: n="visible", left: r=100, top: i=0} = e
              , s = ia(e, sa);
            const o = "top" === s.verticalDirection
              , a = o ? 0 : 1
              , l = o ? 0 : -1;
            return me.createElement("div", {
                style: {
                    display: "block",
                    position: t,
                    visibility: n,
                    left: r,
                    top: i,
                    width: s.width + 2,
                    height: s.height + 1,
                    marginTop: -1,
                    marginBottom: -2,
                    zIndex: 10
                }
            }, me.createElement(la, {
                horizontalDirection: s.horizontalDirection,
                verticalDirection: s.verticalDirection,
                color: s.border,
                left: 0,
                top: l,
                width: s.width + 2,
                height: s.height + 2
            }), me.createElement(la, {
                horizontalDirection: s.horizontalDirection,
                verticalDirection: s.verticalDirection,
                color: s.color,
                left: 1,
                top: a,
                width: s.width,
                height: s.height
            }))
        }
          , ha = {
            top: {
                top: "-100%"
            },
            bottom: {
                top: 0
            }
        }
          , pa = {
            left: {
                targetLeft: 0
            },
            right: {
                targetLeft: "100%"
            }
        }
          , ua = {
            left: {
                tooltipLeft: 0,
                arrowLeft: e => 0
            },
            right: {
                tooltipLeft: "-100%",
                arrowLeft: e => -e - 2
            }
        };
        class da extends me.Component {
            constructor(...e) {
                super(...e),
                this.state = {
                    height: null
                }
            }
            componentDidMount() {
                this._updateHeight()
            }
            UNSAFE_componentWillReceiveProps() {
                this.setState({
                    height: null
                })
            }
            componentDidUpdate() {
                this._updateHeight()
            }
            _renderToolTipDiv(e) {
                const t = Object.assign({}, pa[this.props.horizontalPosition], ua[this.props.horizontalAlign], ha[this.props.verticalPosition]);
                let n, r;
                return e ? (n = me.createElement(ca, {
                    verticalDirection: aa.Top,
                    horizontalDirection: this.props.horizontalAlign,
                    position: "absolute",
                    color: "white",
                    border: this.props.borderColor,
                    left: t.arrowLeft(this.props.arrowSize),
                    top: 2 - this.props.arrowSize,
                    width: this.props.arrowSize,
                    height: this.props.arrowSize,
                    zIndex: 10
                }),
                r = me.createElement(ca, {
                    verticalDirection: aa.Top,
                    horizontalDirection: this.props.horizontalAlign,
                    visibility: "hidden",
                    color: "white",
                    border: this.props.borderColor,
                    left: t.arrowLeft(this.props.arrowSize),
                    top: -1,
                    width: this.props.arrowSize,
                    height: this.props.arrowSize,
                    zIndex: 10
                })) : (n = me.createElement(ca, {
                    verticalDirection: aa.Bottom,
                    horizontalDirection: this.props.horizontalAlign,
                    color: "white",
                    border: this.props.borderColor,
                    left: t.arrowLeft(this.props.arrowSize),
                    top: -1,
                    width: this.props.arrowSize,
                    height: this.props.arrowSize,
                    zIndex: 10
                }),
                r = null),
                me.createElement("div", {
                    style: {
                        position: "relative",
                        height: 0,
                        display: this.props.show ? "block" : "none"
                    }
                }, me.createElement("div", {
                    ref: "tooltipContainer",
                    className: "tooltipContainer",
                    style: {
                        position: "absolute",
                        height: this.state.height || void 0,
                        left: t.targetLeft
                    }
                }, n, me.createElement("div", {
                    className: this.props.className,
                    ref: "tooltipContent",
                    style: {
                        position: "relative",
                        top: t.top,
                        left: t.tooltipLeft,
                        border: "1px solid " + this.props.borderColor,
                        boxShadow: "0 1px 3px " + this.props.borderColor,
                        zIndex: 9
                    }
                }, this.props.children.slice(1)), r))
            }
            _updateHeight() {
                const e = fe.findDOMNode(this.refs.tooltipContainer).offsetHeight;
                e !== this.state.height && this.setState({
                    height: e
                })
            }
            render() {
                const e = "top" === this.props.verticalPosition;
                return me.createElement("span", null, e && this._renderToolTipDiv(e), me.createElement("div", {
                    style: this.props.targetContainerStyle
                }, this.props.children[0]), !e && this._renderToolTipDiv())
            }
        }
        da.defaultProps = {
            className: "",
            arrowSize: 10,
            borderColor: "#ccc",
            verticalPosition: aa.Bottom,
            horizontalPosition: oa.Left,
            horizontalAlign: oa.Left,
            targetContainerStyle: {}
        };
        const {captureScratchpadTouchStart: ma} = vn;
        class fa extends me.Component {
            constructor(...e) {
                super(...e),
                this.state = {
                    focused: !1,
                    showExamples: !1
                },
                this._getUniqueId = () => `input-with-examples-${btoa(this.props.id).replace(/=/g, "")}`,
                this._getInputClassName = () => {
                    let e = Nt.INPUT + " " + Nt.INTERACTIVE;
                    return this.state.focused && (e += " " + Nt.FOCUSED),
                    this.props.className && (e += " " + this.props.className),
                    e
                }
                ,
                this._renderInput = () => {
                    const e = this._getUniqueId()
                      , t = {
                        id: e,
                        "aria-describedby": e,
                        ref: "input",
                        className: this._getInputClassName(),
                        labelText: this.props.labelText,
                        value: this.props.value,
                        onFocus: this._handleFocus,
                        onBlur: this._handleBlur,
                        disabled: this.props.disabled,
                        style: this.props.style,
                        onChange: this.props.onChange,
                        onTouchStart: ma,
                        autoCapitalize: "off",
                        autoComplete: "off",
                        autoCorrect: "off",
                        spellCheck: "false"
                    };
                    return me.createElement(ra, t)
                }
                ,
                this._handleFocus = () => {
                    this.props.onFocus(),
                    this.setState({
                        focused: !0,
                        showExamples: !0
                    })
                }
                ,
                this.show = () => {
                    this.setState({
                        showExamples: !0
                    })
                }
                ,
                this.hide = () => {
                    this.setState({
                        showExamples: !1
                    })
                }
                ,
                this._handleBlur = () => {
                    this.props.onBlur(),
                    this.setState({
                        focused: !1,
                        showExamples: !1
                    })
                }
                ,
                this.focus = () => {
                    this.refs.input.focus()
                }
                ,
                this.blur = () => {
                    this.refs.input.blur()
                }
                ,
                this.handleChange = e => {
                    this.props.onChange(e.target.value)
                }
            }
            render() {
                const e = this._renderInput()
                  , t = ve().map(this.props.examples, (e => "- " + e)).join("\n")
                  , n = this.props.shouldShowExamples && this.state.showExamples;
                return me.createElement(da, {
                    className: "perseus-formats-tooltip preview-measure",
                    horizontalPosition: oa.Left,
                    horizontalAlign: oa.Left,
                    verticalPosition: aa.Bottom,
                    arrowSize: 10,
                    borderColor: "#ccc",
                    show: n
                }, e, me.createElement("div", {
                    id: this._getUniqueId()
                }, me.createElement(ea, {
                    content: t,
                    linterContext: ae(this.props.linterContext, "input-with-examples"),
                    strings: this.context.strings
                })))
            }
        }
        fa.contextType = it,
        fa.defaultProps = {
            shouldShowExamples: !0,
            onFocus: function() {},
            onBlur: function() {},
            disabled: !1,
            linterContext: se,
            className: ""
        };
        const ga = ["keypadElement", "onFocus", "value"];
        class va extends me.Component {
            constructor(...e) {
                super(...e),
                this._isMounted = !1
            }
            componentDidMount() {
                this._isMounted = !0
            }
            componentWillUnmount() {
                this._isMounted = !1
            }
            focus() {
                this.refs.input.focus()
            }
            blur() {
                var e, t;
                "function" == typeof (null == (e = this.refs.input) ? void 0 : e.blur) && (null == (t = this.refs.input) || t.blur())
            }
            getValue() {
                return this.props.value
            }
            render() {
                const e = this
                  , t = e.props
                  , {keypadElement: n, onFocus: r, value: s} = t
                  , o = ia(t, ga);
                return me.createElement(i.VF, nt({
                    ref: "input",
                    keypadElement: n,
                    onFocus: () => {
                        n ? n.configure({
                            keypadType: i.H5.FRACTION
                        }, ( () => {
                            e._isMounted && r && r()
                        }
                        )) : r && r()
                    }
                    ,
                    value: null == s ? "" : "" + s
                }, o))
            }
        }
        va.propTypes = {
            keypadElement: i.si,
            onFocus: a().func,
            value: a().oneOfType([a().string, a().number])
        };
        function ya(e, t, n) {
            const r = e.indexOf("{", t) + 1
              , i = function(e, t) {
                let n = 0;
                for (let r = t, i = e.length; r < i; r++) {
                    const t = e[r];
                    if ("{" === t ? n++ : "}" === t && n--,
                    n < 0)
                        return r
                }
                return e.length
            }(e, r);
            return {
                endpoint: i,
                expression: xa(e.substring(r, i), n)
            }
        }
        function ba(e, t) {
            const n = e.indexOf("\\frac", t)
              , r = e.indexOf("\\dfrac", t);
            return n > -1 && r > -1 ? Math.min(n, r) : n > -1 ? n : r > -1 ? r : -1
        }
        function xa(e, t) {
            if (!e)
                return "";
            let n = ""
              , r = 0
              , i = ba(e, r);
            for (; i > -1; ) {
                n += e.substring(r, i),
                r = i;
                const s = ya(e, r, t);
                r = s.endpoint + 1;
                const o = ya(e, r, t);
                r = o.endpoint + 1,
                n.length && (n += " "),
                n += t(s.expression, o.expression),
                i = ba(e, r)
            }
            return n += e.slice(r),
            n
        }
        var wa = function(e) {
            return xa(e, (function(e, t) {
                return e + "/" + t
            }
            )).replace("\\%", "%")
        };
        const ka = wa
          , Sa = {
            number: {
                name: "Numbers",
                forms: "integer, decimal, proper, improper, mixed"
            },
            decimal: {
                name: "Decimals",
                forms: "decimal"
            },
            integer: {
                name: "Integers",
                forms: "integer"
            },
            rational: {
                name: "Fractions and mixed numbers",
                forms: "integer, proper, improper, mixed"
            },
            improper: {
                name: "Improper numbers (no mixed)",
                forms: "integer, proper, improper"
            },
            mixed: {
                name: "Mixed numbers (no improper)",
                forms: "integer, proper, mixed"
            },
            percent: {
                name: "Numbers or percents",
                forms: "integer, decimal, proper, improper, mixed, percent"
            },
            pi: {
                name: "Numbers with pi",
                forms: "pi"
            }
        };
        const Ea = {
            integer: function(e, t) {
                return t.integerExample
            },
            proper: function(e, t) {
                return "optional" === e.simplify ? t.properExample : t.simplifiedProperExample
            },
            improper: function(e, t) {
                return "optional" === e.simplify ? t.improperExample : t.simplifiedImproperExample
            },
            mixed: function(e, t) {
                return t.mixedExample
            },
            decimal: function(e, t) {
                return t.decimalExample
            },
            percent: function(e, t) {
                return t.percentExample
            },
            pi: function(e, t) {
                return t.piExample
            }
        };
        class Ma extends me.Component {
            constructor(...e) {
                super(...e),
                this.shouldShowExamples = () => "number" !== this.props.answerType,
                this.handleChange = (e, t) => {
                    this.props.onChange({
                        currentValue: e
                    }, t)
                }
                ,
                this._handleFocus = () => {
                    this.props.onFocus([])
                }
                ,
                this._handleBlur = () => {
                    this.props.onBlur([])
                }
                ,
                this.focus = () => (this.refs.input.focus(),
                !0),
                this.focusInputPath = e => {
                    this.refs.input.focus()
                }
                ,
                this.blurInputPath = e => {
                    var t, n;
                    "function" == typeof (null == (t = this.refs.input) ? void 0 : t.blur) && (null == (n = this.refs.input) || n.blur())
                }
                ,
                this.getInputPaths = () => [[]],
                this.setInputValue = (e, t, n) => {
                    this.props.onChange({
                        currentValue: t
                    }, n)
                }
                ,
                this.examples = () => {
                    const {strings: e} = this.context
                      , t = this.props.answerType
                      , n = Sa[t].forms.split(/\s*,\s*/)
                      , r = ve().map(n, (t => Ea[t](this.props, e)));
                    return [e.yourAnswer].concat(r)
                }
            }
            static getUserInputFromProps(e) {
                return {
                    currentValue: e.currentValue
                }
            }
            getUserInput() {
                return Ma.getUserInputFromProps(this.props)
            }
            getPromptJSON() {
                return e = this.props,
                t = this.getUserInput(),
                {
                    type: "input-number",
                    options: {
                        simplify: e.simplify,
                        answerType: e.answerType
                    },
                    userInput: {
                        value: t.currentValue
                    }
                };
                var e, t
            }
            render() {
                if (this.props.apiOptions.customKeypad) {
                    const e = me.createElement(va, {
                        ref: "input",
                        value: this.props.currentValue,
                        keypadElement: this.props.keypadElement,
                        onChange: this.handleChange,
                        onFocus: this._handleFocus,
                        onBlur: this._handleBlur
                    });
                    return this.props.rightAlign ? me.createElement("div", {
                        className: "perseus-input-right-align"
                    }, e) : e
                }
                const e = [Ca.default, "small" === this.props.size ? Ca.small : null, this.props.rightAlign ? Ca.rightAlign : Ca.leftAlign];
                return this.props.reviewMode && !this.props.currentValue && e.push(Ca.answerStateUnanswered),
                me.createElement(fa, {
                    ref: "input",
                    value: this.props.currentValue,
                    onChange: this.handleChange,
                    style: e,
                    examples: this.examples(),
                    shouldShowExamples: this.shouldShowExamples(),
                    onFocus: this._handleFocus,
                    onBlur: this._handleBlur,
                    id: this.props.widgetId,
                    disabled: this.props.apiOptions.readOnly,
                    linterContext: this.props.linterContext
                })
            }
        }
        Ma.contextType = it,
        Ma.defaultProps = {
            currentValue: "",
            size: "normal",
            answerType: "number",
            rightAlign: !1,
            apiOptions: Rt.defaults,
            linterContext: se
        };
        const Ca = pe.StyleSheet.create({
            default: {
                width: 80,
                height: "auto"
            },
            small: {
                width: 40
            },
            leftAlign: {
                paddingLeft: xe.W0.xxxSmall_4,
                paddingRight: 0
            },
            rightAlign: {
                textAlign: "right",
                paddingLeft: 0,
                paddingRight: xe.W0.xxxSmall_4
            },
            answerStateUnanswered: {
                backgroundColor: "#eee",
                border: "solid 1px #999"
            }
        });
        var Ta = {
            name: "input-number",
            displayName: "Input number (deprecated - use numeric input instead)",
            defaultAlignment: "inline-block",
            hidden: !0,
            widget: Ma,
            transform: e => {
                const {simplify: t, size: n, answerType: r, rightAlign: i} = e;
                return {
                    simplify: t,
                    size: n,
                    answerType: r,
                    rightAlign: i
                }
            }
            ,
            isLintable: !0,
            scorer: function(e, t, n) {
                null == t.answerType && (t.answerType = "number");
                const r = `${t.value}`
                  , i = zt.number.createValidatorFunctional(r, {
                    simplify: t.simplify,
                    inexact: t.inexact || void 0,
                    maxError: t.maxError,
                    forms: Sa[t.answerType].forms
                }, n)(ka(e.currentValue));
                return i.empty ? {
                    type: "invalid",
                    message: i.message
                } : {
                    type: "points",
                    earned: i.correct ? 1 : 0,
                    total: 1,
                    message: i.message
                }
            },
            getOneCorrectAnswerFromRubric(e) {
                if (null == e.value)
                    return;
                let t = String(e.value);
                return e.inexact && e.maxError && (t += " ± " + e.maxError),
                t
            }
        };
        const _a = wa
          , Aa = [{
            title: "Integers",
            value: "integer",
            content: "6"
        }, {
            title: "Decimals",
            value: "decimal",
            content: "0.75"
        }, {
            title: "Proper fractions",
            value: "proper",
            content: "⅗"
        }, {
            title: "Improper fractions",
            value: "improper",
            content: "⁷⁄₄"
        }, {
            title: "Mixed numbers",
            value: "mixed",
            content: "1¾"
        }, {
            title: "Numbers with π",
            value: "pi",
            content: "π"
        }];
        const Ia = {
            integer: (e, t) => t.integerExample,
            proper: (e, t) => "optional" === e.simplify ? t.properExample : t.simplifiedProperExample,
            improper: (e, t) => "optional" === e.simplify ? t.improperExample : t.simplifiedImproperExample,
            mixed: (e, t) => t.mixedExample,
            decimal: (e, t) => t.decimalExample,
            pi: (e, t) => t.piExample
        };
        class Ra extends me.Component {
            constructor(...e) {
                super(...e),
                this.inputRef = void 0,
                this.state = {
                    previousValues: [""]
                },
                this.examples = () => {
                    var e;
                    const t = 0 !== (null == (e = this.props.answerForms) ? void 0 : e.length) ? this.props.answerForms : Object.keys(Ia).map((e => ({
                        name: e,
                        simplify: "required"
                    })));
                    let n = ve().map(t, (e => Ia[e.name](e, this.context.strings)));
                    return n = ve().uniq(n),
                    [this.context.strings.yourAnswer].concat(n)
                }
                ,
                this.shouldShowExamples = () => {
                    var e, t;
                    const n = 0 === (null == (e = this.props.answerForms) ? void 0 : e.length)
                      , r = ve().uniq(null == (t = this.props.answerForms) ? void 0 : t.map((e => e.name))).length >= Object.keys(Ia).length;
                    return !n && !r
                }
                ,
                this.focus = () => {
                    var e;
                    return null == (e = this.inputRef) || e.focus(),
                    !0
                }
                ,
                this.focusInputPath = () => {
                    var e;
                    null == (e = this.inputRef) || e.focus()
                }
                ,
                this.blurInputPath = () => {
                    var e;
                    null == (e = this.inputRef) || e.blur()
                }
                ,
                this.getInputPaths = () => [[]],
                this.setInputValue = (e, t, n) => {
                    this.props.onChange({
                        currentValue: t
                    }, n)
                }
                ,
                this.handleChange = (e, t) => {
                    this.props.onChange({
                        currentValue: e
                    }, t),
                    this.props.trackInteraction()
                }
                ,
                this._handleFocus = () => {
                    this.props.onFocus([])
                }
                ,
                this._handleBlur = () => {
                    this.props.onBlur([])
                }
            }
            static getUserInputFromProps(e) {
                return {
                    currentValue: e.currentValue
                }
            }
            getUserInput() {
                return Ra.getUserInputFromProps(this.props)
            }
            getPromptJSON() {
                return e = this.props,
                t = this.getUserInput(),
                {
                    type: "numeric-input",
                    label: e.labelText,
                    userInput: {
                        value: t.currentValue
                    }
                };
                var e, t
            }
            render() {
                let e = this.props.labelText;
                null != e && "" !== e || (e = this.context.strings.yourAnswerLabel);
                const t = e => this.props.rightAlign ? me.createElement("div", {
                    className: "perseus-input-right-align"
                }, e) : e;
                if (this.props.apiOptions.customKeypad)
                    return t(me.createElement(va, {
                        ref: e => this.inputRef = e,
                        value: this.props.currentValue,
                        keypadElement: this.props.keypadElement,
                        onChange: this.handleChange,
                        onFocus: this._handleFocus,
                        onBlur: this._handleBlur
                    }));
                const n = pe.StyleSheet.create({
                    input: {
                        textAlign: this.props.rightAlign ? "right" : "left",
                        width: "small" === this.props.size ? 40 : 80,
                        padding: 0,
                        height: "auto"
                    }
                });
                return me.createElement("div", null, me.createElement(fa, {
                    ref: e => this.inputRef = e,
                    value: this.props.currentValue,
                    onChange: this.handleChange,
                    labelText: e,
                    examples: this.examples(),
                    shouldShowExamples: this.shouldShowExamples(),
                    onFocus: this._handleFocus,
                    onBlur: this._handleBlur,
                    id: this.props.widgetId,
                    disabled: this.props.apiOptions.readOnly,
                    style: n.input
                }))
            }
        }
        Ra.contextType = it,
        Ra.defaultProps = {
            currentValue: "",
            size: "normal",
            rightAlign: !1,
            apiOptions: Rt.defaults,
            coefficient: !1,
            answerForms: [],
            labelText: "",
            linterContext: se
        };
        const Na = function(e) {
            const t = e.flat()
              , n = (r = t,
            i = ve().isEqual,
            r.reduce(( (e, t) => ve().find(e, i.bind(null, t)) ? e : e.concat([t])), []));
            var r, i;
            const s = Object.keys(Ia);
            return ve().sortBy(n, (e => s.indexOf(e.name)))
        };
        var Pa = {
            name: "numeric-input",
            displayName: "Numeric input",
            defaultAlignment: "inline-block",
            accessible: !0,
            widget: Ra,
            transform: function(e) {
                return ve().extend(ve().omit(e, "answers"), {
                    answerForms: Na(e.answers.map((e => ve().map(e.answerForms, (t => ({
                        simplify: e.simplify,
                        name: t
                    }))))))
                })
            },
            isLintable: !0,
            scorer: function(e, t, n) {
                var r;
                const i = Aa.map((e => e.value)).filter((e => "pi" !== e))
                  , s = _a(e.currentValue)
                  , o = t.answers.filter((e => "correct" === e.status)).every((e => Math.abs(e.value) <= 1));
                let a = s;
                t.coefficient && (a ? "-" === a && (a = -1) : a = 1);
                const l = t.answers.map((e => {
                    const t = (e => {
                        var t;
                        const r = `${e.value}`
                          , s = [...null != (t = e.answerForms) ? t : []];
                        return e.strict && 0 !== s.length || s.push(...i),
                        zt.number.createValidatorFunctional(r, {
                            message: e.message,
                            simplify: "correct" === e.status ? e.simplify : "optional",
                            inexact: !0,
                            maxError: e.maxError,
                            forms: s
                        }, n)
                    }
                    )(e)
                      , r = t(function(e, t) {
                        if ("string" != typeof e || !e.endsWith("%"))
                            return e;
                        const n = parseFloat(e.slice(0, -1));
                        return isNaN(n) ? e : t ? n / 100 : n
                    }(a, o));
                    return nt({}, e, {
                        score: r
                    })
                }
                )).find((e => e.score.correct || "correct" === e.status && e.score.empty))
                  , c = "correct" === (null == l ? void 0 : l.status) ? l.score : {
                    empty: "ungraded" === (null == l ? void 0 : l.status),
                    correct: "correct" === (null == l ? void 0 : l.status),
                    message: null != (r = null == l ? void 0 : l.message) ? r : null,
                    guess: a
                };
                return c.empty ? {
                    type: "invalid",
                    message: c.message
                } : {
                    type: "points",
                    earned: c.correct ? 1 : 0,
                    total: 1,
                    message: c.message
                }
            },
            getOneCorrectAnswerFromRubric(e) {
                const t = e.answers.filter((e => "correct" === e.status)).map((e => {
                    let t = "decimal";
                    e.answerForms && e.answerForms[0] && (t = e.answerForms[0]);
                    let n = Lt.toNumericString(e.value, t);
                    return e.maxError && (n += " ± " + Lt.toNumericString(e.maxError, t)),
                    n
                }
                ));
                if (0 !== t.length)
                    return t[0]
            }
        };
        function Oa(e=0) {
            return {
                type: "points",
                earned: e,
                total: e,
                message: null
            }
        }
        function La(e, t, n, r) {
            let i;
            return i = "start" === t && "start" === r ? Range.START_TO_START : "start" === t && "end" === r ? Range.END_TO_START : "end" === t && "start" === r ? Range.START_TO_END : Range.END_TO_END,
            e.compareBoundaryPoints(i, n)
        }
        function Da(e, t) {
            const n = e.cloneRange();
            return n.setEnd(t.endContainer, t.endOffset),
            n
        }
        function Fa(e, t) {
            return !(La(e, "end", t, "start") < 0 || La(t, "end", e, "start") < 0)
        }
        function za(e, t) {
            if (!Fa(e, t))
                return null;
            return Da(La(e, "start", t, "start") < 0 ? e : t, La(e, "end", t, "end") > 0 ? e : t)
        }
        function Ba(e, t, n, r, i) {
            let s = -1
              , o = r
              , a = i
              , l = 0;
            for (; o <= a; ) {
                if (l++,
                l > 2 * t.length)
                    throw new Error(`Assertion error: Binary search isn't terminating? lower=${o}, upper=${a}`);
                const r = Math.floor((o + a) / 2);
                if ("first" === n) {
                    La(t[r], "end", e, "start") <= 0 ? o = r + 1 : (s = r,
                    a = r - 1)
                } else {
                    La(t[r], "start", e, "end") >= 0 ? a = r - 1 : (s = r,
                    o = r + 1)
                }
            }
            return s
        }
        function qa(e, t) {
            const n = {};
            let r = t.domRange
              , i = t.firstWordIndex
              , s = t.lastWordIndex;
            for (const t of Object.keys(e)) {
                const o = e[t]
                  , a = za(o.domRange, r);
                a ? (r = a,
                i = Math.min(o.firstWordIndex, i),
                s = Math.max(o.lastWordIndex, s)) : n[t] = o
            }
            const o = {
                firstWordIndex: i,
                lastWordIndex: s,
                domRange: r
            }
              , a = function(e) {
                const t = `${(new Date).getTime()}`;
                if (!e.includes(t))
                    return t;
                let n, r = 0;
                do {
                    n = `${t}-${r}`,
                    r++
                } while (e.includes(n));
                return n
            }(Object.keys(n));
            return n[a] = o,
            n
        }
        function Ha(e, t, n) {
            for (const t of Object.keys(e)) {
                const s = e[t].domRange;
                if (La(r = s, "start", i = n, "start") <= 0 && La(r, "end", i, "end") >= 0)
                    return null
            }
            var r, i;
            const s = function(e, t) {
                const n = Ba(e, t, "first", 0, t.length - 1);
                if (n < 0)
                    return null;
                const r = Ba(e, t, "last", n, t.length - 1);
                return r < 0 ? null : [n, r]
            }(n, t);
            if (!s)
                return null;
            const [o,a] = s;
            return {
                firstWordIndex: o,
                lastWordIndex: a,
                domRange: Da(t[o], t[a])
            }
        }
        function Ua(e, t) {
            const {firstWordIndex: n, lastWordIndex: r} = e.range
              , i = t[n];
            if (!i)
                throw new s.uI(`first word index ${i} is out of bounds: must be 0–${t.length - 1} inclusive`,s.D1.InvalidInput,{
                    metadata: {
                        firstWord: i,
                        wordRanges: JSON.stringify(t)
                    }
                });
            const o = t[r];
            if (!o)
                throw new s.uI(`last word index ${o} is out of bounds: must be 0–${t.length - 1} inclusive`,s.D1.InvalidInput,{
                    metadata: {
                        lastWord: o,
                        wordRanges: JSON.stringify(t)
                    }
                });
            return {
                firstWordIndex: n,
                lastWordIndex: r,
                domRange: Da(i, o)
            }
        }
        function Ga(e) {
            const {firstWordIndex: t, lastWordIndex: n} = e;
            return {
                range: {
                    type: "word-indexes",
                    firstWordIndex: t,
                    lastWordIndex: n
                }
            }
        }
        function Wa(e, t) {
            return {
                left: e.left - t.left,
                top: e.top - t.top
            }
        }
        function Va({left: e, top: t, width: n, height: r}, i) {
            return nt({}, Wa({
                left: e,
                top: t
            }, i), {
                width: n,
                height: r
            })
        }
        function $a(e) {
            const t = [];
            return ja(e.commonAncestorContainer, e, t),
            t
        }
        function ja(e, t, n) {
            const r = new Range;
            if (r.selectNodeContents(e),
            e.nodeType === Node.TEXT_NODE) {
                const o = Fa(i = t, s = r) ? Da(La(i, "start", s, "start") > 0 ? i : s, La(i, "end", s, "end") < 0 ? i : s) : null;
                o && function(e, t, n) {
                    const r = e.parentElement
                      , i = window.getComputedStyle(r);
                    let s = null;
                    if ("string" == typeof i.lineHeight && i.lineHeight.endsWith("px")) {
                        const e = parseFloat(i.lineHeight);
                        isNaN(e) || (s = e)
                    }
                    const o = Array.from(t.getClientRects());
                    for (const e of o) {
                        const t = {
                            left: e.left,
                            top: e.top,
                            height: e.height,
                            width: e.width
                        };
                        if (null !== s) {
                            const e = s - t.height;
                            t.top -= e,
                            t.height = s
                        }
                        n.push(t)
                    }
                }(e, o, n)
            } else if (e.nodeType === Node.ELEMENT_NODE) {
                if (!Fa(t, r))
                    return;
                for (const r of Array.from(e.childNodes))
                    ja(r, t, n)
            }
            var i, s
        }
        class Ka extends me.PureComponent {
            constructor(...e) {
                super(...e),
                this.state = {
                    cachedHighlightRects: this._computeRects(this.props),
                    tooltipIsHovered: !1
                }
            }
            UNSAFE_componentWillReceiveProps(e) {
                this.props.highlight === e.highlight && this.props.offsetParent === e.offsetParent || this.setState({
                    cachedHighlightRects: this._computeRects(e)
                })
            }
            _computeRects(e) {
                const {highlight: t, offsetParent: n} = e
                  , r = $a(t.domRange)
                  , {left: i, top: s} = n.getBoundingClientRect();
                return r.map((e => Va(e, {
                    left: i,
                    top: s
                })))
            }
            _rectIsHovered(e, t) {
                const n = Wa(t, {
                    left: e.left,
                    top: e.top
                });
                return 0 <= n.left && n.left < e.width && 0 <= n.top && n.top < e.height
            }
            isHovered(e) {
                if (!e)
                    return !1;
                const {offsetParent: t} = this.props
                  , {cachedHighlightRects: n} = this.state
                  , {left: r, top: i} = t.getBoundingClientRect()
                  , s = Wa(e, {
                    left: r,
                    top: i
                });
                return n.some((e => this._rectIsHovered(e, s)))
            }
            render() {
                const e = this.state.cachedHighlightRects;
                return me.createElement("div", null, e.map(( (e, t) => me.createElement("div", {
                    key: t,
                    className: (0,
                    pe.css)(Za.highlightRect),
                    style: {
                        position: "absolute",
                        width: e.width,
                        height: e.height,
                        top: e.top,
                        left: e.left,
                        zIndex: this.props.zIndexes.belowContent
                    }
                }))))
            }
        }
        const Za = pe.StyleSheet.create({
            highlightRect: {
                background: "#fffabe"
            }
        });
        class Ya extends me.PureComponent {
            _getFocusRect() {
                const {focusNode: e, focusOffset: t, offsetParent: n} = this.props
                  , r = document.createRange();
                r.setStart(e, t),
                r.setEnd(e, t);
                const i = r.getClientRects()[0];
                if (!i)
                    return Ot.log('[Highlighting] Known bug: Could not determine the focus position, so did not show an "Add Highlight" tooltip. https://app.asana.com/0/329800276300868/413878480039713 (see also /r/asana-links)'),
                    null;
                const {left: s, top: o} = n.getBoundingClientRect();
                return Va({
                    left: i.left,
                    top: i.top,
                    width: i.width,
                    height: i.height
                }, {
                    left: s,
                    top: o
                })
            }
            render() {
                const e = this._getFocusRect();
                if (!e)
                    return null;
                const t = me.createElement("div", {
                    className: (0,
                    pe.css)(Xa.tooltipLabel),
                    onClick: this.props.onClick
                }, this.props.label)
                  , n = {
                    position: "absolute",
                    left: e.left,
                    top: `calc(${Math.round(e.top)}px + 0.95em)`,
                    height: 0
                };
                return me.createElement("div", {
                    style: n,
                    onMouseEnter: this.props.onMouseEnter,
                    onMouseLeave: this.props.onMouseLeave
                }, me.createElement(ce.ZP, {
                    content: t,
                    opened: !0
                }, me.createElement("div", null)))
            }
        }
        const Xa = pe.StyleSheet.create({
            tooltipLabel: {
                userSelect: "none",
                fontFamily: '"Lato", sans-serif',
                padding: `10px ${xe.W0.medium_16}px`,
                cursor: "pointer"
            }
        });
        class Ja extends me.PureComponent {
            constructor(...e) {
                super(...e),
                this.state = {
                    hoveredHighlightKey: null,
                    hoveringTooltipFor: null
                },
                this._highlightRenderers = {},
                this._handleMouseMove = e => {
                    const t = {
                        left: e.clientX,
                        top: e.clientY
                    }
                      , n = this._getHoveredHighlightKey(t);
                    this.setState({
                        hoveredHighlightKey: n
                    })
                }
            }
            componentDidMount() {
                this._updateEditListeners(!1, this.props.editable)
            }
            UNSAFE_componentWillReceiveProps(e) {
                this._updateEditListeners(this.props.editable, e.editable),
                null == this.state.hoveredHighlightKey || this.state.hoveredHighlightKey in e.highlights || this.setState({
                    hoveredHighlightKey: null
                }),
                null == this.state.hoveringTooltipFor || this.state.hoveringTooltipFor in e.highlights || this.setState({
                    hoveringTooltipFor: null
                })
            }
            componentWillUnmount() {
                this._updateEditListeners(this.props.editable, !1)
            }
            _updateEditListeners(e, t) {
                !e && t ? window.addEventListener("mousemove", this._handleMouseMove) : e && !t && (window.removeEventListener("mousemove", this._handleMouseMove),
                this.setState({
                    hoveredHighlightKey: null,
                    hoveringTooltipFor: null
                }))
            }
            _getHoveredHighlightKey(e) {
                const {hoveringTooltipFor: t} = this.state;
                if ("string" == typeof t)
                    return t;
                return Object.keys(this.props.highlights).find((t => {
                    const n = this._highlightRenderers[t];
                    return n && n.isHovered(e)
                }
                ))
            }
            _renderTooltip() {
                const {hoveredHighlightKey: e} = this.state;
                if (null == e)
                    return null;
                const t = this.props.highlights[e];
                return me.createElement(Ya, {
                    label: this.context.strings.removeHighlight,
                    focusNode: t.domRange.endContainer,
                    focusOffset: t.domRange.endOffset,
                    offsetParent: this.props.offsetParent,
                    onClick: () => this.props.onRemoveHighlight(e),
                    onMouseEnter: () => this.setState({
                        hoveringTooltipFor: e
                    }),
                    onMouseLeave: () => this.setState({
                        hoveringTooltipFor: null
                    })
                })
            }
            render() {
                return me.createElement("div", null, Object.keys(this.props.highlights).map((e => me.createElement(Ka, {
                    ref: t => {
                        t ? this._highlightRenderers[e] = t : delete this._highlightRenderers[e]
                    }
                    ,
                    key: e,
                    highlight: this.props.highlights[e],
                    highlightKey: e,
                    offsetParent: this.props.offsetParent,
                    zIndexes: this.props.zIndexes
                }))), this.props.editable && this._renderTooltip())
            }
        }
        Ja.contextType = it;
        class Qa extends me.PureComponent {
            constructor(...e) {
                super(...e),
                this.state = {
                    mouseState: "up",
                    trackedSelection: null
                },
                this._handleSelectionChange = () => {
                    this._updateTrackedSelection(),
                    "down" === this.state.mouseState && this.setState({
                        mouseState: "down-and-selecting"
                    })
                }
                ,
                this._handleMouseDown = () => {
                    this.setState({
                        mouseState: "down"
                    })
                }
                ,
                this._handleMouseUp = () => {
                    this.setState({
                        mouseState: "up"
                    })
                }
            }
            componentDidMount() {
                this._updateListeners(!1, this.props.enabled)
            }
            componentDidUpdate(e) {
                this.props.buildHighlight !== e.buildHighlight && this._updateTrackedSelection(),
                this._updateListeners(e.enabled, this.props.enabled)
            }
            componentWillUnmount() {
                this._updateListeners(this.props.enabled, !1)
            }
            _updateListeners(e, t) {
                !e && t ? (window.addEventListener("mousedown", this._handleMouseDown),
                window.addEventListener("mouseup", this._handleMouseUp),
                document.addEventListener("selectionchange", this._handleSelectionChange)) : e && !t && (window.removeEventListener("mousedown", this._handleMouseDown),
                window.removeEventListener("mouseup", this._handleMouseUp),
                document.removeEventListener("selectionchange", this._handleSelectionChange),
                this.setState({
                    mouseState: "up",
                    trackedSelection: null
                }))
            }
            _computeFocusAndRange() {
                const e = document.getSelection();
                if (!e || 0 === e.rangeCount)
                    return null;
                const t = e.getRangeAt(0);
                if (t.collapsed)
                    return null;
                return {
                    focusNode: e.focusNode,
                    focusOffset: e.focusOffset,
                    range: t
                }
            }
            _updateTrackedSelection() {
                const e = this._computeFocusAndRange();
                if (!e)
                    return void this.setState({
                        trackedSelection: null
                    });
                const {focusNode: t, focusOffset: n, range: r} = e
                  , i = this.props.buildHighlight(r);
                if (!i)
                    return void this.setState({
                        trackedSelection: null
                    });
                const s = {
                    focusNode: t,
                    focusOffset: n,
                    proposedHighlight: i
                };
                this.setState({
                    trackedSelection: s
                })
            }
            render() {
                const {mouseState: e, trackedSelection: t} = this.state
                  , n = "down-and-selecting" === e;
                return this.props.children ? me.createElement("div", null, this.props.children(t, n)) : null
            }
        }
        class el extends me.PureComponent {
            _handleAddHighlight(e) {
                this.props.onAddHighlight(e);
                const t = document.getSelection();
                t && t.collapseToEnd()
            }
            _selectionIsValid(e) {
                if (!e)
                    return !1;
                const {contentNode: t} = this.props
                  , n = new Range;
                n.selectNodeContents(t);
                const r = new Range;
                r.setStart(e.focusNode, e.focusOffset),
                r.collapse(!0);
                return Fa(n, r)
            }
            render() {
                return me.createElement(Qa, {
                    buildHighlight: this.props.buildHighlight,
                    enabled: this.props.editable
                }, ( (e, t) => me.createElement("div", null, me.createElement(Ja, {
                    editable: this.props.editable && !this._selectionIsValid(e),
                    highlights: this.props.highlights,
                    offsetParent: this.props.offsetParent,
                    onRemoveHighlight: this.props.onRemoveHighlight,
                    zIndexes: this.props.zIndexes
                }), this._selectionIsValid(e) && !t && me.createElement(Ya, {
                    label: this.context.strings.addHighlight,
                    onClick: () => this._handleAddHighlight(e.proposedHighlight),
                    focusNode: e.focusNode,
                    focusOffset: e.focusOffset,
                    offsetParent: this.props.offsetParent
                }))))
            }
        }
        el.contextType = it;
        class tl extends me.PureComponent {
            constructor(...e) {
                super(...e),
                this._container = void 0
            }
            componentDidMount() {
                this._sendWordsUpdate()
            }
            componentDidUpdate() {
                this._sendWordsUpdate()
            }
            _sendWordsUpdate() {
                this.props.onWordsUpdate(this._getWordRanges())
            }
            _getWordRanges() {
                const e = this._container;
                if (!e)
                    throw new s.uI("invariant violation: `this._container` is not defined, but this method is only called after mount/update",s.D1.NotAllowed);
                const t = e.ownerDocument.createTreeWalker(e, NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT, ( () => NodeFilter.FILTER_ACCEPT), !1)
                  , n = [];
                let r = null;
                for (; t.nextNode(); ) {
                    const e = t.currentNode;
                    if (e.nodeType === Node.ELEMENT_NODE) {
                        "inline" !== getComputedStyle(e).display && (r = null)
                    } else if (e.nodeType === Node.TEXT_NODE) {
                        const t = e.nodeValue
                          , i = /\S+/g;
                        let s, o = null;
                        for (; null !== (s = i.exec(t)); ) {
                            const i = s.index
                              , a = s.index + s[0].length;
                            let l;
                            0 === i && r ? (l = r,
                            l.setEnd(e, a)) : (l = e.ownerDocument.createRange(),
                            l.setStart(e, i),
                            l.setEnd(e, a),
                            n.push(l)),
                            a === t.length && (o = l)
                        }
                        r = o
                    }
                }
                return n
            }
            render() {
                return me.createElement("div", {
                    ref: e => this._container = e
                }, this.props.children)
            }
        }
        class nl extends me.PureComponent {
            constructor(...e) {
                super(...e),
                this._container = void 0,
                this._content = void 0,
                this.state = {
                    wordRanges: []
                },
                this._handleAddHighlight = e => {
                    const t = qa(this._getDOMHighlights(), e)
                      , n = {};
                    for (const e of Object.keys(t))
                        n[e] = Ga(t[e]);
                    this.props.onSerializedHighlightsUpdate(n)
                }
                ,
                this._handleRemoveHighlight = e => {
                    const {serializedHighlights: t} = this.props
                      , n = nt({}, t);
                    delete n[e],
                    this.props.onSerializedHighlightsUpdate(n)
                }
                ,
                this._handleWordsUpdate = e => {
                    this.setState({
                        wordRanges: e
                    })
                }
            }
            _buildHighlight(e) {
                return Ha(this._getDOMHighlights(), this.state.wordRanges, e)
            }
            _getDOMHighlights() {
                const {serializedHighlights: e} = this.props
                  , {wordRanges: t} = this.state
                  , n = {};
                for (const r of Object.keys(e))
                    n[r] = Ua(e[r], t);
                return n
            }
            render() {
                const e = this._getDOMHighlights();
                return me.createElement("div", {
                    className: (0,
                    pe.css)(rl.container),
                    ref: e => this._container = e
                }, me.createElement("div", null, this.props.enabled && this._container && this._content && me.createElement(el, {
                    buildHighlight: e => this._buildHighlight(e),
                    contentNode: this._content,
                    editable: this.props.editable,
                    highlights: e,
                    offsetParent: this._container,
                    zIndexes: {
                        belowContent: 0
                    },
                    onAddHighlight: this._handleAddHighlight,
                    onRemoveHighlight: this._handleRemoveHighlight
                })), me.createElement("div", {
                    className: (0,
                    pe.css)(rl.content),
                    ref: e => this._content = e
                }, me.createElement(tl, {
                    onWordsUpdate: this._handleWordsUpdate
                }, this.props.children)))
            }
        }
        const rl = pe.StyleSheet.create({
            container: {
                position: "relative",
                zIndex: 0
            },
            content: {
                position: "relative",
                zIndex: 1
            }
        });
        function il() {
            return {
                currentRef: [],
                useRefs: !0,
                lastRef: 0,
                firstSentenceRef: null,
                firstQuestionRef: null,
                lastFootnote: {
                    id: 0,
                    text: ""
                }
            }
        }
        class sl extends me.Component {
            constructor(...e) {
                super(...e),
                this.getRefContent = () => this.props.refContent
            }
            render() {
                return me.createElement("span", {
                    style: pl
                }, "_")
            }
        }
        class ol extends me.Component {
            render() {
                return me.createElement("span", {
                    style: pl
                }, "_")
            }
        }
        const al = ({id: e, number: t}) => {
            const {strings: n} = ot();
            return me.createElement("span", {
                key: "alt-text",
                className: "perseus-sr-only"
            }, n[e]({
                number: t
            }))
        }
          , ll = {
            newline: Oe.Z.defaultRules.newline,
            paragraph: Oe.Z.defaultRules.paragraph,
            escape: Oe.Z.defaultRules.escape,
            passageFootnote: {
                order: Oe.Z.defaultRules.escape.order + .1,
                match: Oe.Z.inlineRegex(/^\^/),
                parse: (e, t, n) => {
                    const r = n.lastFootnote.id + 1
                      , i = {
                        id: r,
                        text: 1 === r ? "*" : "" + r
                    };
                    return "*" === n.lastFootnote.text && (n.lastFootnote.text = "" + n.lastFootnote.id),
                    n.lastFootnote = i,
                    i
                }
                ,
                react: (e, t, n) => me.createElement("sup", {
                    key: n.key
                }, e.text)
            },
            refStart: {
                order: Oe.Z.defaultRules.escape.order + .2,
                match: function(e) {
                    const t = /^\{\{/.exec(e);
                    if (t) {
                        let n = 2
                          , r = 0;
                        for (; n < e.length; ) {
                            const t = e.slice(n, n + 2);
                            if ("{{" === t)
                                r++,
                                n++;
                            else if ("}}" === t) {
                                if (!(r > 0))
                                    break;
                                r--,
                                n++
                            }
                            n++
                        }
                        return t[1] = e.slice(2, n),
                        t
                    }
                    return null
                },
                parse: (e, t, n) => {
                    if (!n.useRefs)
                        return {
                            ref: null,
                            refContent: null
                        };
                    const r = n.lastRef + 1;
                    n.lastRef = r,
                    n.currentRef.push(r);
                    return {
                        ref: r,
                        refContent: t("(“" + e[1] + "”)\n\n", ve().defaults({
                            useRefs: !1
                        }, {
                            currentRef: [],
                            useRefs: !0,
                            lastRef: 0,
                            firstSentenceRef: null,
                            firstQuestionRef: null,
                            lastFootnote: {
                                id: 0,
                                text: ""
                            }
                        }))
                    }
                }
                ,
                react: (e, t, n) => {
                    const r = e.ref;
                    if (null == r)
                        return null;
                    const i = t(e.refContent, {});
                    return me.createElement(sl, {
                        ref: cl + r,
                        key: cl + r,
                        refContent: i
                    })
                }
            },
            refEnd: {
                order: Oe.Z.defaultRules.escape.order + .3,
                match: Oe.Z.inlineRegex(/^\}\}/),
                parse: (e, t, n) => {
                    if (!n.useRefs)
                        return {
                            ref: null
                        };
                    return {
                        ref: n.currentRef.pop() || null
                    }
                }
                ,
                react: (e, t, n) => null != e.ref ? me.createElement(ol, {
                    ref: hl + e.ref,
                    key: hl + e.ref
                }) : null
            },
            squareLabel: {
                order: Oe.Z.defaultRules.escape.order + .4,
                match: Oe.Z.inlineRegex(/^\[\[(\w+)\]\]( *)/),
                parse: (e, t, n) => (n.firstQuestionRef || (n.firstQuestionRef = e[1]),
                {
                    content: e[1],
                    space: e[2].length > 0
                }),
                react: (e, t, n) => [me.createElement("span", {
                    key: "visual-square",
                    className: "perseus-passage-square-label",
                    style: ul,
                    "aria-hidden": "true"
                }, me.createElement("span", {
                    style: dl
                }, e.content)), me.createElement(al, {
                    key: "alt-text",
                    id: "questionMarker",
                    number: e.content
                }), e.space ? " " : null]
            },
            circleLabel: {
                order: Oe.Z.defaultRules.escape.order + .5,
                match: Oe.Z.inlineRegex(/^\(\((\w+)\)\)( *)/),
                parse: (e, t, n) => ({
                    content: e[1],
                    space: e[2].length > 0
                }),
                react: (e, t, n) => [me.createElement("span", {
                    key: "visual-circle",
                    className: "perseus-passage-circle-label",
                    style: ul,
                    "aria-hidden": !0
                }, me.createElement("span", {
                    style: ml
                }, e.content)), me.createElement(al, {
                    key: "alt-text",
                    id: "circleMarker",
                    number: e.content
                }), e.space ? " " : null]
            },
            squareBracketRef: {
                order: Oe.Z.defaultRules.escape.order + .6,
                match: Oe.Z.inlineRegex(/^\[(\d+)\]( *)/),
                parse: (e, t, n) => (n.firstSentenceRef || (n.firstSentenceRef = e[1]),
                {
                    content: e[1],
                    space: e[2].length > 0
                }),
                react: (e, t, n) => [me.createElement("span", {
                    key: "visual-brackets",
                    className: "perseus-passage-bracket-label",
                    "aria-hidden": "true"
                }, "[", e.content, "]"), me.createElement(al, {
                    key: "alt-text",
                    id: "sentenceMarker",
                    number: e.content
                }), e.space ? " " : null]
            },
            highlight: {
                order: Oe.Z.defaultRules.escape.order + .7,
                match: Oe.Z.inlineRegex(/^{highlighting.start}(.+?){highlighting.end}/),
                parse: (e, t, n) => ({
                    content: e[1]
                }),
                react: (e, t, n) => [me.createElement("span", {
                    key: 0,
                    className: "perseus-highlight"
                }, e.content)]
            },
            reviewHighlight: {
                order: Oe.Z.defaultRules.escape.order + .7,
                match: Oe.Z.inlineRegex(/^{review-highlighting.start}(.+?){review-highlighting.end}/),
                parse: (e, t, n) => ({
                    content: e[1]
                }),
                react: (e, t, n) => [me.createElement("span", {
                    key: 0,
                    className: "perseus-review-highlight"
                }, e.content)]
            },
            strong: Oe.Z.defaultRules.strong,
            u: Oe.Z.defaultRules.u,
            em: Oe.Z.defaultRules.em,
            del: Oe.Z.defaultRules.del,
            text: nt({}, Oe.Z.defaultRules.text, {
                react: (e, t, n) => me.createElement("span", {
                    key: n.key
                }, e.content)
            })
        }
          , cl = "start-ref-"
          , hl = "end-ref-"
          , pl = {
            display: "inline-block",
            width: 0,
            visibility: "hidden"
        }
          , ul = {
            display: "inline",
            whiteSpace: "nowrap"
        }
          , dl = {
            display: "inline-block",
            color: "rgb(255, 255, 255)",
            backgroundColor: "rgb(90, 90, 90)",
            paddingLeft: 10,
            paddingRight: 10,
            userSelect: "none",
            WebkitUserSelect: "none"
        }
          , ml = {
            display: "inline-block",
            color: "rgb(255, 255, 255)",
            backgroundColor: "rgb(90, 90, 90)",
            userSelect: "none",
            WebkitUserSelect: "none",
            width: 22,
            height: 22,
            borderRadius: "50%",
            textAlign: "center"
        }
          , fl = Oe.Z.parserFor(ll);
        var gl = {
            parse: (e, t) => {
                t = t || {};
                return fl(e + "\n\n", ve().extend(t, {
                    currentRef: [],
                    useRefs: !0,
                    lastRef: 0,
                    firstSentenceRef: null,
                    firstQuestionRef: null,
                    lastFootnote: {
                        id: 0,
                        text: ""
                    }
                }))
            }
            ,
            output: Oe.Z.reactFor(Oe.Z.ruleOutput(ll, "react")),
            START_REF_PREFIX: cl,
            END_REF_PREFIX: hl,
            getInitialParseState: il
        };
        class vl extends me.Component {
            constructor(...e) {
                super(...e),
                this._line = void 0
            }
            measureLineHeight() {
                return this._line ? this._line.clientHeight : 0
            }
            render() {
                return me.createElement("div", {
                    className: (0,
                    pe.css)(yl.measurer),
                    "aria-hidden": "true"
                }, me.createElement("div", {
                    ref: e => this._line = e,
                    className: "paragraph"
                }, "Line Height Measurement"))
            }
        }
        const yl = pe.StyleSheet.create({
            measurer: {
                position: "absolute",
                top: 0,
                left: 0,
                visibility: "hidden",
                zIndex: -1
            }
        });
        class bl extends me.Component {
            constructor(...e) {
                super(...e),
                this._contentRef = void 0,
                this._lineHeightMeasurerRef = void 0,
                this._onResize = void 0,
                this._stylesAppiedTimer = void 0,
                this.isWidget = !0,
                this.state = {
                    nLines: null,
                    startLineNumbersAfter: 0,
                    stylesAreApplied: !1
                },
                this._handleSerializedHighlightsUpdate = e => {
                    this.props.onChange({
                        highlights: e
                    })
                }
            }
            componentDidMount() {
                this._updateState(),
                this._onResize = ve().throttle(( () => {
                    var e;
                    this.shouldRenderJipt() || (null == (e = this._lineHeightMeasurerRef) || e.measureLineHeight(),
                    this._updateState())
                }
                ), 500),
                window.addEventListener("resize", this._onResize),
                this._stylesAppiedTimer = window.setTimeout(( () => {
                    this.setState({
                        stylesAreApplied: !0
                    })
                }
                ), 0)
            }
            shouldComponentUpdate(e, t) {
                return !ve().isEqual(this.props, e) || !ve().isEqual(this.state, t)
            }
            componentDidUpdate() {
                this._updateState()
            }
            componentWillUnmount() {
                window.removeEventListener("resize", this._onResize),
                clearTimeout(this._stylesAppiedTimer)
            }
            _updateState() {
                this.shouldRenderJipt() || this.setState({
                    nLines: this._measureLines(),
                    startLineNumbersAfter: this._getInitialLineNumber()
                })
            }
            _measureLines() {
                const e = fe.findDOMNode(this._contentRef)
                  , t = ke()(e).height()
                  , n = this._getLineHeight();
                return Math.round(t / n)
            }
            _getInitialLineNumber() {
                let e = !0;
                const t = this.props.findWidgets(( (t, n) => "passage" === n.type && (t === this.props.widgetId && (e = !1),
                e))).filter(wl);
                return t.map((e => e.getLineCount())).reduce(( (e, t) => e + t), 0)
            }
            _getLineHeight() {
                var e;
                return (null == (e = this._lineHeightMeasurerRef) ? void 0 : e.measureLineHeight()) || 0
            }
            getLineCount() {
                return null != this.state.nLines ? this.state.nLines : this._measureLines()
            }
            _getStartRefLineNumber(e) {
                const t = gl.START_REF_PREFIX + e
                  , n = this.refs[t];
                if (!n)
                    return null;
                const r = ke()(fe.findDOMNode(n));
                let i = r.next();
                0 === i.length && (i = r);
                const s = i.offset().top;
                return this.state.startLineNumbersAfter + 1 + this._convertPosToLineNumber(s)
            }
            _getEndRefLineNumber(e) {
                const t = gl.END_REF_PREFIX + e
                  , n = this.refs[t];
                if (!n)
                    return null;
                const r = ke()(fe.findDOMNode(n));
                let i = r.prev();
                0 === i.length && (i = r);
                const s = i.height()
                  , o = i.offset().top;
                let a = this._convertPosToLineNumber(o + s);
                return 0 === s && (a += 1),
                this.state.startLineNumbersAfter + a
            }
            _convertPosToLineNumber(e) {
                const t = fe.findDOMNode(this._contentRef)
                  , n = e - ke()(t).offset().top
                  , r = this._getLineHeight();
                return Math.round(n / r)
            }
            _getRefContent(e) {
                const t = gl.START_REF_PREFIX + e
                  , n = this.refs[t];
                return n ? n.getRefContent() : null
            }
            getReference(e) {
                const t = this._getStartRefLineNumber(e)
                  , n = this._getEndRefLineNumber(e);
                if (null == t || null == n)
                    return null;
                return {
                    startLine: t,
                    endLine: n,
                    content: this._getRefContent(e)
                }
            }
            getPromptJSON() {
                return {
                    type: "passage",
                    options: {
                        passageTitle: (e = this.props).passageTitle,
                        passageText: e.passageText,
                        footnotes: e.footnotes
                    }
                };
                var e
            }
            _renderInstructions(e) {
                const t = e.firstQuestionRef
                  , n = e.firstSentenceRef
                  , {strings: r} = this.context;
                let i = "";
                t && (i += r.symbolPassage({
                    questionSymbol: "[[" + t + "]]",
                    questionNumber: t
                })),
                n && (i += r.symbolQuestion({
                    sentenceSymbol: "[" + n + "]"
                }));
                const s = gl.parse(i);
                return me.createElement("div", {
                    className: "perseus-widget-passage-instructions"
                }, gl.output(s))
            }
            shouldRenderJipt() {
                const {JIPT: e} = gt();
                return e.useJIPT && -1 !== this.props.passageText.indexOf("crwdns")
            }
            _renderContent(e) {
                const t = this.state.stylesAreApplied
                  , n = !this.props.reviewMode;
                return me.createElement(nl, {
                    editable: n,
                    enabled: t,
                    onSerializedHighlightsUpdate: this._handleSerializedHighlightsUpdate,
                    serializedHighlights: this.props.highlights
                }, me.createElement("div", {
                    ref: e => this._contentRef = e
                }, me.createElement(vl, {
                    ref: e => this._lineHeightMeasurerRef = e
                }), gl.output(e)))
            }
            _hasFootnotes() {
                const e = this.props.footnotes;
                return !/^\s*$/.test(e)
            }
            _renderFootnotes() {
                const e = this.props.footnotes
                  , t = gl.parse(e);
                return gl.output(t)
            }
            render() {
                const {strings: e} = this.context;
                let t;
                const n = this.state.nLines;
                this.props.showLineNumbers && n && (t = ve().range(1, n + 1).map((t => {
                    const n = t + this.state.startLineNumbersAfter;
                    if (4 === n) {
                        const t = e.lineLabel;
                        return me.createElement("span", {
                            key: "line-marker",
                            className: "line-marker"
                        }, t)
                    }
                    return me.createElement("span", {
                        key: t
                    }, n)
                }
                )));
                const r = gl.getInitialParseState()
                  , i = this.props.passageText.replace(/("{1})([^"]*)("{1})/g, "“$2”")
                  , s = gl.parse(i, r)
                  , o = /\S/.test(this.props.passageTitle);
                return me.createElement("div", null, me.createElement("div", {
                    className: "perseus-widget-passage-container"
                }, this._renderInstructions(r), me.createElement("div", {
                    className: "perseus-widget-passage"
                }, o && me.createElement("h3", {
                    className: "passage-title"
                }, me.createElement(ea, {
                    content: this.props.passageTitle,
                    linterContext: this.props.linterContext,
                    strings: e
                })), t && me.createElement("div", {
                    className: "line-numbers",
                    "aria-hidden": !0
                }, t), !o && me.createElement("h3", {
                    className: "perseus-sr-only"
                }, e.beginningPassage), me.createElement("div", {
                    className: "passage-text"
                }, this.shouldRenderJipt() ? me.createElement(ea, {
                    content: this.props.passageText,
                    strings: e
                }) : this._renderContent(s)), this._hasFootnotes() && [me.createElement("h4", {
                    key: "footnote-start",
                    className: "perseus-sr-only"
                }, e.beginningFootnotes), me.createElement("div", {
                    key: "footnotes",
                    className: "footnotes"
                }, this._renderFootnotes())], me.createElement("div", {
                    className: "perseus-sr-only"
                }, e.endPassage))))
            }
        }
        bl.contextType = it,
        bl.defaultProps = {
            passageTitle: "",
            passageText: "",
            footnotes: "",
            showLineNumbers: !0,
            highlights: {},
            linterContext: se
        };
        var xl = {
            name: "passage",
            displayName: "Passage (SAT only)",
            hidden: !0,
            widget: bl,
            transform: e => ve().pick(e, "passageTitle", "passageText", "footnotes", "showLineNumbers"),
            isLintable: !0,
            scorer: () => Oa()
        };
        function wl(e) {
            return e instanceof bl
        }
        class kl extends me.Component {
            constructor(...e) {
                super(...e),
                this.displayName = "PassageRef",
                this._isMounted = void 0,
                this._throttledUpdateRange = void 0,
                this.isWidget = !0,
                this.state = {
                    lineRange: null,
                    content: null
                },
                this.change = (...e) => St.apply(this, e),
                this._deferredUpdateRange = () => {
                    ve().defer(this._updateRange)
                }
                ,
                this._updateRange = () => {
                    const e = this.props.findWidgets("passage " + this.props.passageNumber).filter(wl)[0]
                      , t = null == e ? void 0 : e.getReference(this.props.referenceNumber);
                    this._isMounted && (t ? this.setState({
                        lineRange: [t.startLine, t.endLine],
                        content: t.content
                    }) : this.setState({
                        lineRange: null,
                        content: null
                    }))
                }
            }
            componentDidMount() {
                this._isMounted = !0,
                this._deferredUpdateRange(),
                this._throttledUpdateRange = ve().throttle(this._deferredUpdateRange, 500),
                window.addEventListener("resize", this._throttledUpdateRange)
            }
            shouldComponentUpdate(e, t) {
                return !ve().isEqual(this.props, e) || !ve().isEqual(this.state, t)
            }
            componentDidUpdate() {
                this._deferredUpdateRange()
            }
            componentWillUnmount() {
                window.removeEventListener("resize", this._throttledUpdateRange),
                this._isMounted = !1
            }
            getPromptJSON() {
                return {
                    type: "passage-ref",
                    options: {
                        passageNumber: (e = this.props).passageNumber,
                        referenceNumber: e.referenceNumber,
                        summaryText: e.summaryText
                    }
                };
                var e
            }
            render() {
                const {strings: e} = this.context
                  , t = this.state.lineRange;
                let n, r;
                if (n = t ? t[0] === t[1] ? e.lineNumber({
                    lineNumber: String(t[0])
                }) : e.lineRange({
                    lineRange: t[0] + "–" + t[1]
                }) : e.lineRange({
                    lineRange: "?–?"
                }),
                this.props.summaryText) {
                    const e = uo.parseInline(this.props.summaryText);
                    r = me.createElement("span", {
                        "aria-hidden": !0
                    }, " ", "(“", uo.basicOutput(e), "”)")
                } else
                    r = null;
                return me.createElement("span", null, n, r, t && me.createElement("div", {
                    className: "perseus-sr-only"
                }, this.state.content))
            }
        }
        kl.contextType = it,
        kl.defaultProps = {
            passageNumber: 1,
            referenceNumber: 1,
            summaryText: ""
        };
        var Sl = {
            name: "passage-ref",
            displayName: "PassageRef (SAT only)",
            hidden: !0,
            defaultAlignment: "inline",
            widget: kl,
            transform: e => ({
                passageNumber: e.passageNumber,
                referenceNumber: e.referenceNumber,
                summaryText: e.summaryText
            }),
            version: {
                major: 0,
                minor: 1
            },
            scorer: () => Oa()
        };
        const {pureXsMax: El, pureSmMin: Ml, pureSmMax: Cl, pureMdMin: Tl, pureMdMax: _l, pureLgMin: Al, pureLgMax: Il, pureXlMin: Rl} = Hn;
        var Nl = {
            xs: `@media screen and (max-width: ${El})`,
            sm: `@media screen and (min-width: ${Ml}) and (max-width: ${Cl})`,
            md: `@media screen and (min-width: ${Tl}) and (max-width: ${_l})`,
            lg: `@media screen and (min-width: ${Al}) and (max-width: ${Il})`,
            xl: `@media screen and (min-width: ${Rl})`,
            xsOrSmaller: `@media screen and (max-width: ${El})`,
            smOrSmaller: `@media screen and (max-width: ${Cl})`,
            mdOrSmaller: `@media screen and (max-width: ${_l})`,
            lgOrSmaller: `@media screen and (max-width: ${Il})`,
            smOrLarger: `@media screen and (min-width: ${Ml})`,
            mdOrLarger: `@media screen and (min-width: ${Tl})`,
            lgOrLarger: `@media screen and (min-width: ${Al})`,
            xlOrLarger: `@media screen and (min-width: ${Rl})`
        };
        const {zIndexAboveScratchpad: Pl, zIndexInteractiveComponent: Ol, radioBorderColor: Ll, checkedColor: Dl, circleSize: Fl, radioMarginWidth: zl} = Hn;
        var Bl = pe.StyleSheet.create({
            perseusInteractive: {
                zIndex: Ol,
                position: "relative"
            },
            aboveScratchpad: {
                position: "relative",
                zIndex: Pl
            },
            blankBackground: {
                backgroundColor: "#FDFDFD"
            },
            perseusSrOnly: {
                border: 0,
                clip: "rect(0,0,0,0)",
                height: 1,
                margin: -1,
                overflow: "hidden",
                padding: 0,
                position: "absolute",
                width: 1
            },
            responsiveLabel: {
                [Nl.smOrSmaller]: {
                    fontSize: 14,
                    lineHeight: 1.3
                },
                [Nl.md]: {
                    fontSize: 17,
                    lineHeight: 1.4
                },
                [Nl.lgOrLarger]: {
                    fontSize: 20,
                    lineHeight: 1.4
                }
            },
            responsiveInput: {
                display: "inline-block",
                WebkitAppearance: "none",
                appearance: "none",
                "::-ms-check": {
                    display: "none"
                },
                backgroundColor: "#fff",
                border: "2px solid #fff",
                boxShadow: `0 0px 0px 1px ${Ll}`,
                outline: "none",
                boxSizing: "border-box",
                flexShrink: 0,
                marginBottom: 1,
                marginLeft: 1,
                marginRight: 1,
                marginTop: 1,
                height: Fl - 2,
                width: Fl - 2
            },
            responsiveRadioInput: {
                borderRadius: "50%",
                ":checked": {
                    backgroundColor: Dl,
                    border: "none",
                    borderRadius: "50%",
                    boxShadow: `inset 0px 0px 0px 2px white, 0 0px 0px 2px ${Dl}`,
                    marginTop: zl,
                    marginBottom: zl,
                    marginLeft: zl,
                    marginRight: zl,
                    height: Fl - 2 * zl,
                    width: Fl - 2 * zl
                }
            },
            responsiveRadioInputActive: {
                backgroundColor: "#fff",
                border: "2px solid #fff",
                borderRadius: "50%",
                boxShadow: `0 0px 0px 2px ${Dl}`,
                marginTop: zl,
                marginBottom: zl,
                marginLeft: zl,
                marginRight: zl,
                height: Fl - 2 * zl,
                width: Fl - 2 * zl,
                ":checked": {
                    backgroundColor: "#fff"
                }
            },
            disableTextSelection: {
                userSelect: "none"
            }
        });
        "undefined" == typeof HTMLElement || HTMLElement.prototype.scrollTo || (HTMLElement.prototype.scrollTo = function(e, t) {
            this.scrollLeft = e,
            this.scrollTop = t
        }
        );
        const ql = (e, t) => {
            "function" == typeof e.scrollTo ? e.scrollTo(0, t) : "scrollTop"in e && (e.scrollTop = t)
        }
          , Hl = e => e === document.body || null == e ? window : e.scrollHeight > e.clientHeight ? e : Hl(e.parentElement)
          , Ul = (e, t) => {
            setTimeout(( () => {
                const n = Hl(e)
                  , r = e.getBoundingClientRect()
                  , i = n === window ? {
                    top: 0,
                    bottom: window.innerHeight
                } : n.getBoundingClientRect();
                let s = 0;
                const o = n === window ? window.scrollY : n.scrollTop;
                if (r.bottom > i.bottom) {
                    let e = r.bottom - i.bottom;
                    r.top + e < i.top && (e = r.top - i.top),
                    s = o + e
                } else if (r.top < i.top) {
                    s = o + (r.top - i.top)
                }
                ( (e, t, n=0, r) => {
                    const i = e === window ? window.pageYOffset : e.scrollTop
                      , s = t
                      , o = s - i
                      , a = n / 17;
                    let l = 0;
                    const c = setInterval((function() {
                        if (l < a) {
                            const t = l / a
                              , n = (1 - Math.cos(Math.PI * t)) / 2;
                            ql(e, i + o * n),
                            l += 1
                        } else
                            ql(e, s),
                            clearInterval(c),
                            r && r()
                    }
                    ), 17)
                }
                )(n, s, 750, t)
            }
            ), 0)
        }
        ;
        class Gl extends me.Component {
            render() {
                const {color: e, pathClassName: t, className: n, title: r, style: i, alt: s} = this.props;
                let {icon: o, size: a} = this.props
                  , l = "";
                "string" == typeof o && (o = {
                    path: o,
                    width: 10,
                    height: 10
                }),
                "number" != typeof a && (a = 1,
                l = "em");
                const c = a
                  , h = c / o.height * o.width
                  , p = !!this.props.focusable;
                return me.createElement("svg", {
                    role: "img",
                    alt: s,
                    "aria-label": r,
                    "aria-hidden": !r || null,
                    className: n,
                    style: i,
                    focusable: p.toString(),
                    width: h + l,
                    height: c + l,
                    viewBox: `0 0 ${o.width} ${o.height}`
                }, !!r && me.createElement("title", null, r), me.createElement("path", {
                    className: t,
                    fill: e,
                    d: o.path
                }))
            }
        }
        Gl.defaultProps = {
            color: "currentColor"
        };
        const Wl = function({visible: e=!0, color: t=En, multipleSelect: n=!1, children: r}) {
            const i = {
                borderColor: e ? t : "transparent",
                borderRadius: n ? 5 : "50%"
            };
            return me.createElement("span", {
                "data-testid": "focus-ring",
                className: (0,
                pe.css)(Vl.ring),
                style: i
            }, r)
        }
          , Vl = pe.StyleSheet.create({
            ring: {
                margin: "auto",
                display: "inline-block",
                borderWidth: 2,
                padding: 2,
                borderStyle: "solid"
            }
        });
        function $l(e, t) {
            const n = t.letters.split(" ");
            return e < n.length ? n[e] : " "
        }
        const jl = 24
          , Kl = pe.StyleSheet.create({
            iconWrapper: {
                display: "inline-block",
                position: "relative"
            }
        })
          , Zl = 28
          , Yl = function(e) {
            return me.createElement("svg", {
                width: Zl,
                height: Zl,
                viewBox: "0 0 28 28",
                className: (0,
                pe.css)(Xl.crossOutLine),
                "data-testid": "choice-icon__cross-out-line"
            }, me.createElement("line", {
                x1: 2,
                x2: 26,
                y1: 26,
                y2: 2,
                stroke: e.color,
                strokeWidth: "2",
                strokeLinecap: "round"
            }))
        }
          , Xl = pe.StyleSheet.create({
            crossOutLine: {
                position: "absolute",
                top: "0px",
                left: "0px"
            }
        });
        function Jl(e) {
            const {pos: t, showCorrectness: n, correct: r} = e
              , {strings: i} = ot()
              , s = $l(t, i);
            return n ? r ? me.createElement(Mi, nt({}, Ci, {
                style: {
                    position: "relative",
                    top: -1
                }
            })) : me.createElement(Mi, Li) : me.createElement("span", null, s)
        }
        const Ql = function(e) {
            const {checked: t, crossedOut: n, showCorrectness: r, correct: i, focused: s, hovered: o, multipleSelect: a, pos: l, previouslyAnswered: c, pressed: h} = e
              , p = function(e, t, n, r, i) {
                let s, o, a, l;
                if (!t && n)
                    o = xe.color.blue,
                    a = xe.color.blue,
                    s = "transparent";
                else if (e) {
                    const e = t && i ? xe.color.green : xe.color.blue;
                    a = Mn,
                    s = e,
                    o = e
                } else
                    o = xe.color.offBlack64,
                    a = xe.color.offBlack64;
                return l = r ? 3 : jl,
                {
                    backgroundColor: s,
                    borderColor: o,
                    color: a,
                    borderRadius: l
                }
            }(t, r, h, a, i);
            return me.createElement("div", {
                className: (0,
                pe.css)(Kl.iconWrapper)
            }, me.createElement(Wl, {
                color: xe.color.blue,
                visible: s || o,
                multipleSelect: a
            }, me.createElement("div", {
                style: p,
                "data-testid": "choice-icon__library-choice-icon",
                className: (0,
                pe.css)(ec.circle, r && i && ec.circleCorrect, r && !i && ec.circleIncorrect, r && !i && (t || c) && ec.circleIncorrectAnswered),
                "data-is-radio-icon": !0
            }, me.createElement("div", {
                className: (0,
                pe.css)(ec.innerWrapper)
            }, me.createElement(Jl, {
                pos: l,
                showCorrectness: r,
                correct: i
            })))), n && me.createElement(Yl, {
                color: p.borderColor
            }))
        }
          , ec = pe.StyleSheet.create({
            innerWrapper: {
                width: jl,
                height: jl,
                display: "flex",
                alignItems: "center",
                justifyContent: "center"
            },
            circle: {
                width: jl,
                height: jl,
                boxSizing: "border-box",
                borderStyle: "solid",
                borderWidth: 2,
                fontFamily: kn,
                fontWeight: "bold",
                fontSize: 12,
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                lineHeight: "1px"
            },
            circleCorrect: {
                fontSize: jl
            },
            circleIncorrect: {
                fontSize: jl,
                borderColor: An,
                color: An
            },
            circleIncorrectAnswered: {
                backgroundColor: xe.color.red,
                borderColor: xe.color.red,
                color: xe.color.white
            }
        });
        const tc = function(e) {
            const {checked: t, correct: n, crossedOut: r, previouslyAnswered: i, reviewMode: s} = e
              , {strings: o} = ot();
            if (!s && !i)
                return null;
            let a;
            return a = n ? nc.correct : t || i ? nc.incorrectAnswered : nc.incorrect,
            me.createElement("div", {
                className: (0,
                pe.css)(nc.text, a)
            }, function(e, t, n, r) {
                return t ? e ? r.correctSelected : n ? r.correctCrossedOut : r.correct : e ? r.incorrectSelected : r.incorrect
            }(t, n, r, o))
        }
          , nc = pe.StyleSheet.create({
            text: {
                alignItems: "center",
                display: "flex",
                fontSize: 12,
                height: 32,
                textTransform: "uppercase"
            },
            correct: {
                color: xe.color.green
            },
            incorrectAnswered: {
                color: xe.color.red
            },
            incorrect: {
                color: xe.color.offBlack64
            }
        })
          , rc = {
            path: "M27.218 6.82l0 13.578q0 2.852-1.984 4.836t-4.836 1.984l-13.578 0q-2.852 0-4.836-1.984t-1.984-4.836l0-13.578q0-2.852 1.984-4.836t4.836-1.984l13.578 0q2.852 0 4.836 1.984t1.984 4.836zm36.27 0l0 13.578q0 2.852-1.984 4.836t-4.836 1.984l-13.578 0q-2.852 0-4.836-1.984t-1.984-4.836l0-13.578q0-2.852 1.984-4.836t4.836-1.984l13.578 0q2.852 0 4.836 1.984t1.984 4.836zm36.27 0l0 13.578q0 2.852-1.984 4.836t-4.836 1.984l-13.578 0q-2.852 0-4.836-1.984t-1.984-4.836l0-13.578q0-2.852 1.984-4.836t4.836-1.984l13.578 0q2.852 0 4.836 1.984t1.984 4.836z",
            width: 100,
            height: 27.284
        }
          , ic = function(e) {
            const {disabled: t=!1, checked: n=!1, content: r, crossedOut: i, showCorrectness: s, multipleSelect: o, onChange: a=(e => {}
            ), reviewMode: l, correct: c=!1, apiOptions: h=Rt.defaults, previouslyAnswered: p=!1, pos: u=0, showRationale: d=!1, rationale: m, forwardedRef: f} = e
              , [g,v] = (0,
            me.useState)(!1)
              , {strings: y} = ot();
            function b(e) {
                var t, r;
                const s = null != (t = e.checked) ? t : n
                  , o = null != (r = e.crossedOut) ? r : i;
                a({
                    checked: s,
                    crossedOut: o
                })
            }
            (0,
            me.useEffect)(( () => {
                g && t && v(!1)
            }
            ), [t, g, v]);
            const x = de()("description", (0,
            pe.css)(sc.description))
              , w = de()("perseus-radio-rationale-content", (0,
            pe.css)(sc.rationale))
              , k = !l && h.readOnly || i
              , S = function(e, t, n, r, i, s) {
                return i && n ? t ? s.choiceCheckedCorrect({
                    letter: e
                }) : r ? s.choiceCrossedOutCorrect({
                    letter: e
                }) : s.choiceCorrect({
                    letter: e
                }) : i && !n ? t ? s.choiceCheckedIncorrect({
                    letter: e
                }) : r ? s.choiceCrossedOutIncorrect({
                    letter: e
                }) : s.choiceIncorrect({
                    letter: e
                }) : t ? s.choiceChecked({
                    letter: e
                }) : r ? s.choiceCrossedOut({
                    letter: e
                }) : s.choice({
                    letter: e
                })
            }($l(u, y), n, c, i, s, y);
            return me.createElement("div", {
                style: {
                    dispay: "flex",
                    flexDirection: "column",
                    color: xe.color.offBlack
                },
                className: x
            }, me.createElement("div", {
                style: {
                    display: "flex",
                    flexDirection: "row",
                    opacity: k ? .5 : 1,
                    overflowX: "auto",
                    overflowY: "hidden"
                }
            }, me.createElement("div", {
                className: "perseus-sr-only"
            }, me.createElement("label", null, S, "   ", r, me.createElement("input", {
                type: o ? "checkbox" : "radio",
                checked: n,
                onClick: () => {
                    b({
                        checked: !n,
                        crossedOut: !1
                    })
                }
                ,
                onChange: () => {}
                ,
                disabled: t || h.readOnly,
                tabIndex: -1,
                className: Nt.RADIO.OPTION_CONTENT
            }))), me.createElement(ye.ZP, {
                onClick: () => {
                    b({
                        checked: !n,
                        crossedOut: !1
                    })
                }
                ,
                disabled: t || h.readOnly,
                style: {
                    flex: 1,
                    color: xe.color.offBlack,
                    userSelect: "text"
                },
                ref: f,
                "aria-hidden": "true"
            }, ( ({hovered: e, focused: t, pressed: a}) => me.createElement("div", {
                style: {
                    display: "flex",
                    flexDirection: "row",
                    justifyContent: "center",
                    alignContent: "center",
                    paddingTop: xe.W0.xSmall_8,
                    paddingBottom: xe.W0.xSmall_8,
                    paddingLeft: xe.W0.xSmall_8
                }
            }, me.createElement(Ql, {
                pos: u,
                correct: c,
                crossedOut: i,
                pressed: a,
                focused: t,
                checked: n,
                hovered: e,
                showCorrectness: s,
                multipleSelect: o,
                reviewMode: l,
                previouslyAnswered: p
            }), me.createElement("span", {
                style: {
                    paddingLeft: xe.W0.small_12,
                    textAlign: "left",
                    flex: 1,
                    paddingTop: 4
                }
            }, me.createElement("div", null, me.createElement(tc, {
                checked: n,
                correct: c,
                crossedOut: i,
                previouslyAnswered: p,
                reviewMode: l
            })), me.createElement("div", null, r))))), h.crossOutEnabled && !l && me.createElement(be.J2, {
                dismissEnabled: !0,
                content: ({close: e}) => me.createElement(be.yk, {
                    title: y.crossOut,
                    content: y.crossOutOption,
                    closeButtonVisible: !0,
                    actions: me.createElement(le.G7, null, me.createElement(ze.x9, {
                        size: xe.W0.medium_16
                    }), me.createElement(Fe.Z, {
                        kind: "primary",
                        "aria-label": y.crossOutChoice({
                            letter: $l(u, y)
                        }),
                        disabled: h.readOnly || l,
                        onClick: () => {
                            b(i ? {
                                crossedOut: !1
                            } : {
                                checked: !1,
                                crossedOut: !0
                            }),
                            e()
                        }
                    }, i ? y.bringBack : y.crossOut))
                })
            }, ( ({open: e}) => me.createElement(ye.ZP, {
                onClick: e,
                "aria-label": y.openMenuForChoice({
                    letter: $l(u, y)
                }),
                style: {
                    alignSelf: "center",
                    padding: "5px",
                    display: "flex",
                    justifyContent: "center",
                    alignItems: "center",
                    marginLeft: "10px"
                }
            }, ( ({hovered: e, focused: t, pressed: n}) => me.createElement(Gl, {
                icon: rc,
                size: 3,
                color: xe.color.offBlack64
            })))))), d && me.createElement("div", {
                className: w,
                "data-testid": `perseus-radio-rationale-content-${u}`
            }, m))
        }
          , sc = pe.StyleSheet.create({
            description: {
                display: "inline-block",
                width: "100%"
            },
            rationale: {
                display: "block",
                padding: "16px 16px",
                paddingTop: 0,
                marginLeft: 54,
                color: xe.color.offBlack64,
                [Nl.smOrSmaller]: {
                    padding: "12px 16px",
                    paddingTop: 0
                }
            }
        });
        var oc = me.forwardRef(( (e, t) => me.createElement(ic, nt({}, e, {
            forwardedRef: t
        }))));
        const ac = ["content", "forwardedRef", "showContent"]
          , lc = function(e) {
            let {content: t, forwardedRef: n, showContent: r=!0} = e
              , i = ia(e, ac);
            const {strings: s} = ot()
              , o = nt({}, i, {
                content: r ? t : me.createElement(ea, {
                    key: "noneOfTheAboveRenderer",
                    content: s.noneOfTheAbove,
                    strings: s
                })
            });
            return me.createElement(oc, nt({}, o, {
                ref: n
            }))
        };
        var cc = me.forwardRef(( (e, t) => me.createElement(lc, nt({}, e, {
            forwardedRef: t
        }))));
        const {captureScratchpadTouchStart: hc} = vn;
        const pc = function({apiOptions: e, reviewModeRubric: t, reviewMode: n, choices: r, editMode: i=!1, multipleSelect: s=!1, labelWrap: o, countChoices: a, numCorrect: l, isLastUsedWidget: c, onChange: h, registerFocusFunction: p}) {
            const {strings: u} = ot()
              , d = (0,
            me.useRef)()
              , m = (0,
            me.useRef)([]);
            function f(e, t) {
                let n;
                n = t.checked && !s ? r.map((e => !1)) : r.map((e => e.checked));
                const i = r.map((e => e.crossedOut));
                n[e] = t.checked,
                i[e] = t.crossedOut,
                h({
                    checked: n,
                    crossedOut: i
                })
            }
            (0,
            me.useEffect)(( () => {
                if (e.canScrollPage && c && t && !d.current) {
                    const e = r.findIndex((e => e.checked));
                    if (e >= 0) {
                        const t = m.current[e]
                          , n = fe.findDOMNode(t.current);
                        n && Ul(n)
                    }
                }
                d.current = t
            }
            ), [e, r, c, t]),
            null == p || p((e => {
                const t = m.current[e || 0]
                  , n = fe.findDOMNode(t.current);
                return !!n && (n.focus(),
                !0)
            }
            ));
            const g = e.isMobile
              , v = r[0].highlighted
              , y = r[r.length - 1].highlighted
              , b = de()("perseus-widget-radio", !i && "perseus-rendered-radio", (0,
            pe.css)(uc.radio, uc.responsiveRadioContainer, v && g && uc.radioContainerFirstHighlighted, y && g && uc.radioContainerLastHighlighted))
              , x = de()("instructions", (0,
            pe.css)(uc.instructions, g && uc.instructionsMobile))
              , w = function(e, t, n, r) {
                return e ? t ? r.chooseNumAnswers({
                    numCorrect: String(n)
                }) : r.chooseAllAnswers : r.chooseOneAnswer
            }(s, a, l, u)
              , k = (0,
            pe.css)(uc.responsiveFieldset)
              , S = me.createElement("fieldset", {
                className: `perseus-widget-radio-fieldset ${k}`
            }, me.createElement("legend", {
                className: "perseus-sr-only"
            }, w), me.createElement("div", {
                className: x,
                "aria-hidden": "true"
            }, w), me.createElement("ul", {
                className: b,
                style: {
                    listStyle: "none"
                }
            }, r.map(( (a, l) => {
                let c = oc;
                const h = me.createRef();
                m.current[l] = h;
                const p = {
                    apiOptions: e,
                    multipleSelect: s,
                    checked: a.checked,
                    crossedOut: a.crossedOut,
                    previouslyAnswered: a.previouslyAnswered,
                    reviewMode: n,
                    correct: a.correct,
                    rationale: a.rationale,
                    content: a.content,
                    disabled: e.readOnly || a.disabled,
                    showCorrectness: n || !!a.showCorrectness,
                    showRationale: a.hasRationale && (n || a.showRationale),
                    pos: l,
                    onChange: e => {
                        i || f(l, e)
                    }
                };
                a.isNoneOfTheAbove && (c = cc,
                ve().extend(p, {
                    showContent: a.revealNoneOfTheAbove
                }));
                const u = r[l + 1]
                  , d = !!u && u.highlighted
                  , g = t => (0,
                pe.css)(Bl.aboveScratchpad, uc.item, uc.responsiveItem, t && uc.selectedItem, t && a.highlighted && uc.aboveBackdrop, t && a.highlighted && e.isMobile && uc.aboveBackdropMobile, d && e.isMobile && uc.nextHighlighted);
                let v;
                g(!0),
                n && t && (v = t.choices[l].correct ? Nt.CORRECT : Nt.INCORRECT);
                const y = de()(g(a.checked), Nt.RADIO.OPTION, a.checked && Nt.RADIO.SELECTED, v);
                let b, x = null;
                return i && (b = e => {
                    let t = e.target;
                    for (; t && t !== x; ) {
                        if (t.getAttribute("data-is-radio-icon"))
                            return void f(l, {
                                checked: !a.checked,
                                crossedOut: a.crossedOut
                            });
                        t = t.parentNode
                    }
                }
                ),
                me.createElement("li", {
                    key: l,
                    ref: e => x = e,
                    className: y,
                    onClick: b,
                    onTouchStart: o ? void 0 : hc
                }, me.createElement(c, nt({}, p, {
                    ref: h
                })))
            }
            ))));
            return me.createElement("div", {
                className: (0,
                pe.css)(uc.responsiveContainer)
            }, S)
        }
          , uc = pe.StyleSheet.create({
            instructions: {
                display: "block",
                color: In,
                fontSize: 14,
                lineHeight: 1.25,
                fontFamily: "inherit",
                fontStyle: "normal",
                fontWeight: "bold",
                marginBottom: 16
            },
            instructionsMobile: {
                fontSize: 18,
                [Nl.smOrSmaller]: {
                    fontSize: 16
                },
                [Nl.xl]: {
                    fontSize: 20
                }
            },
            radio: {
                padding: 0
            },
            responsiveRadioContainer: {
                borderBottom: `1px solid ${qn}`,
                borderTop: `1px solid ${qn}`,
                width: "auto",
                [Nl.smOrSmaller]: {
                    marginLeft: Pn,
                    marginRight: Pn
                }
            },
            radioContainerFirstHighlighted: {
                borderTop: "1px solid rgba(0, 0, 0, 0)"
            },
            radioContainerLastHighlighted: {
                borderBottom: "1px solid rgba(0, 0, 0, 0)"
            },
            item: {
                marginLeft: 20
            },
            responsiveItem: {
                marginLeft: 0,
                padding: 0,
                ":not(:last-child)": {
                    borderBottom: `1px solid ${qn}`
                }
            },
            selectedItem: {
                background: "white"
            },
            aboveBackdrop: {
                position: "relative",
                zIndex: 1062
            },
            aboveBackdropMobile: {
                boxShadow: "0 0 4px 0 rgba(0, 0, 0, 0.2),0 0 2px 0 rgba(0, 0, 0, 0.1)",
                ":not(:last-child)": {
                    borderBottom: "1px solid rgba(0, 0, 0, 0)"
                }
            },
            nextHighlighted: {
                ":not(:last-child)": {
                    borderBottom: "1px solid rgba(0, 0, 0, 0)"
                }
            },
            responsiveContainer: {
                overflow: "auto",
                marginLeft: Pn,
                paddingLeft: Nn
            },
            responsiveFieldset: {
                paddingRight: Nn,
                minWidth: "auto"
            }
        });
        function dc(e, t, n) {
            const r = e.choicesSelected.reduce(( (e, t) => e + (t ? 1 : 0)), 0);
            if (0 === r)
                return {
                    type: "invalid",
                    message: null
                };
            const i = t.choices.reduce(( (e, t) => t.correct ? e + 1 : e), 0);
            if (i > 1 && r !== i)
                return {
                    type: "invalid",
                    message: n.chooseCorrectNum
                };
            if (t.choices.some(( (t, n) => t.isNoneOfTheAbove && e.choicesSelected[n])) && r > 1)
                return {
                    type: "invalid",
                    message: n.notNoneOfTheAbove
                };
            const s = e.choicesSelected.every(( (e, n) => {
                let r;
                return r = t.choices[n].isNoneOfTheAbove ? t.choices.every(( (e, t) => n === t || !e.correct)) : !!t.choices[n].correct,
                r === e
            }
            ));
            return {
                type: "points",
                earned: s ? 1 : 0,
                total: 1,
                message: null
            }
        }
        class mc extends me.Component {
            constructor(...e) {
                super(...e),
                this.focusFunction = void 0,
                this._renderRenderer = (e="") => {
                    let t = 1;
                    const n = {}
                      , r = e.replace(/\{\{passage-ref (\d+) (\d+)(?: "([^"]*)")?\}\}/g, ( (e, r, i, s) => {
                        const o = "passage-ref " + t;
                        return t++,
                        n[o] = {
                            type: "passage-ref",
                            graded: !1,
                            options: {
                                passageNumber: parseInt(r),
                                referenceNumber: parseInt(i),
                                summaryText: s
                            },
                            version: Sl.version
                        },
                        "[[" + vn.snowman + " " + o + "]]"
                    }
                    ));
                    return me.createElement(ea, {
                        key: "choiceContentRenderer",
                        content: r,
                        widgets: n,
                        findExternalWidgets: this.props.findWidgets,
                        alwaysUpdate: !0,
                        linterContext: nt({}, this.props.linterContext, {
                            blockHighlight: !0
                        }),
                        strings: this.context.strings
                    })
                }
                ,
                this.updateChoices = e => {
                    const {choiceStates: t, choices: n} = this.props
                      , r = t ? t.map((e => nt({}, e))) : n.map(( () => ({
                        selected: !1,
                        crossedOut: !1,
                        highlighted: !1,
                        rationaleShown: !1,
                        correctnessShown: !1,
                        previouslyAnswered: !1,
                        readOnly: !1
                    })));
                    r.forEach(( (t, n) => {
                        t.selected = e.checked[n],
                        t.crossedOut = e.crossedOut[n]
                    }
                    )),
                    this.props.onChange({
                        choiceStates: r
                    }),
                    this.props.trackInteraction()
                }
                ,
                this.showRationalesForCurrentlySelectedChoices = e => {
                    const {choiceStates: t} = this.props;
                    if (t) {
                        const n = dc(this.getUserInput(), e, this.context.strings)
                          , r = "points" === n.type && n.total === n.earned
                          , i = t.map((e => nt({}, e, {
                            highlighted: e.selected,
                            rationaleShown: e.selected || e.rationaleShown || r,
                            readOnly: e.selected || e.readOnly || r || "none" !== this.props.showSolutions,
                            correctnessShown: e.selected || e.correctnessShown,
                            previouslyAnswered: e.previouslyAnswered || e.selected
                        })));
                        this.props.onChange({
                            choiceStates: i
                        }, null, !0)
                    }
                }
                ,
                this.deselectIncorrectSelectedChoices = () => {
                    if (this.props.choiceStates) {
                        const e = this.props.choiceStates.map(( (e, t) => nt({}, e, {
                            selected: e.selected && !!this.props.choices[t].correct,
                            highlighted: !1
                        })));
                        this.props.onChange({
                            choiceStates: e
                        }, null, !1)
                    }
                }
            }
            static getUserInputFromProps(e, t=!0) {
                if (e.choiceStates) {
                    const n = e.choiceStates
                      , r = n.map(( () => !1));
                    for (let i = 0; i < r.length; i++) {
                        r[t ? e.choices[i].originalIndex : i] = n[i].selected
                    }
                    return {
                        choicesSelected: r
                    }
                }
                const {values: n} = e;
                if (n) {
                    const r = [...n]
                      , i = n.length;
                    for (let s = 0; s < i; s++) {
                        r[t ? e.choices[s].originalIndex : s] = n[s]
                    }
                    return {
                        choicesSelected: r
                    }
                }
                return {
                    choicesSelected: e.choices.map(( () => !1))
                }
            }
            componentDidUpdate(e) {
                "selected" === this.props.showSolutions && "selected" !== e.showSolutions && this.showRationalesForCurrentlySelectedChoices(this.props)
            }
            focus(e) {
                return !!this.focusFunction && this.focusFunction(e)
            }
            registerFocusFunction(e) {
                this.focusFunction = e
            }
            getUserInput() {
                return mc.getUserInputFromProps(this.props)
            }
            getPromptJSON() {
                const e = mc.getUserInputFromProps(this.props, !1);
                return ( (e, t) => {
                    const n = (e.choices || []).map((e => ({
                        value: e.content
                    })));
                    return {
                        type: "radio",
                        hasNoneOfTheAbove: !!e.hasNoneOfTheAbove,
                        options: n,
                        userInput: {
                            selectedOptions: t.choicesSelected.slice()
                        }
                    }
                }
                )(this.props, e)
            }
            render() {
                const {choices: e} = this.props
                  , {strings: t} = this.context;
                let n;
                n = this.props.static ? e.map((e => ({
                    selected: !!e.correct,
                    crossedOut: !1,
                    readOnly: !0,
                    highlighted: !1,
                    rationaleShown: !0,
                    correctnessShown: !0,
                    previouslyAnswered: !1
                }))) : "all" === this.props.showSolutions ? e.map(( ({correct: e}) => ({
                    selected: e,
                    crossedOut: !1,
                    readOnly: !0,
                    highlighted: !1,
                    rationaleShown: !0,
                    correctnessShown: !0,
                    previouslyAnswered: !1
                }))) : this.props.choiceStates ? this.props.choiceStates : this.props.values ? this.props.values.map((e => ({
                    selected: e,
                    crossedOut: !1,
                    readOnly: !1,
                    highlighted: !1,
                    rationaleShown: !1,
                    correctnessShown: !1,
                    previouslyAnswered: !1
                }))) : e.map(( () => ({
                    selected: !1,
                    crossedOut: !1,
                    readOnly: !1,
                    highlighted: !1,
                    rationaleShown: !1,
                    correctnessShown: !1,
                    previouslyAnswered: !1
                })));
                const r = e.map(( (e, r) => {
                    var i;
                    const s = e.isNoneOfTheAbove && !e.content ? t.noneOfTheAbove : e.content
                      , {selected: o, crossedOut: a, rationaleShown: l, correctnessShown: c, readOnly: h, highlighted: p, previouslyAnswered: u} = n[r]
                      , d = null == (i = this.props.reviewModeRubric) ? void 0 : i.choices[r];
                    return {
                        content: this._renderRenderer(s),
                        checked: o,
                        correct: void 0 === e.correct ? !!d && !!d.correct : e.correct,
                        disabled: h,
                        hasRationale: !!e.clue,
                        rationale: this._renderRenderer(e.clue),
                        showRationale: l,
                        showCorrectness: c,
                        isNoneOfTheAbove: !!e.isNoneOfTheAbove,
                        revealNoneOfTheAbove: !(!this.props.questionCompleted || !o),
                        crossedOut: a,
                        highlighted: p,
                        previouslyAnswered: u
                    }
                }
                ));
                return me.createElement(pc, {
                    labelWrap: !0,
                    multipleSelect: this.props.multipleSelect,
                    countChoices: this.props.countChoices,
                    numCorrect: this.props.numCorrect,
                    choices: r,
                    onChange: this.updateChoices,
                    reviewModeRubric: this.props.reviewModeRubric,
                    reviewMode: this.props.reviewMode,
                    deselectEnabled: this.props.deselectEnabled,
                    apiOptions: this.props.apiOptions,
                    isLastUsedWidget: this.props.isLastUsedWidget,
                    registerFocusFunction: e => this.registerFocusFunction(e)
                })
            }
        }
        mc.contextType = it,
        mc.defaultProps = {
            choices: [],
            multipleSelect: !1,
            countChoices: !1,
            deselectEnabled: !1,
            linterContext: se,
            showSolutions: "none"
        };
        const {shuffle: fc, random: gc} = vn
          , vc = (e, t, n) => {
            const r = ( (e, t, n) => {
                const r = e.choices.map(( (e, t) => nt({}, e, {
                    originalIndex: t,
                    correct: Boolean(e.correct)
                })));
                return function(e) {
                    let t = null;
                    const n = e.filter(( (e, n) => !e.isNoneOfTheAbove || (t = e,
                    !1)));
                    return t && n.push(t),
                    n
                }((e => {
                    const n = [[t.false, t.true], [t.no, t.yes]]
                      , r = e.map((e => e.content));
                    return n.some((e => ve().isEqual(r, e))) ? [e[1], e[0]] : e
                }
                )(function(t) {
                    const r = void 0 === n ? gc : n;
                    return e.randomize ? fc(t, null != r ? r : 0) : t
                }(r)))
            }
            )(e, t, n)
              , i = ve().reduce(e.choices, (function(e, t) {
                return t.correct ? e + 1 : e
            }
            ), 0)
              , {hasNoneOfTheAbove: s, multipleSelect: o, countChoices: a, deselectEnabled: l} = e;
            return {
                numCorrect: i,
                hasNoneOfTheAbove: s,
                multipleSelect: o,
                countChoices: a,
                deselectEnabled: l,
                choices: r,
                selectedChoices: ve().pluck(r, "correct")
            }
        }
        ;
        var yc = {
            name: "radio",
            displayName: "Radio / Multiple choice",
            accessible: !0,
            widget: mc,
            transform: vc,
            staticTransform: vc,
            version: {
                major: 1,
                minor: 0
            },
            propUpgrades: {
                1: e => {
                    let t, n;
                    if (e.noneOfTheAbove)
                        throw new Error("radio widget v0 no longer supports auto noneOfTheAbove");
                    return t = e.choices,
                    n = !1,
                    ve().extend(ve().omit(e, "noneOfTheAbove"), {
                        choices: t,
                        hasNoneOfTheAbove: n
                    })
                }
            },
            isLintable: !0,
            scorer: dc
        }
          , bc = [yc, Ta, Pa, Vt];
        class xc extends me.Component {
            constructor(...e) {
                super(...e),
                this.state = {
                    uniqueId: ve().uniqueId("perseus_radio_")
                },
                this.change = (...e) => St.apply(this, e)
            }
            static getUserInputFromProps(e) {
                return {
                    values: e.values
                }
            }
            getUserInput() {
                return xc.getUserInputFromProps(this.props)
            }
            getPromptJSON() {
                return e = this.props,
                t = this.getUserInput(),
                {
                    type: "categorizer",
                    options: {
                        items: e.items,
                        categories: e.categories
                    },
                    userInput: {
                        itemToCategoryMapping: t.values
                    }
                };
                var e, t
            }
            onChange(e, t) {
                const n = [...this.props.values];
                n[e] = t,
                this.change("values", n),
                this.props.trackInteraction()
            }
            render() {
                const e = this
                  , t = this.props.apiOptions.isMobile;
                let n = this.props.items.map(( (e, t) => [e, t]));
                this.props.randomizeItems && (n = vn.shuffle(n, this.props.problemNum));
                const r = me.createElement("table", {
                    className: "categorizer-table " + (0,
                    pe.css)(wc.mobileTable)
                }, me.createElement("thead", null, me.createElement("tr", null, me.createElement("td", {
                    className: (0,
                    pe.css)(wc.emptyHeaderCell)
                }), this.props.categories.map(( (e, t) => me.createElement("th", {
                    className: (0,
                    pe.css)(wc.header),
                    key: t
                }, me.createElement(ea, {
                    content: e,
                    linterContext: this.props.linterContext,
                    strings: this.context.strings
                })))))), me.createElement("tbody", null, n.map((n => {
                    const r = n[0]
                      , i = n[1]
                      , s = e.state.uniqueId + "_" + i;
                    return me.createElement("tr", {
                        key: i
                    }, me.createElement("td", null, me.createElement(ea, {
                        content: r,
                        linterContext: this.props.linterContext,
                        strings: this.context.strings
                    })), e.props.categories.map(( (n, r) => {
                        const o = e.props.values[i] === r;
                        return me.createElement("td", {
                            className: "category " + (0,
                            pe.css)(wc.cell),
                            key: r
                        }, me.createElement("div", {
                            className: Nt.INTERACTIVE,
                            role: "button",
                            "aria-label": n,
                            onClick: () => this.onChange(i, r)
                        }, t && me.createElement("input", {
                            type: "radio",
                            name: s,
                            className: (0,
                            pe.css)(Bl.responsiveInput, Bl.responsiveRadioInput),
                            checked: o,
                            onChange: () => this.onChange(i, r),
                            onClick: e => e.stopPropagation()
                        }), !t && me.createElement("span", {
                            className: (0,
                            pe.css)(wc.radioSpan, o && wc.checkedRadioSpan, this.props.static && o && wc.staticCheckedRadioSpan)
                        }, o ? me.createElement(Mi, _i) : me.createElement(Mi, Ai))))
                    }
                    )))
                }
                ))))
                  , i = de()({
                    "categorizer-container": !0,
                    "static-mode": this.props.static
                })
                  , s = this.props.apiOptions.isMobile ? [wc.fullBleedContainer] : [];
                return me.createElement("div", {
                    className: i + " " + (0,
                    pe.css)(...s)
                }, r)
            }
        }
        xc.contextType = it,
        xc.defaultProps = {
            items: [],
            categories: [],
            values: [],
            linterContext: se
        };
        const wc = pe.StyleSheet.create({
            mobileTable: {
                [Nl.smOrSmaller]: {
                    minWidth: "auto"
                }
            },
            fullBleedContainer: {
                [Nl.mdOrSmaller]: {
                    marginLeft: -16,
                    marginRight: -16,
                    overflowX: "auto"
                }
            },
            header: {
                textAlign: "center",
                verticalAlign: "bottom"
            },
            cell: {
                textAlign: "center",
                padding: 0,
                color: "#ccc",
                verticalAlign: "middle"
            },
            emptyHeaderCell: {
                backgroundColor: "inherit",
                borderBottom: "2px solid #ccc"
            },
            radioSpan: {
                fontSize: 30,
                paddingRight: 3,
                ":hover": {
                    color: "#999"
                }
            },
            checkedRadioSpan: {
                color: "#333"
            },
            staticCheckedRadioSpan: {
                color: "#888"
            }
        });
        var kc = {
            name: "categorizer",
            displayName: "Categorizer",
            hidden: !0,
            widget: xc,
            transform: e => ve().pick(e, "items", "categories", "randomizeItems"),
            staticTransform: e => ve().pick(e, "items", "categories", "values", "randomizeItems"),
            isLintable: !0,
            scorer: function(e, t, n) {
                let r = !0
                  , i = !0;
                return t.values.forEach(( (t, n) => {
                    null == e.values[n] && (r = !1),
                    e.values[n] !== t && (i = !1)
                }
                )),
                r ? {
                    type: "points",
                    earned: i ? 1 : 0,
                    total: 1,
                    message: null
                } : {
                    type: "invalid",
                    message: n.invalidSelection
                }
            }
        };
        let Sc;
        const Ec = e => new URL(e,(Sc || (Sc = window.location),
        Sc).origin)
          , Mc = e => Ec(e).href
          , Cc = (e, t="") => ({
            type: e,
            isSupported: !1,
            message: t
        });
        const {updateQueryString: Tc} = vn;
        class _c extends me.Component {
            constructor(...e) {
                super(...e),
                this.handleMessageEvent = e => {
                    let t = {};
                    try {
                        t = JSON.parse(e.originalEvent.data)
                    } catch (e) {
                        return
                    }
                    if (ve().isUndefined(t.testsPassed))
                        return;
                    const n = t.testsPassed ? "correct" : "incorrect";
                    this.change({
                        status: n,
                        message: t.message
                    })
                }
                ,
                this.change = (...e) => St.apply(this, e)
            }
            componentDidMount() {
                ke()(window).on("message", this.handleMessageEvent)
            }
            componentWillUnmount() {
                ke()(window).off("message", this.handleMessageEvent)
            }
            getUserInput() {
                return {
                    status: this.props.status,
                    message: this.props.message
                }
            }
            getPromptJSON() {
                return Cc("cs-program")
            }
            render() {
                if (!this.props.programID)
                    return me.createElement("div", null);
                let e, t = !1, n = function(e) {
                    const {InitialRequestUrl: t} = gt()
                      , n = `/computer-programming/program/${e}/embedded?embed=yes&author=no`;
                    return (r = t.protocol) && "file:" === r.toLowerCase() ? `https://khanacademy.org${n}` : Mc(n);
                    var r
                }(this.props.programID);
                const r = {
                    height: this.props.height,
                    width: "100%"
                };
                if (this.props.showEditor ? (n += "&editor=yes",
                e = "perseus-scratchpad-editor") : (n += "&editor=no&width=688",
                e = "perseus-scratchpad",
                "webpage" !== this.props.programType && (t = !0)),
                this.props.showButtons ? (n += "&buttons=yes",
                r.height += 67) : n += "&buttons=no",
                this.props.settings) {
                    const e = {};
                    ve().each(this.props.settings, (function(t) {
                        t.name && t.value && (e[t.name] = t.value)
                    }
                    )),
                    n = Tc(n, "settings", JSON.stringify(e))
                }
                const i = ["allow-popups", "allow-same-origin", "allow-scripts", "allow-top-navigation"].join(" ");
                return me.createElement("div", {
                    className: (0,
                    pe.css)(Ac.widthOverride, t && Ac.container)
                }, me.createElement("iframe", {
                    sandbox: i,
                    src: n,
                    style: r,
                    className: e,
                    allowFullScreen: !0
                }))
            }
        }
        _c.defaultProps = {
            showEditor: !1,
            showButtons: !1,
            status: "incomplete",
            message: null
        };
        const Ac = pe.StyleSheet.create({
            widthOverride: {
                width: 820
            },
            container: {
                margin: "auto"
            }
        });
        var Ic = {
            name: "cs-program",
            displayName: "CS Program",
            supportedAlignments: ["block", "full-width"],
            widget: _c,
            hidden: !0,
            scorer: function(e) {
                return "correct" === e.status ? {
                    type: "points",
                    earned: 1,
                    total: 1,
                    message: e.message || null
                } : "incorrect" === e.status ? {
                    type: "points",
                    earned: 0,
                    total: 1,
                    message: e.message || null
                } : {
                    type: "invalid",
                    message: "Keep going, you're not there yet!"
                }
            }
        };
        class Rc extends me.Component {
            constructor(...e) {
                super(...e),
                this.isWidget = !0
            }
            getPromptJSON() {
                return {
                    type: "definition",
                    definition: (e = this.props).definition,
                    togglePrompt: e.togglePrompt
                };
                var e
            }
            render() {
                return me.createElement(Ks, null, ( ({activeDefinitionId: e, setActiveDefinitionId: t}) => me.createElement(be.J2, {
                    content: me.createElement(be.wV, {
                        color: "white",
                        style: Nc.tooltipBody,
                        closeButtonVisible: !0
                    }, me.createElement(ea, {
                        apiOptions: this.props.apiOptions,
                        content: this.props.definition,
                        widgets: this.props.widgets,
                        strings: this.context.strings
                    })),
                    opened: e === this.props.widgetId,
                    onClose: () => t(null),
                    placement: "top"
                }, me.createElement(ye.ZP, {
                    onClick: () => {
                        this.props.trackInteraction(),
                        t(this.props.widgetId)
                    }
                }, ( ({hovered: e, focused: t, pressed: n}) => me.createElement("span", {
                    style: {
                        color: xe.color.blue,
                        borderBottom: e || t || n ? `2px solid ${xe.color.blue}` : "none"
                    }
                }, this.props.togglePrompt))))))
            }
        }
        Rc.contextType = it,
        Rc.defaultProps = {
            togglePrompt: "define me",
            definition: "definition goes here"
        };
        const Nc = {
            tooltipBody: {
                color: xe.color.offBlack,
                fontSize: 20,
                fontWeight: 500,
                lineHeight: "30px"
            }
        };
        var Pc = {
            name: "definition",
            displayName: "Definition",
            accessible: !0,
            defaultAlignment: "inline",
            widget: Rc,
            transform: e => e,
            scorer: () => Oa()
        };
        class Oc extends me.Component {
            constructor(...e) {
                super(...e),
                this.isWidget = !0
            }
            render() {
                return me.createElement("div", {
                    style: {
                        paddingTop: 8,
                        paddingBottom: 8
                    }
                }, me.createElement(Be.Z, {
                    text: this.context.strings.deprecatedStandin,
                    kind: "info",
                    layout: "full-width"
                }))
            }
        }
        Oc.contextType = it;
        var Lc = {
            name: "deprecated-standin",
            displayName: "Deprecated Standin",
            widget: Oc,
            hidden: !0,
            scorer: () => Oa(1)
        };
        class Dc extends me.Component {
            constructor(...e) {
                super(...e),
                this.focus = () => (fe.findDOMNode(this).focus(),
                !0),
                this._handleChangeEvent = e => {
                    this._handleChange(parseInt(e.target.value))
                }
                ,
                this._handleChange = e => {
                    this.props.trackInteraction(),
                    this.props.onChange({
                        selected: e
                    })
                }
            }
            getUserInput() {
                return {
                    value: this.props.selected
                }
            }
            getPromptJSON() {
                return e = this.props,
                t = this.getUserInput(),
                {
                    type: "dropdown",
                    options: {
                        items: e.choices
                    },
                    userInput: {
                        selectedIndex: t.value - 1
                    }
                };
                var e, t
            }
            render() {
                const e = [me.createElement(qe.BA, {
                    key: "placeholder",
                    value: "0",
                    disabled: !0,
                    label: this.props.placeholder
                }), ...this.props.choices.map(( (e, t) => me.createElement(qe.BA, {
                    key: String(t + 1),
                    value: String(t + 1),
                    label: e
                })))];
                return me.createElement("div", {
                    onClick: e => {
                        e.stopPropagation()
                    }
                    ,
                    onTouchStart: e => {
                        e.stopPropagation()
                    }
                }, me.createElement(qe.q4, {
                    placeholder: "",
                    onChange: e => this._handleChange(parseInt(e)),
                    selectedValue: String(this.props.selected),
                    disabled: this.props.apiOptions.readOnly
                }, e))
            }
        }
        Dc.defaultProps = {
            choices: [],
            selected: 0,
            placeholder: "",
            apiOptions: Rt.defaults
        };
        var Fc = {
            name: "dropdown",
            displayName: "Drop down",
            defaultAlignment: "inline-block",
            accessible: !0,
            widget: Dc,
            transform: e => ({
                placeholder: e.placeholder,
                choices: e.choices.map((e => e.content))
            }),
            scorer: function(e, t) {
                const n = e.value;
                return 0 === n ? {
                    type: "invalid",
                    message: null
                } : {
                    type: "points",
                    earned: t.choices[n - 1].correct ? 1 : 0,
                    total: 1,
                    message: null
                }
            }
        };
        class zc extends me.Component {
            constructor(...e) {
                super(...e),
                this.isWidget = !0,
                this.state = {
                    expanded: !1
                },
                this._mounted = !1,
                this.change = (...e) => St.apply(this, e),
                this._onClick = () => {
                    this.setState({
                        expanded: !this.state.expanded
                    }),
                    this.props.trackInteraction()
                }
            }
            componentDidMount() {
                this._mounted = !0
            }
            componentWillUnmount() {
                this._mounted = !1
            }
            getPromptJSON() {
                return {
                    type: "explanation",
                    showPrompt: (e = this.props).showPrompt,
                    explanation: e.explanation
                };
                var e
            }
            render() {
                const e = this.state.expanded ? this.props.hidePrompt : this.props.showPrompt
                  , t = this.state.expanded ? Ue : He
                  , n = this._mounted && (r = "(prefers-reduced-motion: no-preference)",
                "function" == typeof window.matchMedia && window.matchMedia(r).matches);
                var r;
                const i = {
                    height: "auto",
                    lineHeight: "inherit",
                    marginLeft: "-2px",
                    marginRight: "2px",
                    paddingLeft: "2px"
                }
                  , s = {
                    fontSize: "18px",
                    lineHeight: "inherit",
                    "text-align": "left",
                    marginRight: "-6px",
                    "white-space": "normal"
                }
                  , o = [Bc.content, this.state.expanded ? Bc.contentExpanded : Bc.contentCollapsed, n && (this.state.expanded ? Bc.transitionExpanded : Bc.transitionCollapsed)];
                return me.createElement(le.t5, {
                    mockOnFirstRender: !0,
                    scope: "explanation-widget"
                }, (n => me.createElement(me.Fragment, null, me.createElement(Fe.Z, {
                    "aria-expanded": this.state.expanded,
                    "aria-controls": n.get("content"),
                    endIcon: t,
                    kind: "tertiary",
                    labelStyle: s,
                    onClick: this._onClick,
                    size: "small",
                    style: i
                }, e), me.createElement(le.G7, {
                    id: n.get("content"),
                    style: o,
                    "aria-hidden": !this.state.expanded,
                    testId: "content-container"
                }, me.createElement(le.G7, {
                    style: Bc.contentWrapper
                }, me.createElement(ea, {
                    apiOptions: this.props.apiOptions,
                    content: this.props.explanation,
                    widgets: this.props.widgets,
                    linterContext: this.props.linterContext,
                    strings: this.context.strings
                }))))))
            }
        }
        zc.contextType = it,
        zc.defaultProps = {
            showPrompt: "Explain",
            hidePrompt: "Hide explanation",
            explanation: "explanation goes here\n\nmore explanation",
            widgets: {},
            linterContext: se
        };
        const Bc = pe.StyleSheet.create({
            content: {
                borderLeft: "0px solid #ccc",
                display: "inline-grid",
                position: "relative"
            },
            contentCollapsed: {
                gridTemplateColumns: "0fr",
                gridTemplateRows: "0fr",
                marginBottom: 0,
                marginTop: 0,
                minWidth: "0",
                paddingBottom: 0,
                visibility: "hidden"
            },
            contentExpanded: {
                borderLeftWidth: "5px",
                gridTemplateColumns: "1fr",
                gridTemplateRows: "1fr",
                marginLeft: -23,
                minWidth: "100%",
                paddingLeft: 23,
                paddingBottom: 10,
                visibility: "visible",
                marginBottom: 14,
                marginTop: 14
            },
            contentWrapper: {
                overflow: "hidden"
            },
            transitionCollapsed: {
                transition: "all 0.25s step-end, grid-template-rows 0.25s, margin-top 0.25s, margin-bottom 0.25s, padding-bottom 0.25s"
            },
            transitionExpanded: {
                transition: "grid-template-rows 0.5s, margin-top 0.5s, margin-bottom 0.5s, padding-bottom 0.5s"
            }
        });
        var qc = {
            name: "explanation",
            displayName: "Explanation",
            accessible: !0,
            defaultAlignment: "inline",
            widget: zc,
            transform: ve().identity,
            isLintable: !0,
            scorer: () => Oa()
        };
        class Hc extends me.Component {
            render() {
                const {apiOptions: e, answerBarState: t, onCheckAnswer: n, onNextQuestion: r} = this.props
                  , {keepTrying: i, tryAgain: s, check: o, correctExcited: a, nextQuestion: l} = this.context.strings
                  , c = nt({}, Uc.answerBar, {
                    backgroundColor: "CORRECT" === t ? xe.color.offWhite : "white",
                    justifyContent: "CORRECT" !== t || r ? "space-between" : "center"
                })
                  , h = "INCORRECT" === t ? me.createElement("span", {
                    style: Uc.text
                }, me.createElement("span", {
                    style: Uc.tryAgainIcon
                }, me.createElement(Mi, Pi)), me.createElement("span", {
                    style: {
                        marginLeft: 8
                    }
                }, i)) : me.createElement("span", null);
                if ("CORRECT" !== t) {
                    const r = "INCORRECT" === t ? s : o;
                    return me.createElement("div", {
                        style: c
                    }, h, me.createElement(Fe.Z, {
                        disabled: e.readOnly || "ACTIVE" !== t,
                        onClick: n
                    }, r))
                }
                return me.createElement("div", {
                    style: c
                }, me.createElement("span", {
                    style: Uc.text
                }, me.createElement("span", {
                    style: {
                        fontSize: 28,
                        color: xe.color.green
                    }
                }, me.createElement(Mi, nt({}, Ni, {
                    style: {
                        marginBottom: 5
                    }
                }))), me.createElement("span", {
                    role: "alert",
                    "aria-label": a,
                    style: {
                        marginLeft: 8
                    }
                }, a)), r && me.createElement(Fe.Z, {
                    onClick: r
                }, l))
            }
        }
        Hc.contextType = it;
        const Uc = {
            answerBar: {
                display: "flex",
                alignItems: "center",
                height: 68,
                marginLeft: Pn,
                marginRight: Pn,
                marginBottom: Pn,
                marginTop: Nn,
                paddingLeft: Nn,
                paddingRight: 10,
                borderTop: `1px solid ${xe.color.offBlack50}`
            },
            tryAgainIcon: {
                fontSize: 28,
                color: "#63D9EA",
                transform: "scale(-1,1) rotate(-268deg)"
            },
            text: {
                display: "flex",
                flexDirection: "row",
                alignItems: "center",
                fontWeight: "bold",
                fontSize: 17
            }
        }
          , Gc = "ungraded"
          , Wc = "correct"
          , Vc = "incorrect"
          , $c = "invalid"
          , jc = (e, t) => {
            switch (e) {
            case "HIDDEN":
            case "INACTIVE":
                return t ? "ACTIVE" : e;
            case "ACTIVE":
                return t ? e : "INACTIVE";
            case "INCORRECT":
                return t ? "ACTIVE" : "INACTIVE";
            default:
                return e
            }
        }
        ;
        class Kc extends me.Component {
            constructor(...e) {
                super(...e),
                this.state = {
                    status: Gc,
                    showHint: !1,
                    message: "",
                    answerBarState: "HIDDEN"
                },
                this.rendererRef = me.createRef(),
                this.hintRendererRef = me.createRef(),
                this.change = (...e) => St.apply(this, e),
                this._onInteractWithWidget = e => {
                    if (this.setState({
                        status: Gc,
                        message: ""
                    }),
                    this.rendererRef.current) {
                        this.change("widgets", this.props.widgets);
                        const e = 0 === this.rendererRef.current.emptyWidgets().length
                          , t = this.state.answerBarState;
                        this.setState({
                            answerBarState: jc(t, e)
                        })
                    }
                }
                ,
                this._checkAnswer = () => {
                    var e, t;
                    null == (e = this.rendererRef.current) || e.showRationalesForCurrentlySelectedChoices();
                    const n = (null == (t = this.rendererRef.current) ? void 0 : t.score()) || {
                        type: "invalid"
                    }
                      , {INVALID_MESSAGE_PREFIX: r, DEFAULT_INVALID_MESSAGE_1: i, DEFAULT_INVALID_MESSAGE_2: s} = this.context.strings
                      , o = "points" === n.type ? n.total === n.earned ? Wc : Vc : $c
                      , a = "points" === n.type ? n.message || "" : n.message ? `${r} ${n.message}` : `${r} ${i}${s}`;
                    this.setState({
                        status: o,
                        message: a,
                        answerBarState: "correct" === o ? "CORRECT" : "INCORRECT"
                    }),
                    this.props.trackInteraction({
                        status: o
                    })
                }
                ,
                this.getInputPaths = () => {
                    var e;
                    return (null == (e = this.rendererRef.current) ? void 0 : e.getInputPaths()) || []
                }
                ,
                this.setInputValue = (e, t, n) => {
                    var r;
                    return null == (r = this.rendererRef.current) ? void 0 : r.setInputValue(e, t, n)
                }
                ,
                this.focus = () => {
                    var e;
                    return !(null == (e = this.rendererRef.current) || !e.focus())
                }
                ,
                this.focusInputPath = e => {
                    var t;
                    null == (t = this.rendererRef.current) || t.focusPath(e)
                }
                ,
                this.blurInputPath = e => {
                    var t;
                    null == (t = this.rendererRef.current) || t.blurPath(e)
                }
            }
            shouldComponentUpdate(e, t) {
                return e !== this.props || t !== this.state
            }
            getPromptJSON() {
                var e, t, n;
                const r = (null == (e = this.hintRendererRef.current) ? void 0 : e.getPromptJSON()) || {
                    content: (null == (t = this.props.hint) ? void 0 : t.content) || "",
                    widgets: {}
                };
                return i = this.props.title,
                s = null == (n = this.rendererRef.current) ? void 0 : n.getPromptJSON(),
                o = r,
                s ? nt({}, s, {
                    title: i,
                    type: "graded-group",
                    hint: o
                }) : {
                    type: "graded-group",
                    title: i,
                    content: "",
                    widgets: {},
                    hint: o
                };
                var i, s, o
            }
            render() {
                const e = ve().extend({}, Rt.defaults, this.props.apiOptions, {
                    onFocusChange: (e, t) => {
                        t && this.props.onBlur(t),
                        e && this.props.onFocus(e)
                    }
                });
                let t = null
                  , n = null;
                this.state.status === Wc ? (n = me.createElement(Mi, nt({}, Ii, {
                    style: {
                        color: "#526f03"
                    }
                })),
                t = this.context.strings.correct) : this.state.status === Vc && (n = me.createElement(Mi, nt({}, Ri, {
                    style: {
                        color: "#ff5454"
                    }
                })),
                t = this.context.strings.incorrect);
                const r = this.props.inGradedGroupSet ? (0,
                pe.css)(Zc.gradedGroupInSet) : (0,
                pe.css)(Zc.gradedGroup)
                  , i = de()({
                    [r]: e.isMobile,
                    "perseus-graded-group": !0,
                    "answer-correct": !e.isMobile && this.state.status === Wc,
                    "answer-incorrect": !e.isMobile && this.state.status === Vc
                })
                  , {answerBarState: s} = this.state
                  , o = "CORRECT" === s
                  , a = e.readOnly || e.isMobile && o;
                return me.createElement("div", {
                    className: i
                }, !!this.props.title && me.createElement("div", {
                    className: (0,
                    pe.css)(Zc.title)
                }, this.props.title), me.createElement(ea, nt({}, this.props, {
                    ref: this.rendererRef,
                    apiOptions: nt({}, e, {
                        readOnly: a
                    }),
                    onInteractWithWidget: this._onInteractWithWidget,
                    linterContext: this.props.linterContext,
                    strings: this.context.strings
                })), !e.isMobile && n && me.createElement("div", {
                    className: "group-icon"
                }, n), !e.isMobile && t && me.createElement("div", {
                    className: (0,
                    pe.css)(at.srOnly),
                    role: "alert",
                    "aria-label": t
                }, t), !e.isMobile && me.createElement("p", {
                    role: "status",
                    "aria-live": "polite"
                }, this.state.message), !e.isMobile && me.createElement(Fe.Z, {
                    kind: "secondary",
                    disabled: this.props.apiOptions.readOnly,
                    onClick: this._checkAnswer
                }, this.context.strings.check), !e.isMobile && o && this.props.onNextQuestion && me.createElement(Fe.Z, {
                    kind: "secondary",
                    disabled: this.props.apiOptions.readOnly,
                    onClick: this.props.onNextQuestion,
                    style: {
                        marginLeft: 5
                    }
                }, this.context.strings.nextQuestion), this.props.hint && this.props.hint.content && (this.state.showHint ? me.createElement("div", null, me.createElement("button", {
                    tabIndex: "0",
                    className: (0,
                    pe.css)(Zc.explanationTitle),
                    onClick: () => this.setState({
                        showHint: !1
                    }),
                    onKeyPress: e => {
                        e.preventDefault(),
                        this.setState({
                            showHint: !1
                        })
                    }
                }, this.context.strings.hideExplanation), me.createElement(ea, nt({}, this.props.hint, {
                    ref: this.hintRendererRef,
                    apiOptions: e,
                    linterContext: this.props.linterContext,
                    strings: this.context.strings
                }))) : me.createElement("button", {
                    tabIndex: "0",
                    onClick: () => this.setState({
                        showHint: !0
                    }),
                    onKeyPress: e => {
                        e.preventDefault(),
                        this.setState({
                            showHint: !0
                        })
                    }
                    ,
                    className: (0,
                    pe.css)(Zc.showHintLink)
                }, this.context.strings.explain)), e.isMobile && "HIDDEN" !== s && me.createElement(Hc, {
                    apiOptions: e,
                    answerBarState: s,
                    onCheckAnswer: this._checkAnswer,
                    onNextQuestion: this.props.onNextQuestion
                }))
            }
        }
        Kc.contextType = it,
        Kc.defaultProps = {
            title: "",
            content: "",
            widgets: {},
            images: {},
            hint: null,
            hasHint: !1,
            linterContext: se
        };
        const Zc = pe.StyleSheet.create({
            gradedGroupInSet: {
                marginLeft: 0,
                paddingLeft: 0
            },
            gradedGroup: {
                borderTop: `1px solid ${_n}`,
                borderBottom: `1px solid ${_n}`,
                backgroundColor: Rn,
                marginLeft: Pn,
                marginRight: Pn,
                paddingBottom: Nn,
                paddingLeft: Nn,
                paddingRight: Nn,
                paddingTop: 10,
                width: "auto"
            },
            showHintLink: {
                backgroundColor: "unset",
                fontSize: 14,
                padding: 0,
                border: "none",
                marginTop: 20,
                color: xe.color.blue,
                cursor: "pointer",
                display: "block",
                clear: "both"
            },
            explanationTitle: {
                backgroundColor: "unset",
                marginTop: 20,
                color: xe.color.blue,
                marginBottom: 10,
                cursor: "pointer",
                fontSize: 14,
                padding: 0,
                border: "none",
                display: "block",
                clear: "both"
            },
            title: {
                fontSize: 12,
                color: An,
                textTransform: "uppercase",
                marginBottom: 11,
                letterSpacing: .8
            }
        });
        var Yc = {
            name: "graded-group",
            displayName: "Graded group (articles only)",
            widget: Kc,
            traverseChildWidgets: function(e, t) {
                return ve().extend({}, e, t(e))
            },
            hidden: !1,
            tracking: "all",
            isLintable: !0
        };
        class Xc extends me.Component {
            constructor(...e) {
                super(...e),
                this.handleKeyDown = (e, t) => {
                    "Enter" !== e.key && " " !== e.key || this.props.onChangeCurrentGroup(t)
                }
            }
            render() {
                return me.createElement("ul", {
                    className: de()((0,
                    pe.css)(eh.indicatorContainer), "indicatorContainer")
                }, this.props.gradedGroups.map(( ({title: e}, t) => me.createElement("li", {
                    className: (0,
                    pe.css)(eh.indicator),
                    key: e
                }, me.createElement(ye.ZP, {
                    role: "button",
                    "aria-label": this.context.strings.skipToTitle({
                        title: e
                    }),
                    style: eh.indicatorButton,
                    onClick: () => this.props.onChangeCurrentGroup(t),
                    onKeyDown: e => this.handleKeyDown(e, t)
                }, ( ({hovered: e, focused: n, pressed: r}) => me.createElement(le.G7, {
                    style: [eh.indicatorDot, (e || n || r) && eh.indicatorDotFocused]
                }, t === this.props.currentGroup && me.createElement(le.G7, {
                    style: eh.indicatorDotActive
                }, me.createElement("span", {
                    className: (0,
                    pe.css)(at.srOnly)
                }, this.context.strings.current)))))))))
            }
        }
        Xc.contextType = it;
        class Jc extends me.Component {
            constructor(...e) {
                super(...e),
                this._childGroup = void 0,
                this.state = {
                    currentGroup: 0
                },
                this.change = (...e) => St.apply(this, e),
                this.getInputPaths = () => this._childGroup.getInputPaths(),
                this.setInputValue = (e, t, n) => this._childGroup.setInputValue(e, t, n),
                this.focus = () => this._childGroup.focus(),
                this.focusInputPath = e => {
                    this._childGroup.focusInputPath(e)
                }
                ,
                this.blurInputPath = e => {
                    this._childGroup.blurInputPath(e)
                }
                ,
                this.handleNextQuestion = () => {
                    const {currentGroup: e} = this.state;
                    e < this.props.gradedGroups.length - 1 && this.setState({
                        currentGroup: e + 1
                    })
                }
            }
            shouldComponentUpdate(e, t) {
                return e.gradedGroups,
                e !== this.props || t !== this.state
            }
            getPromptJSON() {
                const e = this._childGroup.getPromptJSON();
                return t = this.props,
                n = e,
                {
                    type: "graded-group-set",
                    options: {
                        groupCount: t.gradedGroups.length,
                        currentGroup: n
                    }
                };
                var t, n
            }
            render() {
                const {JIPT: e} = gt();
                if (e.useJIPT && this.props.gradedGroups.length > 1)
                    return me.createElement("div", {
                        className: (0,
                        pe.css)(eh.container)
                    }, this.props.gradedGroups.map(( (e, t) => me.createElement(Kc, nt({
                        key: t
                    }, this.props, e, {
                        inGradedGroupSet: !1,
                        linterContext: this.props.linterContext
                    })))));
                const t = this.props.gradedGroups[this.state.currentGroup];
                if (!t)
                    return me.createElement("span", null, "No current group...");
                const n = this.props.gradedGroups.length
                  , r = this.state.currentGroup < n - 1 ? this.handleNextQuestion : null;
                return me.createElement("div", {
                    className: (0,
                    pe.css)(eh.container)
                }, me.createElement("div", {
                    className: (0,
                    pe.css)(eh.top)
                }, me.createElement("div", {
                    className: (0,
                    pe.css)(eh.title)
                }, t.title), me.createElement("div", {
                    className: (0,
                    pe.css)(eh.spacer)
                }), me.createElement(Xc, {
                    currentGroup: this.state.currentGroup,
                    gradedGroups: this.props.gradedGroups,
                    onChangeCurrentGroup: e => this.setState({
                        currentGroup: e
                    })
                })), me.createElement(Kc, nt({
                    key: this.state.currentGroup,
                    ref: e => this._childGroup = e
                }, this.props, t, {
                    inGradedGroupSet: !0,
                    title: null,
                    onNextQuestion: r,
                    linterContext: this.props.linterContext
                })))
            }
        }
        Jc.defaultProps = {
            gradedGroups: [],
            linterContext: se
        };
        var Qc = {
            name: "graded-group-set",
            displayName: "Graded group set (articles only)",
            widget: Jc,
            traverseChildWidgets: function(e, t) {
                return {
                    groups: e.gradedGroups.map(t)
                }
            },
            hidden: !1,
            tracking: "all",
            isLintable: !0
        };
        const eh = pe.StyleSheet.create({
            top: {
                display: "flex",
                flexDirection: "row"
            },
            spacer: {
                flex: 1
            },
            title: {
                fontSize: 12,
                color: xe.color.offBlack64,
                textTransform: "uppercase",
                marginBottom: 11,
                letterSpacing: .8
            },
            indicatorContainer: {
                display: "flex",
                flexDirection: "row",
                listStyle: "none",
                margin: "unset",
                paddingInlineStart: "unset",
                flexWrap: "wrap"
            },
            indicator: {
                width: 24,
                height: 24
            },
            indicatorButton: {
                width: "100%",
                height: "100%",
                display: "flex",
                flexWrap: "wrap",
                placeContent: "center",
                cursor: "pointer",
                ":focus": {
                    outline: "none"
                }
            },
            indicatorDot: {
                boxSizing: "content-box",
                width: 10,
                height: 10,
                borderRadius: "100%",
                borderWidth: 2,
                borderColor: xe.color.blue,
                borderStyle: "solid"
            },
            indicatorDotFocused: {
                borderWidth: 5,
                borderStyle: "double"
            },
            indicatorDotActive: {
                backgroundColor: xe.color.blue,
                width: "100%",
                height: "100%"
            },
            container: {
                borderTop: `1px solid ${_n}`,
                borderBottom: `1px solid ${_n}`,
                backgroundColor: Rn,
                marginLeft: Pn,
                marginRight: Pn,
                paddingBottom: Nn,
                paddingLeft: Nn,
                paddingRight: Nn,
                paddingTop: 10,
                width: "auto"
            }
        });
        class th extends me.Component {
            constructor(...e) {
                super(...e),
                this.container = void 0
            }
            componentWillUnmount() {
                this.container = null
            }
            focus() {
                if (this.container)
                    return this.container.focus(),
                    !0
            }
            toggleSelect(e) {
                const t = this.props.value;
                this.props.allowEmpty ? this.props.onChange(t !== e ? e : null) : this.props.onChange(e)
            }
            render() {
                const e = this.props.value
                  , t = this.props.buttons.map(( (t, n) => me.createElement("button", {
                    title: t.title,
                    type: "button",
                    id: "" + n,
                    ref: "button" + n,
                    key: "" + n,
                    className: (0,
                    pe.css)(nh.buttonStyle, t.value === e && nh.selectedStyle),
                    onClick: () => this.toggleSelect(t.value)
                }, t.content || "" + t.value)));
                return me.createElement("div", {
                    style: {
                        display: "inline-block"
                    },
                    ref: e => this.container = e
                }, t)
            }
        }
        th.defaultProps = {
            value: null,
            allowEmpty: !0
        };
        const nh = pe.StyleSheet.create({
            buttonStyle: {
                backgroundColor: "white",
                border: "1px solid #ccc",
                borderLeft: "0",
                cursor: "pointer",
                margin: "0",
                padding: "5px 10px",
                position: "relative",
                ":first-child": {
                    borderLeft: "1px solid #ccc",
                    borderTopLeftRadius: "3px",
                    borderBottomLeftRadius: "3px"
                },
                ":last-child": {
                    borderRight: "1px solid #ccc",
                    borderTopRightRadius: "3px",
                    borderBottomRightRadius: "3px"
                },
                ":hover": {
                    backgroundColor: "#ccc"
                },
                ":focus": {
                    zIndex: 2
                }
            },
            selectedStyle: {
                backgroundColor: "#ddd"
            }
        });
        function rh(e) {
            let t = e[0]
              , n = e[1]
              , r = e[2];
            const i = e[3];
            t < 0 && (t *= -1,
            n *= -1,
            r *= -1);
            const s = 2 * Math.PI;
            for (n < 0 && (n *= -1,
            r *= -1,
            r += s / 2); r > 0; )
                r -= s;
            for (; r < 0; )
                r += s;
            return [t, n, r, i]
        }
        function ih(e) {
            let t = e[0]
              , n = e[1]
              , r = e[2];
            const i = e[3];
            t < 0 && (t *= -1,
            n *= -1,
            r *= -1);
            const s = Math.PI;
            for (n < 0 && (n *= -1,
            r *= -1,
            r += s / 2); r > 0; )
                r -= s;
            for (; r < 0; )
                r += s;
            return [t, n, r, i]
        }
        const sh = {
            areEqual: function(e, t) {
                return vn.deepEq(e, t)
            },
            Movable: Cs.Plot,
            getPropsForCoeffs: function(e) {
                return {
                    fn: ve().partial(this.getFunctionForCoeffs, e)
                }
            }
        }
          , oh = ve().extend({}, sh, {
            url: "https://ka-perseus-graphie.s3.amazonaws.com/67aaf581e6d9ef9038c10558a1f70ac21c11c9f8.png",
            defaultCoords: [[.25, .75], [.75, .75]],
            getCoefficients: function(e) {
                const t = e[0]
                  , n = e[1]
                  , r = n[0] - t[0]
                  , i = n[1] - t[1];
                if (0 === r)
                    return;
                const s = i / r;
                return [s, n[1] - s * n[0]]
            },
            getFunctionForCoeffs: function(e, t) {
                return e[0] * t + e[1]
            },
            getEquationString: function(e) {
                const t = this.getCoefficients(e)
                  , n = t[0]
                  , r = t[1];
                return "y = " + n.toFixed(3) + "x + " + r.toFixed(3)
            }
        })
          , ah = ve().extend({}, sh, {
            url: "https://ka-perseus-graphie.s3.amazonaws.com/e23d36e6fc29ee37174e92c9daba2a66677128ab.png",
            defaultCoords: [[.5, .5], [.75, .75]],
            Movable: Cs.Parabola,
            getCoefficients: function(e) {
                const t = e[0]
                  , n = e[1]
                  , r = t[0]
                  , i = t[1]
                  , s = (n[1] - i) / ((n[0] - r) * (n[0] - r));
                return [s, -2 * r * s, s * r * r + i]
            },
            getFunctionForCoeffs: function(e, t) {
                return (e[0] * t + e[1]) * t + e[2]
            },
            getPropsForCoeffs: function(e) {
                return {
                    a: e[0],
                    b: e[1],
                    c: e[2]
                }
            },
            getEquationString: function(e) {
                const t = this.getCoefficients(e)
                  , n = t[0]
                  , r = t[1]
                  , i = t[2];
                return "y = " + n.toFixed(3) + "x^2 + " + r.toFixed(3) + "x + " + i.toFixed(3)
            }
        })
          , lh = ve().extend({}, sh, {
            url: "https://ka-perseus-graphie.s3.amazonaws.com/3d68e7718498475f53b206c2ab285626baf8857e.png",
            defaultCoords: [[.5, .5], [.6, .6]],
            Movable: Cs.Sinusoid,
            getCoefficients: function(e) {
                const t = e[0]
                  , n = e[1]
                  , r = n[1] - t[1]
                  , i = Math.PI / (2 * (n[0] - t[0]));
                return [r, i, t[0] * i, t[1]]
            },
            getFunctionForCoeffs: function(e, t) {
                const n = e[0]
                  , r = e[1]
                  , i = e[2]
                  , s = e[3];
                return n * Math.sin(r * t - i) + s
            },
            getPropsForCoeffs: function(e) {
                return {
                    a: e[0],
                    b: e[1],
                    c: e[2],
                    d: e[3]
                }
            },
            getEquationString: function(e) {
                const t = this.getCoefficients(e)
                  , n = t[0]
                  , r = t[1]
                  , i = t[2]
                  , s = t[3];
                return "y = " + n.toFixed(3) + " sin(" + r.toFixed(3) + "x - " + i.toFixed(3) + ") + " + s.toFixed(3)
            },
            areEqual: function(e, t) {
                return vn.deepEq(rh(e), rh(t))
            }
        })
          , ch = ve().extend({}, sh, {
            url: "https://ka-perseus-graphie.s3.amazonaws.com/7db80d23c35214f98659fe1cf0765811c1bbfbba.png",
            defaultCoords: [[.5, .5], [.75, .75]],
            getCoefficients: function(e) {
                const t = e[0]
                  , n = e[1]
                  , r = n[1] - t[1]
                  , i = Math.PI / (4 * (n[0] - t[0]));
                return [r, i, t[0] * i, t[1]]
            },
            getFunctionForCoeffs: function(e, t) {
                const n = e[0]
                  , r = e[1]
                  , i = e[2]
                  , s = e[3];
                return n * Math.tan(r * t - i) + s
            },
            getEquationString: function(e) {
                const t = this.getCoefficients(e)
                  , n = t[0]
                  , r = t[1]
                  , i = t[2]
                  , s = t[3];
                return "y = " + n.toFixed(3) + " sin(" + r.toFixed(3) + "x - " + i.toFixed(3) + ") + " + s.toFixed(3)
            },
            areEqual: function(e, t) {
                return vn.deepEq(ih(e), ih(t))
            }
        })
          , hh = ve().extend({}, sh, {
            url: "https://ka-perseus-graphie.s3.amazonaws.com/9cbfad55525e3ce755a31a631b074670a5dad611.png",
            defaultCoords: [[.5, .55], [.75, .75]],
            defaultAsymptote: [[0, .5], [1, .5]],
            extraCoordConstraint: function(e, t, n, r, i) {
                const s = r[0][1];
                return ve().all(n, (e => e[1] !== s))
            },
            extraAsymptoteConstraint: function(e, t, n, r, i) {
                const s = e[1];
                if (ve().all(n, (e => e[1] > s)) || ve().all(n, (e => e[1] < s)))
                    return [t[0], s];
                const o = t[1];
                if (ve().all(n, (e => e[1] > o))) {
                    const e = ve().min(ve().map(n, (e => e[1])));
                    return [t[0], e - i.snapStep[1]]
                }
                const a = ve().max(ve().map(n, (e => e[1])));
                return [t[0], a + i.snapStep[1]]
            },
            allowReflectOverAsymptote: !0,
            getCoefficients: function(e, t) {
                const n = e[0]
                  , r = e[1]
                  , i = t[0][1]
                  , s = Math.log((n[1] - i) / (r[1] - i)) / (n[0] - r[0]);
                return [(n[1] - i) / Math.exp(s * n[0]), s, i]
            },
            getFunctionForCoeffs: function(e, t) {
                const n = e[0]
                  , r = e[1]
                  , i = e[2];
                return n * Math.exp(r * t) + i
            },
            getEquationString: function(e, t) {
                if (!t)
                    return null;
                const n = this.getCoefficients(e, t)
                  , r = n[0]
                  , i = n[1]
                  , s = n[2];
                return "y = " + r.toFixed(3) + "e^(" + i.toFixed(3) + "x) + " + s.toFixed(3)
            }
        })
          , ph = ve().extend({}, sh, {
            url: "https://ka-perseus-graphie.s3.amazonaws.com/f6491e99d34af34d924bfe0231728ad912068dc3.png",
            defaultCoords: [[.55, .5], [.75, .75]],
            defaultAsymptote: [[.5, 0], [.5, 1]],
            extraCoordConstraint: function(e, t, n, r, i) {
                const s = r[0][0];
                return ve().all(n, (e => e[0] !== s)) && n[0][1] !== n[1][1]
            },
            extraAsymptoteConstraint: function(e, t, n, r, i) {
                const s = e[0];
                if (ve().all(n, (e => e[0] > s)) || ve().all(n, (e => e[0] < s)))
                    return [s, t[1]];
                const o = t[0];
                if (ve().all(n, (e => e[0] > o))) {
                    return [ve().min(ve().map(n, (e => e[0]))) - i.snapStep[0], t[1]]
                }
                return [ve().max(ve().map(n, (e => e[0]))) + i.snapStep[0], t[1]]
            },
            allowReflectOverAsymptote: !0,
            getCoefficients: function(e, t) {
                const n = e => [e[1], e[0]]
                  , r = hh.getCoefficients(ve().map(e, n), ve().map(t, n));
                if (r) {
                    const e = -r[2] / r[0]
                      , t = 1 / r[0];
                    return [1 / r[1], t, e]
                }
            },
            getFunctionForCoeffs: function(e, t, n) {
                const r = e[0]
                  , i = e[1]
                  , s = e[2];
                return r * Math.log(i * t + s)
            },
            getEquationString: function(e, t) {
                if (!t)
                    return null;
                const n = this.getCoefficients(e, t)
                  , r = n[0]
                  , i = n[1]
                  , s = n[2];
                return "y = ln(" + r.toFixed(3) + "x + " + i.toFixed(3) + ") + " + s.toFixed(3)
            }
        })
          , uh = ve().extend({}, sh, {
            url: "https://ka-perseus-graphie.s3.amazonaws.com/8256a630175a0cb1d11de223d6de0266daf98721.png",
            defaultCoords: [[.5, .5], [.75, .75]],
            getCoefficients: function(e) {
                const t = e[0]
                  , n = e[1]
                  , r = n[0] - t[0]
                  , i = n[1] - t[1];
                if (0 === r)
                    return;
                let s = Math.abs(i / r);
                n[1] < t[1] && (s *= -1);
                return [s, t[0], t[1]]
            },
            getFunctionForCoeffs: function(e, t) {
                const n = e[0]
                  , r = e[1]
                  , i = e[2];
                return n * Math.abs(t - r) + i
            },
            getEquationString: function(e) {
                const t = this.getCoefficients(e)
                  , n = t[0]
                  , r = t[1]
                  , i = t[2];
                return "y = " + n.toFixed(3) + "| x - " + r.toFixed(3) + "| + " + i.toFixed(3)
            }
        })
          , dh = {
            linear: oh,
            quadratic: ah,
            sinusoid: lh,
            tangent: ch,
            exponential: hh,
            logarithm: ph,
            absolute_value: uh
        }
          , mh = ve().keys(dh);
        function fh(e) {
            return dh[e]
        }
        const gh = (e, t, n, r) => e.map((e => {
            const i = e.map(( (e, r) => {
                const i = t[r]
                  , s = n[r]
                  , o = function(e, t) {
                    return Math.floor((e[1] - e[0]) / t)
                }(i, s)
                  , a = Math.round(e * o);
                return i[0] + s * a
            }
            ));
            return Re.xm.roundTo(i, r)
        }
        ))
          , vh = (e, t, n, r) => e ? gh(e, t, n, r) : e
          , yh = (e, t) => {
            const n = fh(e)
              , r = "defaultAsymptote"in n ? n.defaultAsymptote : null
              , i = vn.snapStepFromGridStep([1, 1]);
            return {
                type: e,
                asymptote: vh(r, t.range, t.step, i),
                coords: null
            }
        }
          , bh = ve().first
          , xh = (e, t) => {
            const n = e.gridStep || vn.getGridStep(e.range, e.step, t);
            return {
                gridStep: n,
                snapStep: e.snapStep || vn.snapStepFromGridStep(n)
            }
        }
          , wh = {
            labels: ["x", "y"],
            range: [[-10, 10], [-10, 10]],
            step: [1, 1],
            backgroundImage: {
                url: null
            },
            markings: "graph",
            rulerLabel: "",
            rulerTicks: 10,
            valid: !0,
            showTooltips: !1
        }
          , kh = yh("linear", wh)
          , Sh = {
            graph: wh,
            plot: kh,
            availableTypes: [kh.type]
        }
          , Eh = e => {
            const t = e.charAt(0).toUpperCase() + e.substring(1)
              , n = gt().staticUrl;
            return {
                value: e,
                title: t,
                content: me.createElement("img", {
                    src: n(fh(e).url),
                    alt: t
                })
            }
        }
        ;
        function Mh(e) {
            if ("exponential" === e.type || "logarithm" === e.type) {
                return fh(e.type).getCoefficients(e.coords, e.asymptote)
            }
            if ("linear" === e.type || "quadratic" === e.type || "absolute_value" === e.type || "sinusoid" === e.type || "tangent" === e.type) {
                return fh(e.type).getCoefficients(e.coords)
            }
            throw new s.uI("Invalid grapher type",s.D1.InvalidInput)
        }
        const Ch = Cs.MovablePoint
          , Th = Cs.MovableLine;
        const _h = {
            padding: "5px 5px"
        };
        class Ah extends me.Component {
            constructor(...e) {
                super(...e),
                this._coords = () => {
                    const e = this.props
                      , t = e.graph
                      , n = e.model && vh(e.model.defaultCoords, t.range, t.step, t.snapStep);
                    return e.coords || n || null
                }
                ,
                this._asymptote = () => this.props.asymptote,
                this.change = (...e) => St.apply(this, e),
                this.renderPlot = () => {
                    const e = this.props.model
                      , t = this.props.graph.range[0]
                      , n = nt({
                        stroke: this.props.isMobile ? Qn.BLUE_C : Qn.DYNAMIC
                    }, this.props.isMobile ? {
                        "stroke-width": 3
                    } : {})
                      , r = e.getCoefficients(this._coords(), this._asymptote());
                    if (!r)
                        return;
                    const i = e.getPropsForCoeffs(r, t);
                    return me.createElement(e.Movable, nt({}, i, {
                        key: this.props.model.url,
                        range: t,
                        style: n
                    }))
                }
                ,
                this.renderAsymptote = () => {
                    const e = this.props.model
                      , t = this.props.graph
                      , n = this._asymptote()
                      , r = {
                        strokeDasharray: "- "
                    };
                    return n && me.createElement(Th, {
                        onMove: (e, t) => {
                            const n = Re.xr.subtract(e, t)
                              , r = ve().map(this._asymptote(), (e => Re.xr.add(e, n)));
                            this.props.onChange({
                                asymptote: r
                            })
                        }
                        ,
                        constraints: [cs.MovableLine.constraints.bound(), cs.MovableLine.constraints.snap(), (n, r) => {
                            const i = Re.xr.subtract(n, r)
                              , s = ve().map(this._asymptote(), (e => Re.xr.add(e, i)));
                            return !e.extraAsymptoteConstraint || e.extraAsymptoteConstraint(n, r, this._coords(), s, t)
                        }
                        ],
                        normalStyle: r,
                        highlightStyle: r
                    }, ve().map(n, ( (e, t) => me.createElement(Ch, {
                        key: `asymptoteCoord-${t}`,
                        coord: e,
                        static: !0,
                        draw: null,
                        extendLine: !0,
                        showHairlines: this.props.showHairlines,
                        hideHairlines: this.props.hideHairlines,
                        showTooltips: this.props.showTooltips,
                        isMobile: this.props.isMobile
                    }))))
                }
            }
            render() {
                const e = ve().map(this._coords(), ( (e, t) => me.createElement(Ch, {
                    key: t,
                    coord: e,
                    static: this.props.static,
                    constraints: [cs.MovablePoint.constraints.bound(), cs.MovablePoint.constraints.snap(), e => {
                        const n = ve().all(this._coords(), ( (n, r) => t === r || !n || !Re.Rx.equal(e[0], n[0])));
                        if (!n)
                            return !1;
                        if (this.props.model && this.props.model.extraCoordConstraint) {
                            const n = this.props.model.extraCoordConstraint
                              , r = ve().clone(this._coords())
                              , i = ve().clone(r[t]);
                            return r[t] = e,
                            n(e, i, r, this._asymptote(), this.props.graph)
                        }
                        return n
                    }
                    ],
                    onMove: (e, n) => {
                        let r;
                        const i = this._asymptote();
                        r = i && this.props.model.allowReflectOverAsymptote && function(e, t, n) {
                            const r = (e, t, n) => (t[0] - e[0]) * (n[1] - e[1]) - (n[0] - e[0]) * (t[1] - e[1]);
                            return r(n[0], n[1], t) > 0 != r(n[0], n[1], e) > 0
                        }(e, n, i) ? ve().map(this._coords(), (e => Re.xm.reflectOverLine(e, i))) : ve().clone(this._coords()),
                        r[t] = e,
                        this.props.onChange({
                            coords: r
                        })
                    }
                    ,
                    showHairlines: this.props.showHairlines,
                    hideHairlines: this.props.hideHairlines,
                    showTooltips: this.props.showTooltips,
                    isMobile: this.props.isMobile
                })))
                  , t = this.props.graph.box
                  , n = this.props.graph.backgroundImage;
                let r = null;
                if (n.url) {
                    const e = t[0] / Ln.defaultBoxSize;
                    r = me.createElement(qs, {
                        src: n.url,
                        width: n.width,
                        height: n.height,
                        scale: e
                    })
                }
                return me.createElement("div", {
                    className: "perseus-widget perseus-widget-grapher",
                    style: {
                        width: t[0],
                        height: t[1],
                        boxSizing: "initial"
                    }
                }, me.createElement("div", {
                    className: "graphie-container above-scratchpad",
                    style: {
                        width: t[0],
                        height: t[1]
                    }
                }, r, me.createElement(Cs, nt({}, this.props.graph, {
                    setDrawingAreaAvailable: this.props.setDrawingAreaAvailable
                }), this.props.model && this.renderPlot(), this.props.model && this.renderAsymptote(), this.props.model && e)))
            }
        }
        Ah.defaultProps = {
            graph: {
                range: [[-10, 10], [-10, 10]],
                step: [1, 1]
            },
            coords: null,
            asymptote: null,
            isMobile: !1
        };
        class Ih extends me.Component {
            constructor(...e) {
                super(...e),
                this.horizHairline = void 0,
                this.vertHairline = void 0,
                this.handlePlotChanges = e => {
                    const t = ve().extend({}, this.props.plot, e);
                    this.props.onChange({
                        plot: t
                    }),
                    this.props.trackInteraction()
                }
                ,
                this.handleActiveTypeChange = e => {
                    const t = this.props.graph
                      , n = ve().extend({}, this.props.plot, yh(e, t));
                    this.props.onChange({
                        plot: n
                    })
                }
                ,
                this._setupGraphie = (e, t) => {
                    const n = this.props.apiOptions.isMobile;
                    if ("graph" === t.markings ? (e.graphInit({
                        range: t.range,
                        scale: ve().pluck(t.gridConfig, "scale"),
                        axisArrows: "<->",
                        labelFormat: function(e) {
                            return "\\small{" + e + "}"
                        },
                        gridStep: t.gridStep,
                        snapStep: t.snapStep,
                        tickStep: n ? this._calculateMobileTickStep(t.gridStep, t.step, t.range) : ve().pluck(t.gridConfig, "tickStep"),
                        labelStep: 1,
                        unityLabels: ve().pluck(t.gridConfig, "unityLabel"),
                        isMobile: n
                    }),
                    e.label([0, t.range[1][1]], t.labels[1], n ? "below right" : "above"),
                    e.label([t.range[0][1], 0], t.labels[0], n ? "above left" : "right")) : "grid" === t.markings ? e.graphInit({
                        range: t.range,
                        scale: ve().pluck(t.gridConfig, "scale"),
                        gridStep: t.gridStep,
                        axes: !1,
                        ticks: !1,
                        labels: !1,
                        isMobile: n
                    }) : "none" === t.markings && e.init({
                        range: t.range,
                        scale: ve().pluck(t.gridConfig, "scale")
                    }),
                    this.props.apiOptions.isMobile) {
                        const t = {
                            normalStyle: {
                                strokeWidth: 1
                            }
                        };
                        this.horizHairline = new Mr(e,[0, 0],[0, 0],t),
                        this.horizHairline.attr({
                            stroke: Qn.INTERACTIVE
                        }),
                        this.horizHairline.hide(),
                        this.vertHairline = new Mr(e,[0, 0],[0, 0],t),
                        this.vertHairline.attr({
                            stroke: Qn.INTERACTIVE
                        }),
                        this.vertHairline.hide()
                    }
                }
                ,
                this.showHairlines = e => {
                    this.props.apiOptions.isMobile && "none" !== this.props.markings && (this.horizHairline.moveTo([this.props.graph.range[0][0], e[1]], [this.props.graph.range[0][1], e[1]]),
                    this.horizHairline.show(),
                    this.vertHairline.moveTo([e[0], this.props.graph.range[1][0]], [e[0], this.props.graph.range[1][1]]),
                    this.vertHairline.show())
                }
                ,
                this.hideHairlines = () => {
                    this.props.apiOptions.isMobile && (this.horizHairline.hide(),
                    this.vertHairline.hide())
                }
            }
            static getUserInputFromProps(e) {
                return e.plot
            }
            _getGridConfig(e) {
                return e.step.map(( (t, n) => vn.gridDimensionConfig(t, e.range[n], e.box[n], e.gridStep[n])))
            }
            _calculateMobileTickStep(e, t, n) {
                const r = vn.constrainedTickStepsFromTickSteps(t, n);
                return r[0] = r[0] / e[0],
                r[1] = r[1] / e[1],
                r
            }
            getUserInput() {
                return Ih.getUserInputFromProps(this.props)
            }
            getPromptJSON() {
                return ( (e, t) => {
                    const {type: n, coords: r} = t
                      , i = {
                        type: n,
                        coords: r
                    };
                    return "logarithm" !== t.type && "exponential" !== t.type || (i.asymptote = t.asymptote),
                    {
                        type: "grapher",
                        options: {
                            availableTypes: e.availableTypes,
                            range: e.graph.range,
                            labels: e.graph.labels,
                            tickStep: e.graph.step,
                            gridStep: e.graph.gridStep,
                            snapStep: e.graph.snapStep,
                            backgroundImageUrl: e.graph.backgroundImage.url
                        },
                        userInput: i
                    }
                }
                )(this.props, this.getUserInput())
            }
            render() {
                const e = this.props.plot.type
                  , t = this.props.plot.coords
                  , n = this.props.plot.asymptote
                  , r = me.createElement("div", {
                    style: _h,
                    className: "above-scratchpad"
                }, me.createElement(th, {
                    value: e,
                    allowEmpty: !0,
                    buttons: ve().map(this.props.availableTypes, Eh),
                    onChange: this.handleActiveTypeChange
                }))
                  , i = $o(this.props.containerSizeClass)
                  , s = nt({}, this.props.graph, xh(this.props.graph, i[0]), {
                    gridConfig: this._getGridConfig(nt({}, this.props.graph, {
                        box: i
                    }, xh(this.props.graph, i[0])))
                })
                  , o = {
                    graph: {
                        box: i,
                        range: s.range,
                        step: s.step,
                        snapStep: s.snapStep,
                        backgroundImage: s.backgroundImage,
                        options: s,
                        setup: this._setupGraphie
                    },
                    onChange: this.handlePlotChanges,
                    model: e && fh(e),
                    coords: t,
                    asymptote: n,
                    static: this.props.static,
                    setDrawingAreaAvailable: this.props.apiOptions.setDrawingAreaAvailable,
                    isMobile: this.props.apiOptions.isMobile,
                    showTooltips: this.props.graph.showTooltips,
                    showHairlines: this.showHairlines,
                    hideHairlines: this.hideHairlines
                };
                return me.createElement("div", null, me.createElement(Ah, o), this.props.availableTypes.length > 1 && r)
            }
        }
        Ih.defaultProps = Sh;
        const Rh = e => {
            const t = {
                availableTypes: e.availableTypes,
                graph: e.graph
            };
            if (1 === t.availableTypes.length) {
                const e = t.graph
                  , n = bh(t.availableTypes);
                t.plot = yh(n, e)
            }
            return t
        }
        ;
        var Nh = {
            name: "grapher",
            displayName: "Grapher",
            hidden: !0,
            widget: Ih,
            transform: Rh,
            staticTransform: e => nt({}, Rh(e), {
                availableTypes: [e.correct.type],
                plot: e.correct
            }),
            scorer: function(e, t) {
                if (e.type !== t.correct.type)
                    return {
                        type: "points",
                        earned: 0,
                        total: 1,
                        message: null
                    };
                if (null == e.coords)
                    return {
                        type: "invalid",
                        message: null
                    };
                const n = fh(e.type)
                  , r = Mh(e)
                  , i = Mh(t.correct);
                return null == r || null == i ? {
                    type: "invalid",
                    message: null
                } : n.areEqual(r, i) ? {
                    type: "points",
                    earned: 1,
                    total: 1,
                    message: null
                } : {
                    type: "points",
                    earned: 0,
                    total: 1,
                    message: null
                }
            }
        };
        class Ph extends me.Component {
            constructor(...e) {
                super(...e),
                this.rendererRef = void 0,
                this.change = (...e) => St.apply(this, e),
                this.getSerializedState = () => {
                    var e;
                    return null == (e = this.rendererRef) ? void 0 : e.getSerializedState()
                }
                ,
                this.restoreSerializedState = (e, t) => {
                    var n;
                    return null == (n = this.rendererRef) || n.restoreSerializedState(e, t),
                    null
                }
                ,
                this.setInputValue = (e, t, n) => {
                    var r;
                    return null == (r = this.rendererRef) ? void 0 : r.setInputValue(e, t, n)
                }
                ,
                this.focusInputPath = e => {
                    var t;
                    null == (t = this.rendererRef) || t.focusPath(e)
                }
                ,
                this.blurInputPath = e => {
                    var t;
                    null == (t = this.rendererRef) || t.blurPath(e)
                }
                ,
                this.showRationalesForCurrentlySelectedChoices = () => {
                    var e;
                    null == (e = this.rendererRef) || e.showRationalesForCurrentlySelectedChoices()
                }
            }
            componentDidMount() {
                this.forceUpdate()
            }
            getUserInputMap() {
                var e;
                return null == (e = this.rendererRef) ? void 0 : e.getUserInputMap()
            }
            getUserInput() {
                var e;
                return null == (e = this.rendererRef) ? void 0 : e.getUserInput()
            }
            getPromptJSON() {
                var e, t;
                return (t = null == (e = this.rendererRef) ? void 0 : e.getPromptJSON()) ? nt({}, t, {
                    type: "group"
                }) : {
                    type: "group",
                    content: "",
                    widgets: {}
                }
            }
            getInputPaths() {
                var e, t;
                return null != (e = null == (t = this.rendererRef) ? void 0 : t.getInputPaths()) ? e : []
            }
            focus() {
                var e, t;
                return null != (e = null == (t = this.rendererRef) ? void 0 : t.focus()) && e
            }
            render() {
                var e;
                const t = nt({}, Rt.defaults, this.props.apiOptions, {
                    onFocusChange: (e, t) => {
                        t && this.props.onBlur(t),
                        e && this.props.onFocus(e)
                    }
                })
                  , n = this.props.findWidgets("group").indexOf(this)
                  , r = this.props.apiOptions.groupAnnotator(n, this.props.widgetId)
                  , i = null == (e = this.rendererRef) ? void 0 : e.score()
                  , s = i && "invalid" !== i.type
                  , o = i && "invalid" === i.type;
                return me.createElement("div", {
                    className: de()({
                        "perseus-group": !0,
                        "perseus-group-valid-answer": s,
                        "perseus-group-invalid-answer": o
                    })
                }, r, me.createElement(ea, {
                    content: this.props.content,
                    widgets: this.props.widgets,
                    images: this.props.images,
                    ref: e => this.rendererRef = e,
                    apiOptions: t,
                    findExternalWidgets: this.props.findWidgets,
                    reviewMode: this.props.reviewMode,
                    onInteractWithWidget: e => {
                        this.rendererRef && this.change("widgets", this.rendererRef.props.widgets)
                    }
                    ,
                    linterContext: this.props.linterContext,
                    strings: this.context.strings
                }), this.props.icon && me.createElement("div", {
                    className: "group-icon"
                }, this.props.icon))
            }
        }
        Ph.contextType = it,
        Ph.defaultProps = {
            content: "",
            widgets: {},
            images: {},
            linterContext: se
        };
        var Oh = {
            name: "group",
            displayName: "Group (SAT only)",
            widget: Ph,
            traverseChildWidgets: function(e, t) {
                return nt({}, e, t(e))
            },
            hidden: !0,
            isLintable: !0
        };
        const {updateQueryString: Lh} = vn;
        class Dh extends me.Component {
            constructor(...e) {
                super(...e),
                this.handleMessageEvent = e => {
                    let t = {};
                    try {
                        t = JSON.parse(e.originalEvent.data)
                    } catch (e) {
                        return
                    }
                    if (ve().isUndefined(t.testsPassed))
                        return;
                    const n = t.testsPassed ? "correct" : "incorrect";
                    this.change({
                        status: n,
                        message: t.message
                    })
                }
                ,
                this.change = (...e) => St.apply(this, e)
            }
            componentDidMount() {
                ke()(window).on("message", this.handleMessageEvent)
            }
            componentWillUnmount() {
                ke()(window).off("message", this.handleMessageEvent)
            }
            getUserInput() {
                return {
                    status: this.props.status,
                    message: this.props.message
                }
            }
            getPromptJSON() {
                return Cc("iframe")
            }
            render() {
                const e = {
                    width: String(this.props.width),
                    height: String(this.props.height)
                }
                  , {InitialRequestUrl: t} = gt();
                Object.entries(e).forEach(( ([t,n]) => {
                    n.endsWith("%") || n.endsWith("px") || (e[t] = n + "px")
                }
                ));
                let n = this.props.url;
                if (n && n.length && 0 !== n.indexOf("http") && (n = "https://www.khanacademy.org/computer-programming/program/" + n + "/embedded?buttons=no&embed=yes&editor=no&author=no",
                n = Lh(n, "width", this.props.width),
                n = Lh(n, "height", this.props.height),
                n = Lh(n, "origin", t.origin)),
                this.props.settings) {
                    const e = {};
                    ve().each(this.props.settings, (function(t) {
                        t.name && t.value && (e[t.name] = t.value)
                    }
                    )),
                    n = Lh(n, "settings", JSON.stringify(e))
                }
                let r = "allow-same-origin allow-scripts";
                return r += " allow-top-navigation",
                me.createElement("iframe", {
                    sandbox: "allow-same-origin allow-scripts allow-top-navigation",
                    style: e,
                    src: n,
                    allowFullScreen: this.props.allowFullScreen
                })
            }
        }
        Dh.defaultProps = {
            status: "incomplete",
            message: null,
            allowFullScreen: !1,
            allowTopNavigation: !1
        };
        var Fh = {
            name: "iframe",
            displayName: "Iframe (deprecated)",
            widget: Dh,
            hidden: !0,
            scorer: function(e) {
                return "correct" === e.status ? {
                    type: "points",
                    earned: 1,
                    total: 1,
                    message: e.message || null
                } : "incorrect" === e.status ? {
                    type: "points",
                    earned: 0,
                    total: 1,
                    message: e.message || null
                } : {
                    type: "invalid",
                    message: "Keep going, you're not there yet!"
                }
            }
        };
        const zh = [0, 10]
          , Bh = "block";
        class qh extends me.Component {
            constructor(...e) {
                super(...e),
                this.isWidget = !0,
                this.change = (...e) => St.apply(this, e)
            }
            getPromptJSON() {
                return {
                    type: "image",
                    options: {
                        altText: (e = this.props).alt,
                        title: e.title,
                        caption: e.caption,
                        imageUrl: e.backgroundImage.url
                    }
                };
                var e
            }
            render() {
                let e;
                const t = this.props.caption === this.props.alt ? "" : this.props.alt
                  , {apiOptions: n} = this.props
                  , r = this.props.backgroundImage;
                if (r.url) {
                    const i = r.url;
                    e = me.createElement(jt.Consumer, null, ( ({setAssetStatus: e}) => me.createElement(qs, {
                        src: i,
                        alt: t,
                        width: r.width,
                        height: r.height,
                        preloader: n.imagePreloader,
                        extraGraphie: {
                            box: this.props.box,
                            range: this.props.range,
                            labels: this.props.labels
                        },
                        trackInteraction: this.props.trackInteraction,
                        zoomToFullSizeOnMobile: n.isMobile,
                        constrainHeight: n.isMobile,
                        allowFullBleed: n.isMobile,
                        setAssetStatus: e
                    })))
                }
                if (n.isMobile) {
                    let t;
                    if (this.props.title || this.props.caption) {
                        let e = this.props.title;
                        e && (this.props.caption && !/[.?!"']\s*$/.test(e) && (e += "."),
                        e = `**${e}** `);
                        const i = de()({
                            "perseus-image-caption": !0,
                            "has-title": !!e
                        })
                          , s = this.props.alignment
                          , o = "block" === s || "full-width" === s ? null : "0 !important";
                        t = me.createElement("figcaption", {
                            className: i,
                            style: {
                                maxWidth: r.width
                            }
                        }, me.createElement("div", {
                            style: {
                                minWidth: o
                            }
                        }, me.createElement(ea, {
                            content: e + this.props.caption,
                            apiOptions: n,
                            linterContext: this.props.linterContext,
                            strings: this.context.strings
                        })))
                    }
                    return me.createElement("figure", {
                        className: "perseus-image-widget",
                        style: {
                            maxWidth: r.width
                        }
                    }, e, t)
                }
                let i, s;
                return this.props.title && (i = me.createElement("div", {
                    className: "perseus-image-title"
                }, me.createElement(ea, {
                    content: this.props.title,
                    apiOptions: n,
                    linterContext: this.props.linterContext,
                    strings: this.context.strings
                }))),
                this.props.caption && (s = me.createElement("figcaption", {
                    className: "perseus-image-caption",
                    style: {
                        maxWidth: r.width
                    }
                }, me.createElement(ea, {
                    content: this.props.caption,
                    apiOptions: n,
                    linterContext: this.props.linterContext,
                    strings: this.context.strings
                }))),
                me.createElement("figure", {
                    className: "perseus-image-widget",
                    style: {
                        maxWidth: r.width
                    }
                }, i, e, s)
            }
        }
        qh.contextType = it,
        qh.defaultProps = {
            alignment: Bh,
            title: "",
            range: [zh, zh],
            box: [400, 400],
            backgroundImage: {
                url: null,
                width: 0,
                height: 0
            },
            labels: [],
            alt: "",
            caption: "",
            linterContext: se
        };
        var Hh = {
            name: "image",
            accessible: e => {
                const t = e.backgroundImage;
                return !(t && t.url && !e.alt)
            }
            ,
            defaultAlignment: Bh,
            supportedAlignments: ["block", "full-width"],
            displayName: "Image",
            widget: qh,
            isLintable: !0,
            scorer: () => Oa()
        };
        const Uh = Cs.Label
          , Gh = Cs.Line
          , Wh = Cs.MovablePoint
          , Vh = Cs.MovableLine
          , $h = Cs.Plot
          , jh = Cs.PlotParametric
          , Kh = Cs.Point
          , Zh = Cs.Rect
          , {unescapeMathMode: Yh} = vn
          , Xh = (e, t) => {
            let n = e + "||" + (t = t || {}).decimal_separator + "||";
            const r = t.functions
              , i = r ? r.length : 0;
            for (let e = 0; e < i; e++)
                n += r[e] + "|";
            return n
        }
          , Jh = Object.create(null)
          , Qh = (e, t) => {
            const n = Xh(e, t);
            let i = Jh[n];
            return i || (i = r.Qc(e, t),
            Jh[n] = i,
            i)
        }
          , ep = Object.create(null)
          , tp = (e, t) => {
            const n = Xh(e, t);
            let i = ep[n];
            if (i)
                return i;
            const s = r.Qc(e, t).expr;
            return i = s ? s.compile() : function() {
                return 0
            }
            ,
            ep[n] = i,
            i
        }
        ;
        class np extends me.Component {
            constructor(...e) {
                super(...e),
                this.isWidget = !0,
                this.state = {
                    variables: rp(this.props.elements),
                    functions: ip(this.props.elements)
                },
                this._setupGraphie = (e, t) => {
                    e.graphInit(ve().extend({}, t, {
                        grid: ve().contains(["graph", "grid"], this.props.graph.markings),
                        axes: ve().contains(["graph"], this.props.graph.markings),
                        ticks: ve().contains(["graph"], this.props.graph.markings),
                        labels: ve().contains(["graph"], this.props.graph.markings),
                        labelFormat: function(e) {
                            return "\\small{" + e + "}"
                        },
                        axisArrows: "<->",
                        unityLabels: !1
                    }))
                }
                ,
                this._updatePointLocation = (e, t) => {
                    const n = ve().clone(this.state.variables);
                    n["x_" + e] = t[0],
                    n["y_" + e] = t[1],
                    this.setState({
                        variables: n
                    }),
                    this.props.trackInteraction()
                }
                ,
                this._updateLineLocation = (e, t) => {
                    const n = this._eval("(" + e.endX + ")-(" + e.startX + ")")
                      , r = this._eval("(" + e.endY + ")-(" + e.startY + ")")
                      , i = Re.xr.add(t, [n, r])
                      , s = ve().clone(this.state.variables);
                    s["x_" + e.startSubscript] = t[0],
                    s["y_" + e.startSubscript] = t[1],
                    s["x_" + e.endSubscript] = i[0],
                    s["y_" + e.endSubscript] = i[1],
                    this.setState({
                        variables: s
                    }),
                    this.props.trackInteraction()
                }
                ,
                this._eval = (e, t) => {
                    const n = tp(e, {
                        functions: this.state.functions
                    })
                      , r = ve().extend({}, this.state.variables, t);
                    return ve().each(ve().keys(r), (e => {
                        if (ve().isString(r[e])) {
                            const t = tp(r[e], {
                                functions: this.state.functions
                            });
                            r[e] = function(e) {
                                return t(ve().extend({}, r, {
                                    x: e
                                }))
                            }
                        }
                    }
                    )),
                    n(r) || 0
                }
                ,
                this._extractVars = e => {
                    if (null == e)
                        return [];
                    let t = [];
                    return ve().each(e.args(), (function(e) {
                        e && "Expr" === e.constructor.name && (t = t.concat(this._extractVars(e)))
                    }
                    ), this),
                    "Var" === e.name() && t.push(e.prettyPrint()),
                    t
                }
                ,
                this.change = (...e) => St.apply(this, e)
            }
            UNSAFE_componentWillReceiveProps(e) {
                ve().isEqual(this.props.elements, e.elements) || this.setState({
                    variables: rp(e.elements),
                    functions: ip(e.elements)
                })
            }
            getPromptJSON() {
                return Cc("interaction")
            }
            render() {
                const e = this.props.graph.range;
                let t = this.props.graph.labels;
                return "graph" === this.props.graph.markings && (t = this.props.graph.labels.map((e => e.startsWith("$") && e.endsWith("$") ? e.slice(1, -1) : e))),
                me.createElement(Cs, {
                    box: this.props.graph.box,
                    range: this.props.graph.range,
                    options: this.props.graph,
                    setup: this._setupGraphie,
                    setDrawingAreaAvailable: this.props.apiOptions.setDrawingAreaAvailable
                }, "graph" === this.props.graph.markings && me.createElement(Uh, {
                    coord: [0, e[1][1]],
                    text: t[1],
                    direction: "above"
                }), "graph" === this.props.graph.markings && me.createElement(Uh, {
                    coord: [e[0][1], 0],
                    text: t[0],
                    direction: "right"
                }), ve().map(this.props.elements, (function(e, t) {
                    if ("point" === e.type)
                        return me.createElement(Kh, {
                            key: e.key,
                            coord: [this._eval(e.options.coordX), this._eval(e.options.coordY)],
                            color: e.options.color
                        });
                    if ("line" === e.type) {
                        const t = [this._eval(e.options.startX), this._eval(e.options.startY)]
                          , n = [this._eval(e.options.endX), this._eval(e.options.endY)];
                        return me.createElement(Gh, {
                            key: e.key,
                            start: t,
                            end: n,
                            style: {
                                stroke: e.options.color,
                                strokeWidth: e.options.strokeWidth,
                                strokeDasharray: e.options.strokeDasharray,
                                arrows: e.options.arrows
                            }
                        })
                    }
                    if ("movable-point" === e.type) {
                        const t = [t => [Math.max(this._eval(e.options.constraintXMin), Math.min(this._eval(e.options.constraintXMax), t[0])), Math.max(this._eval(e.options.constraintYMin), Math.min(this._eval(e.options.constraintYMax), t[1]))]];
                        return "snap" === e.options.constraint ? t.push(Wh.constraints.snap(e.options.snap)) : "x" === e.options.constraint ? t.push((t => [this._eval(e.options.constraintFn, {
                            y: t[1]
                        }), t[1]])) : "y" === e.options.constraint && t.push((t => [t[0], this._eval(e.options.constraintFn, {
                            x: t[0]
                        })])),
                        me.createElement(Wh, {
                            key: e.key,
                            coord: [this.state.variables["x_" + e.options.varSubscript], this.state.variables["y_" + e.options.varSubscript]],
                            constraints: t,
                            foo_x: e.options.constraint,
                            foo_y: e.options.constraintFn,
                            foo_z: e.options.snap,
                            onMove: ve().partial(this._updatePointLocation, e.options.varSubscript)
                        })
                    }
                    if ("movable-line" === e.type) {
                        const t = [t => [Math.max(this._eval(e.options.constraintXMin), Math.min(this._eval(e.options.constraintXMax), t[0])), Math.max(this._eval(e.options.constraintYMin), Math.min(this._eval(e.options.constraintYMax), t[1]))]];
                        "snap" === e.options.constraint ? t.push(Wh.constraints.snap(e.options.snap)) : "x" === e.options.constraint ? t.push((t => [this._eval(e.options.constraintFn, {
                            y: t[1]
                        }), t[1]])) : "y" === e.options.constraint && t.push((t => [t[0], this._eval(e.options.constraintFn, {
                            x: t[0]
                        })]));
                        const n = [this.state.variables["x_" + e.options.startSubscript], this.state.variables["y_" + e.options.startSubscript]]
                          , r = [this.state.variables["x_" + e.options.endSubscript], this.state.variables["y_" + e.options.endSubscript]];
                        return me.createElement(Vh, {
                            key: e.key,
                            constraints: t,
                            onMove: ve().bind(this._updateLineLocation, this, e.options),
                            foo_x: e.options.constraint,
                            foo_y: e.options.constraintFn,
                            foo_z: e.options.snap
                        }, me.createElement(Wh, {
                            coord: n,
                            static: !0,
                            normalStyle: {
                                stroke: "none",
                                fill: "none"
                            }
                        }), me.createElement(Wh, {
                            coord: r,
                            static: !0,
                            normalStyle: {
                                stroke: "none",
                                fill: "none"
                            }
                        }))
                    }
                    if ("function" === e.type) {
                        const t = t => this._eval(e.options.value, {
                            x: t
                        })
                          , n = ve().without(this._extractVars(Qh(e.options.value).expr), "x")
                          , r = ve().object(n, ve().map(n, (e => this.state.variables[e])))
                          , i = [this._eval(e.options.rangeMin, this.state.variables), this._eval(e.options.rangeMax, this.state.variables)];
                        return me.createElement($h, {
                            key: e.key,
                            fn: t,
                            foo_fn: e.options.value,
                            foo_varvalues: r,
                            range: i,
                            style: {
                                stroke: e.options.color,
                                strokeWidth: e.options.strokeWidth,
                                strokeDasharray: e.options.strokeDasharray,
                                plotPoints: 100
                            }
                        })
                    }
                    if ("parametric" === e.type) {
                        const t = t => [this._eval(e.options.x, {
                            t
                        }), this._eval(e.options.y, {
                            t
                        })]
                          , n = ve().without(this._extractVars(Qh(e.options.x).expr).concat(this._extractVars(Qh(e.options.y).expr)), "t")
                          , r = ve().object(n, ve().map(n, (e => this.state.variables[e])))
                          , i = [this._eval(e.options.rangeMin, this.state.variables), this._eval(e.options.rangeMax, this.state.variables)];
                        return me.createElement(jh, {
                            key: e.key,
                            fn: t,
                            foo_fnx: e.options.x,
                            foo_fny: e.options.y,
                            foo_varvalues: r,
                            range: i,
                            style: {
                                stroke: e.options.color,
                                strokeWidth: e.options.strokeWidth,
                                strokeDasharray: e.options.strokeDasharray,
                                plotPoints: 100
                            }
                        })
                    }
                    if ("label" === e.type) {
                        const n = [this._eval(e.options.coordX), this._eval(e.options.coordY)];
                        return me.createElement(Uh, {
                            key: t + 1,
                            coord: n,
                            text: Yh(e.options.label),
                            style: {
                                color: e.options.color
                            }
                        })
                    }
                    return "rectangle" === e.type ? me.createElement(Zh, {
                        key: t + 1,
                        x: this._eval(e.options.coordX),
                        y: this._eval(e.options.coordY),
                        width: ve().max([this._eval(e.options.width), 0]),
                        height: ve().max([this._eval(e.options.height), 0]),
                        style: {
                            stroke: "none",
                            fill: e.options.color
                        }
                    }) : void 0
                }
                ), this))
            }
        }
        np.defaultProps = {
            graph: {
                box: [400, 400],
                labels: ["x", "y"],
                range: [[-10, 10], [-10, 10]],
                tickStep: [1, 1],
                gridStep: [1, 1],
                markings: "graph"
            },
            elements: []
        };
        const rp = e => {
            const t = {};
            return ve().each(ve().where(e, {
                type: "movable-point"
            }), (e => {
                const n = e.options.varSubscript
                  , r = Qh(e.options.startX || "0").expr
                  , i = Qh(e.options.startY || "0").expr;
                let s = 0
                  , o = 0;
                r && (s = r.eval({}) || 0),
                i && (o = i.eval({}) || 0),
                t["x_" + n] = s,
                t["y_" + n] = o
            }
            )),
            ve().each(ve().where(e, {
                type: "movable-line"
            }), (e => {
                const n = e.options.startSubscript
                  , r = e.options.endSubscript
                  , i = Qh(e.options.startX || "0").expr
                  , s = Qh(e.options.startY || "0").expr
                  , o = Qh(e.options.endX || "0").expr
                  , a = Qh(e.options.endY || "0").expr;
                let l = 0
                  , c = 0
                  , h = 0
                  , p = 0;
                i && (l = i.eval({}) || 0),
                s && (c = s.eval({}) || 0),
                o && (h = o.eval({}) || 0),
                a && (p = a.eval({}) || 0),
                t["x_" + n] = l,
                t["y_" + n] = c,
                t["x_" + r] = h,
                t["y_" + r] = p
            }
            )),
            ve().each(ve().where(e, {
                type: "function"
            }), (e => {
                t[e.options.funcName] = e.options.value
            }
            )),
            t
        }
          , ip = e => ve().map(ve().where(e, {
            type: "function"
        }), (e => e.options.funcName));
        var sp = {
            name: "interaction",
            displayName: "Interaction",
            widget: np,
            transform: ve().identity,
            hidden: !0,
            scorer: () => Oa()
        };
        const op = {
            fontStyle: "italic",
            fontWeight: "bold",
            fontSize: "32px",
            width: "100%",
            height: "100%",
            textAlign: "center",
            backgroundColor: "white",
            position: "absolute",
            zIndex: 1,
            transition: "opacity .25s ease-in-out"
        }
          , ap = {
            position: "relative",
            top: "25%"
        };
        class lp extends me.Component {
            constructor(...e) {
                super(...e),
                this.protractor = void 0,
                this.ruler = void 0,
                this._graphie = void 0,
                this._hasSetupGraphieThisUpdate = void 0,
                this._shouldSetupGraphie = void 0,
                this.reset = () => {
                    this._setupGraphie(!1)
                }
                ,
                this.graphie = () => this._graphie,
                this.pointsFromNormalized = (e, t) => {
                    const n = this;
                    return ve().map(e, (function(e) {
                        return ve().map(e, (function(e, r) {
                            const i = n.props.range[r];
                            if (t)
                                return i[0] + (i[1] - i[0]) * e;
                            const s = n.props.step[r]
                              , o = function(e, t) {
                                return Math.floor((e[1] - e[0]) / t)
                            }(i, s)
                              , a = Math.round(e * o);
                            return i[0] + s * a
                        }
                        ))
                    }
                    ))
                }
                ,
                this._setupGraphie = e => {
                    if (this._hasSetupGraphieThisUpdate)
                        return;
                    const t = fe.findDOMNode(this.refs.graphieDiv);
                    ke()(t).empty();
                    const n = this.props.labels.map((e => vn.unescapeMathMode(e)))
                      , r = this.props.range
                      , i = this._graphie = fr.createGraphie(t)
                      , s = this._getGridConfig();
                    i.snap = this.props.snapStep,
                    "graph" === this.props.markings ? (i.graphInit({
                        range: r,
                        scale: Re.xr.map(s, (e => e.scale)),
                        axisArrows: "<->",
                        labelFormat: function(e) {
                            return "\\small{" + e + "}"
                        },
                        gridStep: this.props.gridStep,
                        tickStep: Re.xr.map(s, (e => e.tickStep)),
                        labelStep: 1,
                        unityLabels: Re.xr.map(s, (e => e.unityLabel)),
                        isMobile: this.props.isMobile
                    }),
                    i.label([0, r[1][1]], n[1], this.props.isMobile ? "below right" : "above"),
                    i.label([r[0][1], 0], n[0], this.props.isMobile ? "above left" : "right")) : "grid" === this.props.markings ? i.graphInit({
                        range: r,
                        scale: Re.xr.map(s, (e => e.scale)),
                        gridStep: this.props.gridStep,
                        axes: !1,
                        ticks: !1,
                        labels: !1,
                        isMobile: this.props.isMobile
                    }) : "none" === this.props.markings && i.init({
                        range: r,
                        scale: Re.xr.map(s, (e => e.scale)),
                        isMobile: this.props.isMobile
                    });
                    let o;
                    if (this.props.instructions) {
                        o = ke()("<div/>"),
                        ve().each(op, (function(e, t) {
                            o.css(t, e)
                        }
                        )),
                        o.css("opacity", .5);
                        const e = ke()("<span/>", {
                            text: this.props.instructions
                        });
                        ve().each(ap, (function(t, n) {
                            e.css(n, t)
                        }
                        )),
                        o.append(e),
                        ke()(t).append(o)
                    } else
                        o = void 0;
                    const a = o || this.props.onMouseDown ? ve().bind((function(e) {
                        o && (o.remove(),
                        o = null),
                        this.props.onMouseDown(e)
                    }
                    ), this) : void 0
                      , l = o ? function() {
                        o && o.css("opacity", 0)
                    }
                    : void 0
                      , c = o ? function() {
                        o && o.css("opacity", .5)
                    }
                    : void 0;
                    i.addMouseLayer({
                        onClick: this.props.onClick,
                        onMouseDown: a,
                        onMouseOver: l,
                        onMouseOut: c,
                        onMouseMove: this.props.onMouseMove,
                        allowScratchpad: !0,
                        setDrawingAreaAvailable: this.props.setDrawingAreaAvailable
                    }),
                    this._updateProtractor(),
                    this._updateRuler(),
                    this._hasSetupGraphieThisUpdate = !0,
                    !e && this.props.onGraphieUpdated && this.props.onGraphieUpdated(i)
                }
                ,
                this._getGridConfig = () => Re.xr.map(this.props.step, ( (e, t) => vn.gridDimensionConfig(e, this.props.range[t], this.props.box[t], this.props.gridStep[t]))),
                this._updateProtractor = () => {
                    if (this.protractor && this.protractor.remove(),
                    this.props.showProtractor) {
                        const e = this.pointsFromNormalized([[.5, .05]])[0];
                        this.protractor = this._graphie.protractor(e)
                    }
                }
                ,
                this._updateRuler = () => {
                    if (this.ruler && this.ruler.remove(),
                    this.props.showRuler) {
                        const e = this.pointsFromNormalized([[.5, .25]])[0]
                          , t = this._graphie.range[0][1] - this._graphie.range[0][0];
                        this.ruler = this._graphie.ruler({
                            center: e,
                            label: this.props.rulerLabel,
                            pixelsPerUnit: this._graphie.scale[0],
                            ticksPerUnit: this.props.rulerTicks,
                            units: Math.round(.8 * t)
                        })
                    }
                }
                ,
                this.toJSON = () => ve().pick(this.props, "range", "step", "markings", "labels", "backgroundImage", "showProtractor", "showRuler", "rulerLabel", "rulerTicks", "gridStep", "snapStep")
            }
            componentDidMount() {
                this._setupGraphie(!0)
            }
            UNSAFE_componentWillReceiveProps(e) {
                const t = this;
                ve().each(["labels", "range", "step", "markings", "showProtractor", "showRuler", "rulerLabel", "rulerTicks", "gridStep", "snapStep"], (function(n) {
                    ve().isEqual(t.props[n], e[n]) || (t._shouldSetupGraphie = !0)
                }
                ))
            }
            componentDidUpdate() {
                this._hasSetupGraphieThisUpdate = !1,
                this._shouldSetupGraphie && (this._setupGraphie(!1),
                this._shouldSetupGraphie = !1)
            }
            render() {
                let e;
                const t = this.props.backgroundImage;
                if (t.url) {
                    const n = this.props.box[0] / Ln.defaultBoxSize;
                    e = me.createElement(jt.Consumer, null, ( ({setAssetStatus: e}) => me.createElement(qs, {
                        src: t.url,
                        width: t.width,
                        height: t.height,
                        scale: n,
                        responsive: !1,
                        setAssetStatus: e
                    })))
                } else
                    e = null;
                return me.createElement("div", {
                    className: "graphie-container above-scratchpad",
                    style: {
                        width: this.props.box[0],
                        height: this.props.box[1]
                    },
                    onMouseOut: this.onMouseOut,
                    onMouseOver: this.onMouseOver,
                    onClick: this.onClick
                }, e, me.createElement("div", {
                    className: "graphie",
                    ref: "graphieDiv"
                }))
            }
        }
        lp.defaultProps = {
            labels: ["x", "y"],
            range: [[-10, 10], [-10, 10]],
            step: [1, 1],
            gridStep: [1, 1],
            snapStep: [.5, .5],
            markings: "graph",
            backgroundImage: {
                url: null
            },
            showProtractor: !1,
            showRuler: !1,
            rulerLabel: "",
            rulerTicks: 10,
            isMobile: !1
        };
        const cp = e => {
            var t, n;
            const r = e.graph.type;
            switch (r) {
            case "angle":
                return {
                    type: e.graph.type,
                    angleOffsetDegrees: e.graph.angleOffsetDeg,
                    startCoords: e.graph.startCoords
                };
            case "circle":
                return {
                    type: e.graph.type,
                    startParams: {
                        center: null == (t = e.graph.startCoords) ? void 0 : t.center,
                        radius: null == (n = e.graph.startCoords) ? void 0 : n.radius
                    }
                };
            case "linear":
            case "linear-system":
            case "quadratic":
            case "ray":
            case "sinusoid":
                return {
                    type: e.graph.type,
                    startCoords: e.graph.startCoords
                };
            case "point":
                return {
                    type: e.graph.type,
                    numPoints: e.graph.numPoints,
                    startCoords: e.graph.startCoords
                };
            case "polygon":
                return {
                    type: e.graph.type,
                    match: e.graph.match,
                    numSides: e.graph.numSides,
                    startCoords: e.graph.startCoords
                };
            case "segment":
                return {
                    type: e.graph.type,
                    numSegments: e.graph.numSegments,
                    startCoords: e.graph.startCoords
                };
            case "none":
                return {};
            default:
                throw new Ne.SL(r)
            }
        }
          , hp = e => {
            const t = e.type;
            switch (t) {
            case "angle":
                return {
                    coords: e.coords,
                    angleOffsetDegrees: e.angleOffsetDeg
                };
            case "circle":
                return {
                    center: e.center,
                    radius: e.radius
                };
            case "linear":
            case "linear-system":
            case "point":
            case "polygon":
            case "quadratic":
            case "ray":
            case "segment":
            case "sinusoid":
                return {
                    coords: e.coords
                };
            case "none":
                return {};
            default:
                throw new Ne.SL(t)
            }
        }
        ;
        function pp() {
            return new up
        }
        class up {
            constructor() {
                this.path = [],
                this.scaleFactor = 1
            }
            build() {
                return this.path.map((e = this.scaleFactor,
                t => "A" === t.action ? nt({}, t, {
                    args: [t.args[0] * e, t.args[1] * e, t.args[2], t.args[3], t.args[4], t.args[5] * e, t.args[6] * e]
                }) : nt({}, t, {
                    args: t.args.map((t => t * e))
                }))).map(dp).join("");
                var e
            }
            move(e, t) {
                return this.path.push({
                    action: "M",
                    args: [e, t]
                }),
                this
            }
            line(e, t) {
                return this.path.push({
                    action: "L",
                    args: [e, t]
                }),
                this
            }
            circularArc(e, t, n, {sweep: r=!1, largeArc: i=!1}={}) {
                return this.path.push({
                    action: "A",
                    args: [e, e, 0, i ? 1 : 0, r ? 1 : 0, t, n]
                }),
                this
            }
            curve(e, t, n, r, i, s) {
                return this.path.push({
                    action: "C",
                    args: [e, t, n, r, i, s]
                }),
                this
            }
            scale(e) {
                return this.scaleFactor *= e,
                this
            }
        }
        function dp(e) {
            return `${e.action}${e.args.join(" ")}`
        }
        function mp(e, t, n) {
            return e < t ? t : e > n ? n : e
        }
        function fp(e, t) {
            const [n,r] = t
              , [i,s] = e;
            return [Math.round(n / i) * i, Math.round(r / s) * s]
        }
        const gp = 0
          , vp = 1
          , yp = 0
          , bp = 1;
        function xp([e,t]) {
            return t - e
        }
        function wp(e, t) {
            if (2 * e > xp(t)) {
                const e = function(e, t) {
                    return (e + t) / 2
                }(...t);
                return [e, e]
            }
            return [t[yp] + e, t[bp] - e]
        }
        function kp(e, t) {
            return [mp(t[gp], ...e[gp]), mp(t[vp], ...e[vp])]
        }
        function Sp(e, t) {
            return [wp(e[gp], t[gp]), wp(e[vp], t[vp])]
        }
        function Ep(e, t, n) {
            return (t - e) * mp(n, 0, 1) + e
        }
        function Mp([[e,t],[n,r]], [[i,s],[o,a]]) {
            const l = (n - e) * (a - s) - (o - i) * (r - t);
            if (0 !== l) {
                const c = ((a - s) * (o - e) + (i - o) * (a - t)) / l;
                if (c <= 0 || ((t - r) * (o - e) + (n - e) * (a - t)) / l >= 1)
                    return;
                const h = [e, t]
                  , p = Ve.Bh.sub([n, r], h);
                return Ve.Bh.add(h, Ve.Bh.scale(p, c))
            }
        }
        function Cp([e,t]) {
            return 180 * Math.atan2(t, e) / Math.PI
        }
        function Tp(e, t) {
            return "number" == typeof e && (e = [e, e]),
            t = t * Math.PI / 180,
            [e[0] * Math.cos(t), e[1] * Math.sin(t)]
        }
        const _p = (e, t) => {
            const n = e[0] - t[0]
              , r = e[1] - t[1];
            return n || r ? (180 + 180 * Math.atan2(-r, -n) / Math.PI + 360) % 360 : 0
        }
          , Ap = (e, t=!1) => {
            const n = [...e]
              , r = !Lr([n[0], n[2], n[1]]) || t ? n.reverse() : n;
            return (_p(r[0], r[1]) + 360 - _p(r[2], r[1])) % 360
        }
          , Ip = {
            range: [[0, 1], [0, 1]],
            tickStep: [1, 1],
            gridStep: [1, 1],
            snapStep: [1, 1],
            markings: "none",
            showTooltips: !1,
            graphDimensionsInPixels: [1, 1],
            width: 0,
            height: 0,
            labels: [],
            disableKeyboardInteraction: !1
        }
          , Rp = (0,
        me.createContext)(Ip);
        function Np() {
            return me.useContext(Rp)
        }
        const Pp = Ve.Bh.matrixBuilder;
        function Op(e, t, n=[0, 0]) {
            const {range: r, width: i, height: s} = t
              , [[o,a],[l,c]] = r
              , h = Pp().translate(...n).scale(i / (a - o), -s / (c - l)).get();
            return e.map((e => Ve.Bh.transform(e, h)))
        }
        function Lp(e, t) {
            const [[n],[,r]] = t.range
              , [i,s] = [-n, -r];
            return Op([e], t, [i, s])[0]
        }
        const Dp = (...e) => Op(e, Np())
          , Fp = (...e) => function(e, t) {
            const {range: n, width: r, height: i} = t
              , [[s,o],[a,l]] = n
              , c = Pp().scale(r / (o - s), i / (l - a)).get();
            return e.map((e => Ve.Bh.transform(e, c)))
        }(e, Np());
        function zp(e, t) {
            const [[n,r],[i,s]] = t.range
              , {width: o, height: a} = t
              , l = r - n
              , c = s - i;
            return e.map((e => [e[gp] / o * l + n, s - e[vp] / a * c]))
        }
        const Bp = pp().move(-3, 4).curve(-2.75, 2.5, 0, .25, .75, 0).curve(0, -.25, -2.75, -2.5, -3, -4).scale(1.4).build();
        function qp(e) {
            var t;
            const [n] = Dp(e.tip);
            return me.createElement("g", {
                className: "interactive-graph-arrowhead",
                transform: `translate(${n[gp]} ${n[vp]}) rotate(${e.angle})`
            }, me.createElement("g", {
                transform: "translate(-1.5)"
            }, me.createElement("path", {
                d: Bp,
                fill: "none",
                style: {
                    stroke: null != (t = e.color) ? t : "inherit"
                },
                strokeLinejoin: "round",
                strokeLinecap: "round",
                strokeWidth: "2px"
            })))
        }
        function Hp() {
            const {range: [[e,t],[n,r]]} = Np()
              , i = "var(--mafs-fg)";
            return me.createElement(me.Fragment, null, !(n > 0 || r < 0) && me.createElement(me.Fragment, null, me.createElement(qp, {
                color: i,
                tip: [e, 0],
                angle: 180
            }), me.createElement(qp, {
                color: i,
                tip: [t, 0],
                angle: 0
            })), !(e > 0 || t < 0) && me.createElement(me.Fragment, null, me.createElement(qp, {
                color: i,
                tip: [0, n],
                angle: 90
            }), me.createElement(qp, {
                color: i,
                tip: [0, r],
                angle: 270
            })))
        }
        const Up = 44
          , Gp = "perseus_mafs_remove_button"
          , Wp = (e, t, n, r) => n.map((n => n.map(( (n, i) => {
            const s = e[i];
            if (r)
                return s[yp] + xp(s) * n;
            const o = t[i]
              , a = Math.floor(xp(s) / o)
              , l = Math.round(n * a);
            return s[yp] + o * l
        }
        ))))
          , Vp = (e, t) => e.map((e => e.map(( (e, n) => (e + t[n][1]) / xp(t[n])))));
        function $p({snapStep: e, range: t, point: n}) {
            return kp(Sp(e, t), n)
        }
        function jp(e) {
            return "point" === e.type && "unlimited" === e.numPoints || "polygon" === e.type && "unlimited" === e.numSides
        }
        const Kp = Oe.Z.parserFor({
            math: nt({}, Le.zA.math, {
                order: 0
            }),
            text: {
                order: 1,
                match: Oe.Z.anyScopeRegex(/^([^$\\{}]+)/),
                parse: e => ({
                    content: e[0]
                })
            },
            specialCharacter: {
                order: 2,
                match: Oe.Z.anyScopeRegex(/^(\\[\S\s]|\$|\\$|{|})/),
                parse: e => ({
                    content: e[0]
                })
            }
        }, {
            inline: !0
        });
        function Zp(e) {
            const t = Kp(e);
            let n = "";
            for (const e of t)
                "math" === e.type ? n += "$" + e.content + "$" : "specialCharacter" === e.type ? n += Yp(e.content) : n += e.content;
            return `\\text{${n}}`
        }
        function Yp(e) {
            return 1 === e.length ? "\\" + e : e
        }
        function Xp() {
            const {range: e, labels: t, width: n, height: r} = Np()
              , i = [0, e[vp][bp]]
              , s = [e[gp][bp], 0]
              , [o,a] = t
              , l = {
                range: e,
                width: n,
                height: r
            }
              , [c,h] = Lp(s, l)
              , [p,u] = Ve.Bh.add(Lp(i, l), [0, -24])
              , {TeX: d} = gt();
            return me.createElement(me.Fragment, null, me.createElement("span", {
                style: {
                    position: "absolute",
                    left: c,
                    top: h,
                    fontSize: "14px",
                    transform: "translate(7px, -50%)"
                }
            }, me.createElement(d, null, Zp(o))), me.createElement("span", {
                style: {
                    position: "absolute",
                    left: p,
                    top: u,
                    fontSize: "14px",
                    transform: "translate(-50%, 0px)"
                }
            }, me.createElement(d, null, Zp(a))))
        }
        const Jp = 14
          , Qp = ({y: e, range: t, tickStep: n}) => {
            let r = 0;
            t[gp][yp] > 0 && (r = t[gp][yp]),
            t[gp][bp] < 0 && (r = t[gp][bp]);
            const i = [r, e]
              , [[s,o]] = Dp(i)
              , a = s - 5
              , l = o
              , c = s + 5
              , h = o
              , p = s + (t[gp][bp] <= 0 ? 21 : 1.1 * -14)
              , u = o + 3.5
              , d = tu(e, t, n);
            return me.createElement("g", {
                className: "tick",
                "aria-hidden": !0
            }, me.createElement("line", {
                x1: a,
                y1: l,
                x2: c,
                y2: h,
                className: "axis-tick"
            }), d && me.createElement("text", {
                className: "axis-tick-label",
                style: {
                    fontSize: Jp
                },
                textAnchor: "end",
                x: p,
                y: u
            }, e.toString()))
        }
          , eu = ({x: e, range: t}) => {
            let n = 0;
            t[vp][yp] > 0 && (n = t[vp][yp]),
            t[vp][bp] < 0 && (n = t[vp][bp]);
            const r = [e, n]
              , [[i,s]] = Dp(r)
              , o = i
              , a = s + 5
              , l = i
              , c = s - 5
              , h = i + (e < 0 ? -2 : 0)
              , p = s + (t[vp][bp] < 0 ? -14 : 24.5);
            return me.createElement("g", {
                className: "tick",
                "aria-hidden": !0
            }, me.createElement("line", {
                x1: o,
                y1: a,
                x2: l,
                y2: c,
                className: "axis-tick"
            }), me.createElement("text", {
                className: "axis-tick-label",
                style: {
                    fontSize: Jp
                },
                textAnchor: "middle",
                x: h,
                y: p
            }, e.toString()))
        }
          , tu = (e, t, n) => {
            let r = !0;
            return t[gp][yp] < -n && t[gp][bp] > 0 && e === -n && (r = !1),
            r
        }
        ;
        function nu(e, t, n) {
            const r = []
              , i = ru(e);
            for (let s = Math.max(t, 0) + e; s < n; s += e)
                r.push(parseFloat(s.toFixed(i)));
            let s = Math.min(n, 0) - e;
            for (; s > t; s -= e)
                r.push(s);
            return r
        }
        const ru = e => {
            const t = e.toString();
            return t.includes(".") ? t.split(".")[1].length : 0
        }
          , iu = () => {
            const {tickStep: e, range: t} = Np()
              , [[n,r],[i,s]] = t
              , [o,a] = e
              , l = nu(a, i, s)
              , c = nu(o, n, r);
            return me.createElement("g", {
                className: "axis-ticks",
                role: "presentation"
            }, me.createElement("g", {
                className: "y-axis-ticks"
            }, l.map((n => me.createElement(Qp, {
                y: n,
                key: `y-grid-tick-${n}`,
                range: t,
                tickStep: e[vp]
            })))), me.createElement("g", {
                className: "x-axis-ticks"
            }, c.map((e => me.createElement(eu, {
                x: e,
                key: `x-grid-tick-${e}`,
                range: t
            })))))
        }
          , su = (e, t) => ({
            axis: "graph" === e.markings,
            lines: e.gridStep[t],
            labels: !1
        })
          , ou = e => "none" === e.markings ? null : me.createElement(Ve.rT.Cartesian, {
            xAxis: su(e, gp),
            yAxis: su(e, vp)
        })
          , au = () => me.createElement("svg", {
            width: "24",
            height: "24",
            viewBox: "0 0 24 24",
            className: (0,
            pe.css)(cu.icon)
        }, me.createElement("defs", null, me.createElement("path", {
            id: "a",
            d: "M7.401 10.035c-1.424.748-2.599 1.905-3.544 3.48a1 1 0 0 1-1.714-1.03C4.325 8.849 7.652 7 12 7c4.348 0 7.675 1.848 9.857 5.486a1 1 0 0 1-1.714 1.028c-.945-1.574-2.12-2.73-3.544-3.48a5 5 0 1 1-9.198 0zM12 15a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"
        })), me.createElement("g", {
            fill: "none",
            fillRule: "evenodd"
        }, me.createElement("path", {
            fill: "none",
            d: "M0 0h24v24H0z"
        }), me.createElement("mask", {
            id: "b",
            fill: "#fff"
        }, me.createElement("use", {
            href: "#a"
        })), me.createElement("use", {
            fill: "#fff",
            fillRule: "nonzero",
            href: "#a"
        }), me.createElement("g", {
            fill: "#fff",
            mask: "url(#b)"
        }, me.createElement("path", {
            d: "M0 0h24v24H0z"
        }))))
          , lu = () => me.createElement("svg", {
            width: "24",
            height: "24",
            viewBox: "0 0 24 24",
            className: (0,
            pe.css)(cu.icon)
        }, me.createElement("defs", null, me.createElement("path", {
            id: "a",
            d: "M8.794 7.38C9.791 7.127 10.86 7 12 7c4.348 0 7.675 1.848 9.857 5.486a1 1 0 0 1-1.714 1.028c-.945-1.574-2.12-2.73-3.544-3.48.258.604.401 1.268.401 1.966 0 1.02-.305 1.967-.828 2.757l2.535 2.536a1 1 0 0 1-1.414 1.414l-12-12a1 1 0 0 1 1.414-1.414L8.794 7.38zm5.914 5.913a3 3 0 0 0-4.001-4.001l4 4.001zM6.072 8.486l2.976 2.976a3 3 0 0 0 3.49 3.49l1.579 1.58A5 5 0 0 1 7.4 10.035c-1.424.747-2.599 1.904-3.544 3.478a1 1 0 0 1-1.714-1.028c1.049-1.75 2.363-3.085 3.929-4z"
        })), me.createElement("g", {
            fill: "none",
            fillRule: "evenodd"
        }, me.createElement("path", {
            fill: "none",
            d: "M0 0h24v24H0z"
        }), me.createElement("mask", {
            id: "b",
            fill: "#fff"
        }, me.createElement("use", {
            href: "#a"
        })), me.createElement("use", {
            fill: "#fff",
            fillRule: "nonzero",
            href: "#a"
        }), me.createElement("g", {
            fill: "#fff",
            mask: "url(#b)"
        }, me.createElement("path", {
            d: "M0 0h24v24H0z"
        }))))
          , cu = pe.StyleSheet.create({
            hud: {
                boxSizing: "border-box",
                height: 36,
                padding: "9px 16px",
                borderRadius: 18,
                fontFamily: Sn,
                fontSize: "15px",
                lineHeight: "18px",
                color: Mn,
                userSelect: "none",
                borderWidth: 0
            },
            hudFixedPosition: {
                bottom: 20,
                position: "fixed",
                right: 20,
                zIndex: 1
            },
            icon: {
                width: 24,
                height: 24,
                marginRight: 8,
                marginTop: -3,
                verticalAlign: "middle"
            },
            enabled: {
                backgroundColor: Dn,
                ":hover": {
                    backgroundColor: Fn
                },
                ":active": {
                    backgroundColor: zn
                }
            },
            disabled: {
                backgroundColor: _n,
                ":hover": {
                    backgroundColor: "#a1a5a9"
                },
                ":active": {
                    backgroundColor: An
                }
            }
        })
          , hu = e => me.createElement(ce.ZP, {
            content: me.createElement(he.uT, {
                style: pu.body
            }, e.children),
            placement: "right"
        }, me.createElement($e.H, {
            size: "small",
            icon: je,
            style: pu.spacingLeft
        }))
          , pu = pe.StyleSheet.create({
            spacingLeft: {
                marginInlineStart: xe.W0.xxxSmall_4
            },
            body: {
                padding: xe.W0.medium_16
            }
        });
        class uu extends me.Component {
            constructor(...e) {
                super(...e),
                this.state = {
                    didMount: !1
                }
            }
            componentDidMount() {
                this.setState({
                    didMount: !0
                })
            }
            render() {
                return this.state.didMount ? me.createElement(hu, this.props) : me.createElement("div", null)
            }
        }
        class du extends me.Component {
            constructor(...e) {
                super(...e),
                this.toggleSelect = e => {
                    const t = (this.props.values || []).slice(0)
                      , n = this.props.allowEmpty;
                    t.indexOf(e) >= 0 && (t.length > 1 || n) ? t.splice(t.indexOf(e), 1) : t.indexOf(e) < 0 && t.push(e),
                    this.props.onChange(t)
                }
            }
            focus() {
                var e;
                return null == (e = fe.findDOMNode(this)) || e.focus(),
                !0
            }
            render() {
                const e = this.props.values || []
                  , t = this.props.buttons.map(( (t, n) => {
                    const r = e.indexOf(t.value) >= 0;
                    return me.createElement("button", {
                        title: t.title,
                        type: "button",
                        id: "" + n,
                        key: "" + n,
                        ref: "button" + n,
                        className: (0,
                        pe.css)(mu.buttonStyle, r && mu.selectedStyle),
                        onClick: () => this.toggleSelect(t.value)
                    }, t.content || "" + t.value)
                }
                ));
                return me.createElement("div", {
                    style: {
                        display: "inline-block"
                    }
                }, t)
            }
        }
        du.defaultProps = {
            values: [],
            allowEmpty: !0
        };
        const mu = pe.StyleSheet.create({
            buttonStyle: {
                backgroundColor: "white",
                border: "1px solid #ccc",
                borderLeft: "0",
                cursor: "pointer",
                margin: "0",
                padding: "5px 10px",
                position: "relative",
                ":first-child": {
                    borderLeft: "1px solid #ccc",
                    borderTopLeftRadius: "3px",
                    borderBottomLeftRadius: "3px"
                },
                ":last-child": {
                    borderRight: "1px solid #ccc",
                    borderTopRightRadius: "3px",
                    borderBottomRightRadius: "3px"
                },
                ":hover": {
                    backgroundColor: "#ccc"
                },
                ":focus": {
                    zIndex: 2
                }
            },
            selectedStyle: {
                backgroundColor: "#ddd"
            }
        })
          , fu = ["onFormatChange", "checkValidity", "useArrowKeys"]
          , {firstNumericalParse: gu, captureScratchpadTouchStart: vu} = vn
          , yu = Lt.toNumericString
          , bu = Lt.getNumericFormat;
        class xu extends me.Component {
            constructor(...e) {
                super(...e),
                this.state = {
                    format: this.props.format
                },
                this.getValue = () => this.parseInputValue(fe.findDOMNode(this.refs.input).value),
                this.getStringValue = () => fe.findDOMNode(this.refs.input).value.toString(),
                this.parseInputValue = e => {
                    if ("" === e) {
                        const e = this.props.placeholder;
                        return ve().isFinite(e) ? +e : null
                    }
                    const t = gu(e, this.context.strings);
                    return ve().isFinite(t) ? t : this.props.value
                }
                ,
                this.focus = () => {
                    fe.findDOMNode(this.refs.input).focus(),
                    this._handleFocus()
                }
                ,
                this.blur = () => {
                    fe.findDOMNode(this.refs.input).blur(),
                    this._handleBlur()
                }
                ,
                this.setSelectionRange = (e, t) => {
                    fe.findDOMNode(this).setSelectionRange(e, t)
                }
                ,
                this.getSelectionStart = () => fe.findDOMNode(this).selectionStart,
                this.getSelectionEnd = () => fe.findDOMNode(this).selectionEnd,
                this._checkValidity = e => {
                    if (null == e)
                        return !0;
                    const t = gu(e, this.context.strings)
                      , n = this.props.checkValidity;
                    return ve().isFinite(t) && n(t)
                }
                ,
                this._handleChange = e => {
                    const t = e.target.value
                      , n = this.parseInputValue(t)
                      , r = bu(t);
                    this.props.onChange(n),
                    r && (this.props.onFormatChange(n, r),
                    this.setState({
                        format: r
                    }))
                }
                ,
                this._handleFocus = () => {
                    this.props.onFocus && this.props.onFocus()
                }
                ,
                this._handleBlur = e => {
                    e && "keypress" === e.type && 13 !== e.keyCode || (this._setValue(this.props.value, this.state.format),
                    this.props.onBlur && this.props.onBlur())
                }
                ,
                this._onKeyDown = e => {
                    if (this.props.onKeyDown && this.props.onKeyDown(e),
                    !this.props.useArrowKeys || !ve().contains(["ArrowUp", "ArrowDown"], e.key))
                        return;
                    let t = this.getValue();
                    t === Math.floor(t) && ("ArrowUp" === e.key ? t += 1 : "ArrowDown" === e.key && (t -= 1),
                    this._checkValidity(t) && this.props.onChange(t))
                }
                ,
                this._setValue = (e, t) => {
                    ke()(fe.findDOMNode(this.refs.input)).val(yu(e, t))
                }
            }
            componentDidUpdate(e) {
                Re.Rx.equal(this.getValue(), this.props.value) || this._setValue(this.props.value, this.state.format)
            }
            render() {
                let e = de()({
                    "number-input": !0,
                    "invalid-input": !this._checkValidity(this.props.value),
                    mini: "mini" === this.props.size,
                    small: "small" === this.props.size,
                    normal: "normal" === this.props.size
                });
                null != this.props.className && (e = e + " " + this.props.className);
                const t = ia(this.props, fu);
                return me.createElement("input", nt({}, t, {
                    className: e,
                    type: "text",
                    ref: "input",
                    onChange: this._handleChange,
                    onFocus: this._handleFocus,
                    onBlur: this._handleBlur,
                    onKeyPress: this._handleBlur,
                    onKeyDown: this._onKeyDown,
                    onTouchStart: vu,
                    defaultValue: yu(this.props.value, this.state.format),
                    value: void 0
                }))
            }
        }
        xu.contextType = it,
        xu.propTypes = {
            value: a().number,
            format: a().string,
            placeholder: a().oneOfType([a().string, a().number]),
            onChange: a().func.isRequired,
            onFormatChange: a().func,
            checkValidity: a().func,
            size: a().oneOf(["mini", "small", "normal"]),
            label: a().oneOf(["put your labels outside your inputs!"])
        },
        xu.defaultProps = {
            value: null,
            placeholder: null,
            format: null,
            onFormatChange: () => null,
            checkValidity: () => !0,
            useArrowKeys: !1
        };
        const wu = () => !0;
        class ku extends me.Component {
            constructor(...e) {
                super(...e),
                this.onChange = (e, t) => {
                    const n = this.props.value;
                    0 === e ? this.props.onChange([t, n[1]]) : this.props.onChange([n[0], t])
                }
            }
            render() {
                const e = this.props.value
                  , t = this.props.checkValidity || wu;
                return me.createElement("div", {
                    className: "range-input"
                }, me.createElement(xu, nt({}, this.props, {
                    value: e[0],
                    checkValidity: n => t([n, e[1]]),
                    onChange: this.onChange.bind(this, 0),
                    placeholder: this.props.placeholder[0]
                })), me.createElement(xu, nt({}, this.props, {
                    value: e[1],
                    checkValidity: n => t([e[0], n]),
                    onChange: this.onChange.bind(this, 1),
                    placeholder: this.props.placeholder[1]
                })))
            }
        }
        ku.propTypes = {
            value: a().array.isRequired,
            onChange: a().func.isRequired,
            placeholder: a().array,
            checkValidity: a().func
        },
        ku.defaultProps = {
            placeholder: [null, null]
        };
        var Su = Object.freeze({
            __proto__: null,
            ButtonGroup: th,
            Graph: lp,
            Graphie: Cs,
            HUD: ({message: e, enabled: t, onClick: n, fixedPosition: r=!0}) => {
                let i, s;
                return t ? (i = cu.enabled,
                s = me.createElement(au, null)) : (i = cu.disabled,
                s = me.createElement(lu, null)),
                me.createElement("button", {
                    className: (0,
                    pe.css)(cu.hud, r && cu.hudFixedPosition, i),
                    onClick: e => {
                        n()
                    }
                }, s, e)
            }
            ,
            Icon: Gl,
            InfoTip: uu,
            InlineIcon: Mi,
            MathInput: ht,
            MultiButtonGroup: du,
            NumberInput: xu,
            RangeInput: ku,
            SvgImage: qs,
            TextInput: ra,
            TextListEditor: _t
        });
        const Eu = ({box: e, backgroundImage: t}) => {
            const {url: n, width: r, height: i} = null != t ? t : {};
            if (n && "string" == typeof n) {
                const t = e[gp] / Ln.defaultBoxSize;
                return me.createElement(le.G7, {
                    style: {
                        position: "absolute",
                        bottom: 0,
                        left: 0
                    }
                }, me.createElement(jt.Consumer, null, ( ({setAssetStatus: e}) => me.createElement(qs, {
                    src: n,
                    width: r,
                    height: i,
                    scale: t,
                    responsive: !1,
                    setAssetStatus: e,
                    alt: ""
                }))))
            }
            return null
        }
          , Mu = ["calculator", "chi2Table", "financialCalculatorMonthlyPayment", "financialCalculatorTotalAmount", "financialCalculatorTimeToPayOff", "periodicTable", "periodicTableWithKey", "tTable", "zTable"]
          , Cu = ["correct", "wrong", "ungraded"]
          , Tu = {
            blue: "#3D7586",
            green: "#447A53",
            grayH: "#3B3D45",
            purple: "#594094",
            pink: "#B25071",
            red: "#D92916",
            orange: "#946700"
        }
          , _u = {
            none: 0,
            white: 1,
            translucent: .4,
            solid: 1
        }
          , Au = ["bar", "line", "pic", "histogram", "dotplot"];
        function Iu(e) {
            const {coord: t, text: n, color: r, size: i} = e
              , [s,o] = Lp(t, Np())
              , {TeX: a} = gt();
            return me.createElement("span", {
                className: "locked-label",
                style: {
                    position: "absolute",
                    left: s,
                    top: o,
                    color: Tu[r],
                    fontSize: xe.LZ.size[i],
                    backgroundColor: "rgba(255, 255, 255, 0.8)"
                },
                "aria-hidden": !0
            }, me.createElement(a, null, Zp(n)))
        }
        function Ru(e) {
            const {flags: t, lockedFigures: n} = e;
            return n.map(( (e, n) => {
                var r, i, s, o, a, l, c, h, p;
                return "label" === e.type ? me.createElement(Iu, nt({
                    key: `label-${n}`
                }, e)) : null != t && null != (r = t.mafs) && r["locked-point-labels"] && "point" === e.type || null != t && null != (i = t.mafs) && i["locked-line-labels"] && "line" === e.type || null != t && null != (s = t.mafs) && s["locked-vector-labels"] && "vector" === e.type || null != t && null != (o = t.mafs) && o["locked-ellipse-labels"] && "ellipse" === e.type || null != t && null != (a = t.mafs) && a["locked-polygon-labels"] && "polygon" === e.type || null != t && null != (l = t.mafs) && l["locked-function-labels"] && "function" === e.type ? me.createElement(me.Fragment, {
                    key: n
                }, null == (c = e.labels) ? void 0 : c.map(( (e, t) => me.createElement(Iu, nt({
                    key: `${n}-label-${t}`
                }, e)))), "line" === e.type && me.createElement(me.Fragment, null, null == (h = e.points[0].labels) ? void 0 : h.map(( (e, t) => me.createElement(Iu, nt({
                    key: `locked-figure-${n}-point-1-label-${t}`
                }, e)))), null == (p = e.points[1].labels) ? void 0 : p.map(( (e, t) => me.createElement(Iu, nt({
                    key: `locked-figure-${n}-point-2-label-${t}`
                }, e)))))) : null
            }
            ))
        }
        const Nu = e => {
            var t;
            const {center: n, radius: r, angle: i, color: s, fillStyle: o, strokeStyle: a, ariaLabel: l, flags: c} = e
              , h = l && (null == c || null == (t = c.mafs) ? void 0 : t["locked-figures-aria"]);
            return me.createElement("g", {
                className: "locked-ellipse",
                "aria-label": h ? l : void 0,
                "aria-hidden": !h
            }, me.createElement(Ve.Pj, {
                center: n,
                radius: r,
                angle: i,
                fillOpacity: _u[o],
                strokeStyle: a,
                color: Tu[s],
                svgEllipseProps: {
                    style: {
                        fill: "white" === o ? xe.color.white : Tu[s]
                    }
                }
            }))
        }
          , Pu = e => {
            var t;
            const [n,i] = (0,
            me.useState)()
              , {color: s, strokeStyle: o, directionalAxis: a, domain: l} = e
              , c = {
                color: Tu[s],
                style: o,
                domain: l
            }
              , h = e.ariaLabel && (null == (t = e.flags) || null == (t = t.mafs) ? void 0 : t["locked-figures-aria"]);
            return (0,
            me.useEffect)(( () => {
                i(r.Qc(e.equation).expr)
            }
            ), [e.equation]),
            void 0 === n ? null : me.createElement("g", {
                className: "locked-function",
                "aria-label": h ? e.ariaLabel : void 0,
                "aria-hidden": !h
            }, "x" === a && me.createElement(Ve.XN.OfX, nt({
                y: e => n.eval({
                    x: e
                })
            }, c)), "y" === a && me.createElement(Ve.XN.OfY, nt({
                x: e => n.eval({
                    y: e
                })
            }, c)))
        }
        ;
        function Ou(e) {
            const {start: t, end: n, style: r, className: i, testId: s} = e;
            return me.createElement("line", {
                x1: t[gp],
                y1: t[vp],
                x2: n[gp],
                y2: n[vp],
                style: r,
                className: i,
                "data-testid": s
            })
        }
        function Lu(e) {
            const {tail: t, tip: n, color: r, style: i} = e
              , [s,o] = Dp(t, n)
              , a = Cp(Ve.Bh.sub(o, s));
            return me.createElement("g", {
                style: {
                    stroke: r,
                    strokeWidth: 2
                }
            }, me.createElement(Ou, {
                start: s,
                end: o,
                style: i
            }), me.createElement(qp, {
                angle: a,
                tip: n,
                color: r
            }))
        }
        const Du = (e, t, n) => {
            const [[r,i],[s,o]] = n
              , [a,l] = e
              , [c,h] = t
              , p = h - l
              , u = c - a
              , d = p / u
              , m = u < 0 ? r : i
              , f = p < 0 ? s : o
              , g = l + (m - a) * d
              , v = a + (f - l) * (1 / d);
            switch (!0) {
            case Fu(g, s, o):
                return [m, g];
            case Fu(v, r, i):
                return [v, f];
            default:
                return [m, f]
            }
        }
        ;
        function Fu(e, t, n) {
            return e >= t && e <= n
        }
        const zu = e => {
            var t;
            const {color: n, lineStyle: r, kind: i, points: s, showPoint1: o, showPoint2: a, ariaLabel: l, flags: c, range: h} = e
              , [p,u] = s
              , d = l && (null == c || null == (t = c.mafs) ? void 0 : t["locked-figures-aria"]);
            let m;
            if ("ray" === i) {
                const e = Du(p.coord, u.coord, h);
                m = me.createElement(Lu, {
                    tail: p.coord,
                    tip: e,
                    color: Tu[n],
                    style: {
                        strokeDasharray: "dashed" === r ? "var(--mafs-line-stroke-dash-style)" : void 0
                    }
                })
            } else {
                const e = "segment" === i ? Ve.x1.Segment : Ve.x1.ThroughPoints;
                let t = "segment" === i ? u.coord : Du(p.coord, u.coord, h);
                const [s,o] = Dp(u.coord, p.coord);
                let a = Cp(Ve.Bh.sub(s, o));
                const l = "segment" !== i && me.createElement(qp, {
                    angle: a,
                    tip: t,
                    color: Tu[n]
                });
                t = "segment" === i ? p.coord : Du(u.coord, p.coord, h),
                a = a > 180 ? a - 180 : a + 180;
                const c = "segment" !== i && me.createElement(qp, {
                    angle: a,
                    tip: t,
                    color: Tu[n]
                });
                m = me.createElement(me.Fragment, null, l, me.createElement(e, {
                    point1: p.coord,
                    point2: u.coord,
                    color: Tu[n],
                    style: r
                }), c)
            }
            return me.createElement("g", {
                className: "ray" === i ? "locked-ray" : "locked-line",
                "aria-label": d ? l : void 0,
                "aria-hidden": !d
            }, m, o && me.createElement(Ve.E9, {
                x: p.coord[gp],
                y: p.coord[vp],
                svgCircleProps: {
                    style: {
                        fill: p.filled ? Tu[p.color] : xe.color.white,
                        stroke: Tu[p.color],
                        strokeWidth: xe.W0.xxxxSmall_2
                    }
                }
            }), a && me.createElement(Ve.E9, {
                x: u.coord[gp],
                y: u.coord[vp],
                svgCircleProps: {
                    style: {
                        fill: u.filled ? Tu[u.color] : xe.color.white,
                        stroke: Tu[u.color],
                        strokeWidth: xe.W0.xxxxSmall_2
                    }
                }
            }))
        }
          , Bu = e => {
            var t;
            const {flags: n, color: r, coord: i, filled: s, ariaLabel: o} = e
              , [a,l] = i
              , c = o && (null == n || null == (t = n.mafs) ? void 0 : t["locked-figures-aria"]);
            return me.createElement("g", {
                className: "locked-point",
                "aria-label": c ? o : void 0,
                "aria-hidden": !c
            }, me.createElement(Ve.E9, {
                x: a,
                y: l,
                svgCircleProps: {
                    style: {
                        fill: s ? Tu[r] : xe.color.white,
                        stroke: Tu[r],
                        strokeWidth: xe.W0.xxxxSmall_2
                    }
                }
            }))
        }
          , qu = e => {
            var t;
            const {points: n, color: r, showVertices: i, fillStyle: s, strokeStyle: o} = e
              , a = e.ariaLabel && (null == (t = e.flags) || null == (t = t.mafs) ? void 0 : t["locked-figures-aria"]);
            return me.createElement("g", {
                className: "locked-polygon",
                "aria-label": a ? e.ariaLabel : void 0,
                "aria-hidden": !a
            }, me.createElement(Ve.mg, {
                points: [...n],
                fillOpacity: _u[s],
                strokeStyle: o,
                color: Tu[r],
                svgPolygonProps: {
                    style: {
                        fill: "white" === s ? xe.color.white : Tu[r]
                    }
                }
            }), i && n.map(( (e, t) => me.createElement(Ve.E9, {
                key: `locked-polygon-point-${t}`,
                x: e[gp],
                y: e[vp],
                color: Tu[r]
            }))))
        }
          , Hu = e => {
            var t;
            const {color: n, points: r, ariaLabel: i, flags: s} = e
              , [o,a] = r
              , l = i && (null == s || null == (t = s.mafs) ? void 0 : t["locked-figures-aria"]);
            return me.createElement("g", {
                className: "locked-vector",
                "aria-label": l ? i : void 0,
                "aria-hidden": !l
            }, me.createElement(Lu, {
                tail: o,
                tip: a,
                color: Tu[n]
            }))
        }
          , Uu = e => {
            const {flags: t, lockedFigures: n} = e;
            return me.createElement(me.Fragment, null, n.map(( (n, r) => {
                switch (n.type) {
                case "point":
                    return me.createElement(Bu, nt({
                        key: `point-${r}`
                    }, n, {
                        flags: t
                    }));
                case "line":
                    return me.createElement(zu, nt({
                        key: `line-${r}`,
                        range: e.range
                    }, n, {
                        flags: t
                    }));
                case "vector":
                    return me.createElement(Hu, nt({
                        key: `vector-${r}`
                    }, n, {
                        flags: t
                    }));
                case "ellipse":
                    return me.createElement(Nu, nt({
                        key: `ellipse-${r}`
                    }, n, {
                        flags: t
                    }));
                case "polygon":
                    return me.createElement(qu, nt({
                        key: `polygon-${r}`
                    }, n, {
                        flags: t
                    }));
                case "function":
                    return me.createElement(Pu, nt({
                        key: `function-${r}`
                    }, n, {
                        flags: t
                    }));
                case "label":
                    return null;
                default:
                    throw new Ne.SL(n)
                }
            }
            )))
        }
          , Gu = {
            global: {
                deleteIntent: function() {
                    return {
                        type: Wu
                    }
                },
                changeInteractionMode: function(e) {
                    return {
                        type: rd,
                        mode: e
                    }
                },
                changeKeyboardInvitationVisibility: function(e) {
                    return {
                        type: id,
                        shouldShow: e
                    }
                }
            },
            angle: {
                movePoint: cd
            },
            circle: {
                moveCenter: function(e) {
                    return {
                        type: ud,
                        destination: e
                    }
                },
                moveRadiusPoint: function(e) {
                    return {
                        type: dd,
                        destination: e
                    }
                }
            },
            linear: {
                moveLine: e => $u(0, e),
                movePoint: (e, t) => pd(0, e, t)
            },
            linearSystem: {
                moveLine: $u,
                movePointInFigure: pd
            },
            pointGraph: {
                movePoint: cd,
                addPoint: Ku,
                removePoint: Yu,
                focusPoint: Ju,
                blurPoint: ed,
                clickPoint: nd
            },
            polygon: {
                movePoint: cd,
                moveAll: function(e) {
                    return {
                        type: ad,
                        delta: e
                    }
                },
                addPoint: Ku,
                removePoint: Yu,
                focusPoint: Ju,
                blurPoint: ed,
                clickPoint: nd,
                closePolygon: function() {
                    return {
                        type: sd
                    }
                },
                openPolygon: function() {
                    return {
                        type: od
                    }
                }
            },
            quadratic: {
                movePoint: cd
            },
            ray: {
                moveRay: e => $u(0, e),
                movePoint: (e, t) => pd(0, e, t)
            },
            segment: {
                movePointInFigure: pd,
                moveLine: $u
            },
            sinusoid: {
                movePoint: cd
            }
        }
          , Wu = "delete-intent";
        const Vu = "move-line";
        function $u(e, t) {
            return {
                type: Vu,
                itemIndex: e,
                delta: t
            }
        }
        const ju = "add-point";
        function Ku(e) {
            return {
                type: ju,
                location: e
            }
        }
        const Zu = "remove-point";
        function Yu(e) {
            return {
                type: Zu,
                index: e
            }
        }
        const Xu = "focus-point";
        function Ju(e) {
            return {
                type: Xu,
                index: e
            }
        }
        const Qu = "blur-point";
        function ed() {
            return {
                type: Qu
            }
        }
        const td = "click-point";
        function nd(e) {
            return {
                type: td,
                index: e
            }
        }
        const rd = "point-change-interaction-mode";
        const id = "change-keyboard-interaction-invitation-visibility";
        const sd = "close-polygon";
        const od = "open-polygon";
        const ad = "move-all";
        const ld = "move-point";
        function cd(e, t) {
            return {
                type: ld,
                index: e,
                destination: t
            }
        }
        const hd = "move-point-in-figure";
        function pd(e, t, n) {
            return {
                type: hd,
                figureIndex: e,
                pointIndex: t,
                destination: n
            }
        }
        const ud = "move-center";
        const dd = "MOVE_RADIUS_POINT";
        const md = "change-snap-step";
        const fd = "change-range";
        const gd = "reinitialize";
        const vd = ({children: e}) => me.createElement("g", {
            style: {
                transform: "var(--mafs-view-transform) var(--mafs-user-transform)"
            }
        }, e)
          , yd = ["children"]
          , bd = e => {
            let {children: t} = e
              , n = ia(e, yd);
            return me.createElement(Ve.xv, nt({
                size: 16,
                svgTextProps: {
                    filter: "url(#background)",
                    fontWeight: "bold"
                }
            }, n), t)
        }
          , xd = () => me.createElement("defs", null, me.createElement("filter", {
            id: "background",
            x: "-5%",
            width: "110%",
            y: "0%",
            height: "100%"
        }, me.createElement("feFlood", {
            floodColor: "#FFF",
            floodOpacity: "0.64"
        }), me.createElement("feComposite", {
            operator: "over",
            in: "SourceGraphic"
        })))
          , wd = ({centerPoint: e, endPoints: t, range: n, polygonLines: r, showAngles: i, snapTo: s}) => {
            const [o,a] = e
              , l = Lr([e, ...t])
              , [[c,h],[p,u]] = l ? t : t.reverse()
              , d = .3
              , m = Ve.Bh.dist(e, t[0])
              , f = Ve.Bh.dist(e, t[1])
              , g = Ve.Bh.dist(t[0], t[1])
              , v = Math.acos((m ** 2 + f ** 2 - g ** 2) / (2 * m * f))
              , y = a + (h - a) / m * d
              , b = o + (p - o) / f * d
              , x = o + (c - o) / m * d
              , w = a + (u - a) / f * d
              , [k,S] = Ve.Bh.add(e, Ve.Bh.add(Ve.Bh.sub([x, y], e), Ve.Bh.sub([b, w], e)));
            if (!i)
                return Md(v) ? me.createElement(Sd, {
                    start: [x, y],
                    vertex: [b, w],
                    end: [k, S]
                }) : null;
            const E = Td([k, S], e, n, r)
              , M = `M ${x} ${y} A 0.3 0.3 0 ${E ? 1 : 0} ${E ? 1 : 0} ${b} ${w}`;
            let C = v * (180 / Math.PI);
            E && (C = 360 - C);
            const T = parseFloat(C.toFixed("angles" === s ? 0 : 1))
              , _ = Number.isInteger(T) ? T : "≈ " + T;
            return me.createElement(me.Fragment, null, me.createElement("defs", null, me.createElement("filter", {
                id: "background",
                x: "-5%",
                width: "110%",
                y: "0%",
                height: "100%"
            }, me.createElement("feFlood", {
                floodColor: "#FFF",
                floodOpacity: "0.5"
            }), me.createElement("feComposite", {
                operator: "over",
                in: "SourceGraphic"
            }))), !E && Cd(v) ? me.createElement(Sd, {
                start: [x, y],
                vertex: [b, w],
                end: [k, S]
            }) : me.createElement(Ed, {
                arc: M
            }), me.createElement(bd, {
                x: k,
                y: S,
                attach: S - a > 0 ? "s" : "n",
                attachDistance: Math.abs(S - a) < .2 || Ve.Bh.dist([k, S], e) < .3 ? 20 : 10
            }, _, "°"))
        }
          , kd = ({vertex: e, coords: t, showAngles: n, allowReflexAngles: r, range: i}) => {
            const s = Lr([...t, e]) && !r ? t : t.reverse()
              , o = (_p(s[0], e) + 360 - _p(s[1], e)) % 360
              , a = o > 180
              , [l,c] = e
              , [h,p] = s
              , [u,d] = h
              , [m,f] = p
              , g = Ve.Bh.dist(e, h)
              , v = Ve.Bh.dist(e, p)
              , y = c + (d - c) / g * 2
              , b = l + (m - l) / v * 2
              , x = l + (u - l) / g * 2
              , w = c + (f - c) / v * 2
              , [k,S] = Ve.Bh.add(e, Ve.Bh.add(Ve.Bh.sub([x, y], e), Ve.Bh.sub([b, w], e)))
              , E = Td([k, S], e, i, [[e, h], [e, p]])
              , M = `M ${x} ${y} A 2 2 0 ${E || a ? 1 : 0} ${E && a ? 1 : 0} ${b} ${w}`
              , C = parseFloat(o.toFixed(0))
              , [T,_] = function(e, t, n, r, i, s) {
                const [o,a] = n
                  , [l,c] = e
                  , [h,p] = t
                  , u = [l - o, c - a]
                  , d = [h - o, p - a]
                  , m = Math.atan2(u[1], u[0])
                  , f = Math.atan2(d[1], d[0]);
                let g = (m + f) / 2;
                const v = Math.abs(m - f);
                i ? (v <= Math.PI && r || f > m) && (g += Math.PI) : v > Math.PI && (g -= Math.PI);
                const y = [Math.cos(g), Math.sin(g)]
                  , b = Math.sqrt(y[0] ** 2 + y[1] ** 2)
                  , x = [y[0] / b, y[1] / b]
                  , w = Math.sqrt(x[0] ** 2 + x[1] ** 2)
                  , k = 1.75 * s;
                let S = k / w;
                w >= k && (S = 1);
                const E = [x[0] * S, x[1] * S]
                  , M = Ve.Bh.add(E, n);
                return M
            }(h, p, e, a, r, 2);
            return me.createElement(me.Fragment, null, me.createElement("defs", null, me.createElement("filter", {
                id: "background",
                x: "-5%",
                width: "110%",
                y: "0%",
                height: "100%"
            }, me.createElement("feFlood", {
                floodColor: "#FFF",
                floodOpacity: "0.5"
            }), me.createElement("feComposite", {
                operator: "over",
                in: "SourceGraphic"
            }))), Cd(o) ? me.createElement(Sd, {
                start: [x, y],
                vertex: [b, w],
                end: [k, S],
                className: "arc-right-angle"
            }) : me.createElement(Ed, {
                arc: M,
                className: "angle-arc"
            }), n && me.createElement(bd, {
                x: T,
                y: _,
                color: xe.color.blue
            }, C, "°"))
        }
          , Sd = ({start: [e,t], vertex: [n,r], end: [i,s], className: o}) => me.createElement(vd, null, me.createElement("path", {
            d: `M ${e} ${t} L ${i} ${s} M ${i} ${s} L ${n} ${r}`,
            strokeWidth: .02,
            fill: "none",
            className: o
        }))
          , Ed = ({arc: e, className: t}) => me.createElement(vd, null, me.createElement("path", {
            d: e,
            strokeWidth: .02,
            fill: "none",
            className: t
        }))
          , Md = e => Math.abs(e - Math.PI / 2) < .01
          , Cd = e => 90 === Math.round(e)
          , Td = (e, t, n, r) => {
            const i = Du(e, t, n);
            let s = 0;
            return r.forEach((e => ( ([[e,t],[n,r]], [[i,s],[o,a]]) => {
                const l = (n - e) * (a - s) - (o - i) * (r - t);
                if (0 === l)
                    return !1;
                {
                    const c = ((a - s) * (o - e) + (i - o) * (a - t)) / l
                      , h = ((t - r) * (o - e) + (n - e) * (a - t)) / l;
                    return 0 < c && c < 1 && 0 < h && h < 1
                }
            }
            )([t, i], e) && s++)),
            !_d(s)
        }
          , _d = e => e % 2 == 0;
        var Ad = !0
          , Id = "Invariant failed";
        function Rd(e, t) {
            if (!e) {
                if (Ad)
                    throw new Error(Id);
                var n = "function" == typeof t ? t() : t
                  , r = n ? "".concat(Id, ": ").concat(n) : Id;
                throw new Error(r)
            }
        }
        function Nd(e) {
            const {gestureTarget: t, onMove: n, point: r, constrainKeyboardMovement: i} = e
              , [s,o] = me.useState(!1)
              , {xSpan: a, ySpan: l} = function() {
                const {range: [[e,t],[n,r]]} = Np()
                  , i = t - e
                  , s = r - n;
                return {
                    xSpan: i,
                    ySpan: s
                }
            }()
              , {viewTransform: c, userTransform: h} = (0,
            Ve.pp)()
              , p = Ve.Bh.matrixInvert(c);
            Rd(p, "The view transform must be invertible.");
            const u = me.useMemo(( () => function(e) {
                const t = Ve.Bh.matrixInvert(e);
                return Rd(null !== t, "Could not invert transform matrix. A parent transformation matrix might be degenerative (mapping 2D space to a line)."),
                t
            }(h)), [h])
              , d = me.useRef([0, 0]);
            return (0,
            Ke.useDrag)((e => {
                const {type: t, event: s} = e;
                null == s || s.stopPropagation();
                if (t.includes("key")) {
                    if (Rd(s instanceof KeyboardEvent),
                    null == s || s.preventDefault(),
                    "keyup" === t)
                        return;
                    if ("object" == typeof i) {
                        const e = i[Pd[s.key]];
                        return void n(null != e ? e : r)
                    }
                    const {direction: o, altKey: c, metaKey: p, shiftKey: d} = e
                      , m = [o[gp], -o[vp]]
                      , f = Math.abs(m[gp]) ? a : l;
                    let g = 50;
                    (c || p) && (g = 200),
                    d && (g = 10);
                    const v = f / (2 * g)
                      , y = function(e, t, n=1) {
                        const r = [];
                        for (let i = e; i < t - n / 2; i += n)
                            r.push(i);
                        const i = r[r.length - 1] + n;
                        Math.abs(t - i) < n / 1e-6 ? r.push(t) : r.push(i);
                        return r
                    }(f / g, f / 2, f / g);
                    for (const e of y) {
                        const t = Ve.Bh.scale(m, e)
                          , s = i(Ve.Bh.transform(Ve.Bh.add(Ve.Bh.transform(r, h), t), u));
                        if (Ve.Bh.dist(s, r) > v) {
                            n(s);
                            break
                        }
                    }
                } else {
                    const {last: t, movement: i, first: s} = e;
                    if (o(!t),
                    s && (d.current = Ve.Bh.transform(r, h)),
                    0 === Ve.Bh.mag(i))
                        return;
                    const a = Ve.Bh.transform(i, p);
                    n(Ve.Bh.transform(Ve.Bh.add(d.current, a), u))
                }
            }
            ), {
                target: t,
                eventOptions: {
                    passive: !1
                }
            }),
            {
                dragging: s
            }
        }
        const Pd = {
            ArrowLeft: "left",
            ArrowRight: "right",
            ArrowUp: "up",
            ArrowDown: "down"
        };
        function Od(e, t) {
            return (0 + e).toLocaleString(t, {
                maximumFractionDigits: 3,
                useGrouping: !1
            })
        }
        const Ld = (0,
        me.forwardRef)(( (e, t) => {
            var n, r;
            const {range: i, markings: s, showTooltips: o} = Np()
              , {point: a, color: l=xe.color.blue, dragging: c, cursor: h, showFocusRing: p, onClick: u=( () => {}
            )} = e
              , d = null != (n = null == (r = Object.entries(xe.color).find(( ([e,t]) => t === l))) ? void 0 : r[0]) ? n : "blue"
              , m = function(...e) {
                return e.filter(Boolean).join(" ")
            }("movable-point", c && "movable-point--dragging", p && "movable-point--focus")
              , [[f,g]] = Dp(a)
              , [[v,y],[b,x]] = i
              , [[w]] = Dp([v, 0])
              , [[k]] = Dp([y, 0])
              , [[S,E]] = Dp([0, b])
              , [[M,C]] = Dp([0, x])
              , T = c && "none" !== s
              , _ = me.createElement("g", null, me.createElement("line", {
                x1: w,
                y1: g,
                x2: k,
                y2: g,
                stroke: l
            }), me.createElement("line", {
                x1: f,
                y1: E,
                x2: f,
                y2: C,
                stroke: l
            }))
              , A = me.createElement("g", {
                ref: t,
                className: m,
                style: {
                    "--movable-point-color": l,
                    cursor: h
                },
                "data-testid": "movable-point",
                onClick: u
            }, me.createElement("circle", {
                className: "movable-point-hitbox",
                r: 24,
                cx: f,
                cy: g
            }), me.createElement("circle", {
                className: "movable-point-halo",
                cx: f,
                cy: g
            }), me.createElement("circle", {
                className: "movable-point-ring",
                cx: f,
                cy: g
            }), me.createElement("circle", {
                className: "movable-point-focus-outline",
                cx: f,
                cy: g
            }), me.createElement("circle", {
                className: "movable-point-center",
                cx: f,
                cy: g,
                style: {
                    fill: l
                },
                "data-testid": "movable-point__center"
            }));
            return me.createElement(me.Fragment, null, T && _, o ? me.createElement(ce.ZP, {
                autoUpdate: !0,
                backgroundColor: d,
                content: `(${a[gp]}, ${a[vp]})`,
                contentStyle: {
                    color: "white"
                }
            }, A) : A)
        }
        ));
        function Dd(e) {
            const {snapStep: t, disableKeyboardInteraction: n} = Np()
              , {point: r, sequenceNumber: i, color: s, cursor: o, constrain: a=(e => fp(t, e)), onMove: l=Fd, onClick: c=Fd, onFocus: h=Fd, onBlur: p=Fd, forwardedRef: u=Fd} = e
              , {strings: d, locale: m} = ot()
              , [f,g] = (0,
            me.useState)(!1)
              , v = (0,
            me.useRef)(null);
            Nd({
                gestureTarget: v,
                point: r,
                onMove: l,
                constrainKeyboardMovement: a
            });
            const y = (0,
            me.useRef)(null)
              , {dragging: b} = Nd({
                gestureTarget: y,
                point: r,
                onMove: l,
                constrainKeyboardMovement: a
            });
            (0,
            me.useLayoutEffect)(( () => {
                !function(e, t) {
                    "function" == typeof e ? e(t) : null !== e && (e.current = t)
                }(u, v.current)
            }
            ), [u]);
            return {
                focusableHandle: me.createElement("g", {
                    "data-testid": "movable-point__focusable-handle",
                    className: "movable-point__focusable-handle",
                    tabIndex: n ? -1 : 0,
                    ref: v,
                    role: "button",
                    "aria-label": d.srPointAtCoordinates({
                        num: i,
                        x: Od(r[gp], m),
                        y: Od(r[vp], m)
                    }),
                    "aria-live": "assertive",
                    onFocus: e => {
                        h(e),
                        g(!0)
                    }
                    ,
                    onBlur: e => {
                        p(e),
                        g(!1)
                    }
                }),
                visiblePoint: me.createElement(Ld, {
                    cursor: o,
                    onClick: () => {
                        var e;
                        c(),
                        null == (e = v.current) || e.focus()
                    }
                    ,
                    point: r,
                    dragging: b,
                    color: s,
                    ref: y,
                    showFocusRing: f
                }),
                focusableHandleRef: v,
                visiblePointRef: y
            }
        }
        const Fd = () => {}
          , zd = e => {
            const {onMoveLine: t=( () => {}
            ), onMovePoint: n=( () => {}
            ), color: r, points: [i,s], extend: o} = e
              , {visiblePoint: a, focusableHandle: l} = Dd({
                point: i,
                sequenceNumber: 1,
                color: r,
                onMove: e => n(0, e)
            })
              , {visiblePoint: c, focusableHandle: h} = Dd({
                point: s,
                sequenceNumber: 2,
                color: r,
                onMove: e => n(1, e)
            })
              , p = me.createElement(qd, {
                start: i,
                end: s,
                stroke: r,
                extend: o,
                onMove: t
            });
            return me.createElement(me.Fragment, null, l, p, h, a, c)
        }
          , Bd = "var(--movable-line-stroke-color)"
          , qd = e => {
            const {start: t, end: n, onMove: r, extend: i, stroke: s=Bd} = e
              , [o,a] = Dp(t, n)
              , {range: l, graphDimensionsInPixels: c, snapStep: h, disableKeyboardInteraction: p} = Np();
            let u, d;
            if (i) {
                const e = Hd(l, c);
                u = i.start ? Du(n, t, e) : void 0,
                d = i.end ? Du(t, n, e) : void 0
            }
            const m = (0,
            me.useRef)(null)
              , {dragging: f} = Nd({
                gestureTarget: m,
                point: t,
                onMove: e => {
                    r(Ve.Bh.sub(e, t))
                }
                ,
                constrainKeyboardMovement: e => fp(h, e)
            });
            return me.createElement(me.Fragment, null, me.createElement("g", {
                ref: m,
                tabIndex: p ? -1 : 0,
                className: "movable-line",
                "data-testid": "movable-line",
                style: {
                    cursor: f ? "grabbing" : "grab"
                }
            }, me.createElement(Ou, {
                start: o,
                end: a,
                style: {
                    stroke: "transparent",
                    strokeWidth: Up
                }
            }), me.createElement(Ou, {
                start: o,
                end: a,
                className: "movable-line-focus-outline",
                style: {}
            }), me.createElement(Ou, {
                start: o,
                end: a,
                className: "movable-line-focus-outline-gap",
                style: {}
            }), me.createElement(Ou, {
                start: o,
                end: a,
                style: {
                    stroke: s,
                    strokeWidth: "var(--movable-line-stroke-weight)"
                },
                className: f ? "movable-dragging" : "",
                testId: "movable-line__line"
            })), u && me.createElement(Lu, {
                tail: t,
                tip: u,
                color: s
            }), d && me.createElement(Lu, {
                tail: n,
                tip: d,
                color: s
            }))
        }
        ;
        function Hd(e, t) {
            const [n,r] = e
              , [i,s] = t;
            return Sp([4 * (xp(n) / i), 4 * (xp(r) / s)], e)
        }
        const Ud = me.forwardRef(( (e, t) => {
            const {visiblePoint: n, focusableHandle: r} = Dd(nt({}, e, {
                forwardedRef: t
            }));
            return me.createElement(me.Fragment, null, r, n)
        }
        ));
        function Gd(e) {
            const {dispatch: t, graphState: n} = e
              , {graphDimensionsInPixels: r} = Np()
              , {coords: i, showAngles: s, range: o, allowReflexAngles: a, snapDegrees: l} = n
              , c = [i[0], i[2]]
              , h = i[1]
              , p = [[h, c[0]], [h, c[1]]]
              , u = [Dp(h, c[0]), Dp(h, c[1])].map(( ([e,t], n) => {
                const i = Hd(o, r)
                  , s = Du(p[n][0], p[n][1], i);
                return me.createElement("g", {
                    key: `line-${n}`
                }, me.createElement(Ou, {
                    start: e,
                    end: t,
                    style: {
                        stroke: "var(--movable-line-stroke-color)",
                        strokeWidth: "var(--movable-line-stroke-weight)"
                    }
                }), me.createElement(Lu, {
                    tail: p[n][1],
                    tip: s,
                    color: "var(--movable-line-stroke-color)"
                }))
            }
            ))
              , d = {
                vertex: h,
                coords: c,
                allowReflexAngles: a || !1,
                snapDegrees: l || 1,
                range: o,
                showAngles: s || !1
            };
            return me.createElement(me.Fragment, null, u, me.createElement(kd, d), me.createElement(Ud, {
                point: i[1],
                sequenceNumber: 1,
                constrain: e => e,
                onMove: e => t(Gu.angle.movePoint(1, e))
            }), me.createElement(Ud, {
                point: i[0],
                sequenceNumber: 2,
                constrain: Kd(i[0], i[1], l || 1),
                onMove: e => t(Gu.angle.movePoint(0, e))
            }), me.createElement(Ud, {
                point: i[2],
                sequenceNumber: 3,
                constrain: Kd(i[2], i[1], l || 1),
                onMove: e => t(Gu.angle.movePoint(2, e))
            }))
        }
        const Wd = [1, 0]
          , Vd = [-1, 0]
          , $d = [0, 1]
          , jd = [0, -1];
        function Kd(e, t, n) {
            var r, i, s, o;
            const a = Cp(Ve.Bh.sub(e, t))
              , l = [e, Ve.Bh.add(e, Vd)]
              , c = [e, Ve.Bh.add(e, Wd)]
              , h = [e, Ve.Bh.add(e, $d)]
              , p = [e, Ve.Bh.add(e, jd)]
              , u = a + n
              , d = a - n
              , m = [t, Ve.Bh.add(t, Tp(1, u))]
              , f = [t, Ve.Bh.add(t, Tp(1, d))]
              , g = null != (r = Mp(l, m)) ? r : Mp(l, f)
              , v = null != (i = Mp(c, m)) ? i : Mp(c, f)
              , y = null != (s = Mp(h, m)) ? s : Mp(h, f)
              , b = null != (o = Mp(p, m)) ? o : Mp(p, f);
            return {
                up: null != y ? y : e,
                down: null != b ? b : e,
                left: null != g ? g : e,
                right: null != v ? v : e
            }
        }
        function Zd(e) {
            const [t,n] = e.center
              , [r,i] = e.radiusPoint;
            return Math.sqrt(Math.pow(r - t, 2) + Math.pow(i - n, 2))
        }
        function Yd(e) {
            const {dispatch: t, graphState: n} = e
              , {center: r, radiusPoint: i} = n;
            return me.createElement(me.Fragment, null, me.createElement(Xd, {
                center: r,
                radius: Zd(n),
                onMove: e => t(Gu.circle.moveCenter(e))
            }), me.createElement(Ud, {
                point: i,
                sequenceNumber: 1,
                cursor: "ew-resize",
                onMove: e => {
                    t(Gu.circle.moveRadiusPoint(e))
                }
            }))
        }
        function Xd(e) {
            const {center: t, radius: n, onMove: r} = e
              , {snapStep: i, disableKeyboardInteraction: s} = Np()
              , o = (0,
            me.useRef)(null)
              , {dragging: a} = Nd({
                gestureTarget: o,
                point: t,
                onMove: r,
                constrainKeyboardMovement: e => fp(i, e)
            })
              , [l] = Dp(t)
              , [c] = Fp([n, n]);
            return me.createElement("g", {
                ref: o,
                tabIndex: s ? -1 : 0,
                className: "movable-circle " + (a ? "movable-circle--dragging" : "")
            }, me.createElement("ellipse", {
                className: "focus-ring",
                cx: l[gp],
                cy: l[vp],
                rx: c[gp] + 3,
                ry: c[vp] + 3
            }), me.createElement("ellipse", {
                className: "circle",
                cx: l[gp],
                cy: l[vp],
                rx: c[gp],
                ry: c[vp]
            }), me.createElement(em, {
                center: t
            }))
        }
        const Jd = [24, 14]
          , Qd = function(e, t) {
            const n = [];
            for (const r of e)
                for (const e of t)
                    n.push([r, e]);
            return n
        }([-4.4, 0, 4.4], [-2.1, 2.1]);
        function em(e) {
            const {center: t} = e
              , n = Math.min(...Jd) / 2
              , [r] = Dp(t)
              , i = Ve.Bh.sub(r, Ve.Bh.scale(Jd, .5));
            return me.createElement(me.Fragment, null, me.createElement("rect", {
                className: "movable-circle-handle",
                x: i[gp],
                y: i[vp],
                width: Jd[gp],
                height: Jd[vp],
                rx: n,
                ry: n
            }), Qd.map((e => {
                const [t,n] = Ve.Bh.add(e, r);
                return me.createElement("circle", {
                    key: `circle-${t}-${n}`,
                    className: "movable-circle-handle-dot",
                    cx: t,
                    cy: n
                })
            }
            )))
        }
        const tm = (e, t) => {
            const {dispatch: n} = e
              , {coords: r} = e.graphState;
            return me.createElement(zd, {
                key: 0,
                points: r,
                onMoveLine: e => {
                    n(Gu.linear.moveLine(e))
                }
                ,
                extend: {
                    start: !0,
                    end: !0
                },
                onMovePoint: (e, t) => n(Gu.linear.movePoint(e, t)),
                color: "var(--movable-line-stroke-color)"
            })
        }
        ;
        const nm = e => {
            const {dispatch: t} = e
              , {coords: n} = e.graphState;
            return me.createElement(me.Fragment, null, null == n ? void 0 : n.map(( (e, n) => me.createElement(zd, {
                key: n,
                points: e,
                onMoveLine: e => {
                    t(Gu.linearSystem.moveLine(n, e))
                }
                ,
                extend: {
                    start: !0,
                    end: !0
                },
                onMovePoint: (e, r) => t(Gu.linearSystem.movePointInFigure(n, e, r)),
                color: "var(--movable-line-stroke-color)"
            }))), ";")
        }
        ;
        function rm(e) {
            return "unlimited" === e.graphState.numPoints ? function(e) {
                const {dispatch: t} = e
                  , n = Np()
                  , {range: [[r,i],[s,o]]} = n
                  , a = i - r
                  , l = o - s
                  , [[c,h]] = Fp([a, l])
                  , [[p,u]] = Dp([r, o])
                  , d = me.useRef([]);
                return me.useEffect(( () => {
                    const t = e.graphState.focusedPointIndex;
                    var n;
                    null != t && (null == (n = d.current[t]) || n.focus())
                }
                ), [e.graphState.focusedPointIndex, d]),
                me.createElement(me.Fragment, null, me.createElement("rect", {
                    style: {
                        fill: "rgba(0,0,0,0)",
                        cursor: "crosshair"
                    },
                    width: c,
                    height: h,
                    x: p,
                    y: u,
                    onClick: e => {
                        const r = e.currentTarget.getBoundingClientRect()
                          , i = zp([[e.clientX - r.x, e.clientY - r.y]], n);
                        t(Gu.pointGraph.addPoint(i[0]))
                    }
                }), e.graphState.coords.map(( (e, n) => me.createElement(Ud, {
                    key: n,
                    point: e,
                    sequenceNumber: n + 1,
                    onMove: e => t(Gu.pointGraph.movePoint(n, e)),
                    ref: e => {
                        d.current[n] = e
                    }
                    ,
                    onFocus: () => {
                        t(Gu.pointGraph.focusPoint(n))
                    }
                    ,
                    onClick: () => {
                        t(Gu.pointGraph.clickPoint(n))
                    }
                }))))
            }(e) : function(e) {
                const {dispatch: t} = e;
                return me.createElement(me.Fragment, null, e.graphState.coords.map(( (e, n) => me.createElement(Ud, {
                    key: n,
                    point: e,
                    sequenceNumber: n + 1,
                    onMove: e => t(Gu.pointGraph.movePoint(n, e))
                }))))
            }(e)
        }
        function im({state: e}) {
            return function(e, t) {
                const {strings: n, locale: r} = t;
                if (0 === e.coords.length)
                    return n.srNoInteractiveElements;
                const i = e.coords.map(( ([e,t], i) => n.srPointAtCoordinates({
                    num: i + 1,
                    x: Od(e, r),
                    y: Od(t, r)
                })));
                return n.srInteractiveElements({
                    elements: i.join(", ")
                })
            }(e, ot())
        }
        const sm = e => {
            const [t,n] = me.useState(!1)
              , [r,i] = me.useState(!1)
              , {dispatch: s} = e
              , {coords: o, showAngles: a, showSides: l, range: c, snapStep: h, snapTo: p="grid"} = e.graphState
              , {disableKeyboardInteraction: u} = Np()
              , d = null != o ? o : [[0, 0]]
              , m = me.useRef(null)
              , f = d[0]
              , g = ["angles", "sides"].includes(p) ? e => e : e => fp(h, e)
              , {dragging: v} = Nd({
                gestureTarget: m,
                point: f,
                onMove: e => {
                    const t = Ve.Bh.sub(e, f);
                    s(Gu.polygon.moveAll(t))
                }
                ,
                constrainKeyboardMovement: g
            })
              , y = me.useRef(0)
              , b = function(e) {
                return e.map(( (t, n) => [t, e[(n + 1) % e.length]]))
            }(d);
            return me.createElement(me.Fragment, null, me.createElement(Ve.mg, {
                points: [...d],
                color: "var(--movable-line-stroke-color)",
                svgPolygonProps: {
                    strokeWidth: r ? "var(--movable-line-stroke-weight-active)" : "var(--movable-line-stroke-weight)",
                    style: {
                        fill: "transparent"
                    }
                }
            }), d.map(( (e, t) => {
                const n = d.at(t - 1)
                  , r = d[(t + 1) % d.length];
                return n && r ? me.createElement(wd, {
                    key: "angle-" + t,
                    centerPoint: e,
                    endPoints: [n, r],
                    range: c,
                    polygonLines: b,
                    showAngles: !!a,
                    snapTo: p
                }) : null
            }
            )), l && b.map(( ([e,t], n) => {
                const [r,i] = Ve.Bh.midpoint(e, t)
                  , s = parseFloat(Ve.Bh.dist(e, t).toFixed("sides" === p ? 0 : 1));
                return me.createElement(bd, {
                    key: "side-" + n,
                    x: r,
                    y: i
                }, !Number.isInteger(s) && "≈ ", s)
            }
            )), me.createElement(Ve.mg, {
                points: [...d],
                color: "transparent",
                svgPolygonProps: {
                    ref: m,
                    tabIndex: u ? -1 : 0,
                    strokeWidth: Up,
                    style: {
                        cursor: v ? "grabbing" : "grab",
                        fill: t ? "var(--mafs-blue)" : "transparent"
                    },
                    onMouseEnter: () => n(!0),
                    onMouseLeave: () => n(!1),
                    onKeyDownCapture: () => {
                        i(om(m.current))
                    }
                    ,
                    onFocus: () => i(om(m.current)),
                    onBlur: () => i(om(m.current)),
                    className: "movable-polygon"
                }
            }), d.map(( (e, t) => me.createElement(Ud, {
                key: "point-" + t,
                constrain: g,
                point: e,
                sequenceNumber: t + 1,
                onMove: e => {
                    const n = Date.now();
                    n - y.current > 25 && (s(Gu.polygon.movePoint(t, e)),
                    y.current = n)
                }
            }))))
        }
        ;
        const om = e => {
            const t = t => {
                var n;
                return null != (n = null == e ? void 0 : e.matches(t)) && n
            }
            ;
            try {
                return t(":focus-visible")
            } catch (e) {
                return t(":focus")
            }
        }
          , am = e => "unlimited" === e.graphState.numSides ? (e => {
            const {dispatch: t} = e
              , {coords: n, closedPolygon: r} = e.graphState
              , i = Np()
              , {range: [s,o], graphDimensionsInPixels: a} = i
              , l = a[0]
              , c = a[1]
              , [[h,p]] = Dp([s[0], o[1]])
              , u = me.useRef([])
              , d = null != n ? n : [[0, 0]];
            if (me.useEffect(( () => {
                const t = e.graphState.focusedPointIndex;
                var n;
                null != t && (null == (n = u.current[t]) || n.focus())
            }
            ), [e.graphState.focusedPointIndex, u]),
            r) {
                const t = nt({}, e, {
                    numSides: n.length
                });
                return me.createElement(sm, t)
            }
            return me.createElement(me.Fragment, null, me.createElement("rect", {
                style: {
                    fill: "rgba(0,0,0,0)",
                    cursor: "crosshair"
                },
                width: l,
                height: c,
                x: h,
                y: p,
                onClick: e => {
                    const n = e.currentTarget.getBoundingClientRect()
                      , r = zp([[e.clientX - n.x, e.clientY - n.y]], i);
                    t(Gu.polygon.addPoint(r[0]))
                }
            }), me.createElement(Ve.aH, {
                points: [...d],
                color: "var(--movable-line-stroke-color)",
                svgPolylineProps: {
                    strokeWidth: "var(--movable-line-stroke-weight)",
                    style: {
                        fill: "transparent"
                    }
                }
            }), e.graphState.coords.map(( (n, r) => me.createElement(Ud, {
                key: r,
                point: n,
                sequenceNumber: r + 1,
                onMove: e => t(Gu.polygon.movePoint(r, e)),
                ref: e => {
                    u.current[r] = e
                }
                ,
                onFocus: () => {
                    t(Gu.polygon.focusPoint(r))
                }
                ,
                onClick: () => {
                    0 === r && e.graphState.coords.length >= 3 && t(Gu.polygon.closePolygon()),
                    t(Gu.polygon.clickPoint(r))
                }
            }))))
        }
        )(e) : sm(e);
        function lm(e) {
            const {dispatch: t, graphState: n} = e
              , {coords: r} = n
              , i = me.useRef([0, 0, 0])
              , s = cm(r);
            void 0 !== s && (i.current = s);
            const [o,a,l] = i.current;
            return me.createElement(me.Fragment, null, me.createElement(Ve.XN.OfX, {
                y: e => (o * e + a) * e + l,
                color: xe.color.blue
            }), r.map(( (e, n) => me.createElement(Ud, {
                key: "point-" + n,
                point: e,
                sequenceNumber: n + 1,
                onMove: e => t(Gu.quadratic.movePoint(n, e))
            }))))
        }
        const cm = e => {
            const t = e[0]
              , n = e[1]
              , r = e[2]
              , i = (t[0] - n[0]) * (t[0] - r[0]) * (n[0] - r[0]);
            if (0 === i)
                return;
            return [(r[0] * (n[1] - t[1]) + n[0] * (t[1] - r[1]) + t[0] * (r[1] - n[1])) / i, (r[0] * r[0] * (t[1] - n[1]) + n[0] * n[0] * (r[1] - t[1]) + t[0] * t[0] * (n[1] - r[1])) / i, (n[0] * r[0] * (n[0] - r[0]) * t[1] + r[0] * t[0] * (r[0] - t[0]) * n[1] + t[0] * n[0] * (t[0] - n[0]) * r[1]) / i]
        }
        ;
        const hm = e => {
            const {dispatch: t} = e
              , {coords: n} = e.graphState;
            return me.createElement(zd, {
                points: n,
                onMoveLine: e => t(Gu.ray.moveRay(e)),
                onMovePoint: (e, n) => t(Gu.ray.movePoint(e, n)),
                extend: {
                    start: !1,
                    end: !0
                }
            })
        }
        ;
        const pm = e => {
            const {dispatch: t} = e
              , {coords: n} = e.graphState;
            return me.createElement(me.Fragment, null, null == n ? void 0 : n.map(( (e, n) => me.createElement(zd, {
                key: n,
                points: e,
                onMoveLine: e => {
                    t(Gu.segment.moveLine(n, e))
                }
                ,
                onMovePoint: (e, r) => {
                    t(Gu.segment.movePointInFigure(n, e, r))
                }
            }))))
        }
        ;
        function um(e) {
            const {dispatch: t, graphState: n} = e
              , {coords: r} = n
              , i = me.useRef({
                amplitude: 1,
                angularFrequency: 1,
                phase: 1,
                verticalOffset: 0
            })
              , s = mm(r);
            return void 0 !== s && (i.current = s),
            me.createElement(me.Fragment, null, me.createElement(Ve.XN.OfX, {
                y: e => dm(e, i.current),
                color: xe.color.blue
            }), r.map(( (e, n) => me.createElement(Ud, {
                key: "point-" + n,
                point: e,
                sequenceNumber: n + 1,
                onMove: e => t(Gu.sinusoid.movePoint(n, e))
            }))))
        }
        const dm = function(e, t) {
            const {amplitude: n, angularFrequency: r, phase: i, verticalOffset: s} = t;
            return n * Math.sin(r * e - i) + s
        }
          , mm = e => {
            const t = e[0]
              , n = e[1];
            if (n[gp] === t[gp])
                return;
            const r = n[vp] - t[vp]
              , i = Math.PI / (2 * (n[gp] - t[gp]));
            return {
                amplitude: r,
                angularFrequency: i,
                phase: t[gp] * i,
                verticalOffset: t[vp]
            }
        }
          , fm = [-180, -170]
          , gm = [-176, -15];
        function vm() {
            const {range: e, snapStep: t} = Np()
              , [[n,r],[i,s]] = e
              , o = [Ep(n, r, .5), Ep(i, s, .25)]
              , [a,l] = (0,
            me.useState)(o)
              , [c,h] = (0,
            me.useState)(gm)
              , p = (0,
            me.useRef)(null);
            Nd({
                gestureTarget: p,
                onMove: l,
                point: a,
                constrainKeyboardMovement: n => $p({
                    snapStep: t,
                    range: e,
                    point: n
                })
            });
            const u = (0,
            me.useRef)(null);
            !function(e) {
                const {gestureTarget: t, onMove: n, point: r, constrain: i=(e => e)} = e
                  , s = me.useRef([0, 0]);
                (0,
                Ke.useDrag)((e => {
                    const {event: t, first: o, movement: a} = e;
                    null == t || t.stopPropagation(),
                    o && (s.current = r),
                    0 !== Ve.Bh.mag(a) && (null == n || n(i(Ve.Bh.add(s.current, a))))
                }
                ), {
                    target: t,
                    eventOptions: {
                        passive: !1
                    }
                })
            }({
                gestureTarget: u,
                onMove: h,
                point: c,
                constrain: xm
            });
            const [d] = Dp(a)
              , m = Ve.Bh.add(d, fm)
              , f = Cp(c) - Cp(gm);
            return me.createElement("g", {
                ref: p,
                transform: `translate(${m[gp]}, ${m[vp]}), rotate(${f})`,
                style: {
                    transformOrigin: `${-fm[gp]}px ${-fm[vp]}px`
                }
            }, me.createElement("image", {
                href: "https://ka-perseus-graphie.s3.amazonaws.com/e9d032f2ab8b95979f674fbfa67056442ba1ff6a.png"
            }), me.createElement("g", {
                transform: `translate(5, ${-fm[1]})`,
                ref: u
            }, me.createElement(ym, null)))
        }
        function ym() {
            const e = 10 / 180 * Math.PI;
            const t = 175 * (1 - Math.cos(e))
              , n = 175 * -Math.sin(e)
              , r = pp().move(0, 0).circularArc(175, t, n, {
                sweep: !0
            }).build()
              , i = pp().move(-8, 0).line(0, 10).line(8, 0).build()
              , s = Up / 2;
            return me.createElement("g", {
                className: "protractor-rotation-handle"
            }, me.createElement("path", {
                className: "protractor-rotation-handle-arrow-arc",
                d: r
            }), me.createElement("path", {
                className: "protractor-rotation-handle-arrowhead",
                d: i
            }), me.createElement("path", {
                className: "protractor-rotation-handle-arrowhead",
                d: i,
                transform: `translate(${t}, ${n}), rotate(190)`
            }), me.createElement("ellipse", {
                cx: "0px",
                cy: "-15px",
                rx: s,
                ry: s,
                fill: "none"
            }))
        }
        const bm = Ve.Bh.mag(gm);
        function xm(e) {
            return Ve.Bh.withMag(e, bm)
        }
        const wm = e => {
            var t;
            const {state: n, dispatch: r, labels: i, readOnly: s, fullGraphAriaLabel: o, fullGraphAriaDescription: a} = e
              , {type: l} = n
              , [c,h] = e.box
              , p = e.step
              , u = me.useId()
              , d = `interactive-graph-description-${u}`
              , m = `interactive-graph-interactive-elements-description-${u}`
              , f = `unlimited-graph-keyboard-prompt-${u}`
              , g = me.useRef(null)
              , {analytics: v} = yt()
              , {viewboxX: y, viewboxY: b} = Em(n.range, c, h)
              , x = {
                width: c,
                height: h,
                viewBox: `${y} ${b} ${c} ${h}`,
                preserveAspectRatio: "xMidYMin",
                x: y,
                y: b
            }
              , {strings: w} = ot()
              , k = jp(n) && n.showKeyboardInteractionInvitation;
            (0,
            le.xM)(( () => {
                v.onAnalyticsEvent({
                    type: "perseus:interactive-graph-widget:rendered",
                    payload: {
                        type: l,
                        widgetType: "INTERACTIVE_GRAPH",
                        widgetId: "interactive-graph"
                    }
                })
            }
            ));
            const {graph: S, interactiveElementsDescription: E} = Mm({
                state: n,
                dispatch: r
            });
            return me.createElement(Rp.Provider, {
                value: {
                    range: n.range,
                    snapStep: n.snapStep,
                    markings: e.markings,
                    tickStep: p,
                    gridStep: e.gridStep,
                    showTooltips: !!e.showTooltips,
                    graphDimensionsInPixels: e.box,
                    width: c,
                    height: h,
                    labels: i,
                    disableKeyboardInteraction: s || !!e.static
                }
            }, me.createElement(le.G7, null, me.createElement(le.G7, {
                className: "mafs-graph",
                style: {
                    position: "relative",
                    padding: "25px 25px 0 0",
                    boxSizing: "content-box",
                    marginLeft: "20px",
                    marginBottom: "30px",
                    pointerEvents: e.static ? "none" : "auto",
                    userSelect: "none",
                    width: c,
                    height: h
                },
                onKeyUp: e => {
                    !function(e, t, n) {
                        if (jp(t)) {
                            var r;
                            if ("Backspace" === e.key || "Delete" === e.key)
                                null != (r = document.activeElement) && r.classList.contains("movable-point__focusable-handle") && ("point" === t.type || "polygon" === t.type && !t.closedPolygon) && n(Gu.global.deleteIntent()),
                                document.activeElement.blur();
                            else
                                e.shiftKey && "Enter" === e.key ? n(Gu.global.changeInteractionMode("keyboard")) : "keyboard" === t.interactionMode && "a" === e.key && n(Gu.pointGraph.addPoint([0, 0]))
                        }
                    }(e, n, r)
                }
                ,
                "aria-label": o,
                "aria-describedby": Cm(a && d, E && m, jp(n) && "unlimited-graph-keyboard-prompt"),
                ref: g,
                tabIndex: 0,
                onFocus: e => {
                    !function(e, t, n) {
                        jp(t) && e.target.classList.contains("mafs-graph") && "mouse" === t.interactionMode && n(Gu.global.changeKeyboardInvitationVisibility(!0))
                    }(e, n, r)
                }
                ,
                onBlur: e => {
                    !function(e, t, n) {
                        jp(t) && n(Gu.global.changeKeyboardInvitationVisibility(!1))
                    }(0, n, r)
                }
            }, a && me.createElement(le.G7, {
                id: d,
                tabIndex: -1,
                className: "mafs-sr-only"
            }, a), E && me.createElement(le.G7, {
                id: m,
                tabIndex: -1,
                className: "mafs-sr-only"
            }, E), me.createElement(Eu, {
                box: e.box,
                backgroundImage: e.backgroundImage
            }), me.createElement(le.G7, {
                style: {
                    position: "absolute",
                    bottom: 0,
                    left: 0
                }
            }, "graph" === e.markings && me.createElement(me.Fragment, null, me.createElement(Xp, null)), me.createElement(Ve.V6, {
                preserveAspectRatio: !1,
                viewBox: {
                    x: n.range[gp],
                    y: n.range[vp],
                    padding: 0
                },
                pan: !1,
                zoom: !1,
                width: c,
                height: h
            }, me.createElement(xd, null), me.createElement("svg", x, me.createElement(ou, {
                gridStep: e.gridStep,
                range: n.range,
                containerSizeClass: e.containerSizeClass,
                markings: e.markings,
                width: c,
                height: h
            })), "graph" === e.markings && me.createElement(me.Fragment, null, me.createElement(iu, null), me.createElement(Hp, null)), me.createElement("svg", x, e.lockedFigures && me.createElement(Uu, {
                flags: e.flags,
                lockedFigures: e.lockedFigures,
                range: n.range
            }))), (null == (t = e.flags) || null == (t = t.mafs) ? void 0 : t["interactive-graph-locked-features-labels"]) && e.lockedFigures && me.createElement(Ru, {
                flags: e.flags,
                lockedFigures: e.lockedFigures
            }), me.createElement(le.G7, {
                style: {
                    position: "absolute"
                }
            }, me.createElement(Ve.V6, {
                preserveAspectRatio: !1,
                viewBox: {
                    x: n.range[gp],
                    y: n.range[vp],
                    padding: 0
                },
                pan: !1,
                zoom: !1,
                width: c,
                height: h
            }, me.createElement("svg", x, e.showProtractor && me.createElement(vm, null), S)))), k && me.createElement(le.G7, {
                style: {
                    display: k ? void 0 : "hidden",
                    textAlign: "center",
                    backgroundColor: "white",
                    border: "1px solid #21242C52",
                    padding: "16px 0",
                    boxShadow: "0px 8px 8px 0px #21242C14",
                    top: "50%",
                    transform: "translateY(-50%)"
                }
            }, me.createElement(he.Uc, {
                id: f
            }, w.graphKeyboardPrompt))), km({
                state: n,
                dispatch: r,
                width: c,
                perseusStrings: w
            })))
        }
          , km = e => {
            const {state: t, dispatch: n, width: r, perseusStrings: i} = e
              , {type: s} = t;
            switch (s) {
            case "point":
                return "unlimited" === t.numPoints ? (e => {
                    const {interactionMode: t, showRemovePointButton: n, focusedPointIndex: r} = e.state
                      , {perseusStrings: i} = e
                      , s = n && null !== r;
                    return me.createElement(le.G7, {
                        style: {
                            flexDirection: "row",
                            width: e.width
                        }
                    }, "keyboard" === t && me.createElement(Fe.Z, {
                        kind: "secondary",
                        style: {
                            width: "100%",
                            marginLeft: "20px"
                        },
                        tabIndex: 0,
                        onClick: () => {
                            e.dispatch(Gu.pointGraph.addPoint([0, 0]))
                        }
                    }, i.addPoint), "mouse" === t && me.createElement(Fe.Z, {
                        id: Gp,
                        kind: "secondary",
                        color: "destructive",
                        tabIndex: -1,
                        style: {
                            width: "100%",
                            marginLeft: "20px",
                            visibility: s ? "visible" : "hidden"
                        },
                        onClick: t => {
                            e.dispatch(Gu.pointGraph.removePoint(e.state.focusedPointIndex))
                        }
                    }, i.removePoint))
                }
                )({
                    state: t,
                    dispatch: n,
                    width: r,
                    perseusStrings: i
                }) : null;
            case "polygon":
                return "unlimited" === t.numSides ? (e => {
                    const {interactionMode: t, showRemovePointButton: n, focusedPointIndex: r, closedPolygon: i, coords: s} = e.state
                      , {perseusStrings: o} = e
                      , a = n && null !== r
                      , l = s.length < 3
                      , c = i ? me.createElement(Fe.Z, {
                        kind: "secondary",
                        style: {
                            width: "100%",
                            marginLeft: "20px"
                        },
                        tabIndex: 0,
                        onClick: () => {
                            e.dispatch(Gu.polygon.openPolygon())
                        }
                    }, o.openPolygon) : me.createElement(Fe.Z, {
                        kind: "secondary",
                        disabled: l,
                        style: {
                            width: "100%",
                            marginLeft: "20px"
                        },
                        tabIndex: l ? -1 : 0,
                        onClick: () => {
                            e.dispatch(Gu.polygon.closePolygon())
                        }
                    }, o.closePolygon);
                    return me.createElement(me.Fragment, null, me.createElement(le.G7, {
                        style: {
                            flexDirection: "row",
                            width: e.width
                        }
                    }, "keyboard" === t && me.createElement(Fe.Z, {
                        kind: "secondary",
                        style: {
                            width: "100%",
                            marginLeft: "20px"
                        },
                        disabled: i,
                        tabIndex: i ? -1 : 0,
                        onClick: () => {
                            e.dispatch(Gu.polygon.addPoint([0, 0]))
                        }
                    }, o.addPoint), "mouse" === t && me.createElement(Fe.Z, {
                        id: Gp,
                        kind: "secondary",
                        color: "destructive",
                        disabled: i || !a,
                        tabIndex: -1,
                        style: {
                            width: "100%",
                            marginLeft: "20px"
                        },
                        onClick: t => {
                            e.dispatch(Gu.polygon.removePoint(e.state.focusedPointIndex))
                        }
                    }, o.removePoint), c))
                }
                )({
                    state: t,
                    dispatch: n,
                    width: r,
                    perseusStrings: i
                }) : null;
            default:
                return null
            }
        }
        ;
        const Sm = e => {
            const [t,n] = e;
            return Math.abs(n - t)
        }
          , Em = (e, t, n) => {
            let r = 0;
            const i = t / Sm(e[gp])
              , s = e[gp][yp];
            s > 0 && (r = i * Math.abs(s)),
            s < 0 && (r = -i * Math.abs(s));
            let o = -n;
            const a = n / Sm(e[vp])
              , l = e[vp][yp];
            return l > 0 && (o = -n - a * Math.abs(l)),
            l < 0 && (o = a * Math.abs(l) - n),
            {
                viewboxX: r,
                viewboxY: o
            }
        }
          , Mm = e => {
            const {state: t, dispatch: n} = e
              , {type: r} = t;
            switch (r) {
            case "angle":
                return function(e, t) {
                    return {
                        graph: me.createElement(Gd, {
                            graphState: e,
                            dispatch: t
                        }),
                        interactiveElementsDescription: null
                    }
                }(t, n);
            case "segment":
                return function(e, t) {
                    return {
                        graph: me.createElement(pm, {
                            graphState: e,
                            dispatch: t
                        }),
                        interactiveElementsDescription: null
                    }
                }(t, n);
            case "linear-system":
                return function(e, t) {
                    return {
                        graph: me.createElement(nm, {
                            graphState: e,
                            dispatch: t
                        }),
                        interactiveElementsDescription: null
                    }
                }(t, n);
            case "linear":
                return function(e, t) {
                    return {
                        graph: me.createElement(tm, {
                            graphState: e,
                            dispatch: t
                        }),
                        interactiveElementsDescription: null
                    }
                }(t, n);
            case "ray":
                return function(e, t) {
                    return {
                        graph: me.createElement(hm, {
                            graphState: e,
                            dispatch: t
                        }),
                        interactiveElementsDescription: null
                    }
                }(t, n);
            case "polygon":
                return function(e, t) {
                    return {
                        graph: me.createElement(am, {
                            graphState: e,
                            dispatch: t
                        }),
                        interactiveElementsDescription: null
                    }
                }(t, n);
            case "point":
                return function(e, t) {
                    return {
                        graph: me.createElement(rm, {
                            graphState: e,
                            dispatch: t
                        }),
                        interactiveElementsDescription: me.createElement(im, {
                            state: e
                        })
                    }
                }(t, n);
            case "circle":
                return function(e, t) {
                    return {
                        graph: me.createElement(Yd, {
                            graphState: e,
                            dispatch: t
                        }),
                        interactiveElementsDescription: null
                    }
                }(t, n);
            case "quadratic":
                return function(e, t) {
                    return {
                        graph: me.createElement(lm, {
                            graphState: e,
                            dispatch: t
                        }),
                        interactiveElementsDescription: null
                    }
                }(t, n);
            case "sinusoid":
                return function(e, t) {
                    return {
                        graph: me.createElement(um, {
                            graphState: e,
                            dispatch: t
                        }),
                        interactiveElementsDescription: null
                    }
                }(t, n);
            case "none":
                return {
                    graph: null,
                    interactiveElementsDescription: null
                };
            default:
                throw new Ne.SL(r)
            }
        }
        ;
        function Cm(...e) {
            return e.filter(Boolean).join(" ") || void 0
        }
        function Tm(e, t) {
            switch (e.type) {
            case "angle":
                return Rd("angle" === t.type),
                nt({}, t, {
                    coords: e.coords
                });
            case "quadratic":
                return Rd("quadratic" === t.type),
                nt({}, t, {
                    coords: e.coords
                });
            case "circle":
                return Rd("circle" === t.type),
                nt({}, t, {
                    center: e.center,
                    radius: Zd(e)
                });
            case "linear":
                return Rd("linear" === t.type),
                nt({}, t, {
                    coords: e.coords
                });
            case "ray":
                return Rd("ray" === t.type),
                nt({}, t, {
                    coords: e.coords
                });
            case "sinusoid":
                return Rd("sinusoid" === t.type),
                nt({}, t, {
                    coords: e.coords
                });
            case "segment":
                return Rd("segment" === t.type),
                nt({}, t, {
                    coords: e.coords
                });
            case "linear-system":
                return Rd("linear-system" === t.type),
                nt({}, t, {
                    coords: e.coords
                });
            case "polygon":
                return Rd("polygon" === t.type),
                nt({}, t, {
                    coords: e.coords
                });
            case "point":
                return Rd("point" === t.type),
                nt({}, t, {
                    coords: e.coords
                });
            case "none":
                return Rd("none" === t.type),
                nt({}, t);
            default:
                throw new Ne.SL(e)
            }
        }
        function _m(e) {
            var t;
            const {graph: n, step: r, snapStep: i, range: s} = e
              , o = {
                hasBeenInteractedWith: !1,
                range: s,
                snapStep: i
            };
            switch (n.type) {
            case "segment":
                return nt({}, o, {
                    type: "segment",
                    coords: Im(n, s, r)
                });
            case "linear":
            case "ray":
                return nt({}, o, {
                    type: n.type,
                    coords: Nm(n, s, r)
                });
            case "linear-system":
                return nt({}, o, {
                    type: n.type,
                    coords: Pm(n, s, r)
                });
            case "polygon":
                return nt({}, o, {
                    type: "polygon",
                    numSides: n.numSides || 0,
                    showAngles: Boolean(n.showAngles),
                    showSides: Boolean(n.showSides),
                    coords: Om(n, s, r),
                    snapTo: null != (t = n.snapTo) ? t : "grid",
                    focusedPointIndex: null,
                    showRemovePointButton: !1,
                    interactionMode: "mouse",
                    showKeyboardInteractionInvitation: !1,
                    closedPolygon: !1
                });
            case "point":
                return nt({}, o, {
                    type: n.type,
                    coords: Am(n, s, r),
                    numPoints: n.numPoints || 0,
                    focusedPointIndex: null,
                    showRemovePointButton: !1,
                    interactionMode: "mouse",
                    showKeyboardInteractionInvitation: !1
                });
            case "circle":
                return nt({}, o, {
                    type: n.type
                }, Fm(n));
            case "quadratic":
                return nt({}, o, {
                    type: n.type,
                    coords: Dm(n, s, r)
                });
            case "sinusoid":
                return nt({}, o, {
                    type: n.type,
                    coords: Lm(n, s, r)
                });
            case "angle":
                return nt({}, o, {
                    type: n.type,
                    showAngles: Boolean(n.showAngles),
                    coords: zm({
                        graph: n,
                        range: s,
                        step: r
                    }),
                    angleOffsetDeg: Number(n.angleOffsetDeg),
                    allowReflexAngles: Boolean(n.allowReflexAngles),
                    snapDegrees: Number(n.snapDegrees)
                });
            case "none":
                return nt({}, o, {
                    type: "none"
                });
            default:
                throw new Ne.SL(n)
            }
        }
        function Am(e, t, n) {
            var r, i;
            const s = e.numPoints || 1;
            let o = null == (r = e.coords) ? void 0 : r.slice();
            if (o)
                return o;
            const a = null == (i = e.startCoords) ? void 0 : i.slice();
            if (a)
                return a;
            switch (s) {
            case 1:
                o = [e.coord || [0, 0]];
                break;
            case 2:
                o = [[-5, 0], [5, 0]];
                break;
            case 3:
                o = [[-5, 0], [0, 0], [5, 0]];
                break;
            case 4:
                o = [[-6, 0], [-2, 0], [2, 0], [6, 0]];
                break;
            case 5:
                o = [[-6, 0], [-3, 0], [0, 0], [3, 0], [6, 0]];
                break;
            case 6:
                o = [[-5, 0], [-3, 0], [-1, 0], [1, 0], [3, 0], [5, 0]];
                break;
            default:
                o = []
            }
            const l = Vp(o, [[-10, 10], [-10, 10]]);
            return Wp(t, n, l)
        }
        function Im(e, t, n) {
            if (e.coords)
                return e.coords;
            if (e.startCoords)
                return e.startCoords;
            const r = [[-10, 10], [-10, 10]];
            return (e => {
                switch (e) {
                case 2:
                    return [5, -5];
                case 3:
                    return [5, 0, -5];
                case 4:
                    return [6, 2, -2, -6];
                case 5:
                    return [6, 3, 0, -3, -6];
                case 6:
                    return [5, 3, 1, -1, -3, -5];
                default:
                    return [5]
                }
            }
            )(e.numSegments).map((e => {
                let i = [[-5, e], [5, e]];
                return i = Vp(i, r),
                i = Wp(t, n, i),
                i
            }
            ))
        }
        const Rm = [[[.25, .75], [.75, .75]], [[.25, .25], [.75, .25]]];
        function Nm(e, t, n) {
            return e.coords ? e.coords : e.startCoords ? e.startCoords : Wp(t, n, Rm[0])
        }
        function Pm(e, t, n) {
            return e.coords ? e.coords : e.startCoords ? e.startCoords : Rm.map((e => Wp(t, n, e)))
        }
        function Om(e, t, n) {
            var r, i;
            let s = null == (r = e.coords) ? void 0 : r.slice();
            if (s)
                return s;
            const o = null == (i = e.startCoords) ? void 0 : i.slice();
            if (o)
                return o;
            const a = e.numSides || 3;
            if ("unlimited" === a)
                s = [];
            else {
                const t = 2 * Math.PI / a
                  , n = (1 / a - .5) * Math.PI
                  , r = "sides" === e.snapTo ? Math.sqrt(3) / 3 * 7 : 4;
                s = [...Array(a).keys()].map((e => [r * Math.cos(e * t + n), r * Math.sin(e * t + n)]))
            }
            s = Vp(s, [[-10, 10], [-10, 10]]);
            const l = !["angles", "sides"].includes(e.snapTo || "");
            return s = Wp(t, n, s, !l),
            s
        }
        function Lm(e, t, n) {
            if (e.coords)
                return [e.coords[0], e.coords[1]];
            if (e.startCoords)
                return [e.startCoords[0], e.startCoords[1]];
            let r = [[.5, .5], [.65, .6]];
            return r = Wp(t, n, r, !0),
            r
        }
        function Dm(e, t, n) {
            if (e.coords)
                return e.coords;
            if (e.startCoords)
                return e.startCoords;
            return Wp(t, n, [[.25, .75], [.5, .25], [.75, .75]], !0)
        }
        function Fm(e) {
            var t;
            return null != e.center && null != e.radius ? {
                center: e.center,
                radiusPoint: Ve.Bh.add(e.center, [e.radius, 0])
            } : null != (t = e.startCoords) && t.center && e.startCoords.radius ? {
                center: e.startCoords.center,
                radiusPoint: Ve.Bh.add(e.startCoords.center, [e.startCoords.radius, 0])
            } : {
                center: [0, 0],
                radiusPoint: [2, 0]
            }
        }
        const zm = e => {
            const {graph: t, range: n, step: r} = e;
            if (t.coords)
                return t.coords;
            if (t.startCoords)
                return t.startCoords;
            const {snapDegrees: i, angleOffsetDeg: s} = t
              , o = i || 1;
            let a = o;
            for (; a < 20; )
                a += o;
            a = a * Math.PI / 180;
            const l = (s || 0) * Math.PI / 180;
            let c = [[.85, .5], [.5, .5]];
            c = Wp(n, r, c, !0);
            const h = Dr(Pr(...c))
              , p = [...c, [0, 0]];
            return p[0] = [p[1][0] + h * Math.cos(l), p[1][1] + h * Math.sin(l)],
            p[2] = [p[1][0] + h * Math.cos(a + l), p[1][1] + h * Math.sin(a + l)],
            p
        }
          , Bm = 2;
        function qm(e, t) {
            switch (t.type) {
            case gd:
                return _m(t.params);
            case hd:
                return function(e, t) {
                    switch (e.type) {
                    case "segment":
                    case "linear-system":
                        {
                            const n = function(e) {
                                const {array: t, index: n, update: r} = e
                                  , i = r(t[n]);
                                return Ym({
                                    array: t,
                                    index: n,
                                    newValue: i
                                })
                            }({
                                array: e.coords,
                                index: t.figureIndex,
                                update: n => Ym({
                                    array: n,
                                    index: t.pointIndex,
                                    newValue: Vm(t.destination, e)
                                })
                            })
                              , r = n[t.figureIndex];
                            return Zm(r) ? e : nt({}, e, {
                                hasBeenInteractedWith: !0,
                                coords: n
                            })
                        }
                    case "linear":
                    case "ray":
                        {
                            const n = Ym({
                                array: e.coords,
                                index: t.pointIndex,
                                newValue: Vm(t.destination, e)
                            });
                            return nt({}, e, {
                                hasBeenInteractedWith: !0,
                                coords: n
                            })
                        }
                    case "angle":
                    case "circle":
                        throw new Error("FIXME implement circle reducer");
                    case "none":
                    case "point":
                    case "polygon":
                    case "quadratic":
                    case "sinusoid":
                        throw new Error(`Don't use movePointInFigure for ${e.type} graphs. Use movePoint instead!`);
                    default:
                        throw new Ne.SL(e)
                    }
                }(e, t);
            case Vu:
                return function(e, t) {
                    const {snapStep: n, range: r} = e;
                    switch (e.type) {
                    case "segment":
                    case "linear-system":
                        {
                            if (void 0 === t.itemIndex)
                                throw new Error("Please provide index of line to move");
                            const i = e.coords[t.itemIndex];
                            if (!i)
                                throw new Error("No line to move");
                            const s = Um(i, t.delta, {
                                snapStep: n,
                                range: r
                            })
                              , o = [fp(n, Ve.Bh.add(i[0], s)), fp(n, Ve.Bh.add(i[1], s))]
                              , a = Ym({
                                array: e.coords,
                                index: t.itemIndex,
                                newValue: o
                            });
                            return nt({}, e, {
                                type: e.type,
                                hasBeenInteractedWith: !0,
                                coords: a
                            })
                        }
                    case "linear":
                    case "ray":
                        {
                            const i = e.coords
                              , s = Um(i, t.delta, {
                                snapStep: n,
                                range: r
                            })
                              , o = [fp(n, Ve.Bh.add(i[0], s)), fp(n, Ve.Bh.add(i[1], s))];
                            return nt({}, e, {
                                type: e.type,
                                hasBeenInteractedWith: !0,
                                coords: o
                            })
                        }
                    default:
                        return e
                    }
                }(e, t);
            case ad:
                return function(e, t) {
                    const {snapStep: n, range: r} = e;
                    if ("polygon" === e.type) {
                        let i;
                        if ("sides" === e.snapTo || "angles" === e.snapTo) {
                            const n = Um(e.coords, t.delta, {
                                snapStep: [0, 0],
                                range: r
                            });
                            i = e.coords.map((e => Ve.Bh.add(e, n)))
                        } else {
                            const s = Um(e.coords, t.delta, {
                                snapStep: n,
                                range: r
                            });
                            i = e.coords.map((e => fp(n, Ve.Bh.add(e, s))))
                        }
                        return nt({}, e, {
                            hasBeenInteractedWith: !0,
                            coords: i
                        })
                    }
                    return e
                }(e, t);
            case ld:
                return function(e, t) {
                    switch (e.type) {
                    case "angle":
                        const n = ( () => {
                            if (1 === t.index) {
                                const n = function({range: e, coords: t, snapStep: n}, {destination: r}) {
                                    const i = [...t]
                                      , s = i[1]
                                      , o = kp(Sp(Ve.Bh.add(n, [Bm, Bm]), e), fp(n, r))
                                      , a = Ve.Bh.add(o, Or(s))
                                      , l = {};
                                    for (const t of [0, 2]) {
                                        const r = i[t];
                                        let s = Ve.Bh.add(r, a)
                                          , c = _p(o, s);
                                        c *= Math.PI / 180,
                                        s = jm(s, c, e, n),
                                        l[t] = s
                                    }
                                    return l[1] = o,
                                    Object.entries(l).forEach(( ([e,t]) => {
                                        i[e] = t
                                    }
                                    )),
                                    i
                                }(e, t);
                                return nt({}, e, {
                                    hasBeenInteractedWith: !0,
                                    coords: n
                                })
                            }
                            return nt({}, e, {
                                hasBeenInteractedWith: !0,
                                coords: Ym({
                                    array: e.coords,
                                    index: t.index,
                                    newValue: Km(t.destination, e, t.index)
                                })
                            })
                        }
                        )();
                        return function(e) {
                            return $m(e.coords[0], e.coords[1], e.range) || $m(e.coords[2], e.coords[1], e.range)
                        }(n) ? e : n;
                    case "polygon":
                        let r;
                        r = "sides" === e.snapTo ? function(e, {range: t, coords: n}, r) {
                            const i = n[r]
                              , s = [...n];
                            s[r] = $p({
                                snapStep: [0, 0],
                                range: t,
                                point: e
                            });
                            const o = e => (r + e + s.length) % s.length
                              , a = ve().map([[s[o(-1)], s[r]], [s[r], s[o(1)]], [s[o(-1)], s[o(1)]]], (function(e) {
                                return Dr(Pr(...e))
                            }
                            ));
                            if (ve().each([0, 1], (function(e) {
                                a[e] = Math.round(a[e])
                            }
                            )),
                            Wm(a[1] + a[2], a[0]) || Wm(a[0] + a[2], a[1]) || Wm(a[0] + a[1], a[2]))
                                return i;
                            const l = qr(a[0], a[2], a[1])
                              , c = _p(s[o(1)], s[o(-1)])
                              , h = 1 === _r(Ar(s[o(-1)], s[o(1)], s[r]))
                              , p = Tp(a[0], c + (h ? 1 : -1) * l);
                            return Re.xr.add(s[o(-1)], p)
                        }(t.destination, e, t.index) : "angles" === e.snapTo ? function(e, {range: t, coords: n}, r) {
                            const i = n[r]
                              , s = [...n];
                            s[r] = $p({
                                snapStep: [0, 0],
                                range: t,
                                point: e
                            });
                            const o = zr(s).map((e => 180 * e / Math.PI))
                              , a = e => (r + e + s.length) % s.length;
                            ve().each([-1, 1], (function(e) {
                                o[a(e)] = Math.round(o[a(e)])
                            }
                            ));
                            const l = function(e, t, n) {
                                return Ap([s[a(e)], s[a(t)], s[a(n)]])
                            }
                              , c = [o[a(-1)] - l(-2, -1, 1), o[a(1)] - l(-1, 1, 2)];
                            if (c[2] = 180 - (c[0] + c[1]),
                            c.some((function(e) {
                                return Wm(e, 1)
                            }
                            )))
                                return i;
                            const h = Dr(Pr(s[a(-1)], s[a(1)]))
                              , p = 1 === _r(Ar(s[a(-1)], s[a(1)], s[r]))
                              , u = Math.sin(c[1] * Math.PI / 180) / Math.sin(c[2] * Math.PI / 180) * h
                              , d = _p(s[a(1)], s[a(-1)])
                              , m = Tp(u, d + (p ? 1 : -1) * c[0]);
                            return Re.xr.add(s[a(-1)], m)
                        }(t.destination, e, t.index) : Vm(t.destination, e);
                        const i = Ym({
                            array: e.coords,
                            index: t.index,
                            newValue: r
                        });
                        return !("unlimited" === e.numSides && !e.closedPolygon) && function(e) {
                            for (let t = 0; t < e.length; t++)
                                for (let n = t + 1; n < e.length; n++) {
                                    if (Re.xm.equal(e[t], e[n]))
                                        return !0;
                                    const r = (t + 1) % e.length
                                      , i = (n + 1) % e.length;
                                    if (r !== n && i !== t && Nr([e[t], e[r]], [e[n], e[i]]))
                                        return !0
                                }
                            return !1
                        }(i) ? e : nt({}, e, {
                            hasBeenInteractedWith: !0,
                            coords: i
                        });
                    case "point":
                        return nt({}, e, {
                            hasBeenInteractedWith: !0,
                            coords: Ym({
                                array: e.coords,
                                index: t.index,
                                newValue: Vm(t.destination, e)
                            })
                        });
                    case "sinusoid":
                        {
                            const n = Vm(t.destination, e)
                              , r = [...e.coords];
                            return r[t.index] = n,
                            r[0][gp] === r[1][gp] ? e : nt({}, e, {
                                hasBeenInteractedWith: !0,
                                coords: Ym({
                                    array: e.coords,
                                    index: t.index,
                                    newValue: n
                                })
                            })
                        }
                    case "quadratic":
                        {
                            const n = [...e.coords]
                              , r = Vm(t.destination, e);
                            n[t.index] = r;
                            return void 0 === cm(n) ? e : nt({}, e, {
                                hasBeenInteractedWith: !0,
                                coords: Ym({
                                    array: e.coords,
                                    index: t.index,
                                    newValue: r
                                })
                            })
                        }
                    default:
                        throw new Error("The movePoint action is only for point, quadratic, and polygon graphs")
                    }
                }(e, t);
            case ud:
                return function(e, t) {
                    if ("circle" === e.type) {
                        const n = Vm(t.destination, e)
                          , r = [...Ve.Bh.add(e.radiusPoint, Ve.Bh.sub(n, e.center))]
                          , [i,s] = e.range[gp]
                          , [o] = r;
                        if (o < i || o > s) {
                            const e = o - 2 * (o - n[gp]);
                            e >= i && e <= s && (r[gp] = e)
                        }
                        return nt({}, e, {
                            hasBeenInteractedWith: !0,
                            center: n,
                            radiusPoint: r
                        })
                    }
                    throw new Error("The doMoveCenter action is only for circle graphs")
                }(e, t);
            case dd:
                return function(e, t) {
                    if ("circle" === e.type) {
                        const [n,r] = e.range[gp]
                          , i = fp(e.snapStep, [mp(t.destination[gp] + 0, n, r), e.center[1]]);
                        return ve().isEqual(i, e.center) ? e : nt({}, e, {
                            hasBeenInteractedWith: !0,
                            radiusPoint: i
                        })
                    }
                    throw new Error("The doMoveRadiusPoint action is only for circle graphs")
                }(e, t);
            case md:
                return function(e, t) {
                    if (ve().isEqual(e.snapStep, t.snapStep))
                        return e;
                    return nt({}, e, {
                        snapStep: t.snapStep
                    })
                }(e, t);
            case fd:
                return function(e, t) {
                    if (ve().isEqual(e.range, t.range))
                        return e;
                    return nt({}, e, {
                        range: t.range
                    })
                }(e, t);
            case ju:
                return function(e, t) {
                    if (!jp(e))
                        return e;
                    const {snapStep: n} = e
                      , r = fp(n, t.location);
                    for (const t of e.coords)
                        if (t[gp] === r[gp] && t[vp] === r[vp])
                            return e;
                    const i = [...e.coords, r];
                    return nt({}, e, {
                        hasBeenInteractedWith: !0,
                        coords: i,
                        showRemovePointButton: !1,
                        focusedPointIndex: i.length - 1
                    })
                }(e, t);
            case Zu:
                return Hm(e, t);
            case Xu:
                return function(e, t) {
                    switch (e.type) {
                    case "polygon":
                    case "point":
                        return nt({}, e, {
                            focusedPointIndex: t.index
                        });
                    default:
                        return e
                    }
                }(e, t);
            case Qu:
                return function(e, t) {
                    switch (e.type) {
                    case "polygon":
                    case "point":
                        const t = nt({}, e, {
                            showRemovePointButton: !1
                        });
                        return "mouse" === e.interactionMode && (t.focusedPointIndex = null),
                        t;
                    default:
                        return e
                    }
                }(e);
            case Wu:
                return function(e, t) {
                    if (jp(e) && null !== e.focusedPointIndex)
                        return Hm(e, Gu.pointGraph.removePoint(e.focusedPointIndex));
                    return e
                }(e);
            case td:
                return function(e, t) {
                    if (jp(e))
                        return nt({}, e, {
                            focusedPointIndex: t.index,
                            showRemovePointButton: !0
                        });
                    return e
                }(e, t);
            case sd:
                return function(e) {
                    if (jp(e) && "polygon" === e.type)
                        return nt({}, e, {
                            closedPolygon: !0
                        });
                    return e
                }(e);
            case od:
                return function(e) {
                    if (jp(e) && "polygon" === e.type)
                        return nt({}, e, {
                            closedPolygon: !1
                        });
                    return e
                }(e);
            case rd:
                return function(e, t) {
                    if (jp(e)) {
                        const n = "keyboard" !== t.mode && e.showKeyboardInteractionInvitation;
                        return nt({}, e, {
                            interactionMode: t.mode,
                            showKeyboardInteractionInvitation: n
                        })
                    }
                    return e
                }(e, t);
            case id:
                return function(e, t) {
                    if (jp(e))
                        return nt({}, e, {
                            showKeyboardInteractionInvitation: t.shouldShow,
                            hasBeenInteractedWith: !0
                        });
                    return e
                }(e, t);
            default:
                throw new Ne.SL(t)
            }
        }
        function Hm(e, t) {
            if (!jp(e))
                return e;
            let n;
            return n = "mouse" === e.interactionMode ? null : e.coords.length > 1 ? e.coords.length - 2 : null,
            nt({}, e, {
                coords: e.coords.filter(( (e, n) => n !== t.index)),
                focusedPointIndex: n,
                showRemovePointButton: !1
            })
        }
        const Um = (e, t, n) => {
            const r = e.map((e => function({snapStep: e, range: t, point: n}) {
                const r = $p({
                    snapStep: e,
                    range: t,
                    point: [1 / 0, 1 / 0]
                });
                return Ve.Bh.sub(r, n)
            }(nt({}, n, {
                point: e
            }))))
              , i = e.map((e => function({snapStep: e, range: t, point: n}) {
                const r = $p({
                    snapStep: e,
                    range: t,
                    point: [-1 / 0, -1 / 0]
                });
                return Ve.Bh.sub(r, n)
            }(nt({}, n, {
                point: e
            }))))
              , [s,o] = ( (e, t, n) => {
                const [r,i] = n
                  , s = Math.min(...e.map((e => e[gp])))
                  , o = Math.min(...e.map((e => e[vp])))
                  , a = Math.max(...t.map((e => e[gp])))
                  , l = Math.max(...t.map((e => e[vp])));
                return [mp(r, a, s), mp(i, l, o)]
            }
            )(r, i, t);
            return [s, o]
        }
          , Gm = vn.eq;
        function Wm(e, t) {
            return e < t || Gm(e, t)
        }
        function Vm(e, {snapStep: t, range: n}) {
            return fp(t, $p({
                snapStep: t,
                range: n,
                point: e
            }))
        }
        function $m(e, t, n) {
            return Ve.Bh.dist(e, t) < 2
        }
        function jm(e, t, n, r) {
            const i = [n[0][0] + r[0], n[1][0] + r[0]]
              , s = [n[0][1] - r[1], n[1][1] - r[1]];
            let o = e;
            return o[0] < i[0] ? o = [i[0], o[1] + (i[0] - o[0]) * Math.tan(t)] : o[0] > s[0] && (o = [s[0], o[1] - (o[0] - s[0]) * Math.tan(t)]),
            o[1] < i[1] ? o = [o[0] + (i[1] - o[1]) / Math.tan(t), i[1]] : o[1] > s[1] && (o = [o[0] - (o[1] - s[1]) / Math.tan(t), s[1]]),
            o
        }
        function Km(e, {range: t, coords: n, snapDegrees: r, angleOffsetDeg: i, snapStep: s}, o) {
            const a = r || 1
              , l = i || 0
              , c = [...n]
              , h = $p({
                snapStep: [0, 0],
                range: [[t[0][0] + s[0], t[0][1] - s[0]], [t[1][0] + s[1], t[1][1] - s[1]]],
                point: e
            });
            c[o] = h;
            const p = n[1];
            let u = _p(c[o], p);
            u = Math.round((u - l) / a) * a + l;
            const d = Bm + .01
              , m = Math.max(Ve.Bh.dist(c[o], p), d);
            return Ve.Bh.add(p, Tp(m, u))
        }
        const Zm = e => e.some(( (t, n) => e.some(( (e, r) => n !== r && Re.xr.equal(t, e)))));
        function Ym(e) {
            const {array: t, index: n, newValue: r} = e
              , i = [...t];
            return i[n] = r,
            i
        }
        const Xm = me.forwardRef(( (e, t) => {
            const {onChange: n, graph: r} = e
              , [i,s] = me.useReducer(qm, e, _m);
            (0,
            me.useImperativeHandle)(t, ( () => ({
                getUserInput: () => function(e, t) {
                    if (!e.hasBeenInteractedWith)
                        return nt({}, t);
                    if ("linear-system" === t.type && "linear-system" === e.type)
                        return nt({}, t, {
                            coords: e.coords
                        });
                    if ("segment" === e.type && "segment" === t.type)
                        return nt({}, t, {
                            coords: e.coords
                        });
                    if ("linear" === e.type && "linear" === t.type)
                        return nt({}, t, {
                            coords: e.coords
                        });
                    if ("ray" === e.type && "ray" === t.type)
                        return nt({}, t, {
                            coords: e.coords
                        });
                    if ("polygon" === e.type && "polygon" === t.type)
                        return nt({}, t, {
                            coords: e.coords
                        });
                    if ("point" === e.type && "point" === t.type)
                        return nt({}, t, {
                            coords: e.coords
                        });
                    if ("circle" === e.type && "circle" === t.type)
                        return nt({}, t, {
                            center: e.center,
                            radius: Zd(e)
                        });
                    if ("quadratic" === e.type && "quadratic" === t.type)
                        return nt({}, t, {
                            coords: e.coords
                        });
                    if ("sinusoid" === e.type && "sinusoid" === t.type)
                        return nt({}, t, {
                            coords: e.coords
                        });
                    if ("angle" === e.type && "angle" === t.type)
                        return nt({}, t, {
                            coords: Lr([e.coords[0], e.coords[2], e.coords[1]]) && !e.allowReflexAngles ? e.coords.slice().reverse() : e.coords,
                            allowReflexAngles: e.allowReflexAngles
                        });
                    if ("none" === e.type && "none" === t.type)
                        return {
                            type: "none"
                        };
                    throw new Error("Mafs is not yet implemented for graph type: " + t.type)
                }(i, r)
            })));
            const o = (0,
            me.useRef)(i);
            (0,
            me.useEffect)(( () => {
                o.current !== i && n({
                    graph: Tm(i, r)
                }),
                o.current = i
            }
            ), [n, i, r]);
            const [a,l] = e.snapStep;
            (0,
            me.useEffect)(( () => {
                s({
                    type: md,
                    snapStep: [a, l]
                })
            }
            ), [s, a, l]);
            const [[c,h],[p,u]] = e.range;
            (0,
            me.useEffect)(( () => {
                s(function(e) {
                    return {
                        type: fd,
                        range: e
                    }
                }([[c, h], [p, u]]))
            }
            ), [s, c, h, p, u]);
            const d = "segment" === r.type ? r.numSegments : null
              , m = "point" === r.type ? r.numPoints : null
              , f = "polygon" === r.type ? r.numSides : null
              , g = "polygon" === r.type ? r.snapTo : null
              , v = "polygon" === r.type || "angle" === r.type ? r.showAngles : null
              , y = "angle" === r.type ? r.allowReflexAngles : null
              , b = "polygon" === r.type ? r.showSides : null
              , x = "startCoords"in r ? r.startCoords : void 0
              , w = (0,
            me.useRef)(e)
              , k = (0,
            le.II)(e);
            return (0,
            me.useEffect)(( () => {
                var e;
                k.current !== w.current && s((e = k.current,
                {
                    type: gd,
                    params: e
                }))
            }
            ), [r.type, m, d, f, g, v, b, k, x, y]),
            e.static ? me.createElement(wm, nt({}, e, {
                state: _m(nt({}, e, {
                    graph: e.correct
                })),
                dispatch: s
            })) : me.createElement(wm, nt({}, e, {
                state: i,
                dispatch: s
            }))
        }
        ))
          , Jm = vn.eq
          , Qm = vn.deepEq;
        const ef = {
            url: null
        }
          , tf = vn.eq
          , nf = "unlimited";
        function rf(e, t) {
            return e < t || tf(e, t)
        }
        function sf(e) {
            return e.replace(/(?:^|-)(.)/g, (function(e, t) {
                return t.toUpperCase()
            }
            ))
        }
        const of = e => af(e) && (null == e.graph.coords || 0 === e.graph.coords.length)
          , af = e => "point" === e.graph.type && e.graph.numPoints === nf || "polygon" === e.graph.type && e.graph.numSides === nf
          , lf = (e, t) => new s.uI(`${e} called but current graph type is not a '${t}'`,s.D1.NotAllowed,{
            metadata: {
                graphType: t
            }
        });
        function cf(e) {
            const t = e[0]
              , n = e[1]
              , r = n[1] - t[1]
              , i = Math.PI / (2 * (n[0] - t[0]));
            return [r, i, t[0] * i, t[1]]
        }
        function hf(e) {
            const t = e[0]
              , n = e[1]
              , r = e[2]
              , i = (t[0] - n[0]) * (t[0] - r[0]) * (n[0] - r[0]);
            if (0 === i)
                return;
            return [(r[0] * (n[1] - t[1]) + n[0] * (t[1] - r[1]) + t[0] * (r[1] - n[1])) / i, (r[0] * r[0] * (t[1] - n[1]) + n[0] * n[0] * (r[1] - t[1]) + t[0] * t[0] * (n[1] - r[1])) / i, (n[0] * r[0] * (n[0] - r[0]) * t[1] + r[0] * t[0] * (r[0] - t[0]) * n[1] + t[0] * n[0] * (t[0] - n[0]) * r[1]) / i]
        }
        class pf extends me.Component {
            constructor(...e) {
                super(...e),
                this.angle = void 0,
                this.circle = void 0,
                this.graphie = void 0,
                this.horizHairline = void 0,
                this.line = void 0,
                this.lines = void 0,
                this.parabola = void 0,
                this.pointA = void 0,
                this.pointB = void 0,
                this.pointC = void 0,
                this.points = void 0,
                this.polygon = void 0,
                this.shouldResetGraphie = void 0,
                this.sinusoid = void 0,
                this.trashCan = void 0,
                this.vertHairline = void 0,
                this.state = {
                    shouldShowInstructions: of(this.props)
                },
                this._getShouldShowInstructions = e => (e = e || this.props,
                this.isClickToAddPoints(e) && (null == e.graph.coords || 0 === e.graph.coords.length)),
                this.setGraphie = e => {
                    this.graphie = e,
                    this.setupGraphie()
                }
                ,
                this.handleAddPointsMouseDown = e => {
                    if (!this.isClickToAddPoints())
                        throw new s.uI("handleAddPointsClick should not be registeredwhen isClickToAddPoints() is false",s.D1.NotAllowed);
                    if (!this.isCoordInTrash(e)) {
                        let n;
                        if ("point" === this.props.graph.type) {
                            if (n = this.createPointForPointsType(e, this.points.length),
                            !n.constrain())
                                return void n.remove();
                            this.points.push(n);
                            const t = this.points.length - 1;
                            this.points[t].grab(e),
                            this.updateCoordsFromPoints()
                        } else if ("polygon" === this.props.graph.type) {
                            var t;
                            if (null != (t = this.polygon) && t.closed())
                                return;
                            n = this.createPointForPolygonType(e, this.points.length),
                            this.points.push(n);
                            const r = this.points.length - 1;
                            this.points[r].grab(e),
                            this.updatePolygon()
                        }
                        this.setState({
                            shouldShowInstructions: !1
                        })
                    }
                }
                ,
                this.resetGraphie = () => {
                    var e;
                    this.shouldResetGraphie = !1,
                    this.parabola = null,
                    this.sinusoid = null,
                    null == (e = this.refs.graph) || e.reset()
                }
                ,
                this.setupGraphie = () => {
                    var e, t;
                    (this.setTrashCanVisibility(0),
                    this.isClickToAddPoints() && this.setTrashCanVisibility(.5),
                    this.props.apiOptions.isMobile) && (this.horizHairline = new Mr(this.graphie,[0, 0],[0, 0],{
                        normalStyle: {
                            strokeWidth: 1
                        }
                    }),
                    this.horizHairline.attr({
                        stroke: Qn.INTERACTIVE
                    }),
                    null == (e = this.horizHairline) || e.hide(),
                    this.vertHairline = new Mr(this.graphie,[0, 0],[0, 0],{
                        normalStyle: {
                            strokeWidth: 1
                        }
                    }),
                    this.vertHairline.attr({
                        stroke: Qn.INTERACTIVE
                    }),
                    null == (t = this.vertHairline) || t.hide());
                    this["add" + sf(this.props.graph.type) + "Controls"]()
                }
                ,
                this.showHairlines = e => {
                    var t, n, r, i;
                    this.props.apiOptions.isMobile && "none" !== this.props.markings && (null == (t = this.horizHairline) || t.moveTo([this.props.range[0][0], e[1]], [this.props.range[0][1], e[1]]),
                    null == (n = this.horizHairline) || n.show(),
                    null == (r = this.vertHairline) || r.moveTo([e[0], this.props.range[1][0]], [e[0], this.props.range[1][1]]),
                    null == (i = this.vertHairline) || i.show())
                }
                ,
                this.hideHairlines = () => {
                    var e, t;
                    this.props.apiOptions.isMobile && (null == (e = this.horizHairline) || e.hide(),
                    null == (t = this.vertHairline) || t.hide())
                }
                ,
                this.setTrashCanVisibility = e => {
                    const t = this.graphie;
                    if (Re.Rx.equal(e, 0))
                        this.trashCan && (this.trashCan.remove(),
                        this.trashCan = null);
                    else if (!this.props.apiOptions.isMobile) {
                        var n, r;
                        if (!this.trashCan)
                            this.trashCan = null == t || null == (r = t.raphael) ? void 0 : r.image("https://ka-perseus-graphie.s3.amazonaws.com/b1452c0d79fd0f7ff4c3af9488474a0a0decb361.png", t.xpixels - 40, t.ypixels - 40, 40, 40);
                        null == (n = this.trashCan) || n.attr({
                            opacity: e
                        })
                    }
                }
                ,
                this.isClickToAddPoints = e => (e = e || this.props,
                af(e)),
                this._lineStroke = () => this.props.isMobile ? {
                    "stroke-width": 3
                } : {},
                this.addLine = e => {
                    const t = this
                      , n = t.graphie
                      , r = uf.getLineCoords(t.props.graph, t.props)
                      , i = t.points = ve().map(r, (e => cs.addMaybeMobileMovablePoint(this, {
                        coord: e,
                        constraints: [cs.MovablePoint.constraints.bound(), cs.MovablePoint.constraints.snap()],
                        onMove: () => {
                            const e = ve().extend({}, t.props.graph, {
                                coords: ve().invoke(i, "coord")
                            });
                            t.onChange({
                                graph: e
                            })
                        }
                    })))
                      , s = {
                        points: i,
                        static: !0,
                        normalStyle: nt({
                            stroke: this.props.apiOptions.isMobile ? Qn.BLUE_C : Qn.INTERACTIVE
                        }, this._lineStroke())
                    };
                    "line" === e ? s.extendLine = !0 : "ray" === e && (s.extendRay = !0),
                    t.line = cs.addMovableLine(n, s),
                    i[0].listen("constraints", "isLine", (e => !Re.xm.equal(e, i[1].coord()))),
                    i[1].listen("constraints", "isLine", (e => !Re.xm.equal(e, i[0].coord())))
                }
                ,
                this.removeLine = () => {
                    var e;
                    ve().invoke(this.points, "remove"),
                    null == (e = this.line) || e.remove()
                }
                ,
                this.addNoneControls = () => {}
                ,
                this.removeNoneControls = () => {}
                ,
                this.addLinearControls = () => {
                    this.addLine("line")
                }
                ,
                this.removeLinearControls = () => {
                    this.removeLine()
                }
                ,
                this.addQuadraticControls = () => {
                    if ("quadratic" !== this.props.graph.type)
                        throw lf("addQuadraticControls", "quadratic");
                    let e = this.props.graph.coords;
                    e || (e = uf.defaultQuadraticCoords(this.props));
                    const t = () => {
                        const e = ve().extend({}, this.props.graph, {
                            coords: [n.coord(), r.coord(), i.coord()]
                        });
                        this.onChange({
                            graph: e
                        }),
                        this.updateQuadratic()
                    }
                    ;
                    let n = null;
                    n = this.pointA = cs.addMaybeMobileMovablePoint(this, {
                        coord: e[0],
                        constraints: [cs.MovablePoint.constraints.bound(), cs.MovablePoint.constraints.snap(), e => !n || e[0] !== r.coord()[0] && e[0] !== i.coord()[0]],
                        onMove: t
                    });
                    let r = null;
                    r = this.pointB = cs.addMaybeMobileMovablePoint(this, {
                        coord: e[1],
                        constraints: [cs.MovablePoint.constraints.bound(), cs.MovablePoint.constraints.snap(), e => !r || e[0] !== n.coord()[0] && e[0] !== i.coord()[0]],
                        onMove: t
                    });
                    let i = null;
                    i = this.pointC = cs.addMaybeMobileMovablePoint(this, {
                        coord: e[2],
                        constraints: [cs.MovablePoint.constraints.bound(), cs.MovablePoint.constraints.snap(), e => !i || e[0] !== n.coord()[0] && e[0] !== r.coord()[0]],
                        onMove: t
                    }),
                    this.updateQuadratic()
                }
                ,
                this.updateQuadratic = () => {
                    const e = uf.getCurrentQuadraticCoefficients(this.props);
                    if (!e)
                        return;
                    const t = e[0]
                      , n = e[1]
                      , r = e[2];
                    if (this.parabola) {
                        var i, s;
                        const e = null == (i = this.graphie) ? void 0 : i.svgParabolaPath(t, n, r);
                        null == (s = this.parabola) || s.attr({
                            path: e
                        })
                    } else {
                        var o, a, l;
                        this.parabola = null == (o = this.graphie) ? void 0 : o.parabola(t, n, r),
                        null == (a = this.parabola) || a.attr(nt({
                            stroke: this.props.apiOptions.isMobile ? Qn.BLUE_C : Qn.DYNAMIC
                        }, this._lineStroke())),
                        null == (l = this.parabola) || l.toBack()
                    }
                }
                ,
                this.removeQuadraticControls = () => {
                    var e, t, n;
                    null == (e = this.pointA) || e.remove(),
                    null == (t = this.pointB) || t.remove(),
                    null == (n = this.pointC) || n.remove(),
                    this.parabola && (this.parabola.remove(),
                    this.parabola = null)
                }
                ,
                this.addSinusoidControls = () => {
                    if ("sinusoid" !== this.props.graph.type)
                        throw lf("addSinusoidControls", "sinusoid");
                    let e = this.props.graph.coords;
                    e || (e = uf.defaultSinusoidCoords(this.props));
                    const t = () => {
                        const e = ve().extend({}, this.props.graph, {
                            coords: [n.coord(), r.coord()]
                        });
                        this.onChange({
                            graph: e
                        }),
                        this.updateSinusoid()
                    }
                    ;
                    let n = null;
                    n = this.pointA = cs.addMaybeMobileMovablePoint(this, {
                        coord: e[0],
                        constraints: [cs.MovablePoint.constraints.bound(), cs.MovablePoint.constraints.snap(), e => !n || e[0] !== r.coord()[0]],
                        onMove: t
                    });
                    const r = this.pointB = cs.addMaybeMobileMovablePoint(this, {
                        coord: e[1],
                        constraints: [cs.MovablePoint.constraints.bound(), cs.MovablePoint.constraints.snap(), e => !n || e[0] !== n.coord()[0]],
                        onMove: t
                    });
                    this.updateSinusoid()
                }
                ,
                this.updateSinusoid = () => {
                    const e = uf.getCurrentSinusoidCoefficients(this.props);
                    if (!e)
                        return;
                    const t = e[0]
                      , n = e[1]
                      , r = e[2]
                      , i = e[3];
                    if (this.sinusoid) {
                        var s, o;
                        const e = null == (s = this.graphie) ? void 0 : s.svgSinusoidPath(t, n, r, i);
                        null == (o = this.sinusoid) || o.attr({
                            path: e
                        })
                    } else {
                        var a, l, c;
                        this.sinusoid = null == (a = this.graphie) ? void 0 : a.sinusoid(t, n, r, i),
                        null == (l = this.sinusoid) || l.attr(nt({
                            stroke: this.props.apiOptions.isMobile ? Qn.BLUE_C : Qn.DYNAMIC
                        }, this._lineStroke())),
                        null == (c = this.sinusoid) || c.toBack()
                    }
                }
                ,
                this.removeSinusoidControls = () => {
                    var e, t;
                    null == (e = this.pointA) || e.remove(),
                    null == (t = this.pointB) || t.remove(),
                    this.sinusoid && (this.sinusoid.remove(),
                    this.sinusoid = null)
                }
                ,
                this.addCircleControls = () => {
                    const e = this.graphie
                      , t = ve().min(e.snap)
                      , n = this.circle = null == e ? void 0 : e.addCircleGraph({
                        center: this.props.graph.center || [0, 0],
                        radius: this.props.graph.radius || ve().min(this.props.step),
                        snapX: e.snap[0],
                        snapY: e.snap[1],
                        minRadius: t,
                        snapRadius: t
                    });
                    ke()(n).on("move", ( () => {
                        const e = ve().extend({}, this.props.graph, {
                            center: n.center,
                            radius: n.radius
                        });
                        this.onChange({
                            graph: e
                        })
                    }
                    ))
                }
                ,
                this.removeCircleControls = () => {
                    var e;
                    null == (e = this.circle) || e.remove()
                }
                ,
                this.addLinearSystemControls = () => {
                    const e = this.graphie
                      , t = uf.getLinearSystemCoords(this.props.graph, this.props)
                      , n = [Qn.INTERACTIVE, Qn.GREEN]
                      , r = this.points = ve().map(t, ( (e, t) => {
                        const r = [];
                        for (let i = 0; i < e.length; i += 1) {
                            const s = e[i];
                            r.push(cs.addMaybeMobileMovablePoint(this, {
                                coord: s,
                                constraints: [cs.MovablePoint.constraints.bound(), cs.MovablePoint.constraints.snap(), e => {
                                    const t = r[1 - i];
                                    if (t)
                                        return !Re.xm.equal(e, t.coord())
                                }
                                ],
                                onMove: () => {
                                    const e = ve().extend({}, this.props.graph, {
                                        coords: ve().map(this.points, (e => ve().invoke(e, "coord")))
                                    });
                                    this.onChange({
                                        graph: e
                                    })
                                }
                                ,
                                normalStyle: {
                                    fill: n[t]
                                },
                                highlightStyle: {
                                    fill: n[t]
                                }
                            }))
                        }
                        return r
                    }
                    ));
                    this.lines = ve().map(r, ( (t, r) => cs.addMovableLine(e, {
                        points: t,
                        static: !0,
                        extendLine: !0,
                        normalStyle: {
                            stroke: n[r]
                        }
                    })))
                }
                ,
                this.removeLinearSystemControls = () => {
                    ve().invoke(this.lines, "remove"),
                    ve().map(this.points, (e => ve().invoke(e, "remove")))
                }
                ,
                this.isCoordInTrash = e => {
                    if (this.props.apiOptions.isMobile)
                        return !1;
                    const t = this.graphie
                      , n = null == t ? void 0 : t.scalePoint(e);
                    return n[0] >= t.xpixels - 40 && n[1] >= t.ypixels - 40
                }
                ,
                this.createPointForPointsType = (e, t) => {
                    const n = this
                      , r = () => {
                        n.points = ve().filter(n.points, (function(e) {
                            return e !== i
                        }
                        )),
                        n.updateCoordsFromPoints(),
                        setTimeout(i.remove.bind(i), 0)
                    }
                    ;
                    let i = null;
                    return i = cs.addMaybeMobileMovablePoint(this, nt({
                        coord: e,
                        constraints: [cs.MovablePoint.constraints.bound(), cs.MovablePoint.constraints.snap(), function(e) {
                            return ve().all(n.points, (function(t) {
                                return i === t || !Re.xm.equal(e, t.coord())
                            }
                            ))
                        }
                        ],
                        onMoveStart: function() {
                            n.isClickToAddPoints() && n.setTrashCanVisibility(1)
                        },
                        onMove: n.updateCoordsFromPoints,
                        onMoveEnd: function(e) {
                            n.isClickToAddPoints() && (n.isCoordInTrash(e) && r(),
                            n.setTrashCanVisibility(.5))
                        }
                    }, this.props.apiOptions.isMobile && n.isClickToAddPoints() ? {
                        onRemove: r
                    } : {})),
                    i
                }
                ,
                this.removePoint = e => {
                    let t = null;
                    return this.points = ve().filter(this.points, (function(n, r) {
                        return n !== e || (t = r,
                        !1)
                    }
                    )),
                    t
                }
                ,
                this.createPointForPolygonType = (e, t) => {
                    if ("polygon" !== this.props.graph.type)
                        throw lf("createPointForPolygonType", "polygon");
                    const n = !ve().contains(["angles", "sides"], this.props.graph.snapTo)
                      , r = e => (t + e + this.points.length) % this.points.length
                      , i = () => {
                        var e;
                        const t = this.removePoint(o);
                        var n;
                        null != (e = this.polygon) && e.closed() && (this.points = Ur(this.points, t),
                        null == (n = this.polygon) || n.update({
                            closed: !1
                        }));
                        this.updatePolygon(),
                        this.clearCoords(),
                        setTimeout(o.remove.bind(o), 0)
                    }
                      , s = We()(( (e, t) => {
                        e.state.isInitialMove = t
                    }
                    ), 1e3)
                      , o = cs.addMaybeMobileMovablePoint(this, nt({
                        coord: e,
                        constraints: [cs.MovablePoint.constraints.bound(), n ? cs.MovablePoint.constraints.snap() : null, e => {
                            if (null == this.points || 0 === this.points.length)
                                return !0;
                            const n = ve().invoke(this.points, "coord");
                            if (n[t] = e,
                            !this.isClickToAddPoints()) {
                                if (Ir(n[r(-2)], n[r(-1)], n[t]) || Ir(n[r(-1)], n[t], n[r(1)]) || Ir(n[t], n[r(1)], n[r(2)]))
                                    return !1;
                                const e = ve().zip(n, Ur(n));
                                if (this.points.length > 3)
                                    for (let t = -1; t <= 0; t++) {
                                        const n = e[r(t)]
                                          , i = ve().without(e, n, e[r(t - 1)], e[r(t + 1)]);
                                        for (let e = 0; e < i.length; e++) {
                                            if (Nr(n, i[e]))
                                                return !1
                                        }
                                    }
                            }
                            if ("angles" === this.props.graph.snapTo && this.points.length > 2) {
                                var i;
                                const e = ve().map(zr(n), (function(e) {
                                    return 180 * e / Math.PI
                                }
                                ));
                                ve().each([-1, 1], (function(t) {
                                    e[r(t)] = Math.round(e[r(t)])
                                }
                                ));
                                const s = function(e, t, i) {
                                    return (fr.findAngleDeprecated(n[r(e)], n[r(i)], n[r(t)]) + 360) % 360
                                }
                                  , o = [e[r(-1)] - s(-2, -1, 1), e[r(1)] - s(-1, 1, 2)];
                                if (o[2] = 180 - (o[0] + o[1]),
                                ve().any(o, (function(e) {
                                    return rf(e, 1)
                                }
                                )))
                                    return !1;
                                const a = Dr(Pr(n[r(-1)], n[r(1)]))
                                  , l = 1 === _r(Ar(n[r(-1)], n[r(1)], n[t]))
                                  , c = ar(Math.sin(o[1] * Math.PI / 180) / Math.sin(o[2] * Math.PI / 180) * a, fr.findAngleDeprecated(n[r(1)], n[r(-1)]) + (l ? 1 : -1) * o[0]);
                                return null == (i = this.graphie) ? void 0 : i.addPoints(n[r(-1)], c)
                            }
                            if ("sides" === this.props.graph.snapTo && this.points.length > 1) {
                                var s;
                                const e = ve().map([[n[r(-1)], n[t]], [n[t], n[r(1)]], [n[r(-1)], n[r(1)]]], (function(e) {
                                    return Dr(Pr(...e))
                                }
                                ));
                                if (ve().each([0, 1], (function(t) {
                                    e[t] = Math.round(e[t])
                                }
                                )),
                                rf(e[1] + e[2], e[0]) || rf(e[0] + e[2], e[1]) || rf(e[0] + e[1], e[2]))
                                    return !1;
                                const i = qr(e[0], e[2], e[1])
                                  , o = fr.findAngleDeprecated(n[r(1)], n[r(-1)])
                                  , a = 1 === _r(Ar(n[r(-1)], n[r(1)], n[t]))
                                  , l = ar(e[0], o + (a ? 1 : -1) * i);
                                return null == (s = this.graphie) ? void 0 : s.addPoints(n[r(-1)], l)
                            }
                            return !0
                        }
                        ],
                        onMoveStart: () => {
                            this.isClickToAddPoints() && this.setTrashCanVisibility(1)
                        }
                        ,
                        onMove: () => {
                            var e;
                            null != (e = this.polygon) && e.closed() && this.updateCoordsFromPoints()
                        }
                        ,
                        onMoveEnd: e => {
                            const t = this.points.length > 1 && (o === this.points[0] && Re.xm.equal(e, ve().last(this.points).coord()) || o === ve().last(this.points) && Re.xm.equal(e, this.points[0].coord()));
                            if (this.isClickToAddPoints()) {
                                if (this.isCoordInTrash(e))
                                    i();
                                else if (t) {
                                    const e = this.points.pop();
                                    var n, r;
                                    if (this.points.length > 2)
                                        null == (n = this.polygon) || n.update({
                                            closed: !0
                                        }),
                                        this.updateCoordsFromPoints();
                                    else
                                        null == (r = this.polygon) || r.update({
                                            closed: !1
                                        }),
                                        this.clearCoords();
                                    this.updatePolygon(),
                                    setTimeout(e.remove.bind(e), 0)
                                } else {
                                    if (ve().any(this.points, (function(t) {
                                        return t !== o && Re.xm.equal(t.coord(), e)
                                    }
                                    ))) {
                                        var a, l;
                                        if (this.removePoint(o),
                                        this.points.length < 3)
                                            null == (l = this.polygon) || l.update({
                                                closed: !1
                                            }),
                                            this.clearCoords();
                                        else
                                            null != (a = this.polygon) && a.closed() && this.updateCoordsFromPoints();
                                        this.updatePolygon(),
                                        setTimeout(o.remove.bind(o), 0)
                                    } else {
                                        var c;
                                        const e = o === ve().head(this.points) || o === ve().last(this.points)
                                          , t = !o.hasMoved()
                                          , n = !o.state.isInitialMove
                                          , r = !(null != (c = this.polygon) && c.closed())
                                          , i = this.points.length > 2;
                                        var h;
                                        if (e && t && n && r && i)
                                            null == (h = this.polygon) || h.update({
                                                closed: !0
                                            }),
                                            this.updatePolygon(),
                                            this.updateCoordsFromPoints()
                                    }
                                }
                                this.setTrashCanVisibility(.5)
                            }
                            s(o, !1)
                        }
                    }, this.props.apiOptions.isMobile && this.isClickToAddPoints() ? {
                        onRemove: i
                    } : {}));
                    return o.state.isInitialMove = !0,
                    o
                }
                ,
                this.updateCoordsFromPoints = () => {
                    const e = ve().extend({}, this.props.graph, {
                        coords: ve().map(this.points, (function(e) {
                            return ve().result(e, "coord")
                        }
                        ))
                    });
                    this.onChange({
                        graph: e
                    })
                }
                ,
                this.clearCoords = () => {
                    const e = ve().extend({}, this.props.graph, {
                        coords: null
                    });
                    this.onChange({
                        graph: e
                    })
                }
                ,
                this.onChange = e => {
                    this.props.onChange(e),
                    this.props.trackInteraction()
                }
                ,
                this.addPointControls = () => {
                    if ("point" !== this.props.graph.type)
                        throw lf("addPointControls", "point");
                    const e = uf.getPointCoords(this.props.graph, this.props);
                    this.points = [],
                    this.points = ve().map(e, this.createPointForPointsType, this)
                }
                ,
                this.removePointControls = () => {
                    ve().invoke(this.points, "remove")
                }
                ,
                this.addSegmentControls = () => {
                    if ("segment" !== this.props.graph.type)
                        throw lf("addSegmentControls", "segment");
                    const e = this
                      , t = this.graphie
                      , n = uf.getSegmentCoords(this.props.graph, this.props)
                      , r = e => cs.addMaybeMobileMovablePoint(this, e);
                    this.points = [],
                    this.lines = ve().map(n, (function(n, i) {
                        const s = function() {
                            const t = ve().extend({}, e.props.graph, {
                                coords: ve().invoke(e.lines, "coords")
                            });
                            e.onChange({
                                graph: t
                            })
                        }
                          , o = [];
                        for (let e = 0; e < n.length; e += 1) {
                            const t = n[e];
                            o.push(r({
                                coord: t,
                                constraints: [cs.MovablePoint.constraints.bound(), cs.MovablePoint.constraints.snap(), t => {
                                    const n = o[1 - e];
                                    return !!n && !Re.xm.equal(t, n.coord())
                                }
                                ],
                                onMove: s
                            }))
                        }
                        e.points = e.points.concat(o);
                        const a = cs.addMovableLine(t, {
                            points: o,
                            static: !1,
                            constraints: [cs.MovableLine.constraints.bound(), cs.MovableLine.constraints.snap()],
                            onMove: [cs.MovableLine.onMove.updatePoints, s],
                            normalStyle: nt({
                                stroke: this.props.apiOptions.isMobile ? Qn.BLUE_C : Qn.INTERACTIVE
                            }, this._lineStroke()),
                            highlightStyle: nt({
                                stroke: this.props.apiOptions.isMobile ? Qn.BLUE_C : Qn.INTERACTING
                            }, this._lineStroke())
                        });
                        return ve().invoke(o, "toFront"),
                        a
                    }
                    ), this)
                }
                ,
                this.removeSegmentControls = () => {
                    ve().invoke(this.points, "remove"),
                    ve().invoke(this.lines, "remove")
                }
                ,
                this.addRayControls = () => {
                    this.addLine("ray")
                }
                ,
                this.removeRayControls = () => {
                    this.removeLine()
                }
                ,
                this.addPolygonControls = () => {
                    this.polygon = null;
                    const e = uf.getPolygonCoords(this.props.graph, this.props);
                    this.points = [],
                    this.points = ve().map(e, this.createPointForPolygonType, this),
                    this.updatePolygon()
                }
                ,
                this.updatePolygon = () => {
                    if ("polygon" !== this.props.graph.type)
                        throw lf("updatePolygon", "polygon");
                    let e;
                    e = this.polygon ? this.polygon.closed() : this.points.length >= 3;
                    const t = this.graphie
                      , n = this.points.length
                      , r = !ve().contains(["angles", "sides"], this.props.graph.snapTo)
                      , i = ve().times(n, (function(t) {
                        return this.props.graph.showAngles && (e || 0 !== t && t !== n - 1) ? "angles" === this.props.graph.snapTo ? "$deg0" : "$deg1" : ""
                    }
                    ), this)
                      , s = ve().times(n, (function(t) {
                        return e || 0 !== t && t !== n - 1
                    }
                    ), this)
                      , o = ve().times(n, (function(t) {
                        return this.props.graph.showAngles && (e || 0 !== t && t !== n - 1) ? 1 : 0
                    }
                    ), this)
                      , a = ve().times(n, (function(t) {
                        return !this.props.graph.showSides || !e && t === n - 1 ? "" : "sides" === this.props.graph.snapTo ? "$len0" : "$len1"
                    }
                    ), this);
                    if (null == this.polygon) {
                        const n = this;
                        n.polygon = cs.addMovablePolygon(t, {
                            constraints: [cs.MovablePolygon.constraints.bound(), r ? cs.MovablePolygon.constraints.snap() : null],
                            closed: e,
                            points: n.points,
                            angleLabels: i,
                            showRightAngleMarkers: s,
                            numArcs: o,
                            sideLabels: a,
                            onMove: [cs.MovablePolygon.onMove.updatePoints, function() {
                                this.closed() && n.updateCoordsFromPoints()
                            }
                            ],
                            normalStyle: nt({
                                stroke: this.props.apiOptions.isMobile ? Qn.BLUE_C : Qn.INTERACTIVE
                            }, this._lineStroke())
                        })
                    } else
                        this.polygon.update({
                            closed: e,
                            points: this.points,
                            angleLabels: i,
                            showRightAngleMarkers: s,
                            numArcs: o,
                            sideLabels: a
                        })
                }
                ,
                this.removePolygonControls = () => {
                    var e;
                    ve().invoke(this.points, "remove"),
                    null == (e = this.polygon) || e.remove()
                }
                ,
                this.addAngleControls = () => {
                    if ("angle" !== this.props.graph.type)
                        throw lf("addAngleControls", "angle");
                    const e = this.props.graph
                      , t = this.graphie
                      , n = uf.getAngleCoords(this.props.graph, this.props);
                    var r, i;
                    this.points = n.map((function(e, n) {
                        return null == t ? void 0 : t.addMovablePoint(ve().extend({
                            coord: e,
                            normalStyle: {
                                stroke: Qn.INTERACTIVE,
                                fill: Qn.INTERACTIVE
                            }
                        }, 1 === n ? {
                            snapX: t.snap[0],
                            snapY: t.snap[1]
                        } : {}))
                    }
                    )),
                    this.angle = null == t ? void 0 : t.addMovableAngle({
                        points: this.points,
                        snapDegrees: e.snapDegrees || 1,
                        snapOffsetDeg: e.angleOffsetDeg || 0,
                        angleLabel: e.showAngles ? "$deg0" : "",
                        pushOut: 2,
                        allowReflex: (r = e.allowReflexAngles,
                        i = !0,
                        null == r ? i : r)
                    }),
                    ke()(this.angle).on("move", ( () => {
                        var t;
                        this.onChange({
                            graph: nt({}, e, {
                                coords: null == (t = this.angle) ? void 0 : t.getClockwiseCoords()
                            })
                        })
                    }
                    ))
                }
                ,
                this.removeAngleControls = () => {
                    var e;
                    ve().invoke(this.points, "remove"),
                    null == (e = this.angle) || e.remove()
                }
                ,
                this.toggleShowSides = () => {
                    if ("polygon" !== this.props.graph.type)
                        throw lf("toggleShowSides", "polygon");
                    const e = ve().extend({}, this.props.graph, {
                        showSides: !this.props.graph.showSides
                    });
                    this.onChange({
                        graph: e
                    })
                }
                ,
                this.focus = ke().noop
            }
            componentDidMount() {
                this.refs.graph && this.setGraphie(this.refs.graph.graphie())
            }
            UNSAFE_componentWillReceiveProps(e) {
                var t, n;
                this.isClickToAddPoints() !== this.isClickToAddPoints(e) && (this.shouldResetGraphie = !0,
                this.setState({
                    shouldShowInstructions: of(e)
                })),
                (null == (t = this.props.backgroundImage) ? void 0 : t.url) === (null == (n = e.backgroundImage) ? void 0 : n.url) && this.props.backgroundImage === e.backgroundImage && this.props.containerSizeClass === e.containerSizeClass || (this.shouldResetGraphie = !0)
            }
            componentDidUpdate(e, t) {
                const n = e.graph.type
                  , r = this.props.graph.type;
                (n !== r || "angle" === e.graph.type && "angle" === this.props.graph.type && this.areAngleGraphsEqual(e.graph, this.props.graph) || "point" === e.graph.type && "point" === this.props.graph.type && this.arePointGraphsEqual(e.graph, this.props.graph) || "polygon" === e.graph.type && "polygon" === this.props.graph.type && this.arePolygonGraphsEqual(e.graph, this.props.graph) || "segment" === e.graph.type && "segment" === this.props.graph.type && this.areSegmentGraphsEqual(e.graph, this.props.graph)) && (this["remove" + sf(n) + "Controls"](),
                this["add" + sf(r) + "Controls"]()),
                this.shouldResetGraphie && this.resetGraphie()
            }
            areAngleGraphsEqual(e, t) {
                return e.allowReflexAngles !== t.allowReflexAngles || e.angleOffsetDeg !== t.angleOffsetDeg || e.snapDegrees !== t.snapDegrees
            }
            arePointGraphsEqual(e, t) {
                return e.numPoints !== t.numPoints
            }
            arePolygonGraphsEqual(e, t) {
                return e.numSides !== t.numSides || e.showAngles !== t.showAngles || e.showSides !== t.showSides || e.snapTo !== t.snapTo
            }
            areSegmentGraphsEqual(e, t) {
                return e.numSegments !== t.numSegments
            }
            getUserInput() {
                return uf.getUserInputFromProps(this.props)
            }
            render() {
                const e = $o(this.props.containerSizeClass)
                  , t = this.props.gridStep || vn.getGridStep(this.props.range, this.props.step, e[0])
                  , n = this.props.snapStep || vn.snapStepFromGridStep(t);
                let r, i;
                this.isClickToAddPoints() && this.state.shouldShowInstructions ? "point" === this.props.graph.type ? r = this.context.strings.addPoints : "polygon" === this.props.graph.type && (r = this.context.strings.addVertices) : r = void 0,
                this.isClickToAddPoints() && (i = this.handleAddPointsMouseDown);
                const s = this.props.apiOptions.isMobile;
                return me.createElement("div", {
                    className: "perseus-widget perseus-widget-interactive-graph",
                    style: {
                        width: e[0],
                        height: e[1]
                    }
                }, me.createElement(lp, {
                    instructions: r,
                    ref: "graph",
                    box: e,
                    labels: this.props.labels,
                    range: this.props.range,
                    step: s ? vn.constrainedTickStepsFromTickSteps(this.props.step, this.props.range) : this.props.step,
                    gridStep: t,
                    snapStep: n,
                    markings: this.props.markings,
                    backgroundImage: this.props.backgroundImage,
                    showProtractor: this.props.showProtractor,
                    onMouseDown: i,
                    onGraphieUpdated: this.setGraphie,
                    setDrawingAreaAvailable: this.props.apiOptions.setDrawingAreaAvailable,
                    isMobile: s
                }))
            }
        }
        pf.contextType = it,
        pf.defaultProps = {
            labels: ["x", "y"],
            range: [[-10, 10], [-10, 10]],
            step: [1, 1],
            backgroundImage: ef,
            markings: "graph",
            showTooltips: !1,
            showProtractor: !1,
            graph: {
                type: "linear"
            }
        };
        class uf extends me.Component {
            constructor(...e) {
                super(...e),
                this.legacyGraphRef = me.createRef(),
                this.mafsRef = me.createRef()
            }
            getUserInput() {
                var e, t;
                if (null != (e = this.mafsRef.current) && e.getUserInput)
                    return this.mafsRef.current.getUserInput();
                if (null != (t = this.legacyGraphRef.current) && t.getUserInput)
                    return this.legacyGraphRef.current.getUserInput();
                throw new s.uI("Cannot getUserInput from a graph that has never rendered",s.D1.NotAllowed)
            }
            getPromptJSON() {
                return e = this.props,
                t = this.getUserInput(),
                {
                    type: "interactive-graph",
                    options: {
                        graph: cp(e),
                        backgroundImageUrl: null == (n = e.backgroundImage) ? void 0 : n.url,
                        range: e.range,
                        labels: e.labels
                    },
                    userInput: hp(t)
                };
                var e, t, n
            }
            render() {
                var e;
                if (function(e, t) {
                    if ("boolean" == typeof e || void 0 === e)
                        return !1;
                    switch (t.type) {
                    case "none":
                        return !0;
                    case "point":
                        return t.numPoints === nf ? Boolean(e["unlimited-point"]) : Boolean(e.point);
                    case "polygon":
                        return t.numSides === nf ? Boolean(e["unlimited-polygon"]) : Boolean(e.polygon);
                    default:
                        return Boolean(e[t.type])
                    }
                }(null == (e = this.props.apiOptions) || null == (e = e.flags) ? void 0 : e.mafs, this.props.graph)) {
                    var t, n;
                    const e = $o(this.props.containerSizeClass)
                      , r = this.props.gridStep || vn.getGridStep(this.props.range, this.props.step, e[0])
                      , i = this.props.snapStep || vn.snapStepFromGridStep(r);
                    return me.createElement(Xm, nt({}, this.props, {
                        flags: null == (t = this.props.apiOptions) ? void 0 : t.flags,
                        ref: this.mafsRef,
                        gridStep: r,
                        snapStep: i,
                        box: e,
                        showTooltips: !!this.props.showTooltips,
                        readOnly: null == (n = this.props.apiOptions) ? void 0 : n.readOnly
                    }))
                }
                return me.createElement(pf, nt({
                    ref: this.legacyGraphRef
                }, this.props))
            }
            static getLineCoords(e, t) {
                return e.coords || uf.pointsFromNormalized(t, [[.25, .75], [.75, .75]])
            }
            static getPointCoords(e, t) {
                const n = e.numPoints || 1;
                let r = e.coords;
                if (r)
                    return r;
                switch (n) {
                case 1:
                    r = [e.coord || [0, 0]];
                    break;
                case 2:
                    r = [[-5, 0], [5, 0]];
                    break;
                case 3:
                    r = [[-5, 0], [0, 0], [5, 0]];
                    break;
                case 4:
                    r = [[-6, 0], [-2, 0], [2, 0], [6, 0]];
                    break;
                case 5:
                    r = [[-6, 0], [-3, 0], [0, 0], [3, 0], [6, 0]];
                    break;
                case 6:
                    r = [[-5, 0], [-3, 0], [-1, 0], [1, 0], [3, 0], [5, 0]];
                    break;
                case nf:
                    r = []
                }
                const i = uf.normalizeCoords(r, [[-10, 10], [-10, 10]]);
                return uf.pointsFromNormalized(t, i)
            }
            static getLinearSystemCoords(e, t) {
                return e.coords || ve().map([[[.25, .75], [.75, .75]], [[.25, .25], [.75, .25]]], (e => uf.pointsFromNormalized(t, e)))
            }
            static getPolygonCoords(e, t) {
                if ("polygon" !== e.type)
                    throw lf("toggleShowSides", "polygon");
                let n = e.coords;
                if (n)
                    return n;
                const r = e.numSides || 3;
                if (r === nf)
                    n = [];
                else {
                    const t = 2 * Math.PI / r
                      , i = (1 / r - .5) * Math.PI
                      , s = "sides" === e.snapTo ? Math.sqrt(3) / 3 * 7 : 4;
                    n = ve().times(r, (function(e) {
                        return [s * Math.cos(e * t + i), s * Math.sin(e * t + i)]
                    }
                    ))
                }
                n = uf.normalizeCoords(n, [[-10, 10], [-10, 10]]);
                const i = !ve().contains(["angles", "sides"], e.snapTo);
                return n = uf.pointsFromNormalized(t, n, !i),
                n
            }
            static getSegmentCoords(e, t) {
                const n = e.coords;
                if (n)
                    return n;
                const r = e.numSegments || 1
                  , i = [[-10, 10], [-10, 10]];
                return {
                    1: [5],
                    2: [5, -5],
                    3: [5, 0, -5],
                    4: [6, 2, -2, -6],
                    5: [6, 3, 0, -3, -6],
                    6: [5, 3, 1, -1, -3, -5]
                }[r].map((function(e) {
                    let n = [[-5, e], [5, e]];
                    return n = uf.normalizeCoords(n, i),
                    n = uf.pointsFromNormalized(t, n),
                    n
                }
                ))
            }
            static getAngleCoords(e, t) {
                let n = e.coords;
                if (n)
                    return n;
                const r = e.snapDegrees || 1;
                let i = r;
                for (; i < 20; )
                    i += r;
                i = i * Math.PI / 180;
                const s = (e.angleOffsetDeg || 0) * Math.PI / 180;
                n = uf.pointsFromNormalized(t, [[.85, .5], [.5, .5]]);
                const o = Dr(Pr(...n));
                return n[0] = [n[1][0] + o * Math.cos(s), n[1][1] + o * Math.sin(s)],
                n[2] = [n[1][0] + o * Math.cos(i + s), n[1][1] + o * Math.sin(i + s)],
                n
            }
            static normalizeCoords(e, t) {
                return ve().map(e, (function(e) {
                    return ve().map(e, (function(e, n) {
                        const r = t[n][1] - t[n][0];
                        return (e + t[n][1]) / r
                    }
                    ))
                }
                ))
            }
            static getEquationString(e) {
                const t = "get" + sf(e.graph.type) + "EquationString";
                return uf[t](e)
            }
            static pointsFromNormalized(e, t, n) {
                return ve().map(t, (function(t) {
                    return ve().map(t, (function(t, r) {
                        const i = e.range[r];
                        if (n)
                            return i[0] + (i[1] - i[0]) * t;
                        const s = e.step[r]
                          , o = function(e, t) {
                            return Math.floor((e[1] - e[0]) / t)
                        }(i, s)
                          , a = Math.round(t * o);
                        return i[0] + s * a
                    }
                    ))
                }
                ))
            }
            static getNoneEquationString() {
                return ""
            }
            static getLinearEquationString(e) {
                const t = uf.getLineCoords(e.graph, e);
                if (tf(t[0][0], t[1][0]))
                    return "x = " + t[0][0].toFixed(3);
                const n = (t[1][1] - t[0][1]) / (t[1][0] - t[0][0])
                  , r = t[0][1] - n * t[0][0];
                return tf(n, 0) ? "y = " + r.toFixed(3) : "y = " + n.toFixed(3) + "x + " + r.toFixed(3)
            }
            static getCurrentQuadraticCoefficients(e) {
                return hf(e.graph.coords || uf.defaultQuadraticCoords(e))
            }
            static defaultQuadraticCoords(e) {
                return uf.pointsFromNormalized(e, [[.25, .75], [.5, .25], [.75, .75]])
            }
            static getQuadraticEquationString(e) {
                const t = uf.getCurrentQuadraticCoefficients(e);
                return "y = " + t[0].toFixed(3) + "x^2 + " + t[1].toFixed(3) + "x + " + t[2].toFixed(3)
            }
            static getCurrentSinusoidCoefficients(e) {
                return cf(e.graph.coords || uf.defaultSinusoidCoords(e))
            }
            static defaultSinusoidCoords(e) {
                return uf.pointsFromNormalized(e, [[.5, .5], [.65, .6]])
            }
            static getSinusoidEquationString(e) {
                const t = uf.getCurrentSinusoidCoefficients(e);
                return "y = " + t[0].toFixed(3) + "sin(" + t[1].toFixed(3) + "x - " + t[2].toFixed(3) + ") + " + t[3].toFixed(3)
            }
            static getCircleEquationString(e) {
                const t = e.graph
                  , n = t.center || [0, 0]
                  , r = t.radius || 2;
                return "center (" + n[0] + ", " + n[1] + "), radius " + r
            }
            static getLinearSystemEquationString(e) {
                const t = uf.getLinearSystemCoords(e.graph, e);
                return "\n" + Gr(t[0][0], t[0][1]) + "\n" + Gr(t[1][0], t[1][1]) + "\n" + function(e, t) {
                    const n = e[0][0]
                      , r = e[0][1]
                      , i = e[1][0]
                      , s = e[1][1]
                      , o = t[0][0]
                      , a = t[0][1]
                      , l = t[1][0]
                      , c = t[1][1]
                      , h = (n - i) * (a - c) - (r - s) * (o - l);
                    if (Math.abs(h) < 1e-9)
                        return "Lines are parallel";
                    const p = ((n * s - r * i) * (a - c) - (r - s) * (o * c - a * l)) / h;
                    return "Intersection: (" + (((n * s - r * i) * (o - l) - (n - i) * (o * c - a * l)) / h).toFixed(3) + ", " + p.toFixed(3) + ")"
                }(t[0], t[1])
            }
            static getPointEquationString(e) {
                if ("point" !== e.graph.type)
                    throw lf("getPointEquationString", "point");
                return uf.getPointCoords(e.graph, e).map((function(e) {
                    return "(" + e[0] + ", " + e[1] + ")"
                }
                )).join(", ")
            }
            static getSegmentEquationString(e) {
                if ("segment" !== e.graph.type)
                    throw lf("getSegmentEquationString", "segment");
                const t = uf.getSegmentCoords(e.graph, e);
                return ve().map(t, (function(e) {
                    return "[" + ve().map(e, (function(e) {
                        return "(" + e.join(", ") + ")"
                    }
                    )).join(" ") + "]"
                }
                )).join(" ")
            }
            static getRayEquationString(e) {
                if ("ray" !== e.graph.type)
                    throw lf("createPointForPolygonType", "ray");
                const t = uf.getLineCoords(e.graph, e)
                  , n = t[0]
                  , r = t[1];
                let i = uf.getLinearEquationString(e);
                return n[0] > r[0] ? i += " (for x <= " + n[0].toFixed(3) + ")" : n[0] < r[0] ? i += " (for x >= " + n[0].toFixed(3) + ")" : n[1] > r[1] ? i += " (for y <= " + n[1].toFixed(3) + ")" : i += " (for y >= " + n[1].toFixed(3) + ")",
                i
            }
            static getPolygonEquationString(e) {
                if ("polygon" !== e.graph.type)
                    throw lf("getPolygonEquationString", "polygon");
                const t = uf.getPolygonCoords(e.graph, e);
                return ve().map(t, (function(e) {
                    return "(" + e.join(", ") + ")"
                }
                )).join(" ")
            }
            static getAngleEquationString(e) {
                if ("angle" !== e.graph.type)
                    throw lf("getAngleEquationString", "angle");
                const t = uf.getAngleCoords(e.graph, e)
                  , n = e.graph.allowReflexAngles;
                return Ap(t, n).toFixed(0) + "° angle at (" + t[1].join(", ") + ")"
            }
            static getUserInputFromProps(e) {
                return e.graph
            }
        }
        uf.defaultProps = {
            labels: ["x", "y"],
            range: [[-10, 10], [-10, 10]],
            step: [1, 1],
            backgroundImage: ef,
            markings: "graph",
            showTooltips: !1,
            showProtractor: !1,
            graph: {
                type: "linear"
            }
        };
        const df = ve().identity;
        var mf = {
            name: "interactive-graph",
            displayName: "Interactive graph (Assessments only)",
            widget: uf,
            staticTransform: df,
            scorer: function(e, t) {
                if ("none" === e.type && "none" === t.correct.type)
                    return {
                        type: "points",
                        earned: 0,
                        total: 0,
                        message: null
                    };
                const n = Boolean(e.coords || e.center && e.radius);
                if (e.type === t.correct.type && n)
                    if ("linear" === e.type && "linear" === t.correct.type && null != e.coords) {
                        const n = e.coords
                          , r = t.correct.coords;
                        if (Ir(r[0], r[1], n[0]) && Ir(r[0], r[1], n[1]))
                            return {
                                type: "points",
                                earned: 1,
                                total: 1,
                                message: null
                            }
                    } else if ("linear-system" === e.type && "linear-system" === t.correct.type && null != e.coords) {
                        const n = e.coords
                          , r = t.correct.coords;
                        if (Ir(r[0][0], r[0][1], n[0][0]) && Ir(r[0][0], r[0][1], n[0][1]) && Ir(r[1][0], r[1][1], n[1][0]) && Ir(r[1][0], r[1][1], n[1][1]) || Ir(r[0][0], r[0][1], n[1][0]) && Ir(r[0][0], r[0][1], n[1][1]) && Ir(r[1][0], r[1][1], n[0][0]) && Ir(r[1][0], r[1][1], n[0][1]))
                            return {
                                type: "points",
                                earned: 1,
                                total: 1,
                                message: null
                            }
                    } else if ("quadratic" === e.type && "quadratic" === t.correct.type && null != e.coords) {
                        const n = hf(e.coords)
                          , r = hf(t.correct.coords);
                        if (Qm(n, r))
                            return {
                                type: "points",
                                earned: 1,
                                total: 1,
                                message: null
                            }
                    } else if ("sinusoid" === e.type && "sinusoid" === t.correct.type && null != e.coords) {
                        const n = cf(e.coords)
                          , r = cf(t.correct.coords)
                          , i = Hr(n)
                          , s = Hr(r);
                        if (Qm(i, s))
                            return {
                                type: "points",
                                earned: 1,
                                total: 1,
                                message: null
                            }
                    } else if ("circle" === e.type && "circle" === t.correct.type) {
                        if (Qm(e.center, t.correct.center) && Jm(e.radius, t.correct.radius))
                            return {
                                type: "points",
                                earned: 1,
                                total: 1,
                                message: null
                            }
                    } else if ("point" === e.type && "point" === t.correct.type && null != e.coords) {
                        let n = t.correct.coords;
                        if (null == n)
                            throw new Error("Point graph rubric has null coords");
                        const r = e.coords.slice();
                        if (n = n.slice(),
                        null == r || r.sort(),
                        n.sort(),
                        Qm(r, n))
                            return {
                                type: "points",
                                earned: 1,
                                total: 1,
                                message: null
                            }
                    } else if ("polygon" === e.type && "polygon" === t.correct.type && null != e.coords) {
                        const n = e.coords.slice()
                          , r = t.correct.coords.slice();
                        let i;
                        if ("similar" === t.correct.match ? i = Br(n, r, Number.POSITIVE_INFINITY) : "congruent" === t.correct.match ? i = Br(n, r, Re.Rx.DEFAULT_TOLERANCE) : "approx" === t.correct.match ? i = Br(n, r, .1) : (n.sort(),
                        r.sort(),
                        i = Qm(n, r)),
                        i)
                            return {
                                type: "points",
                                earned: 1,
                                total: 1,
                                message: null
                            }
                    } else if ("segment" === e.type && "segment" === t.correct.type && null != e.coords) {
                        let n = vn.deepClone(e.coords)
                          , r = vn.deepClone(t.correct.coords);
                        if (n = ve().invoke(n, "sort").sort(),
                        r = ve().invoke(r, "sort").sort(),
                        Qm(n, r))
                            return {
                                type: "points",
                                earned: 1,
                                total: 1,
                                message: null
                            }
                    } else if ("ray" === e.type && "ray" === t.correct.type && null != e.coords) {
                        const n = e.coords
                          , r = t.correct.coords;
                        if (Qm(n[0], r[0]) && Ir(r[0], r[1], n[1]))
                            return {
                                type: "points",
                                earned: 1,
                                total: 1,
                                message: null
                            }
                    } else if ("angle" === e.type && "angle" === t.correct.type) {
                        const n = e.coords
                          , r = t.correct.coords
                          , i = t.correct.allowReflexAngles;
                        let s;
                        if ("congruent" === t.correct.match) {
                            const e = ve().map([n, r], (function(e) {
                                if (!e)
                                    return !1;
                                return Ap(e, i)
                            }
                            ));
                            s = Jm(...e)
                        } else
                            s = Qm(n[1], r[1]) && Ir(r[1], r[0], n[0]) && Ir(r[1], r[2], n[2]);
                        if (s)
                            return {
                                type: "points",
                                earned: 1,
                                total: 1,
                                message: null
                            }
                    }
                return !n || ve().isEqual(e, t.graph) ? {
                    type: "invalid",
                    message: null
                } : {
                    type: "points",
                    earned: 0,
                    total: 1,
                    message: null
                }
            }
        };
        const ff = {
            fontFamily: "inherit",
            fontSize: 15,
            fontWeight: "bold",
            lineHeight: "22px"
        }
          , gf = e => {
            const {strings: t} = ot()
              , n = t => {
                const {choices: n, onChange: r} = e;
                r(n.map((e => t.includes(e.content))))
            }
              , r = e.choices.filter((e => e.checked)).map((e => e.content))
              , {opener: i, onToggle: s, disabled: o} = e
              , a = {
                style: {
                    zIndex: "unset"
                },
                children: (l = e.choices,
                l.map(( ({content: e}) => me.createElement(qe.BA, {
                    key: e,
                    value: e,
                    label: me.createElement(ea, {
                        content: e,
                        strings: t,
                        inline: !0
                    })
                })))),
                opener: i,
                onToggle: s,
                disabled: o
            };
            var l;
            return e.multipleSelect ? me.createElement(qe.NU, nt({}, a, {
                selectedValues: r,
                onChange: e => n(e)
            })) : me.createElement(qe.q4, nt({}, a, {
                selectedValue: r[0],
                onChange: e => n([e]),
                placeholder: e.choices[0].content
            }))
        }
          , vf = e => {
            const t = (0,
            le._u)()
              , n = t.get("hide-answers-toggle")
              , r = t.get("hide-answers-label")
              , {strings: i} = ot();
            return me.createElement(le.G7, {
                style: yf.switchWrapper
            }, me.createElement(Ze.Z, {
                id: n,
                checked: e.areAnswersHidden,
                onChange: e.onChange,
                "aria-labelledby": r
            }), me.createElement(he.Uc, {
                id: r,
                htmlFor: n,
                tag: "label"
            }, i.hideAnswersToggleLabel))
        }
          , yf = pe.StyleSheet.create({
            switchWrapper: {
                display: "flex",
                flexDirection: "row",
                flexWrap: "wrap-reverse",
                alignItems: "center",
                gap: "0.5em",
                marginTop: "1em"
            }
        })
          , bf = {
            boxShadow: `0 8px 8px ${xe.color.offBlack64}`,
            zIndex: 1e3
        }
          , xf = e => {
            const {selectedAnswers: t, showCorrectness: n, markerRef: r, side: i, onClick: s, style: o, focused: a, hovered: l} = e
              , c = (0,
            le._u)()
              , {strings: h} = ot()
              , p = t.length > 1 ? h.answers({
                num: t.length
            }) : t[0]
              , u = "correct" === n
              , d = "incorrect" === n;
            return me.createElement(Xe.r, {
                placement: i,
                referenceElement: r,
                modifiers: [{
                    name: "preventOverflow",
                    options: {
                        rootBoundary: "viewport"
                    }
                }]
            }, ( ({ref: e, style: t}) => me.createElement(Ye.Z, {
                size: "large",
                kind: "accent",
                id: c.get("perseus-label-image-widget-answer-pill"),
                onClick: u ? void 0 : s,
                ref: e,
                style: [o, t, wf.pill, u && wf.correct, d && wf.incorrect, (a || l) && bf]
            }, me.createElement(ea, {
                content: p,
                strings: h,
                inline: !0
            }))))
        }
          , wf = pe.StyleSheet.create({
            correct: {
                backgroundColor: "#00880b"
            },
            incorrect: {
                backgroundColor: xe.color.offBlack64
            },
            pill: {
                height: "auto"
            }
        });
        function kf() {
            if ("function" != typeof window.matchMedia)
                return !0;
            const e = window.matchMedia("(prefers-reduced-motion: reduce)");
            return !e || e.matches
        }
        const Sf = 24;
        class Ef extends me.Component {
            constructor(...e) {
                super(...e),
                this._icon = void 0,
                this._mounted = !1
            }
            componentDidMount() {
                this._mounted = !0
            }
            componentWillUnmount() {
                this._mounted = !1
            }
            renderIcon() {
                const {selected: e, showCorrectness: t, showSelected: n, showPulsate: r} = this.props
                  , i = n
                  , s = e;
                let o;
                let a = {
                    size: Sf,
                    color: xe.color.white,
                    icon: {
                        path: "",
                        height: 1,
                        width: 1
                    }
                };
                return t ? (o = [Mf.markerGraded, "correct" === t ? Mf.markerCorrect : Mf.markerIncorrect, i && Mf.markerSelected],
                a = nt({}, a, {
                    icon: "correct" === t ? Ci : Li
                })) : s && s.length > 0 ? o = [Mf.markerFilled, i && Mf.markerSelected] : i ? (o = [Mf.markerSelected],
                a = nt({}, a, {
                    icon: Ti,
                    size: 8
                })) : r && (o = [Mf.markerPulsateBase, this._mounted && kf() ? r && Mf.markerUnfilledPulsateOnce : r && Mf.markerUnfilledPulsateInfinite]),
                me.createElement(le.G7, {
                    style: [Mf.markerIcon, o],
                    ref: e => this._icon = e
                }, me.createElement(Gl, a))
            }
            render() {
                var e;
                const {showCorrectness: t, selected: n, showAnswer: r, answerSide: i, answerStyles: s, hovered: o, focused: a, label: l} = this.props
                  , c = "correct" === t
                  , h = o || a;
                return me.createElement(me.Fragment, null, me.createElement(le.G7, {
                    style: [Mf.marker, h && !c && Mf.markerActive],
                    "aria-label": c ? this.context.strings.correctExcited : l
                }, this.renderIcon()), !!n && r && me.createElement(xf, {
                    selectedAnswers: n,
                    showCorrectness: t,
                    side: i,
                    style: s,
                    markerRef: null != (e = this._icon) ? e : void 0,
                    hovered: o,
                    focused: a
                }))
            }
        }
        Ef.contextType = it,
        Ef.defaultProps = {
            selected: []
        };
        const Mf = pe.StyleSheet.create({
            marker: {
                position: "absolute",
                backgroundColor: xe.color.white,
                borderRadius: Sf,
                width: Sf,
                height: Sf,
                marginLeft: -12,
                marginTop: -12,
                boxShadow: `0 8px 8px ${xe.color.offBlack8}`
            },
            markerIcon: {
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                boxSizing: "border-box",
                width: Sf,
                height: Sf,
                border: `2px solid ${xe.color.offBlack64}`,
                borderRadius: Sf
            },
            markerPulsateBase: {
                animationName: {
                    "0%": {
                        transform: "scale(1)",
                        backgroundColor: xe.color.blue
                    },
                    "100%": {
                        transform: "scale(1.3)",
                        backgroundColor: xe.color.blue
                    }
                },
                animationDirection: "alternate",
                animationDuration: "0.8s",
                animationTimingFunction: "ease-in",
                transformOrigin: "50% 50%",
                animationIterationCount: "0"
            },
            markerUnfilledPulsateInfinite: {
                animationIterationCount: "infinite"
            },
            markerUnfilledPulsateOnce: {
                animationIterationCount: "2"
            },
            markerActive: {
                outline: `2px solid ${xe.color.blue}`,
                outlineOffset: 2
            },
            markerSelected: {
                boxShadow: `0 8px 8px ${xe.color.offBlack8}`,
                border: `solid 4px ${xe.color.white}`,
                backgroundColor: xe.color.blue,
                borderRadius: Sf,
                transform: "rotate(180deg)"
            },
            markerFilled: {
                backgroundColor: "#ECF3FE",
                border: `4px solid ${xe.color.blue}`
            },
            markerGraded: {
                width: Sf,
                height: Sf,
                justifyContent: "center",
                alignItems: "center",
                border: `2px solid ${xe.color.white}`
            },
            markerCorrect: {
                background: "#00880b"
            },
            markerIncorrect: {
                background: xe.color.offBlack64
            }
        });
        function Cf(e) {
            const t = {
                hasAnswers: !1,
                isCorrect: !1
            };
            return e.selected && e.selected.length > 0 && (t.hasAnswers = !0),
            e.answers.length > 0 ? e.selected && e.selected.length === e.answers.length && (t.isCorrect = e.selected.every((t => e.answers.includes(t)))) : e.selected && 0 !== e.selected.length || (t.isCorrect = !0),
            t
        }
        class Tf extends me.Component {
            static pointInTriangle(e, t, n, r) {
                const i = (e, t, n) => (e.x - n.x) * (t.y - n.y) - (t.x - n.x) * (e.y - n.y)
                  , s = i(e, t, n) < 0
                  , o = i(e, n, r) < 0
                  , a = i(e, r, t) < 0;
                return s === o && o === a
            }
            static imageSideForMarkerPosition(e, t, n) {
                if (n && "NONE" !== n) {
                    if ("LEFT" === n && e > 20)
                        return "right";
                    if ("RIGHT" === n && e < 80)
                        return "left";
                    if ("UP" === n && t > 20)
                        return "bottom";
                    if ("DOWN" === n && t < 80)
                        return "top"
                }
                if (e < 20)
                    return "left";
                if (e > 80)
                    return "right";
                const r = {
                    x: 20,
                    y: 0
                }
                  , i = {
                    x: 80,
                    y: 0
                }
                  , s = {
                    x: 80,
                    y: 100
                }
                  , o = {
                    x: 20,
                    y: 100
                }
                  , a = {
                    x: 50,
                    y: 50
                }
                  , l = {
                    top: [r, i, a],
                    right: [a, i, s],
                    bottom: [o, a, s],
                    left: [r, a, o]
                }
                  , c = {
                    x: e,
                    y: t
                };
                for (const e of Object.keys(l)) {
                    const t = l[e];
                    if (Tf.pointInTriangle(c, ...t))
                        return e
                }
                return "center"
            }
            static navigateToMarkerIndex(e, t, n) {
                const r = t[n]
                  , i = t.map(( (e, t) => {
                    const n = e.x - r.x
                      , i = e.y - r.y
                      , s = Math.sqrt(n ** 2 + i ** 2);
                    return {
                        index: t,
                        dist: s,
                        dir: {
                            x: 0 !== s ? n / s : 0,
                            y: 0 !== s ? i / s : 0
                        }
                    }
                }
                )).filter((e => e.index !== n && "correct" !== t[e.index].showCorrectness)).sort(( (t, n) => {
                    const r = Math.round(t.dist * (e.x * t.dir.x + e.y * t.dir.y))
                      , i = Math.round(n.dist * (e.x * n.dir.x + e.y * n.dir.y));
                    let s, o;
                    return e.x > 0 ? (s = t.dir.x > 0 && 0 !== r,
                    o = n.dir.x > 0 && 0 !== i) : e.x < 0 ? (s = t.dir.x < 0 && 0 !== r,
                    o = n.dir.x < 0 && 0 !== i) : e.y > 0 ? (s = t.dir.y > 0 && 0 !== r,
                    o = n.dir.y > 0 && 0 !== i) : e.y < 0 && (s = t.dir.y < 0 && 0 !== r,
                    o = n.dir.y < 0 && 0 !== i),
                    s !== o ? s ? -1 : 1 : r - i
                }
                ));
                return i.length > 0 ? i[0].index : n
            }
            constructor(e) {
                super(e),
                this._markers = void 0,
                this._mounted = !1,
                this._markers = [],
                this.state = {
                    activeMarkerIndex: -1,
                    markersInteracted: !1,
                    hideAnswers: !1
                }
            }
            componentDidMount() {
                this._mounted = !0
            }
            componentWillUnmount() {
                this._mounted = !1
            }
            getUserInput() {
                const {markers: e} = this.props;
                return {
                    markers: e
                }
            }
            getPromptJSON() {
                return ( (e, t) => {
                    const n = e.markers.map((e => ({
                        label: e.label
                    })))
                      , r = t.markers.map((e => ({
                        label: e.label,
                        selected: e.selected
                    })));
                    return {
                        type: "label-image",
                        options: {
                            choices: e.choices,
                            imageUrl: e.imageUrl,
                            imageAlt: e.imageAlt,
                            markers: n
                        },
                        userInput: {
                            markers: r
                        }
                    }
                }
                )(this.props, this.getUserInput())
            }
            showRationalesForCurrentlySelectedChoices(e) {
                const {markers: t} = this.props
                  , {onChange: n} = this.props;
                n({
                    markers: t.map((e => {
                        const t = Cf(e);
                        return nt({}, e, {
                            showCorrectness: t.hasAnswers ? t.isCorrect ? "correct" : "incorrect" : void 0
                        })
                    }
                    ))
                }, null, !0)
            }
            handleMarkerChange(e, t) {
                const {markers: n, onChange: r} = this.props;
                r({
                    markers: [...n.slice(0, e), nt({}, t, {
                        showCorrectness: void 0
                    }), ...n.slice(e + 1)]
                })
            }
            activateMarker(e, t) {
                var n;
                null == (n = this.props.analytics) || n.onAnalyticsEvent({
                    type: "perseus:label-image:marker-interacted-with",
                    payload: null
                });
                const {activeMarkerIndex: r} = this.state;
                r !== e && t ? this.setState({
                    activeMarkerIndex: e,
                    markersInteracted: !0
                }) : this.setState({
                    activeMarkerIndex: -1
                })
            }
            handleMarkerKeyDown(e, t) {
                const {markers: n} = this.props;
                if (n.length < 2)
                    return;
                const r = {
                    ArrowUp: {
                        x: 0,
                        y: -1
                    },
                    ArrowRight: {
                        x: 1,
                        y: 0
                    },
                    ArrowDown: {
                        x: 0,
                        y: 1
                    },
                    ArrowLeft: {
                        x: -1,
                        y: 0
                    }
                }[t.key];
                if (!r)
                    return;
                t.preventDefault();
                const i = this._markers[Tf.navigateToMarkerIndex(r, n, e)];
                i && fe.findDOMNode(i).focus()
            }
            handleAnswerChoicesChangeForMarker(e, t) {
                const {choices: n, markers: r} = this.props
                  , i = n.filter(( (e, n) => t[n]));
                this.handleMarkerChange(e, nt({}, r[e], {
                    selected: i.length ? i : void 0
                }))
            }
            renderMarkers() {
                const {markers: e, questionCompleted: t, preferredPopoverDirection: n} = this.props
                  , {activeMarkerIndex: r, markersInteracted: i} = this.state
                  , s = this._mounted && window.matchMedia(Nl.xsOrSmaller.replace("@media ", "")).matches
                  , o = this.props.imageWidth / 2 > this.props.imageHeight;
                return e.map(( (e, a) => {
                    let l, c;
                    s || o ? (l = e.y > 50 ? "top" : "bottom",
                    c = e.y > 50 ? "bottom" : "top") : (c = Tf.imageSideForMarkerPosition(e.x, e.y, n),
                    "center" === c && (c = "bottom"),
                    l = {
                        left: "right",
                        top: "bottom",
                        right: "left",
                        bottom: "top"
                    }[c]);
                    const h = Cf(e)
                      , p = t && h.hasAnswers && h.isCorrect ? "correct" : e.showCorrectness
                      , u = "correct" === p
                      , d = {
                        [`margin${c.charAt(0).toUpperCase() + c.slice(1)}`]: 10
                    }
                      , m = a === r
                      , f = e.selected && !m && !this.state.hideAnswers;
                    return me.createElement(le.G7, {
                        key: a,
                        style: {
                            position: "absolute",
                            left: `${e.x}%`,
                            top: `${e.y}%`,
                            zIndex: "unset"
                        }
                    }, me.createElement(gf, {
                        key: `answers-${e.x}.${e.y}`,
                        choices: this.props.choices.map((t => ({
                            content: t,
                            checked: !!e.selected && e.selected.includes(t)
                        }))),
                        multipleSelect: this.props.multipleAnswers,
                        onChange: e => {
                            var t;
                            null == (t = this.props.analytics) || t.onAnalyticsEvent({
                                type: "perseus:label-image:choiced-interacted-with",
                                payload: null
                            }),
                            this.handleAnswerChoicesChangeForMarker(a, e)
                        }
                        ,
                        onToggle: e => this.activateMarker(a, e),
                        disabled: u,
                        opener: ({opened: t}) => me.createElement(ye.ZP, {
                            role: "button",
                            "aria-expanded": t,
                            key: `marker-${e.x}.${e.y}`
                        }, ( ({hovered: n, focused: r, pressed: s}) => me.createElement(Ef, nt({}, e, {
                            showCorrectness: p,
                            showSelected: t,
                            showPulsate: !i,
                            ref: e => this._markers[a] = e,
                            showAnswer: f,
                            answerSide: l,
                            answerStyles: d,
                            analytics: this.props.analytics,
                            focused: r || s,
                            hovered: n
                        }))))
                    }))
                }
                ))
            }
            renderInstructions() {
                const {apiOptions: {isMobile: e}, choices: t, multipleAnswers: n, hideChoicesFromInstructions: r} = this.props
                  , {strings: i} = this.context
                  , s = e ? n ? i.tapMultiple : i.tapSingle : n ? i.clickMultiple : i.clickSingle
                  , o = i.choices;
                return me.createElement("div", {
                    className: de()("perseus-label-image-widget-instructions", (0,
                    pe.css)(_f.instructions))
                }, me.createElement("div", {
                    className: (0,
                    pe.css)(_f.instructionsCaption)
                }, s, " ", !r && o), !r && me.createElement("div", {
                    className: (0,
                    pe.css)(_f.instructionsChoices)
                }, t.map(( (e, t) => me.createElement("div", {
                    className: (0,
                    pe.css)(_f.instructionsChoice),
                    key: t
                }, me.createElement(ea, {
                    content: e,
                    strings: i
                }))))))
            }
            render() {
                const {imageAlt: e, imageUrl: t, imageWidth: n, imageHeight: r} = this.props
                  , {activeMarkerIndex: i} = this.state;
                return me.createElement("div", null, this.renderInstructions(), me.createElement("div", {
                    className: (0,
                    pe.css)(_f.markersCanvas),
                    style: {
                        maxWidth: n,
                        maxHeight: r
                    }
                }, me.createElement("div", {
                    className: (0,
                    pe.css)(_f.imageContainer, -1 !== i && _f.imageInteractionDisabled)
                }, me.createElement(jt.Consumer, null, ( ({setAssetStatus: i}) => me.createElement(qs, {
                    alt: e,
                    src: t,
                    width: n,
                    height: r,
                    setAssetStatus: i
                })))), this.renderMarkers()), me.createElement(vf, {
                    areAnswersHidden: this.state.hideAnswers,
                    onChange: e => {
                        var t;
                        null == (t = this.props.analytics) || t.onAnalyticsEvent({
                            type: "perseus:label-image:toggle-answers-hidden",
                            payload: null
                        }),
                        this.setState({
                            hideAnswers: e
                        })
                    }
                }))
            }
        }
        Tf.contextType = it;
        const _f = pe.StyleSheet.create({
            instructions: {
                paddingBottom: 16
            },
            instructionsCaption: nt({}, ff, {
                paddingBottom: 16
            }),
            instructionsChoices: {
                display: "flex",
                flexWrap: "wrap",
                margin: "-8px 0"
            },
            instructionsChoice: {
                display: "flex",
                alignItems: "center",
                margin: "8px 0",
                ":not(:last-child)": {
                    "::after": {
                        content: "''",
                        display: "inline-block",
                        position: "relative",
                        width: 2,
                        height: 2,
                        marginLeft: 5,
                        marginRight: 5,
                        background: "rgba(33, 36, 44, 0.32)",
                        borderRadius: 2
                    }
                }
            },
            markersCanvas: {
                position: "relative"
            },
            imageContainer: {
                display: "flex"
            },
            imageInteractionDisabled: {
                pointerEvents: "none"
            }
        })
          , Af = me.forwardRef(( (e, t) => {
            const n = yt();
            return me.createElement(Tf, nt({
                ref: t,
                analytics: n.analytics
            }, e))
        }
        ));
        var If = {
            name: "label-image",
            displayName: "Label Image",
            widget: Af,
            accessible: !0,
            isLintable: !0,
            scorer: function(e, t) {
                let n = 0
                  , r = 0;
                for (const t of e.markers) {
                    const e = Cf(t);
                    e.hasAnswers && n++,
                    e.isCorrect && r++
                }
                return n !== e.markers.length ? {
                    type: "invalid",
                    message: null
                } : {
                    type: "points",
                    earned: r === e.markers.length ? 1 : 0,
                    total: 1,
                    message: null
                }
            }
        }
          , Rf = function(e) {
            return e.STATIC = "static",
            e.DRAGGING = "dragging",
            e.ANIMATING = "animating",
            e.DISABLED = "disabled",
            e
        }(Rf || {});
        const Nf = (e, t) => {
            const n = e.offsetParent();
            return {
                top: t.top + n.scrollTop(),
                left: t.left + n.scrollLeft()
            }
        }
        ;
        class Pf extends me.Component {
            render() {
                const {layout: e} = this.props
                  , t = (0,
                pe.css)(Df.card, Df.placeholder, "horizontal" === e && Df.horizontalCard)
                  , n = {
                    width: this.props.width,
                    height: this.props.height
                };
                return null != this.props.margin && (n.margin = this.props.margin),
                me.createElement("li", {
                    className: t,
                    style: n
                })
            }
        }
        class Of extends me.Component {
            constructor(...e) {
                super(...e),
                this.animationFrameRequest = null,
                this.isMouseMoveUpBound = void 0,
                this._mounted = void 0,
                this.state = {
                    startPosition: {
                        left: 0,
                        top: 0
                    },
                    startMouse: {
                        left: 0,
                        top: 0
                    },
                    mouse: {
                        left: 0,
                        top: 0
                    },
                    dragging: !1
                },
                this.getCurrentPosition = () => ({
                    left: this.state.startPosition.left + this.state.mouse.left - this.state.startMouse.left,
                    top: this.state.startPosition.top + this.state.mouse.top - this.state.startMouse.top
                }),
                this.bindMouseMoveUp = () => {
                    this.isMouseMoveUpBound = !0,
                    ke()(document).on("mousemove", this.onMouseMove),
                    ke()(document).on("mouseup", this.onMouseUp)
                }
                ,
                this.unbindMouseMoveUp = () => {
                    this.isMouseMoveUpBound = !1,
                    ke()(document).off("mousemove", this.onMouseMove),
                    ke()(document).off("mouseup", this.onMouseUp)
                }
                ,
                this.onMouseDown = e => {
                    if (this.props.state !== Rf.STATIC)
                        return;
                    if (0 !== e.button && (null == e.touches || 1 !== e.touches.length))
                        return;
                    e.preventDefault();
                    const t = vn.extractPointerLocation(e);
                    this.animationFrameRequest = requestAnimationFrame(( () => {
                        const e = ke()(fe.findDOMNode(this))
                          , n = e.position()
                          , r = Nf(e, n);
                        t && this._mounted && this.setState({
                            startPosition: r,
                            startMouse: t,
                            mouse: t,
                            dragging: !0
                        }, (function() {
                            this.bindMouseMoveUp(),
                            this.props.onMouseDown()
                        }
                        ))
                    }
                    ))
                }
                ,
                this.onMouseMove = e => {
                    if (this.props.state !== Rf.DRAGGING || !this.state.dragging)
                        return;
                    e.preventDefault();
                    const t = vn.extractPointerLocation(e);
                    t && (this.animationFrameRequest = requestAnimationFrame(( () => {
                        this.setState({
                            mouse: t
                        }, this.props.onMouseMove)
                    }
                    )))
                }
                ,
                this.onMouseUp = e => {
                    if (this.props.state !== Rf.DRAGGING || !this.state.dragging)
                        return;
                    e.preventDefault();
                    vn.extractPointerLocation(e) && (this.setState({
                        dragging: !1
                    }),
                    this.unbindMouseMoveUp(),
                    this.props.onMouseUp())
                }
            }
            componentDidMount() {
                this._mounted = !0,
                this.isMouseMoveUpBound = !1,
                document.addEventListener("touchmove", this.onMouseMove, !!vn.supportsPassiveEvents() && {
                    passive: !1
                })
            }
            componentDidUpdate(e) {
                if (this.props.state !== e.state)
                    if (this.props.state === Rf.ANIMATING && this.props.endPosition) {
                        const e = this.getCurrentPosition()
                          , t = 15 * Math.sqrt(Math.sqrt(Math.pow(this.props.endPosition.left - e.left, 2) + Math.pow(this.props.endPosition.top - e.top, 2)));
                        ke()(fe.findDOMNode(this)).animate(this.props.endPosition, {
                            duration: Math.max(t, 1),
                            complete: this.props.onAnimationEnd
                        })
                    } else
                        this.props.state === Rf.STATIC && ke()(fe.findDOMNode(this)).finish()
            }
            componentWillUnmount() {
                this._mounted = !1,
                this.isMouseMoveUpBound && this.unbindMouseMoveUp(),
                this.animationFrameRequest && cancelAnimationFrame(this.animationFrameRequest),
                document.removeEventListener("touchmove", this.onMouseMove)
            }
            render() {
                const {includePadding: e, layout: t, state: n} = this.props;
                let r = (0,
                pe.css)(Df.card, Df.draggable, "horizontal" === t && Df.horizontalCard, "vertical" === t && Df.verticalCard, n === Rf.DRAGGING && Df.dragging, n === Rf.DISABLED && Df.disabled, !e && Df.unpaddedCard) + " " + Nt.INTERACTIVE + " perseus-sortable-draggable";
                e || (r += " perseus-sortable-draggable-unpadded");
                const i = {
                    position: "static"
                };
                return this.props.state !== Rf.DRAGGING && this.props.state !== Rf.ANIMATING || ve().extend(i, {
                    position: "absolute"
                }, this.getCurrentPosition()),
                this.props.width && (i.width = this.props.width + 1),
                this.props.height && (i.height = this.props.height),
                null != this.props.margin && (i.margin = this.props.margin),
                me.createElement("li", {
                    className: r,
                    style: i,
                    onMouseDown: this.onMouseDown,
                    onTouchStart: this.onMouseDown,
                    onTouchMove: this.onMouseMove,
                    onTouchEnd: this.onMouseUp,
                    onTouchCancel: this.onMouseUp
                }, me.createElement(ea, {
                    content: this.props.content,
                    linterContext: ae(this.props.linterContext, "draggable"),
                    onRender: this.props.onRender,
                    strings: this.context.strings
                }))
            }
        }
        Of.contextType = it,
        Of.defaultProps = {
            includePadding: !0,
            type: Rf.STATIC,
            linterContext: se
        };
        class Lf extends me.Component {
            static itemsFromProps(e) {
                const t = e.disabled ? Rf.DISABLED : Rf.STATIC;
                return e.options.map(( (e, n) => ({
                    option: e,
                    key: n,
                    state: t,
                    width: 0,
                    height: 0
                })))
            }
            static clearItemMeasurements(e) {
                return e.map((e => nt({}, e, {
                    width: 0,
                    height: 0
                })))
            }
            constructor(e) {
                super(e),
                this.remeasureItems = ve().debounce(( () => {
                    this.setState({
                        items: Lf.clearItemMeasurements(this.state.items)
                    })
                }
                ), 20),
                this.state = {
                    items: Lf.itemsFromProps(this.props),
                    texRendererLoaded: !1
                }
            }
            UNSAFE_componentWillReceiveProps(e) {
                const t = this.props;
                ve().isEqual(e.options, t.options) ? e.layout === t.layout && e.padding === t.padding && e.disabled === t.disabled && ve().isEqual(e.constraints, t.constraints) || this.setState({
                    items: Lf.clearItemMeasurements(this.state.items)
                }) : this.setState({
                    items: Lf.itemsFromProps(e)
                })
            }
            componentDidUpdate() {
                !this.state.items.length || this.state.items[0].width || this.state.items[0].height || setTimeout(( () => {
                    this.measureItems()
                }
                ), 0)
            }
            measureItems() {
                let e = [...this.state.items];
                const t = ve().map(e, (function(e) {
                    return ke()(fe.findDOMNode(this.refs[e.key]))
                }
                ), this)
                  , n = ve().invoke(t, "outerWidth")
                  , r = ve().invoke(t, "outerHeight")
                  , {constraints: i, layout: s} = this.props;
                let o = null;
                null != i && i.width ? o = ve().max(n.concat(i.width)) : "vertical" === s && (o = ve().max(n));
                let a = null;
                null != i && i.height ? a = ve().max(r.concat(i.height)) : "horizontal" === s && (a = ve().max(r)),
                e = ve().map(e, (function(e, t) {
                    return e.width = o || n[t],
                    e.height = a || r[t],
                    e
                }
                )),
                this.setState({
                    items: e
                }, ( () => {
                    this.props.onMeasure && this.props.onMeasure({
                        widths: n,
                        heights: r
                    })
                }
                ))
            }
            onMouseDown(e) {
                const t = ve().map(this.state.items, (function(t) {
                    return t.key === e && (t.state = Rf.DRAGGING),
                    t
                }
                ));
                this.setState({
                    items: t
                })
            }
            moveOptionToIndex(e, t) {
                const {items: n} = this.state;
                if (t < 0 || t > n.length)
                    throw new Error(`index ${t} out of bounds`);
                const r = ve().clone(n)
                  , i = n.filter((t => t.option === e))[0];
                if (null == i)
                    throw new Error(`option ${e} not found`);
                const s = n.findIndex((e => e.key === i.key));
                r.splice(s, 1),
                r.splice(t, 0, i),
                this.setState({
                    items: r
                }),
                this.props.onChange && this.props.onChange({})
            }
            onMouseMove(e) {
                const t = ke()(fe.findDOMNode(this.refs[e]))
                  , n = ke()(fe.findDOMNode(this))
                  , r = ve().clone(this.state.items)
                  , i = ve().findWhere(this.state.items, {
                    key: e
                })
                  , s = this.props.margin || 0
                  , o = ve().indexOf(r, i);
                let a = 0;
                if (r.splice(o, 1),
                "horizontal" === this.props.layout) {
                    const e = t.offset().left - n.offset().left;
                    let i, o = 0;
                    ve().each(r, (function(t) {
                        i = t.width,
                        e > o + i / 2 && (a += 1),
                        o += i + s
                    }
                    ))
                } else {
                    const e = t.offset().top - n.offset().top;
                    let i, o = 0;
                    ve().each(r, (function(t) {
                        i = t.height,
                        e > o + i / 2 && (a += 1),
                        o += i + s
                    }
                    ))
                }
                a !== o && (r.splice(a, 0, i),
                this.setState({
                    items: r
                }))
            }
            onMouseUp(e) {
                const t = requestAnimationFrame(( () => {
                    const t = ve().map(this.state.items, (function(t) {
                        if (t.key === e) {
                            t.state = Rf.ANIMATING;
                            const n = ke()(fe.findDOMNode(this.refs["placeholder_" + e]))
                              , r = n.position()
                              , i = Nf(n, r);
                            t.endPosition = i
                        }
                        return t
                    }
                    ), this);
                    this.setState({
                        items: t
                    }),
                    this.props.onChange && this.props.onChange({})
                }
                ));
                this.animationFrameRequest = t
            }
            onAnimationEnd(e) {
                const t = ve().map(this.state.items, (function(t) {
                    return t.key === e && (t.state = Rf.STATIC),
                    t
                }
                ));
                this.setState({
                    items: t
                })
            }
            getOptions() {
                return ve().pluck(this.state.items, "option")
            }
            render() {
                var e, t;
                if (this.props.waitForTexRendererToLoad && !this.state.texRendererLoaded) {
                    const {TeX: e} = gt();
                    return me.createElement(me.Fragment, null, me.createElement(Pe.y, null), me.createElement("div", {
                        style: {
                            display: "none"
                        }
                    }, me.createElement(e, {
                        onRender: () => this.setState({
                            texRendererLoaded: !0
                        })
                    }, "1")))
                }
                const n = []
                  , {layout: r} = this.props
                  , i = (0,
                pe.css)(Df.sortable) + " perseus-sortable"
                  , s = (null == (e = this.props.constraints) ? void 0 : e.width) || "vertical" === r
                  , o = (null == (t = this.props.constraints) ? void 0 : t.height) || "horizontal" === r;
                return ve().each(this.state.items, (function(e, t, i) {
                    const a = t === i.length - 1
                      , l = e.state === Rf.STATIC || e.state === Rf.DISABLED;
                    let c;
                    "horizontal" === this.props.layout ? c = "0 " + this.props.margin + "px 0 0" : "vertical" === this.props.layout && (c = "0 0 " + this.props.margin + "px 0"),
                    n.push(me.createElement(Of, {
                        content: e.option,
                        key: e.key,
                        state: e.state,
                        ref: e.key,
                        width: s ? e.width : void 0,
                        height: o ? e.height : void 0,
                        layout: r,
                        includePadding: this.props.padding,
                        margin: a && l ? 0 : c,
                        endPosition: e.endPosition,
                        linterContext: ae(this.props.linterContext, "sortable"),
                        onRender: this.remeasureItems,
                        onMouseDown: this.onMouseDown.bind(this, e.key),
                        onMouseMove: this.onMouseMove.bind(this, e.key),
                        onMouseUp: this.onMouseUp.bind(this, e.key),
                        onTouchMove: this.onMouseMove.bind(this, e.key),
                        onTouchEnd: this.onMouseUp.bind(this, e.key),
                        onTouchCancel: this.onMouseUp.bind(this, e.key),
                        onAnimationEnd: this.onAnimationEnd.bind(this, e.key)
                    })),
                    e.state !== Rf.DRAGGING && e.state !== Rf.ANIMATING || n.push(me.createElement(Pf, {
                        key: "placeholder_" + e.key,
                        ref: "placeholder_" + e.key,
                        width: e.width,
                        height: e.height,
                        layout: r,
                        margin: a ? 0 : c
                    }))
                }
                ), this),
                me.createElement("ul", {
                    className: i
                }, n)
            }
        }
        Lf.defaultProps = {
            layout: "horizontal",
            padding: !0,
            disabled: !1,
            constraints: {},
            onMeasure: function() {},
            margin: 5,
            onChange: function() {},
            linterContext: se,
            waitForTexRendererToLoad: !0
        };
        const Df = pe.StyleSheet.create({
            sortable: {
                boxSizing: "border-box",
                float: "left",
                padding: 0,
                margin: 0
            },
            card: {
                boxSizing: "border-box",
                background: "#fff",
                border: "1px solid #ddd",
                borderRadius: 4,
                cursor: "pointer",
                minWidth: 25,
                minHeight: 44,
                padding: 10,
                listStyleType: "none",
                userSelect: "none",
                touchAction: "none"
            },
            placeholder: {
                background: "#ddd",
                border: "1px solid #ccc"
            },
            draggable: {
                textAlign: "center"
            },
            horizontalCard: {
                float: "left",
                cursor: "ew-resize"
            },
            verticalCard: {
                maxWidth: "100%",
                cursor: "ns-resize"
            },
            unpaddedCard: {
                padding: 0
            },
            dragging: {
                background: "#ffedcd",
                opacity: .8
            },
            disabled: {
                backgroundColor: "inherit",
                border: "1px solid transparent",
                cursor: "default"
            }
        });
        const {shuffle: Ff, seededRNG: zf} = vn;
        class Bf extends me.Component {
            constructor(...e) {
                super(...e),
                this.state = {
                    leftHeight: 0,
                    rightHeight: 0,
                    texRendererLoaded: !1
                },
                this.changeAndTrack = e => {
                    this.props.onChange(e),
                    this.props.trackInteraction()
                }
                ,
                this.onMeasureLeft = e => {
                    const t = ve().max(e.heights);
                    this.setState({
                        leftHeight: t
                    })
                }
                ,
                this.onMeasureRight = e => {
                    const t = ve().max(e.heights);
                    this.setState({
                        rightHeight: t
                    })
                }
                ,
                this.getUserInput = () => this.state.texRendererLoaded ? {
                    left: this.refs.left.getOptions(),
                    right: this.refs.right.getOptions()
                } : {
                    left: [],
                    right: []
                },
                this.moveLeftOptionToIndex = (e, t) => {
                    this.refs.left.moveOptionToIndex(e, t)
                }
                ,
                this.moveRightOptionToIndex = (e, t) => {
                    this.refs.right.moveOptionToIndex(e, t)
                }
            }
            getPromptJSON() {
                return e = this.props,
                t = this.getUserInput(),
                {
                    type: "matcher",
                    options: {
                        labels: e.labels,
                        left: e.left,
                        right: e.right,
                        orderMatters: e.orderMatters
                    },
                    userInput: {
                        left: t.left,
                        right: t.right
                    }
                };
                var e, t
            }
            render() {
                if (!this.state.texRendererLoaded) {
                    const {TeX: e} = gt();
                    return me.createElement(me.Fragment, null, me.createElement(Pe.y, null), me.createElement("div", {
                        style: {
                            display: "none"
                        }
                    }, me.createElement(e, {
                        onRender: () => {
                            this.setState({
                                texRendererLoaded: !0
                            })
                        }
                    }, "1")))
                }
                const e = zf(this.props.problemNum);
                let t;
                t = this.props.orderMatters ? Ff(this.props.left, e, !0) : this.props.left;
                const n = Ff(this.props.right, e, !0)
                  , r = ve().any(this.props.labels)
                  , i = {
                    height: ve().max([this.state.leftHeight, this.state.rightHeight])
                }
                  , s = this.props.apiOptions.isMobile ? 8 : 5;
                return me.createElement("table", {
                    className: (0,
                    pe.css)(Hf.widget) + " perseus-widget-matcher"
                }, me.createElement("tbody", null, r && me.createElement("tr", {
                    className: (0,
                    pe.css)(Hf.row)
                }, me.createElement("th", {
                    className: (0,
                    pe.css)(Hf.column, Hf.columnLabel)
                }, me.createElement(ea, {
                    content: this.props.labels[0] || "...",
                    linterContext: this.props.linterContext,
                    strings: this.context.strings
                })), me.createElement("th", {
                    className: (0,
                    pe.css)(Hf.column, Hf.columnRight, Hf.columnLabel)
                }, me.createElement(ea, {
                    content: this.props.labels[1] || "...",
                    linterContext: this.props.linterContext,
                    strings: this.context.strings
                }))), me.createElement("tr", {
                    className: (0,
                    pe.css)(Hf.row)
                }, me.createElement("td", {
                    className: (0,
                    pe.css)(Hf.column)
                }, me.createElement(Lf, {
                    options: t,
                    layout: "vertical",
                    padding: this.props.padding,
                    disabled: !this.props.orderMatters,
                    constraints: i,
                    onMeasure: this.onMeasureLeft,
                    onChange: this.changeAndTrack,
                    margin: s,
                    linterContext: this.props.linterContext,
                    ref: "left"
                })), me.createElement("td", {
                    className: (0,
                    pe.css)(Hf.column, Hf.columnRight)
                }, me.createElement(Lf, {
                    options: n,
                    layout: "vertical",
                    padding: this.props.padding,
                    constraints: i,
                    onMeasure: this.onMeasureRight,
                    onChange: this.changeAndTrack,
                    margin: s,
                    linterContext: this.props.linterContext,
                    ref: "right"
                })))))
            }
        }
        Bf.contextType = it,
        Bf.defaultProps = {
            left: [],
            right: [],
            labels: ["", ""],
            orderMatters: !1,
            padding: !0,
            problemNum: 0,
            onChange: function() {},
            linterContext: se
        };
        const qf = "1px solid #444"
          , Hf = pe.StyleSheet.create({
            widget: {
                paddingTop: 5,
                maxWidth: "100%",
                minWidth: "auto"
            },
            row: {
                border: 0
            },
            column: {
                padding: 0,
                border: 0
            },
            columnRight: {
                borderLeft: qf
            },
            columnLabel: {
                fontWeight: "inherit",
                borderBottom: qf,
                padding: "0 5px 5px 5px",
                textAlign: "center"
            }
        });
        var Uf = {
            name: "matcher",
            displayName: "Matcher (two column)",
            widget: Bf,
            isLintable: !0,
            scorer: function(e, t) {
                return {
                    type: "points",
                    earned: ve().isEqual(e.left, t.left) && ve().isEqual(e.right, t.right) ? 1 : 0,
                    total: 1,
                    message: null
                }
            }
        };
        const {assert: Gf} = Kn
          , {stringArrayOfSize: Wf} = vn
          , Vf = {
            INPUT_MARGIN: 3,
            INPUT_HEIGHT: 30,
            INPUT_WIDTH: 40
        }
          , $f = {
            INPUT_MARGIN: 4,
            INPUT_HEIGHT: 36,
            INPUT_WIDTH: 64
        };
        function jf(e, t) {
            return ["" + e, "" + t]
        }
        const Kf = function() {
            return jf(0, 0)
        }
          , Zf = function(e) {
            return Gf(ve().isArray(e) && 2 === e.length),
            +e[0]
        }
          , Yf = function(e) {
            return Gf(ve().isArray(e) && 2 === e.length),
            +e[1]
        }
          , Xf = function(e) {
            return "answer" + Zf(e) + "," + Yf(e)
        };
        function Jf(e) {
            const t = [1, 1];
            return ve()(e).each(( (e, n) => {
                let r = 0;
                ve()(e).each(( (e, t) => {
                    null != e && e.toString().length && (r = t + 1)
                }
                )),
                t[1] = Math.max(t[1], r),
                r > 0 && (t[0] = Math.max(t[0], n + 1))
            }
            )),
            t
        }
        class Qf extends me.Component {
            constructor(...e) {
                super(...e),
                this.cursorPosition = void 0,
                this.state = {
                    enterTheMatrix: 0
                },
                this.getInputPaths = () => {
                    const e = []
                      , t = this.props.matrixBoardSize[0]
                      , n = this.props.matrixBoardSize[1];
                    return ve()(t).times((t => {
                        ve()(n).times((n => {
                            const r = jf(t, n);
                            e.push(r)
                        }
                        ))
                    }
                    )),
                    e
                }
                ,
                this._handleFocus = (e, t) => {
                    this.props.onFocus(jf(e, t))
                }
                ,
                this._handleBlur = (e, t) => {
                    this.props.onBlur(jf(e, t))
                }
                ,
                this.focus = () => (this.focusInputPath(Kf()),
                !0),
                this.focusInputPath = e => {
                    const t = Xf(e);
                    this.refs[t].focus()
                }
                ,
                this.blurInputPath = e => {
                    0 === e.length && (e = Kf());
                    const t = Xf(e);
                    this.refs[t].blur()
                }
                ,
                this.setInputValue = (e, t, n) => {
                    const r = Zf(e)
                      , i = Yf(e);
                    this.onValueChange(r, i, t, n)
                }
                ,
                this.handleKeyDown = (e, t, n) => {
                    const r = this.props.matrixBoardSize[0]
                      , i = this.props.matrixBoardSize[1];
                    let s = null;
                    const o = this.refs[Xf(jf(e, t))]
                      , a = o.getStringValue()
                      , l = o.getSelectionStart()
                      , c = o.getSelectionEnd();
                    let h = null;
                    if ("ArrowUp" === n.key && e > 0 ? h = jf(e - 1, t) : "ArrowDown" === n.key && e + 1 < r ? h = jf(e + 1, t) : "ArrowLeft" === n.key && t > 0 ? 0 === l && 0 === c && (h = jf(e, t - 1)) : "ArrowRight" === n.key && t + 1 < i ? l === a.length && (h = jf(e, t + 1)) : "Enter" === n.key ? s = this.state.enterTheMatrix + 1 : "Escape" === n.key && (s = 0),
                    h) {
                        n.preventDefault();
                        const e = this.refs[Xf(h)]
                          , t = 2 * e.getStringValue().length;
                        e.focus(),
                        "ArrowRight" === n.key ? e.setSelectionRange(0, 0) : e.setSelectionRange(t, t)
                    }
                    null != s && this.setState({
                        enterTheMatrix: s
                    })
                }
                ,
                this.onValueChange = (e, t, n, r) => {
                    const i = this.props.answers.map((e => [...e]));
                    i[e] || (i[e] = []),
                    i[e][t] = n,
                    this.props.onChange({
                        answers: i
                    }, r),
                    this.props.trackInteraction()
                }
            }
            componentDidMount() {
                this.cursorPosition = [0, 0]
            }
            getDOMNodeForPath(e) {
                const t = Xf(e);
                return fe.findDOMNode(this.refs[t])
            }
            getUserInput() {
                return {
                    answers: this.props.answers
                }
            }
            getPromptJSON() {
                return e = this.props,
                t = this.getUserInput(),
                {
                    type: "matrix",
                    options: {
                        height: e.matrixBoardSize[0],
                        width: e.matrixBoardSize[1]
                    },
                    userInput: {
                        answerRows: t.answers
                    }
                };
                var e, t
            }
            render() {
                let e;
                e = this.props.apiOptions.customKeypad ? $f : Vf;
                const {INPUT_MARGIN: t, INPUT_HEIGHT: n, INPUT_WIDTH: r} = e
                  , i = Jf(this.props.answers)
                  , s = this.props.matrixBoardSize[0]
                  , o = this.props.matrixBoardSize[1]
                  , a = this.props.cursorPosition[0]
                  , l = this.props.cursorPosition[1]
                  , c = Math.max(a, i[0] - 1)
                  , h = Math.max(l, i[1] - 1)
                  , p = (c + 1) * (n + 2 * t)
                  , u = (h + 1) * (r + 2 * t)
                  , d = de()({
                    "perseus-matrix": !0,
                    "static-mode": this.props.static,
                    "the-matrix": this.state.enterTheMatrix >= 5
                });
                return me.createElement("div", {
                    className: d
                }, this.props.prefix && me.createElement("div", {
                    className: "matrix-prefix"
                }, me.createElement(ea, {
                    content: this.props.prefix,
                    linterContext: this.props.linterContext,
                    strings: this.context.strings
                })), me.createElement("div", {
                    className: "matrix-input"
                }, me.createElement("div", {
                    className: "matrix-bracket bracket-left",
                    style: {
                        height: p
                    }
                }), me.createElement("div", {
                    className: "matrix-bracket bracket-right",
                    style: {
                        height: p,
                        left: u
                    }
                }), ve()(s).times((e => {
                    const i = this.props.answers[e];
                    return me.createElement("div", {
                        className: "matrix-row",
                        key: e
                    }, ve()(o).times((s => {
                        const o = e > c || s > h
                          , a = {
                            className: o ? "outside" : "inside",
                            ref: Xf(jf(e, s)),
                            value: i ? i[s] : null,
                            style: {
                                height: n,
                                width: r,
                                margin: t
                            },
                            disabled: this.props.apiOptions.readOnly,
                            onFocus: () => {
                                this.cursorPosition = [e, s],
                                this.props.onChange({
                                    cursorPosition: [e, s]
                                }, ( () => !1)),
                                this._handleFocus(e, s)
                            }
                            ,
                            onBlur: () => {
                                e === this.cursorPosition[0] && s === this.cursorPosition[1] && this.props.onChange({
                                    cursorPosition: [0, 0]
                                }, ( () => !1)),
                                this._handleBlur(e, s)
                            }
                            ,
                            onKeyDown: t => {
                                this.handleKeyDown(e, s, t)
                            }
                            ,
                            onChange: (t, n) => {
                                this.onValueChange(e, s, t, n)
                            }
                        };
                        let l;
                        if (this.props.apiOptions.customKeypad) {
                            const e = {
                                margin: t,
                                minWidth: r,
                                minHeight: n,
                                boxSizing: "border-box",
                                backgroundColor: o ? "#f3f3f3" : "#fff"
                            };
                            l = me.createElement(va, nt({}, a, {
                                style: e,
                                scrollable: !0,
                                keypadElement: this.props.keypadElement
                            }))
                        } else if (this.props.numericInput)
                            l = me.createElement(xu, a);
                        else {
                            const e = nt({}, a, {
                                style: pe.StyleSheet.create({
                                    input: nt({}, a.style, {
                                        display: "inline-block",
                                        padding: 0,
                                        backgroundColor: o ? "#f3f3f3" : "#fff"
                                    })
                                }).input
                            });
                            l = me.createElement(ra, e)
                        }
                        return me.createElement("span", {
                            key: s,
                            className: "matrix-input-field"
                        }, l)
                    }
                    )))
                }
                ))), this.props.suffix && me.createElement("div", {
                    className: "matrix-suffix"
                }, me.createElement(ea, {
                    content: this.props.suffix,
                    linterContext: this.props.linterContext,
                    strings: this.context.strings
                })))
            }
        }
        Qf.contextType = it,
        Qf.defaultProps = {
            matrixBoardSize: [3, 3],
            answers: [[]],
            prefix: "",
            suffix: "",
            cursorPosition: [0, 0],
            apiOptions: Rt.defaults,
            linterContext: se
        };
        var eg = {
            name: "matrix",
            displayName: "Matrix",
            hidden: !0,
            widget: Qf,
            transform: e => {
                const t = ve()(e.matrixBoardSize[0]).times((function() {
                    return Wf(e.matrixBoardSize[1])
                }
                ));
                return e = ve().pick(e, "matrixBoardSize", "prefix", "suffix"),
                ve().extend(e, {
                    answers: t
                })
            }
            ,
            staticTransform: e => {
                const t = ve().pick(e, "matrixBoardSize", "prefix", "suffix");
                return t.answers = ve().map(e.answers, (e => ve().map(e, (e => null != e ? String(e) : "")))),
                t
            }
            ,
            isLintable: !0,
            scorer: function(e, t, n) {
                const r = function(e, t, n) {
                    const r = e.answers
                      , i = Jf(r);
                    for (let e = 0; e < i[0]; e++)
                        for (let t = 0; t < i[1]; t++)
                            if (null == r[e][t] || 0 === r[e][t].toString().length)
                                return {
                                    type: "invalid",
                                    message: n.fillAllCells
                                };
                    return null
                }(e, 0, n);
                if (null != r)
                    return r;
                const i = t.answers
                  , s = e.answers
                  , o = Jf(i)
                  , a = Jf(s)
                  , l = o[0] !== a[0] || o[1] !== a[1]
                  , c = zt.number.createValidatorFunctional;
                let h = null
                  , p = !1;
                return ve()(a[0]).times((e => {
                    ve()(a[1]).times((t => {
                        if (!l) {
                            const r = c(i[e][t], {
                                simplify: !0
                            }, n)(s[e][t]);
                            r.message && (h = r.message),
                            r.correct || (p = !0)
                        }
                    }
                    ))
                }
                )),
                l ? {
                    type: "points",
                    earned: 0,
                    total: 1,
                    message: null
                } : {
                    type: "points",
                    earned: p ? 0 : 1,
                    total: 1,
                    message: h
                }
            }
        };
        const tg = {
            url: null,
            top: 0,
            left: 0
        };
        class ng extends me.Component {
            constructor(...e) {
                super(...e),
                this.isWidget = !0,
                this.state = {},
                this.ruler = void 0,
                this.protractor = void 0
            }
            componentDidMount() {
                this.setupGraphie()
            }
            componentDidUpdate(e) {
                ve().any(["box", "showProtractor", "showRuler", "rulerLabel", "rulerTicks", "rulerPixels", "rulerLength"], (t => e[t] !== this.props[t]), this) && this.setupGraphie()
            }
            setupGraphie() {
                const e = fe.findDOMNode(this.refs.graphieDiv);
                ke()(e).empty();
                const t = this.graphie = fr.createGraphie(e)
                  , n = [40, 40]
                  , r = [[0, this.props.box[0] / n[0]], [0, this.props.box[1] / n[1]]];
                t.init({
                    range: r,
                    scale: n
                }),
                t.addMouseLayer({
                    allowScratchpad: !0,
                    setDrawingAreaAvailable: this.props.apiOptions.setDrawingAreaAvailable
                }),
                this.protractor && this.protractor.remove(),
                this.props.showProtractor && (this.protractor = t.protractor([this.props.protractorX, this.props.protractorY])),
                this.ruler && this.ruler.remove(),
                this.props.showRuler && (this.ruler = t.ruler({
                    center: [(r[0][0] + r[0][1]) / 2, (r[1][0] + r[1][1]) / 2],
                    label: this.props.rulerLabel,
                    pixelsPerUnit: this.props.rulerPixels,
                    ticksPerUnit: this.props.rulerTicks,
                    units: this.props.rulerLength
                }))
            }
            getPromptJSON() {
                return Cc("measurer")
            }
            render() {
                const e = ve().extend({}, tg, this.props.image);
                return me.createElement("div", {
                    className: "perseus-widget perseus-widget-measurer graphie-container above-scratchpad",
                    style: {
                        width: this.props.box[0],
                        height: this.props.box[1]
                    }
                }, e.url && me.createElement("div", {
                    style: {
                        position: "relative",
                        top: e.top,
                        left: e.left
                    }
                }, me.createElement(qs, {
                    src: e.url
                })), me.createElement("div", {
                    className: "graphie",
                    ref: "graphieDiv"
                }))
            }
        }
        ng.defaultProps = {
            box: [480, 480],
            image: tg,
            showProtractor: !0,
            protractorX: 7.5,
            protractorY: .5,
            showRuler: !1,
            rulerLabel: "",
            rulerTicks: 10,
            rulerPixels: 40,
            rulerLength: 10
        };
        var rg = {
            name: "measurer",
            displayName: "Measurer",
            hidden: !0,
            widget: ng,
            version: {
                major: 1,
                minor: 0
            },
            propUpgrades: {
                1: e => ve()(e).chain().omit("imageUrl", "imageTop", "imageLeft").extend({
                    image: {
                        url: e.imageUrl,
                        top: e.imageTop,
                        left: e.imageLeft
                    }
                }).value()
            },
            scorer: () => Oa(1)
        };
        function ig(e, t) {
            const n = new Path2D;
            e.lineWidth = cg.lineWidth,
            e.strokeStyle = cg.fgColor,
            n.moveTo(t.startPos[0], t.startPos[1]),
            n.lineTo(t.endPos[0], t.endPos[1]),
            e.stroke(n)
        }
        const sg = {
            text: function(e, t) {
                null !== t.value && (e.fillStyle = cg.fgColor,
                e.font = cg.font,
                e.fillText(t.value, t.pos[0] - cg.fontSizePx / 2 + 1, t.pos[1] + cg.fontSizePx / 2))
            },
            "line:single": ig,
            "line:double": function(e, t) {
                let n = new Path2D;
                e.lineWidth = 5 * cg.lineWidth,
                e.strokeStyle = cg.fgColor,
                n.moveTo(t.startPos[0], t.startPos[1]),
                n.lineTo(t.endPos[0], t.endPos[1]),
                e.stroke(n),
                n = new Path2D,
                e.lineWidth = 3 * cg.lineWidth,
                e.strokeStyle = cg.bgColor,
                n.moveTo(t.startPos[0], t.startPos[1]),
                n.lineTo(t.endPos[0], t.endPos[1]),
                e.stroke(n)
            },
            "line:triple": function(e, t) {
                let n = new Path2D;
                e.lineWidth = 7 * cg.lineWidth,
                e.strokeStyle = cg.fgColor,
                n.moveTo(t.startPos[0], t.startPos[1]),
                n.lineTo(t.endPos[0], t.endPos[1]),
                e.stroke(n),
                n = new Path2D,
                e.lineWidth = 5 * cg.lineWidth,
                e.strokeStyle = cg.bgColor,
                n.moveTo(t.startPos[0], t.startPos[1]),
                n.lineTo(t.endPos[0], t.endPos[1]),
                e.stroke(n),
                ig(e, t)
            }
        };
        const og = {
            "line:single": 0,
            "line:double": 0,
            "line:triple": 0,
            text: 1
        };
        function ag(e, t) {
            return og[e.type] - og[t.type]
        }
        function lg(e, t) {
            t.sort(ag).forEach(function(e) {
                return function(t) {
                    sg[t.type](e, t)
                }
            }(e))
        }
        const cg = {
            bgColor: "rgb(255, 255, 255)",
            fgColor: "rgb(0, 0, 0)",
            fontSizePx: 12,
            lineWidth: 1,
            font: "12px sans"
        }
          , hg = 30;
        function pg(e, t, n, r) {
            let i = e.symbol;
            if ("C" === i && 1 !== Object.keys(t).length && (i = null),
            "1,0" === e.idx) {
                const t = [0, 0];
                return e.pos = t,
                e.baseAngle = -30 + r,
                {
                    type: "text",
                    value: i,
                    pos: t,
                    idx: e.idx
                }
            }
            const s = t[e.connections.find((function(e) {
                return t[e].pos
            }
            ))]
              , o = s.connections.indexOf(e.idx);
            let a = 60
              , l = 120;
            4 === s.connections.length ? (l = 90,
            a = 90) : (n.find((t => "triple" === t.bondType && t.to === e.idx)) || n.find((e => "triple" === e.bondType && e.to === s.idx))) && (l = 0,
            a = 0);
            let c = 0;
            const h = s.idx.split(":")
              , p = h[h.length - 1].split(",")[0];
            c = parseInt(p) % 2 != 0 ? s.baseAngle - (a - l * o) : s.baseAngle + (a - l * o);
            const u = function(e, t, n) {
                const r = e[0]
                  , i = e[1];
                return [r + Math.cos(2 * t * Math.PI / 360) * n, i + -1 * Math.sin(2 * t * Math.PI / 360) * n]
            }(s.pos, c, hg);
            return e.pos = u,
            e.baseAngle = c,
            {
                type: "text",
                value: i,
                pos: u,
                idx: e.idx
            }
        }
        function ug(e, t) {
            const n = function(e, t) {
                let n = [e.pos[0], e.pos[1]]
                  , r = [t.pos[0], t.pos[1]];
                return "C" !== e.symbol && (n = [t.pos[0] - .75 * (t.pos[0] - e.pos[0]), t.pos[1] - .75 * (t.pos[1] - e.pos[1])]),
                "C" !== t.symbol && (r = [e.pos[0] - .75 * (e.pos[0] - t.pos[0]), e.pos[1] - .75 * (e.pos[1] - t.pos[1])]),
                [n, r]
            }(t[e.from], t[e.to]);
            return {
                type: "line:" + e.bondType,
                startPos: n[0],
                endPos: n[1]
            }
        }
        function dg(e) {
            return e.join(":")
        }
        function mg(e, t, n) {
            if (null === n)
                return [e, t];
            if ("atom" === n.type) {
                const r = dg(n.idx);
                e[r] = {
                    idx: r,
                    symbol: n.symbol,
                    connections: []
                },
                n.bonds && n.bonds.forEach((function(n) {
                    const i = dg(n.to.idx);
                    e[r].connections.push(i),
                    t.push({
                        from: r,
                        to: i,
                        bondType: n.bondType
                    }),
                    mg(e, t, n.to),
                    e[i].connections.push(r)
                }
                ))
            }
            return [e, t]
        }
        function fg(e, t, n, r, i) {
            if (0 === t.length)
                return e;
            const s = t.shift()
              , o = n[s];
            return o.connections.forEach((function(e) {
                n[e].pos || t.push(e)
            }
            )),
            fg(e.concat(pg(o, n, r, i)), t, n, r, i)
        }
        function gg(e, t, n) {
            return 0 === n.length ? e : gg(e.concat(ug(n[0], t)), t, n.slice(1))
        }
        var vg = {
            layout: function(e, t) {
                const n = mg({}, [], e)
                  , r = n[0]
                  , i = n[1];
                return gg(fg([], ["1,0"], r, i, t), r, i)
            },
            _atomLayout: pg,
            _bondLayout: ug,
            _bondLength: hg,
            _convertTree: mg
        };
        const yg = new RegExp("^[A-Za-z\\[\\]()=#+-]*$")
          , bg = new RegExp("^(Cl|Br|[CONPSFBI]|\\[)");
        function xg(e) {
            this.message = e
        }
        function wg(e, t, n) {
            const r = t[0]
              , i = t.slice(1);
            let s;
            s = Array.isArray(e) ? [...e] : nt({}, e || {});
            let o = n;
            return i.length > 0 && (o = wg(s[r], i, n)),
            s[r] = o,
            s
        }
        function kg(e, t) {
            if (0 === t.length)
                return e;
            if ("" === e)
                throw new xg("Mismatched parentheses");
            const n = e[0]
              , r = e.slice(1);
            return kg(r, "(" === n ? t.concat(n) : ")" === n ? t.slice(1) : t)
        }
        function Sg(e, t) {
            const n = e[0]
              , r = e.slice(1);
            if ("(" === n) {
                let e = nt({}, t, {
                    parens: t.parens + "("
                });
                e = function(e, t) {
                    const n = t.reduce((function(e, t) {
                        return e[t]
                    }
                    ), e);
                    return wg(e, t, n + 1)
                }(t, ["idx", t.idx.length - 1, 1]);
                let n = -1;
                t.idx[t.idx.length - 1][0] % 2 == 0 && (n = 0);
                const i = Mg(r, nt({}, e, {
                    idx: e.idx.concat([[n, 0]]),
                    parens: e.parens.concat("(")
                }))
                  , s = Mg(kg(r, ["("]), e);
                return [i].concat(s)
            }
            if (")" === n) {
                if ("(" !== t.parens[t.parens.length - 1])
                    throw new xg("Mismatched parentheses");
                return null
            }
            throw new xg("Invalid bare character: " + n)
        }
        function Eg(e, t) {
            const n = function(e, t) {
                let n = null
                  , r = null;
                if ("[" === e[0]) {
                    const t = e.indexOf("]");
                    if (-1 === t)
                        return ["", e];
                    n = e.slice(1, t),
                    r = e.slice(t + 1)
                } else
                    n = bg.exec(e)[1],
                    r = e.slice(n.length);
                return [n, r]
            }(e)
              , r = n[0];
            if ("" === r)
                return ["error", "Unable to parse bracketed atom."];
            const i = n[1]
              , s = wg(t, ["idx", t.idx.length - 1], [1 + t.idx[t.idx.length - 1][0], 0]);
            let o = Mg(i, wg(s, ["bond", "bondType"], "single"));
            !Array.isArray(o) && o && (o = [o]);
            const a = {
                type: "atom",
                symbol: r,
                bonds: o,
                idx: s.idx
            };
            return t.bond ? {
                type: "bond",
                bondType: t.bond.bondType,
                to: a
            } : a
        }
        function Mg(e, t) {
            if (!function(e) {
                return yg.test(e)
            }(e))
                throw new xg("Invalid input.");
            return e && 0 !== e.length ? (n = e,
            bg.test(n) ? Eg(e, t || {
                idx: [[0, 0]],
                parens: [],
                stack: [],
                bondModifiers: []
            }) : function(e) {
                return "=" === e || "#" === e
            }(e[0]) ? function(e, t) {
                const n = e[0]
                  , r = e.slice(1);
                if ("=" === n)
                    return Mg(r, wg(t, ["bond", "bondType"], "double"));
                if ("#" === n)
                    return Mg(r, wg(t, ["bond", "bondType"], "triple"));
                throw new xg("Invalid character: " + n)
            }(e, t) : Sg(e, t)) : null;
            var n
        }
        var Cg = Mg
          , Tg = xg;
        const {layout: _g} = vg
          , Ag = Cg
          , Ig = Tg;
        class Rg extends me.Component {
            constructor(...e) {
                super(...e),
                this.state = {
                    parsedSmiles: null,
                    error: null
                },
                this.stateFromSmiles = e => {
                    try {
                        this.setState({
                            parsedSmiles: Ag(e),
                            error: null
                        })
                    } catch (e) {
                        if (!(e instanceof Ig))
                            throw e;
                        this.setState({
                            error: e.message
                        })
                    }
                }
                ,
                this.setCanvasBounds = (e, t) => {
                    const n = Math.max(...t.map((e => e.pos ? e.pos[0] : -1 / 0)))
                      , r = Math.max(...t.map((e => e.pos ? e.pos[1] : -1 / 0)))
                      , i = Math.min(...t.map((e => e.pos ? e.pos[0] : 1 / 0)))
                      , s = Math.min(...t.map((e => e.pos ? e.pos[1] : 1 / 0)))
                      , o = n - i + 60
                      , a = r - s + 60;
                    return e.width = o,
                    e.height = a,
                    [30 - i, 30 - s]
                }
                ,
                this.canvasRender = () => {
                    if (this.state.error || !this.state.parsedSmiles)
                        return;
                    const e = _g(this.state.parsedSmiles, this.props.rotationAngle)
                      , t = this.refs.canvas
                      , n = this.setCanvasBounds(t, e)
                      , r = t.getContext("2d");
                    r.clearRect(0, 0, t.width, t.height),
                    r.save(),
                    r.translate(n[0], n[1]),
                    lg(r, e),
                    r.restore()
                }
            }
            UNSAFE_componentWillMount() {
                this.stateFromSmiles(this.props.smiles)
            }
            componentDidMount() {
                this.canvasRender()
            }
            UNSAFE_componentWillReceiveProps(e) {
                this.stateFromSmiles(e.smiles)
            }
            componentDidUpdate() {
                this.canvasRender()
            }
            render() {
                let e = me.createElement("canvas", {
                    className: "molecule-canvas",
                    id: this.props.widgetId + "-molecule",
                    ref: "canvas"
                }, this.context.strings.molecularDrawing({
                    content: this.props.smiles || ""
                }));
                return this.state.error && (e = me.createElement("div", {
                    className: "error"
                }, this.state.error)),
                me.createElement("div", {
                    className: "molecule-canvas"
                }, e)
            }
        }
        Rg.contextType = it;
        class Ng extends me.Component {
            constructor(...e) {
                super(...e),
                this.isWidget = !0
            }
            render() {
                return me.createElement(Rg, {
                    widgetId: this.props.widgetId,
                    smiles: this.props.smiles,
                    rotationAngle: this.props.rotationAngle
                })
            }
        }
        Ng.defaultProps = {
            rotationAngle: 0
        };
        var Pg = {
            name: "molecule-renderer",
            displayName: "Molecule renderer",
            hidden: !0,
            widget: Ng,
            scorer: () => Oa()
        };
        const Og = Cs.MovablePoint
          , Lg = Cs.Line
          , {assert: Dg} = Kn
          , Fg = {
            ge: "le",
            gt: "lt",
            le: "ge",
            lt: "gt"
        }
          , zg = {
            ge: "gt",
            gt: "ge",
            le: "lt",
            lt: "le"
        };
        function Bg(e, t) {
            return 1 === t ? "" + e : `\\dfrac{${e}}{${t}}`
        }
        function qg(e, t) {
            if (e < 0)
                return "-" + qg(-e, t);
            const n = Math.floor(e / t);
            return 0 === n ? Bg(e, t) : e - n * t == 0 ? "" + n : n + Bg(e - n * t, t)
        }
        const Hg = (e, t, n, r, i) => {
            if (r = r || n,
            "decimal" === t || "decimal ticks" === t)
                return e.label([n, -.53], Math.round(100 * r) / 100, "center");
            if ("improper" === t) {
                const t = Lt.toFraction(r);
                return e.label([n, -.17], Bg(t[0], t[1]), "below")
            }
            if ("mixed" === t) {
                const t = Lt.toFraction(r);
                return e.label([n, -.17], qg(t[0], t[1]), "below")
            }
            if ("non-reduced" === t) {
                const t = Lt.toFraction(r);
                return e.label([n, -.17], function(e, t, n) {
                    return Bg(e * Math.floor(n / t), n)
                }(t[0], t[1], i), "below")
            }
        }
          , Ug = Cs.createSimpleClass(( (e, t) => {
            if (!ve().isFinite(t.tickStep) || t.tickStep <= 0)
                return [];
            const n = []
              , {range: r, labelRange: i, labelStyle: s, labelTicks: o, tickStep: a, numDivisions: l} = t
              , c = null == i[0] ? r[0] : i[0]
              , h = null == i[1] ? r[1] : i[1];
            let p;
            if ("non-reduced" === s) {
                const e = [c, h];
                for (let t = 0; t <= l; t++) {
                    const n = r[0] + t * a;
                    e.push(n)
                }
                const t = e => Re.Rx.toFraction(e)[1]
                  , n = ve().map(e, t);
                p = ve().reduce(n, ( (e, t) => Lt.getLCM(e, t)))
            } else
                p = void 0;
            const u = {
                stroke: Qn.BLUE,
                strokeWidth: 3.5
            }
              , d = {
                color: Qn.BLUE
            }
              , m = [...Array(Math.round(l)).keys()].map((e => r[0] + e * a));
            return [...new Set([...m, c, h, ...r])].sort(( (e, t) => e - t)).forEach((t => {
                const r = t === c || t === h
                  , i = r ? u : null
                  , a = r ? d : null;
                e.style(i, ( () => {
                    n.push(e.line([t, -.2], [t, .2]))
                }
                )),
                (o || r || "decimal ticks" === s) && e.style(a, ( () => {
                    n.push(Hg(e, s, t, t, p))
                }
                ))
            }
            )),
            n
        }
        ));
        class Gg extends me.Component {
            constructor(...e) {
                super(...e),
                this.state = {
                    numDivisionsEmpty: !1
                },
                this.change = (...e) => St.apply(this, e),
                this.isValid = () => {
                    const e = this.props.range;
                    let t = this.props.numLinePosition;
                    const n = this.props.divisionRange;
                    return t = null == t ? e[0] : t,
                    e[0] < e[1] && Re.Rx.sign(t - e[0]) >= 0 && Re.Rx.sign(t - e[1]) <= 0 && n[0] < n[1] && 0 < this.props.numDivisions && 0 < this.props.snapDivisions
                }
                ,
                this.onNumDivisionsChange = (e, t) => {
                    const n = this.props.divisionRange.slice()
                      , r = this.props.range[1] - this.props.range[0];
                    if (e = (e = Math.round(e)) < 0 ? -1 * e : e) {
                        const i = ve().extend({}, this.props, {
                            tickStep: r / e
                        })
                          , s = this.snapNumLinePosition(i, this.props.numLinePosition);
                        this.setState({
                            numDivisionsEmpty: !1
                        }, ( () => {
                            this.props.onChange({
                                divisionRange: n,
                                numDivisions: e,
                                numLinePosition: s
                            }, t)
                        }
                        ))
                    } else
                        this.setState({
                            numDivisionsEmpty: !0
                        }, t)
                }
                ,
                this._handleTickCtrlFocus = () => {
                    this.props.onFocus(["tick-ctrl"])
                }
                ,
                this._handleTickCtrlBlur = () => {
                    this.props.onBlur(["tick-ctrl"])
                }
                ,
                this.focusInputPath = e => {
                    1 === e.length && this.refs[e[0]].focus()
                }
                ,
                this.blurInputPath = e => {
                    1 === e.length && this.refs[e[0]].blur()
                }
                ,
                this.getInputPaths = () => this.props.isTickCtrl ? [["tick-ctrl"]] : [],
                this.setInputValue = (e, t, n) => {
                    1 === e.length && "tick-ctrl" === e[0] && this.onNumDivisionsChange(t, n)
                }
                ,
                this._renderGraphie = () => {
                    const e = this.props.range
                      , t = e[1] - e[0]
                      , n = ve().pick(this.props, ["range", "isTickCtrl"])
                      , r = ve().extend({}, this.props, {
                        tickStep: t / this.props.numDivisions
                    });
                    return me.createElement(Cs, {
                        ref: "graphie",
                        key: this.props.labelStyle,
                        box: [this.props.apiOptions.isMobile ? 288 : 460, 80],
                        options: n,
                        onMouseDown: e => {
                            this.refs.graphie.movables.numberLinePoint.grab(e)
                        }
                        ,
                        setup: this._setupGraphie,
                        setDrawingAreaAvailable: this.props.apiOptions.setDrawingAreaAvailable,
                        isMobile: this.props.apiOptions.isMobile
                    }, me.createElement(Ug, nt({}, ve().pick(r, ["range", "numDivisions", "labelTicks", "labelStyle", "labelRange", "tickStep"]), {
                        isMobile: this.props.apiOptions.isMobile
                    })), this._renderInequality(r), this._renderNumberLinePoint(r))
                }
                ,
                this.snapNumLinePosition = (e, t) => {
                    const n = e.range[0]
                      , r = e.range[1]
                      , i = e.tickStep / e.snapDivisions;
                    let s = ( (e, t, n) => Math.min(Math.max(e, t), n))(t, n, r);
                    return s = n + Re.Rx.roundTo(s - n, i),
                    Dg(ve().isFinite(s)),
                    s
                }
                ,
                this.movePosition = e => {
                    this.change({
                        numLinePosition: e
                    }),
                    this.props.trackInteraction()
                }
                ,
                this._renderNumberLinePoint = e => {
                    const t = ve()(["lt", "gt"]).contains(e.rel);
                    let n;
                    n = t ? Qn._BACKGROUND : e.static ? Qn.BLUE : Qn.GREEN;
                    const r = {
                        fill: n,
                        stroke: e.static ? Qn.BLUE : Qn.GREEN,
                        "stroke-width": t ? 3 : 1
                    }
                      , i = {
                        fill: t ? Qn._BACKGROUND : Qn.GREEN,
                        "stroke-width": t ? 3 : 1
                    }
                      , s = e.isInequality ? {
                        stroke: Qn.GREEN,
                        "fill-opacity": t ? 0 : 1
                    } : {};
                    return me.createElement(Og, {
                        ref: "numberLinePoint",
                        pointSize: 6,
                        coord: [e.numLinePosition, 0],
                        constraints: [ (e, t) => [e[0], t[1]], (t, n) => [this.snapNumLinePosition(e, t[0]), t[1]]],
                        normalStyle: r,
                        highlightStyle: i,
                        onMove: e => {
                            this.movePosition(e[0])
                        }
                        ,
                        isMobile: this.props.apiOptions.isMobile,
                        mobileStyleOverride: s,
                        showTooltips: this.props.showTooltips,
                        xOnlyTooltip: !0
                    })
                }
                ,
                this.handleReverse = () => {
                    const e = Fg[this.props.rel];
                    this.props.onChange({
                        rel: e
                    })
                }
                ,
                this.handleToggleStrict = () => {
                    const e = zg[this.props.rel];
                    this.props.onChange({
                        rel: e
                    })
                }
                ,
                this._getInequalityEndpoint = e => {
                    const t = ve()(["ge", "gt"]).contains(e.rel)
                      , n = e.range
                      , r = 30 * ((n[1] - n[0]) / 400)
                      , i = n[0] - r
                      , s = n[1] + r;
                    return t ? [s, 0] : [i, 0]
                }
                ,
                this._renderInequality = e => {
                    if (e.isInequality) {
                        const t = this._getInequalityEndpoint(e)
                          , n = {
                            arrows: "->",
                            stroke: this.props.apiOptions.isMobile ? Qn.GREEN : Qn.BLUE,
                            strokeWidth: 3.5
                        }
                          , r = ["ge", "gt"].includes(e.rel);
                        return me.createElement(Lg, {
                            start: [(r ? .4 : -.4) + e.numLinePosition, 0],
                            end: t,
                            style: n
                        })
                    }
                    return null
                }
                ,
                this._setupGraphie = (e, t) => {
                    if (!this.isValid())
                        return;
                    const n = this.props.apiOptions.isMobile ? 228 : 400
                      , r = t.range
                      , i = (r[1] - r[0]) / n
                      , s = 30 * i
                      , o = r[0] - s
                      , a = r[1] + s
                      , l = "improper" === this.props.labelStyle || "mixed" === this.props.labelStyle || "non-reduced" === this.props.labelStyle ? -1.5 : -1;
                    e.init({
                        range: [[o, a], [l, 1]],
                        scale: [1 / i, 40],
                        isMobile: this.props.apiOptions.isMobile
                    });
                    const c = (r[0] + r[1]) / 2;
                    e.line([c, 0], [a, 0], {
                        arrows: "->"
                    }),
                    e.line([c, 0], [o, 0], {
                        arrows: "->"
                    })
                }
            }
            focus() {
                return !!this.props.isTickCtrl && (this.refs["tick-ctrl"].focus(),
                !0)
            }
            getDOMNodeForPath(e) {
                return 1 === (null == e ? void 0 : e.length) ? fe.findDOMNode(this.refs[e[0]]) : null
            }
            getUserInput() {
                return {
                    numLinePosition: this.props.numLinePosition,
                    rel: this.props.isInequality ? this.props.rel : "eq",
                    numDivisions: this.props.numDivisions,
                    divisionRange: this.props.divisionRange
                }
            }
            getPromptJSON() {
                return e = this.props,
                t = this.getUserInput(),
                {
                    type: "number-line",
                    options: {
                        range: e.range,
                        numDivisions: e.numDivisions,
                        snapDivisions: e.snapDivisions
                    },
                    userInput: {
                        numLinePosition: t.numLinePosition,
                        numDivisions: t.numDivisions
                    }
                };
                var e, t
            }
            render() {
                const {strings: e} = this.context
                  , t = this.props.divisionRange
                  , n = t[0] + "–" + t[1]
                  , r = this.props.numDivisions < t[0] || this.props.numDivisions > t[1]
                  , i = me.createElement("div", null, me.createElement("input", {
                    type: "button",
                    className: "simple-button",
                    value: e.switchDirection,
                    onClick: this.handleReverse
                }), me.createElement("input", {
                    type: "button",
                    className: "simple-button",
                    value: ve()(["le", "ge"]).contains(this.props.rel) ? e.circleOpen : e.circleFilled,
                    onClick: this.handleToggleStrict
                }));
                let s;
                if (this.props.isTickCtrl) {
                    let n;
                    n = this.props.apiOptions.customKeypad ? va : xu,
                    s = me.createElement("label", null, e.numDivisions, " ", me.createElement(n, {
                        ref: "tick-ctrl",
                        value: this.state.numDivisionsEmpty ? null : this.props.numDivisions || t[0],
                        checkValidity: e => e >= t[0] && e <= t[1],
                        onChange: this.onNumDivisionsChange,
                        onFocus: this._handleTickCtrlFocus,
                        onBlur: this._handleTickCtrlBlur,
                        useArrowKeys: !0,
                        keypadElement: this.props.keypadElement
                    }))
                }
                return me.createElement("div", {
                    className: "perseus-widget perseus-widget-interactive-number-line"
                }, s, this.isValid() ? this.props.isTickCtrl && r ? me.createElement("div", {
                    className: "perseus-error"
                }, e.divisions({
                    divRangeString: n
                })) : this._renderGraphie() : me.createElement("div", {
                    className: "perseus-error"
                }, "Invalid number line configuration."), !this.props.static && this.props.isInequality && i)
            }
        }
        Gg.contextType = it,
        Gg.defaultProps = {
            range: [0, 10],
            labelStyle: "decimal",
            labelRange: [null, null],
            divisionRange: [1, 12],
            labelTicks: !0,
            isTickCtrl: !1,
            isInequality: !1,
            numLinePosition: 0,
            snapDivisions: 2,
            showTooltips: !1,
            rel: "ge",
            apiOptions: Rt.defaults
        };
        var Wg = {
            name: "number-line",
            displayName: "Number line",
            widget: Gg,
            transform: e => {
                const t = ve().pick(e, ["range", "labelRange", "labelStyle", "labelTicks", "divisionRange", "snapDivisions", "isTickCtrl", "isInequality", "showTooltips"])
                  , n = null != e.initialX ? e.initialX : e.range[0]
                  , r = e.range[1] - e.range[0];
                let i;
                return i = null != e.numDivisions ? e.numDivisions : null != e.tickStep ? r / e.tickStep : void 0,
                ve().extend(t, {
                    numLinePosition: n,
                    numDivisions: i,
                    snapDivisions: t.snapDivisions || void 0
                }),
                t
            }
            ,
            staticTransform: e => {
                const t = ve().pick(e, ["range", "labelRange", "labelStyle", "labelTicks", "divisionRange", "snapDivisions", "isInequality"])
                  , n = null != e.correctX ? e.correctX : e.range[0]
                  , r = e.range[1] - e.range[0];
                let i;
                return i = null != e.numDivisions ? e.numDivisions : null != e.tickStep ? r / e.tickStep : void 0,
                ve().extend(t, {
                    numLinePosition: n,
                    numDivisions: i,
                    rel: e.isInequality ? e.correctRel : null,
                    snapDivisions: t.snapDivisions || void 0
                }),
                t
            }
            ,
            scorer: function(e, t) {
                const n = t.range
                  , r = e.divisionRange
                  , i = null != t.initialX ? t.initialX : n[0]
                  , s = t.isInequality ? "ge" : "eq"
                  , o = t.correctRel || "eq"
                  , a = Re.Rx.equal(e.numLinePosition, t.correctX || 0)
                  , l = e.numDivisions > r[1] || e.numDivisions < r[0];
                return e.isTickCrtl && l ? {
                    type: "invalid",
                    message: "Number of divisions is outside the allowed range."
                } : a && o === e.rel ? {
                    type: "points",
                    earned: 1,
                    total: 1,
                    message: null
                } : e.numLinePosition === i && e.rel === s ? {
                    type: "invalid",
                    message: null
                } : {
                    type: "points",
                    earned: 0,
                    total: 1,
                    message: null
                }
            }
        };
        class Vg extends me.Component {
            render() {
                return me.createElement("div", {
                    className: "card-wrap " + Nt.INTERACTIVE,
                    style: {
                        width: this.props.width
                    }
                }, me.createElement("div", {
                    className: "card placeholder",
                    style: {
                        height: this.props.width
                    }
                }))
            }
        }
        class $g extends me.Component {
            render() {
                return me.createElement("div", {
                    className: "card-wrap " + Nt.INTERACTIVE
                }, me.createElement("div", {
                    className: "card drag-hint"
                }))
            }
        }
        class jg extends me.Component {
            constructor(...e) {
                super(...e),
                this.mouseMoveUpBound = void 0,
                this.state = {
                    dragging: !1
                },
                this.bindMouseMoveUp = () => {
                    this.mouseMoveUpBound = !0,
                    ke()(document).on("mousemove", this.onMouseMove),
                    ke()(document).on("mouseup", this.onMouseUp)
                }
                ,
                this.unbindMouseMoveUp = () => {
                    this.mouseMoveUpBound = !1,
                    ke()(document).off("mousemove", this.onMouseMove),
                    ke()(document).off("mouseup", this.onMouseUp)
                }
                ,
                this.onMouseDown = e => {
                    e.preventDefault();
                    const t = vn.extractPointerLocation(e);
                    t && (this.setState({
                        dragging: !0
                    }),
                    this.bindMouseMoveUp(),
                    this.props.onMouseDown && this.props.onMouseDown(t, this))
                }
                ,
                this.onMouseMove = e => {
                    if (!this.state.dragging)
                        return;
                    e.preventDefault();
                    const t = vn.extractPointerLocation(e);
                    t && this.props.onMouseMove && this.props.onMouseMove(t)
                }
                ,
                this.onMouseUp = e => {
                    e.preventDefault();
                    const t = vn.extractPointerLocation(e);
                    t && (this.setState({
                        dragging: !1
                    }),
                    this.unbindMouseMoveUp(),
                    this.props.onMouseUp && this.props.onMouseUp(t))
                }
            }
            componentDidMount() {
                this.mouseMoveUpBound = !1,
                document.addEventListener("touchmove", this.onMouseMove, !!vn.supportsPassiveEvents() && {
                    passive: !1
                })
            }
            shouldComponentUpdate(e, t) {
                return this.props.floating || e.floating || this.props.content !== e.content || this.props.fakeRef !== e.fakeRef
            }
            componentDidUpdate(e, t) {
                if (this.props.animating && !e.animating && this.props.animateTo && this.props.startOffset) {
                    const e = 15 * Math.sqrt(Math.sqrt(Math.pow(this.props.animateTo.left - this.props.startOffset.left, 2) + Math.pow(this.props.animateTo.top - this.props.startOffset.top, 2)));
                    ke()(fe.findDOMNode(this)).animate(this.props.animateTo, Math.max(e, 1), this.props.onAnimationEnd)
                }
            }
            componentWillUnmount() {
                this.mouseMoveUpBound && (Ot.error("Removing an element with bound event handlers.", s.D1.Internal),
                this.unbindMouseMoveUp(),
                vn.resetTouchHandlers()),
                document.removeEventListener("touchmove", this.onMouseMove)
            }
            render() {
                let e = {};
                var t, n;
                this.props.floating && (e = {
                    position: "absolute",
                    left: null == (t = this.props.startOffset) ? void 0 : t.left,
                    top: null == (n = this.props.startOffset) ? void 0 : n.top
                });
                this.props.width && (e.width = this.props.width);
                const r = ["card"];
                this.props.stack && r.push("stack"),
                this.props.floating && !this.props.animating && this.props.mouse && this.props.startMouse && (r.push("dragging"),
                e.left += this.props.mouse.left - this.props.startMouse.left,
                e.top += this.props.mouse.top - this.props.startMouse.top);
                const i = ve().pick(this.props, "content")
                  , s = this.props.animating ? ke().noop : this.onMouseDown;
                return me.createElement("div", {
                    className: "card-wrap " + Nt.INTERACTIVE,
                    style: e,
                    onMouseDown: s,
                    onTouchStart: s,
                    onTouchEnd: this.onMouseUp,
                    onTouchCancel: this.onMouseUp
                }, me.createElement("div", {
                    className: r.join(" ")
                }, me.createElement(ea, nt({}, i, {
                    linterContext: this.props.linterContext,
                    strings: this.context.strings
                }))))
            }
        }
        jg.contextType = it,
        jg.defaultProps = {
            stack: !1,
            animating: !1,
            linterContext: se
        };
        const Kg = "horizontal";
        class Zg extends me.Component {
            constructor(...e) {
                super(...e),
                this.state = {
                    current: [],
                    dragging: !1,
                    placeholderIndex: null,
                    dragKey: null,
                    animating: !1,
                    dragContent: null,
                    dragWidth: null,
                    dragHeight: null,
                    offsetPos: null,
                    animateTo: null,
                    grabPos: null
                },
                this.onClick = (e, t, n, r) => {
                    const i = ke()(fe.findDOMNode(r))
                      , s = this.state.current.slice();
                    let o, a = null;
                    "current" === e ? (s.splice(t, 1),
                    o = this.state.current[t],
                    a = t) : "bank" === e && (o = this.props.options[t]),
                    this.setState({
                        current: s,
                        dragging: !0,
                        placeholderIndex: a,
                        dragKey: o.key,
                        dragContent: o.content,
                        dragWidth: i.width(),
                        dragHeight: i.height(),
                        grabPos: n,
                        mousePos: n,
                        offsetPos: i.position()
                    })
                }
                ,
                this.onRelease = e => {
                    const t = this.refs.dragging;
                    if (null == t)
                        return;
                    const n = this.isCardInBank(t)
                      , r = this.state.placeholderIndex || 0
                      , i = () => {
                        const e = this.state.current.slice();
                        if (!n) {
                            const t = {
                                content: this.state.dragContent,
                                key: ve().uniqueId("perseus_draggable_card_"),
                                width: this.state.dragWidth
                            };
                            e.splice(r, 0, t)
                        }
                        this.props.onChange({
                            current: e
                        }),
                        this.setState({
                            current: e,
                            dragging: !1,
                            placeholderIndex: null,
                            animating: !1
                        }),
                        this.props.trackInteraction()
                    }
                      , s = ke()(fe.findDOMNode(t)).position();
                    let o = null;
                    n ? ve().each(this.props.options, (function(e, t) {
                        if (e.content === this.state.dragContent) {
                            const e = fe.findDOMNode(this.refs["bank" + t]);
                            o = ke()(e).position()
                        }
                    }
                    ), this) : null != this.refs.placeholder && (o = ke()(fe.findDOMNode(this.refs.placeholder)).position()),
                    null == o ? i() : this.setState({
                        offsetPos: s,
                        animateTo: o,
                        onAnimationEnd: i,
                        animating: !0,
                        dragging: !1
                    })
                }
                ,
                this.onMouseMove = e => {
                    const t = this.refs.dragging;
                    if (null == t)
                        return;
                    let n;
                    n = this.isCardInBank(t) ? null : this.findCorrectIndex(t, this.state.current),
                    this.setState({
                        mousePos: e,
                        placeholderIndex: n
                    })
                }
                ,
                this.findCorrectIndex = (e, t) => {
                    const n = this.props.layout === Kg
                      , r = ke()(fe.findDOMNode(this.refs.dragList))
                      , i = r.offset().left
                      , s = r.offset().top
                      , o = ke()(fe.findDOMNode(e)).offset().left - i
                      , a = ke()(fe.findDOMNode(e)).offset().top - s;
                    let l = 0
                      , c = 0
                      , h = 0;
                    return n ? ve().each(t, (function(e, t) {
                        const n = fe.findDOMNode(this.refs["sortable" + t])
                          , r = ke()(n).outerWidth(!0);
                        o > c + r / 2 && (l += 1),
                        c += r
                    }
                    ), this) : ve().each(t, (function(e, t) {
                        const n = fe.findDOMNode(this.refs["sortable" + t])
                          , r = ke()(n).outerHeight(!0);
                        a > h + r / 2 && (l += 1),
                        h += r
                    }
                    ), this),
                    l
                }
                ,
                this.isCardInBank = e => {
                    if (null == e)
                        return !1;
                    const t = this.props.layout === Kg
                      , n = ke()(fe.findDOMNode(e))
                      , r = ke()(fe.findDOMNode(this.refs.bank))
                      , i = n.offset()
                      , s = r.offset()
                      , o = n.outerHeight(!0)
                      , a = r.outerHeight(!0)
                      , l = r.outerWidth(!0)
                      , c = fe.findDOMNode(this.refs.dragList);
                    ke()(c).width();
                    const h = n.outerWidth(!0);
                    return t ? i.top + o / 2 < s.top + a : i.left + h / 2 < s.left + l
                }
                ,
                this.setListValues = e => {
                    const t = e.map((e => ({
                        content: e
                    })));
                    this.props.onChange({
                        current: t
                    }),
                    this.setState({
                        current: t
                    })
                }
            }
            UNSAFE_componentWillReceiveProps(e) {
                ve().isEqual(this.props.current, e.current) || this.setState({
                    current: e.current
                })
            }
            getUserInput() {
                return {
                    current: ve().map(this.props.current, (function(e) {
                        return e.content
                    }
                    ))
                }
            }
            getPromptJSON() {
                return e = this.props,
                t = this.getUserInput(),
                {
                    type: "orderer",
                    options: {
                        options: e.options.map((e => e.content))
                    },
                    userInput: {
                        values: t.current
                    }
                };
                var e, t
            }
            render() {
                const e = this.state.dragging && me.createElement(jg, {
                    ref: "dragging",
                    floating: !0,
                    content: this.state.dragContent,
                    startOffset: this.state.offsetPos,
                    startMouse: this.state.grabPos,
                    mouse: this.state.mousePos,
                    width: this.state.dragWidth,
                    onMouseUp: this.onRelease,
                    onMouseMove: this.onMouseMove,
                    key: this.state.dragKey || "draggingCard",
                    linterContext: this.props.linterContext
                })
                  , t = this.state.animating && me.createElement(jg, {
                    floating: !0,
                    animating: !0,
                    content: this.state.dragContent,
                    startOffset: this.state.offsetPos,
                    width: this.state.dragWidth,
                    animateTo: this.state.animateTo,
                    onAnimationEnd: this.state.onAnimationEnd,
                    key: this.state.dragKey || "draggingCard",
                    linterContext: this.props.linterContext
                })
                  , n = ve().map(this.state.current, (function(e, t) {
                    return me.createElement(jg, {
                        key: `sortableCard${t}`,
                        ref: "sortable" + t,
                        fakeRef: "sortable" + t,
                        floating: !1,
                        content: e.content,
                        width: e.width,
                        linterContext: this.props.linterContext,
                        onMouseDown: this.state.animating ? ke().noop : this.onClick.bind(null, "current", t)
                    })
                }
                ), this);
                if (null != this.state.placeholderIndex) {
                    const e = me.createElement(Vg, {
                        ref: "placeholder",
                        width: this.state.dragWidth,
                        height: this.state.dragHeight,
                        key: "placeholder"
                    });
                    n.splice(this.state.placeholderIndex, 0, e)
                }
                const r = n.length > 0;
                n.push(e, t);
                const i = me.createElement("div", {
                    className: "perseus-clearfix draggable-box"
                }, !r && me.createElement($g, null), me.createElement("div", {
                    ref: "dragList"
                }, n))
                  , s = me.createElement("div", {
                    ref: "bank",
                    className: "bank perseus-clearfix"
                }, ve().map(this.props.options, ( (e, t) => me.createElement(jg, {
                    ref: "bank" + t,
                    floating: !1,
                    content: e.content,
                    stack: !0,
                    key: t,
                    linterContext: this.props.linterContext,
                    onMouseDown: this.state.animating ? ke().noop : this.onClick.bind(null, "bank", t),
                    onMouseMove: this.onMouseMove,
                    onMouseUp: this.onRelease
                })), this));
                return me.createElement("div", {
                    className: "draggy-boxy-thing orderer height-" + this.props.height + " layout-" + this.props.layout + " above-scratchpad blank-background perseus-clearfix " + Nt.INTERACTIVE,
                    ref: "orderer"
                }, s, i)
            }
        }
        Zg.defaultProps = {
            current: [],
            options: [],
            correctOptions: [],
            height: "normal",
            layout: Kg,
            linterContext: se
        };
        var Yg = {
            name: "orderer",
            displayName: "Orderer",
            hidden: !0,
            widget: Zg,
            isLintable: !0,
            scorer: function(e, t) {
                return 0 === e.current.length ? {
                    type: "invalid",
                    message: null
                } : {
                    type: "points",
                    earned: ve().isEqual(e.current, ve().pluck(t.correctOptions, "content")) ? 1 : 0,
                    total: 1,
                    message: null
                }
            }
        };
        class Xg extends me.Component {
            constructor(...e) {
                super(...e),
                this.isWidget = !0,
                this.change = (...e) => St.apply(this, e)
            }
            render() {
                return me.createElement(ea, {
                    content: this.props.content,
                    apiOptions: this.props.apiOptions,
                    linterContext: this.props.linterContext,
                    strings: this.context.strings
                })
            }
        }
        Xg.contextType = it,
        Xg.defaultProps = {
            content: "",
            linterContext: se
        };
        var Jg = {
            name: "passage-ref-target",
            displayName: "PassageRefTarget",
            defaultAlignment: "inline",
            widget: Xg,
            hidden: !0,
            transform: e => ve().pick(e, "content"),
            version: {
                major: 0,
                minor: 0
            },
            isLintable: !0,
            scorer: () => Oa()
        };
        class Qg extends me.Component {
            constructor(e) {
                super(e),
                this.iframeRef = me.createRef(),
                this.locale = void 0,
                this.isWidget = !0,
                this.state = {
                    url: null,
                    banner: null
                },
                this.getPhetCompatibleLocale = e => {
                    switch (e) {
                    case "pt-pt":
                        return "pt";
                    case "zh-hans":
                        return "zh_CN";
                    case "zh-hant":
                        return "zh_TW";
                    case "fa-af":
                        return "fa_DA";
                    default:
                        return e
                    }
                }
                ,
                this.displayLoadFailure = () => {
                    this.setState({
                        url: null,
                        banner: {
                            message: this.context.strings.simulationLoadFail,
                            kind: "critical"
                        }
                    })
                }
                ,
                this.locale = this.getPhetCompatibleLocale(gt().kaLocale)
            }
            async componentDidMount() {
                await this.updateSimState(this.props.url)
            }
            async componentDidUpdate(e) {
                e.url !== this.props.url && await this.updateSimState(this.props.url)
            }
            getPromptJSON() {
                return Cc("phet-simulation")
            }
            async updateSimState(e) {
                const t = ev(e, this.locale);
                if (null === t)
                    return void this.displayLoadFailure();
                if (!(await fetch(t)).ok)
                    return void this.displayLoadFailure();
                const n = await this.showLocaleWarning(t);
                this.setState({
                    url: t,
                    banner: n ? {
                        message: this.context.strings.simulationLocaleWarning,
                        kind: "warning"
                    } : null
                })
            }
            async showLocaleWarning(e) {
                if (!e)
                    return !1;
                const t = /https:\/\/phet\.colorado\.edu\/sims\/html\/([a-zA-Z0-9-]+)\/.*/g.exec(e.toString());
                if (null === t)
                    return !1;
                const n = t[1]
                  , r = await fetch(`https://phet.colorado.edu/sims/html/${n}/latest/string-map.json`);
                if (!r.ok)
                    return !1;
                let i;
                try {
                    i = await r.json()
                } catch (e) {
                    return !1
                }
                const s = Object.keys(i)
                  , o = this.locale.split("_")[0];
                for (const e of s)
                    if (o === e.split("_")[0])
                        return !1;
                return !0
            }
            render() {
                var e;
                return me.createElement(le.G7, {
                    style: tv.widgetContainer
                }, null !== this.state.banner && me.createElement(le.G7, {
                    style: {
                        marginBottom: Nn
                    }
                }, me.createElement(Be.Z, {
                    layout: "floating",
                    kind: this.state.banner.kind,
                    text: this.state.banner.message
                })), me.createElement(le.G7, {
                    style: tv.iframeContainer
                }, me.createElement("iframe", {
                    ref: this.iframeRef,
                    title: this.props.description,
                    sandbox: "allow-same-origin allow-scripts",
                    className: (0,
                    pe.css)(tv.iframeResponsive),
                    src: null == (e = this.state.url) ? void 0 : e.toString(),
                    allow: "fullscreen"
                })), null !== this.state.url && me.createElement(Je.Z, {
                    icon: Qe,
                    onClick: () => {
                        var e;
                        null == (e = this.iframeRef.current) || e.requestFullscreen()
                    }
                    ,
                    kind: "secondary",
                    "aria-label": "Fullscreen",
                    style: {
                        marginTop: 5,
                        marginBottom: 5,
                        alignSelf: "flex-end"
                    }
                }))
            }
        }
        Qg.contextType = it;
        const ev = (e, t) => {
            if (!URL.canParse(e))
                return null;
            const n = new URL(e);
            return "https://phet.colorado.edu" !== n.origin ? null : (n.searchParams.set("locale", t),
            n)
        }
          , tv = pe.StyleSheet.create({
            widgetContainer: {
                borderRadius: 6,
                borderWidth: 1,
                borderColor: "#CCC",
                padding: xe.W0.medium_16,
                paddingBottom: 0
            },
            iframeContainer: {
                position: "relative",
                overflow: "hidden",
                width: "100%",
                paddingTop: "56.25%"
            },
            iframeResponsive: {
                borderWidth: 0,
                position: "absolute",
                top: 0,
                left: 0,
                bottom: 0,
                right: 0,
                width: "100%",
                height: "100%"
            }
        });
        var nv = {
            name: "phet-simulation",
            displayName: "PhET Simulation",
            widget: Qg,
            isLintable: !0
        };
        const {deepEq: rv} = vn;
        class iv extends me.Component {
            constructor(...e) {
                super(...e),
                this.shouldSetupGraphie = void 0,
                this._isMounted = !1,
                this.horizHairline = void 0,
                this.hairlineRange = void 0,
                this.graphie = void 0,
                this.state = {
                    values: this.props.starting || [1],
                    categoryHeights: {}
                },
                this.DOT_PLOT_POINT_SIZE = () => this.props.apiOptions.isMobile ? 6 : 4,
                this.DOT_PLOT_POINT_PADDING = () => 8,
                this.DOT_TICK_POINT_SIZE = () => 2,
                this.setupGraphie = e => {
                    const t = this;
                    t.shouldSetupGraphie = !1;
                    const n = fe.findDOMNode(t.refs.graphieDiv);
                    ke()(n).empty();
                    const r = fr.createGraphie(n);
                    t.graphie = r,
                    t.graphie.pics = [],
                    t.graphie.dotTicks = [];
                    const i = "bar" === t.props.type
                      , s = "line" === t.props.type
                      , o = "pic" === t.props.type
                      , a = "histogram" === t.props.type
                      , l = "dotplot" === t.props.type
                      , c = o || l
                      , h = {}
                      , p = h
                      , u = this.props.apiOptions.isMobile;
                    p.graph = {
                        lines: [],
                        bars: [],
                        points: [],
                        dividers: []
                    },
                    p.scaleY = t.props.scaleY,
                    p.dimX = t.props.categories.length;
                    const d = u ? [288, 336] : t.props.plotDimensions;
                    if (s)
                        p.dimX += u ? -.2 : 1;
                    else if (a)
                        p.barPad = 0,
                        p.barWidth = 1;
                    else if (i)
                        p.barPad = u ? .08 : .15,
                        p.barWidth = 1 - 2 * p.barPad,
                        p.dimX += (u ? -2 : 2) * p.barPad;
                    else if (c) {
                        p.picBoxHeight = t.props.picBoxHeight,
                        p.picBoxWidthPx = d[0] / t.props.categories.length;
                        const e = d[0] - p.dimX * p.picBoxWidthPx;
                        p.picPad = e / (2 * p.dimX + 2);
                        const n = p.picBoxWidthPx + 2 * p.picPad;
                        p.picPad = p.picPad / n,
                        p.picBoxWidth = p.picBoxWidthPx / n,
                        p.dimX += 2 * p.picPad
                    }
                    l && (p.picBoxHeight = 2 * this.DOT_PLOT_POINT_SIZE() + this.DOT_PLOT_POINT_PADDING()),
                    p.dimY = Math.ceil(t.props.maxY / p.scaleY) * p.scaleY;
                    let m = 25;
                    (i || s) && u && (m = 0 !== t.props.labels[1].length ? 17 : 11),
                    l && (m /= 2),
                    u && c && 0 === t.props.labels[1].length && (m = 0);
                    let f = 25
                      , g = 75;
                    if (u && (i || c)) {
                        const e = Math.max(0, ...Object.values(t.state.categoryHeights));
                        if (e) {
                            let t = 25;
                            c && (t += 10),
                            g = t + e
                        }
                    }
                    if (p.scale = u ? [(d[0] - 4 * m) / p.dimX, (d[1] - (f + g)) / p.dimY] : ve().map([p.dimX, p.dimY], (function(e, t) {
                        return d[t] / e
                    }
                    )),
                    c && (p.scale[1] = p.picBoxHeight / p.scaleY),
                    m /= p.scale[0],
                    f /= p.scale[1],
                    g /= p.scale[1],
                    r.init({
                        range: [[-3 * m, p.dimX + m], [-g, p.dimY + f]],
                        scale: p.scale,
                        isMobile: this.props.apiOptions.isMobile
                    }),
                    r.addMouseLayer({
                        allowScratchpad: !0,
                        setDrawingAreaAvailable: this.props.apiOptions.setDrawingAreaAvailable
                    }),
                    !c) {
                        for (let e = u ? p.scaleY : 0; e <= p.dimY; e += p.scaleY)
                            r.label([0, e], Lt.roundToApprox(e, 2), "left", !0),
                            r.style({
                                stroke: u ? "#e9ebec" : "#000",
                                strokeWidth: 1,
                                opacity: u ? 1 : .3
                            }, (function() {
                                r.line([0, e], [p.dimX, e])
                            }
                            ))
                    }
                    (i || s) && u && !this.props.static && (t.graphie.dragPrompt = r.label([p.dimX / 2, p.dimY / 2], this.context.strings.dragHandles, "center", !1).css("font-weight", "bold").css("color", Qn.KA_GREEN).css("display", "none")),
                    t.setupCategories(h),
                    c && u && (t.graphie.dotPrompt = r.label([p.dimX / 2, p.dimY / 2], this.context.strings.tapAddPoints, "center", !1).css("font-weight", "bold").css("color", Qn.KA_GREEN).css("display", "none")),
                    c && t.drawPicHeights(t.state.values, e.values),
                    r.style({
                        stroke: "#000",
                        strokeWidth: 2,
                        opacity: 1
                    }, (function() {
                        c ? l ? r.style({
                            stroke: u ? Qn.GRAY_G : "#000",
                            strokeWidth: u ? 1 : 2
                        }, ( () => r.line([u ? 0 : .5, 0], [p.dimX - (u ? 0 : .5), 0]))) : (r.line([0, 0], [p.dimX, 0]),
                        0 === t.props.labels[1].length && u || r.style({
                            stroke: u ? Qn.GRAY_G : "#000",
                            strokeWidth: u ? 1 : 2
                        }, ( () => r.line([0, 0], [0, p.dimY])))) : (r.style({
                            stroke: u ? Qn.GRAY_G : "#000",
                            strokeWidth: u ? 1 : 2
                        }, ( () => r.line([u ? 3 * -m : 0, 0], [p.dimX + (u ? m : 0), 0]))),
                        (i || s) && u || r.style({
                            stroke: u ? Qn.GRAY_G : "#000",
                            strokeWidth: u ? 1 : 2
                        }, ( () => r.line([0, 0], [0, p.dimY]))))
                    }
                    )),
                    r.label([p.dimX / 2, u ? -g : -35 / p.scale[1]], t.props.labels[0], u ? "above" : "below", !1).css("font-weight", "bold").css("color", u && Qn.GRAY_F),
                    r.label([(u ? -35 : -60) / p.scale[0], p.dimY / 2], t.props.labels[1], "center", !1).css("font-weight", "bold").css("color", u && Qn.GRAY_F).addClass("rotate"),
                    this.props.apiOptions.isMobile && (this.horizHairline = new Mr(this.graphie,[0, 0],[0, 0],{
                        normalStyle: {
                            strokeWidth: 1
                        }
                    }),
                    this.horizHairline.attr({
                        stroke: Qn.INTERACTIVE
                    }),
                    this.horizHairline.hide(),
                    this.hairlineRange = [[0, p.dimX], [0, p.dimY]])
                }
                ,
                this.showHairlines = e => {
                    this.props.apiOptions.isMobile && (this.horizHairline.moveTo([this.hairlineRange[0][0], e[1]], [this.hairlineRange[0][1], e[1]]),
                    this.horizHairline.show())
                }
                ,
                this.hideHairlines = () => {
                    this.props.apiOptions.isMobile && this.horizHairline.hide()
                }
                ,
                this.labelCategory = (e, t) => {
                    const n = this.props.apiOptions.isMobile
                      , r = this.graphie;
                    let i = !1;
                    const s = (t += "").match(/^\$(.*)\$$/);
                    s && (t = s[1],
                    i = !0);
                    const o = Math.PI / 180 * 45
                      , a = n && !s;
                    return new Promise((s => {
                        r.style({
                            color: n ? Qn.GRAY_G : "inherit",
                            transform: a ? "translateX(-50%) translateX(5px) translateY(-50%) rotate(-45deg)" : "none",
                            transformOrigin: "100%"
                        }, ( () => {
                            const l = r.label([e, n ? -.5 : 0], t, "below", i)
                              , c = 14 + (a ? Math.round(l.height() * Math.cos(o) + (l.width() + 5) * Math.sin(o)) : l.height());
                            s({
                                category: t,
                                height: c
                            })
                        }
                        ))
                    }
                    ))
                }
                ,
                this.setupCategories = e => {
                    const t = this
                      , n = e
                      , r = t.graphie
                      , i = this.props.apiOptions.isMobile
                      , s = [];
                    "histogram" === t.props.type ? (ve().times(t.props.categories.length - 1, (function(n) {
                        t.setupBar({
                            index: n,
                            startHeight: t.state.values[n],
                            config: e,
                            isHistogram: !0
                        })
                    }
                    )),
                    ve().each(t.props.categories, (function(e, o) {
                        const a = .5 + o * n.barWidth;
                        s.push(t.labelCategory(a, e));
                        const l = 6 / n.scale[1];
                        r.style({
                            stroke: "#000",
                            strokeWidth: i ? 1 : 2,
                            opacity: 1
                        }, (function() {
                            r.line([a, -l], [a, 0])
                        }
                        ))
                    }
                    ))) : ve().each(t.props.categories, (function(o, a) {
                        const l = t.state.values[a];
                        let c;
                        "bar" === t.props.type ? c = t.setupBar({
                            index: a,
                            startHeight: l,
                            config: e,
                            isHistogram: !1
                        }) : "line" === t.props.type ? c = t.setupLine(a, l, e) : "pic" === t.props.type ? c = t.setupPic(a, e) : "dotplot" === t.props.type && (c = t.setupDotplot(a, e));
                        let h = 0
                          , p = -6 / n.scale[1];
                        "dotplot" !== t.props.type || i || (h = -p),
                        "dotplot" === t.props.type ? a % t.props.labelInterval != 0 && a !== t.props.categories.length - 1 || (s.push(t.labelCategory(c, o)),
                        h *= 1.5,
                        p *= 1.5) : s.push(t.labelCategory(c, o)),
                        r.style({
                            stroke: i ? Qn.GRAY_G : "#000",
                            strokeWidth: i ? 1 : 2,
                            opacity: 1
                        }, (function() {
                            r.line([c, h], [c, p])
                        }
                        ))
                    }
                    )),
                    Promise.all(s).then((e => {
                        if (t._isMounted) {
                            const n = {};
                            e.forEach(( ({category: e, height: t}) => n[e] = t)),
                            t.setState({
                                categoryHeights: n
                            })
                        }
                    }
                    ))
                }
                ,
                this._clampValue = (e, t, n) => Math.max(Math.min(e, n), t),
                this._maybeShowDragPrompt = () => {
                    null != this.graphie.dragPrompt && (this.graphie.dragPrompt[0].style.display = "inline")
                }
                ,
                this._maybeHideDragPrompt = () => {
                    null != this.graphie.dragPrompt && (this.graphie.dragPrompt[0].style.display = "none")
                }
                ,
                this.setupBar = e => {
                    const t = this.props.apiOptions.isMobile
                      , n = e.index
                      , r = e.startHeight
                      , i = e.config
                      , s = e.isHistogram
                      , o = this
                      , a = o.graphie
                      , l = i.barWidth / 2;
                    let c;
                    c = s ? .5 + n * i.barWidth + l : (t ? l : .5 + i.barPad) + n;
                    const h = function(e, n) {
                        const r = a.scalePoint(0);
                        if (i.graph.bars[e].scale(1, Math.max(t ? .2 : .01, n / i.scaleY), r[0], r[1]),
                        s) {
                            const t = i.graph.dividers[e - 1]
                              , s = i.graph.dividers[e];
                            if (t) {
                                const s = Math.min(o.state.values[e - 1], n);
                                t.scale(1, Math.max(.01, s / i.scaleY), r[0], r[1])
                            }
                            if (s) {
                                const t = Math.min(o.state.values[e + 1], n);
                                s.scale(1, Math.max(.01, t / i.scaleY), r[0], r[1])
                            }
                        }
                    };
                    if (a.style({
                        stroke: "none",
                        fill: t ? Qn.BLUE_C : Qn.LIGHT_BLUE,
                        opacity: 1
                    }, (function() {
                        i.graph.bars[n] = a.path([[c - l, 0], [c - l, i.scaleY], [c + l, i.scaleY], [c + l, 0], [c - l, 0]])
                    }
                    )),
                    s && n > 0 && a.style({
                        stroke: "#000",
                        strokeWidth: 1,
                        opacity: .3
                    }, (function() {
                        i.graph.dividers.push(a.path([[c - l, 0], [c - l, i.scaleY]]))
                    }
                    )),
                    t) {
                        const e = i.scaleY / o.props.snapsPerLine;
                        i.graph.lines[n] = cs.addMaybeMobileMovablePoint(this, {
                            coord: [c, r],
                            constraints: [ (t, n, r) => [c, this._clampValue(Math.round(t[1] / e) * e, 0, i.dimY)]],
                            onMoveStart: function() {
                                i.graph.bars[n].attr({
                                    fill: Qn.INTERACTIVE
                                })
                            },
                            onMove: function() {
                                const e = i.graph.lines[n].coord()[1]
                                  , t = [...o.state.values];
                                t[n] = e,
                                o.setState({
                                    values: t
                                }),
                                o.changeAndTrack({
                                    values: t
                                }),
                                o._maybeHideDragPrompt(),
                                h(n, e)
                            },
                            onMoveEnd: function() {
                                i.graph.bars[n].attr({
                                    fill: Qn.BLUE_C
                                })
                            }
                        }),
                        i.graph.lines[n].state.visibleShape.wrapper.style.zIndex = "1",
                        o._maybeShowDragPrompt()
                    } else
                        i.graph.lines[n] = a.addMovableLineSegment({
                            coordA: [c - l, r],
                            coordZ: [c + l, r],
                            snapY: i.scaleY / o.props.snapsPerLine,
                            constraints: {
                                constrainX: !0
                            },
                            normalStyle: {
                                stroke: Qn.INTERACTIVE,
                                "stroke-width": this.props.static ? 0 : 4
                            }
                        }),
                        i.graph.lines[n].onMove = function(e, t) {
                            let r = this.coordA[1];
                            (r < 0 || r > i.dimY) && (r = Math.min(Math.max(r, 0), i.dimY),
                            this.coordA[1] = this.coordZ[1] = r,
                            this.transform());
                            const s = [...o.state.values];
                            s[n] = r,
                            o.setState({
                                values: s
                            }),
                            o.changeAndTrack({
                                values: s
                            }),
                            h(n, r)
                        }
                        ;
                    return h(n, r),
                    c
                }
                ,
                this.setupLine = (e, t, n) => {
                    const r = this.props.apiOptions.isMobile
                      , i = this
                      , s = n
                      , o = i.graphie
                      , a = e + (r ? .4 : 1);
                    if (r) {
                        const r = n.scaleY / i.props.snapsPerLine;
                        s.graph.points[e] = cs.addMaybeMobileMovablePoint(this, {
                            coord: [a, t],
                            constraints: [ (e, t, i) => [a, this._clampValue(Math.round(e[1] / r) * r, 0, n.dimY)]],
                            onMove: function() {
                                const t = s.graph.points[e].coord()[1]
                                  , n = [...i.state.values];
                                n[e] = t,
                                i.setState({
                                    values: n
                                }),
                                i.changeAndTrack({
                                    values: n
                                }),
                                i._maybeHideDragPrompt()
                            }
                        }),
                        i._maybeShowDragPrompt(),
                        e > 0 && (s.graph.lines[e] = cs.addMovableLine(o, {
                            points: [s.graph.points[e - 1], s.graph.points[e]],
                            constraints: cs.MovablePoint.constraints.fixed(),
                            normalStyle: {
                                stroke: Qn.BLUE_C,
                                "stroke-width": 2
                            },
                            highlightStyle: {
                                stroke: Qn.BLUE_C,
                                "stroke-width": 2
                            }
                        }))
                    } else
                        s.graph.points[e] = o.addMovablePoint({
                            coord: [a, t],
                            constraints: {
                                constrainX: !0
                            },
                            normalStyle: {
                                fill: Qn.INTERACTIVE,
                                stroke: Qn.INTERACTIVE
                            },
                            snapY: s.scaleY / i.props.snapsPerLine
                        }),
                        s.graph.points[e].onMove = function(t, n) {
                            n = Math.min(Math.max(n, 0), s.dimY);
                            const r = [...i.state.values];
                            return r[e] = n,
                            i.setState({
                                values: r
                            }),
                            i.changeAndTrack({
                                values: r
                            }),
                            [t, n]
                        }
                        ,
                        e > 0 && (s.graph.lines[e] = o.addMovableLineSegment({
                            pointA: s.graph.points[e - 1],
                            pointZ: s.graph.points[e],
                            constraints: {
                                fixed: !0
                            },
                            normalStyle: {
                                stroke: "#9ab8ed",
                                "stroke-width": 2
                            }
                        }));
                    return a
                }
                ,
                this.setupDotplot = (e, t) => {
                    const n = this.graphie
                      , r = this.props.apiOptions.isMobile;
                    return this.setupTiledPlot(e, r ? .5 : 1, t, ( (e, t) => n.ellipse([e, t], [this.DOT_PLOT_POINT_SIZE() / n.scale[0], this.DOT_PLOT_POINT_SIZE() / n.scale[1]], {
                        fill: Qn.INTERACTIVE,
                        stroke: Qn.INTERACTIVE
                    })))
                }
                ,
                this.setupPic = (e, t) => {
                    const n = this.graphie;
                    return this.setupTiledPlot(e, 0, t, ( (e, t) => {
                        const r = n.scalePoint([e, t])
                          , i = this.props.picSize;
                        return n.raphael.image(this.props.picUrl, r[0] - i / 2, r[1] - i / 2, i, i)
                    }
                    ))
                }
                ,
                this.setupTiledPlot = (e, t, n, r) => {
                    const i = this
                      , s = n
                      , o = i.graphie
                      , a = o.pics
                      , l = o.dotTicks
                      , c = e + .5 + s.picPad;
                    o.mouselayer.canvas.style.touchAction = "none",
                    a[e] = [],
                    l[e] = [];
                    const h = Math.round(s.dimY / s.scaleY) + 1;
                    return ve()(h).times((function(n) {
                        const h = ((n -= 1) + .5) * s.scaleY
                          , p = c - s.picBoxWidth / 2
                          , u = h + .5 * s.scaleY
                          , d = o.scalePoint([p, u + t])
                          , m = o.mouselayer.rect(d[0], d[1], s.picBoxWidthPx, s.picBoxHeight);
                        ke()(m[0]).css({
                            fill: "#000",
                            opacity: 0,
                            cursor: "pointer"
                        }).on("vmousedown", (function(n) {
                            n.preventDefault(),
                            i.whichPicClicked = e,
                            i.setPicHeight(e, u),
                            ke()(document).on("vmouseup.plotTile", (function(e) {
                                ke()(document).unbind(".plotTile")
                            }
                            )),
                            ke()(document).on("vmousemove.plotTile", (function(e) {
                                e.preventDefault();
                                const n = o.getMouseCoord(e)[1]
                                  , r = Math.floor(n - t)
                                  , a = (Math.max(-1, Math.floor(r / s.scaleY)) + .5) * s.scaleY
                                  , l = Math.min(a + .5 * s.scaleY, s.dimY);
                                i.setPicHeight(i.whichPicClicked, l)
                            }
                            ))
                        }
                        )),
                        n < 0 || (a[e][n] = r(c, h + t),
                        l[e][n] = o.ellipse([c, h + t], [i.DOT_TICK_POINT_SIZE() / o.scale[0], i.DOT_TICK_POINT_SIZE() / o.scale[1]], {
                            fill: "#dee1e3",
                            stroke: "#dee1e3"
                        }))
                    }
                    )),
                    c
                }
                ,
                this.setPicHeight = (e, t) => {
                    const n = [...this.state.values];
                    n[e] = t,
                    this.drawPicHeights(n, this.state.values),
                    this.setState({
                        values: n
                    }),
                    this.changeAndTrack({
                        values: n
                    })
                }
                ,
                this.changeAndTrack = e => {
                    this.props.onChange(e),
                    this.props.trackInteraction()
                }
                ,
                this.drawPicHeights = (e, t) => {
                    const n = this
                      , r = n.graphie
                      , i = r.pics
                      , s = this.props.apiOptions.isMobile;
                    if (s) {
                        const t = e.every((e => 0 === e));
                        r.dotPrompt[0].style.display = t ? "inline" : "none"
                    }
                    ve().each(i, (function(i, o) {
                        ve().each(i, (function(i, a) {
                            const l = (a + 1) * n.props.scaleY
                              , c = l <= e[o];
                            if ("dotplot" === n.props.type) {
                                const e = l <= t[o];
                                c && !e && i.animate({
                                    "stroke-width": 8
                                }, 75, ( () => i.animate({
                                    "stroke-width": 2
                                }, 75)))
                            }
                            ke()(i[0]).css({
                                display: c ? "inline" : "none"
                            }),
                            r.dotTicks[o][a][0].style.display = c || !s ? "none" : "inline"
                        }
                        ))
                    }
                    ))
                }
            }
            componentDidMount() {
                this._isMounted = !0,
                this.setupGraphie(this.state)
            }
            UNSAFE_componentWillReceiveProps(e) {
                this.shouldSetupGraphie = ve().any(["type", "labels", "categories", "scaleY", "maxY", "snapsPerLine", "picUrl", "labelInterval", "static"], (t => !ve().isEqual(this.props[t], e[t])), this),
                ve().isEqual(this.props.starting, e.starting) || ve().isEqual(this.state.values, e.starting) || (this.shouldSetupGraphie = !0,
                this.setState({
                    values: e.starting
                }))
            }
            componentDidUpdate(e, t) {
                this.shouldSetupGraphie = this.shouldSetupGraphie || !ve().isEqual(this.state.categoryHeights, t.categoryHeights),
                this.shouldSetupGraphie && this.setupGraphie(t)
            }
            componentWillUnmount() {
                this._isMounted = !1
            }
            getUserInput() {
                return this.state.values
            }
            getPromptJSON() {
                return Cc("plotter")
            }
            render() {
                const e = {
                    marginBottom: this.props.labels[0] ? 75 : 0
                };
                return me.createElement("div", {
                    className: "perseus-widget-plotter graphie " + Nt.INTERACTIVE,
                    ref: "graphieDiv",
                    style: e
                })
            }
        }
        iv.contextType = it,
        iv.defaultProps = {
            type: "bar",
            labels: ["", ""],
            categories: [""],
            scaleY: 1,
            maxY: 10,
            snapsPerLine: 2,
            picSize: 40,
            picBoxHeight: 48,
            picUrl: "",
            plotDimensions: [380, 300],
            labelInterval: 1
        };
        var sv = {
            name: "plotter",
            displayName: "Plotter",
            hidden: !0,
            widget: iv,
            staticTransform: ve().identity,
            scorer: function(e, t) {
                return rv(e, t.starting) ? {
                    type: "invalid",
                    message: null
                } : {
                    type: "points",
                    earned: rv(e, t.correct) ? 1 : 0,
                    total: 1,
                    message: null
                }
            }
        };
        class ov extends me.Component {
            getDOMNodeForPath(e) {
                return null
            }
            getPromptJSON() {
                return Cc("python-program")
            }
            render() {
                const e = (t = this.props.programID,
                Mc(`/python-program/${t}/embedded`));
                var t;
                const n = {
                    height: this.props.height,
                    width: "100%"
                }
                  , r = ["allow-popups", "allow-same-origin", "allow-scripts", "allow-top-navigation"].join(" ");
                return me.createElement(le.G7, {
                    style: av.container
                }, me.createElement("iframe", {
                    sandbox: r,
                    src: e,
                    style: n,
                    allowFullScreen: !0
                }))
            }
        }
        ov.defaultProps = {
            height: 400
        };
        const av = pe.StyleSheet.create({
            container: {
                margin: "auto",
                width: "100%"
            }
        });
        var lv = {
            name: "python-program",
            displayName: "Python Program",
            widget: ov
        };
        const {shuffle: cv} = vn;
        class hv extends me.Component {
            constructor(...e) {
                super(...e),
                this._isMounted = !1,
                this.state = {
                    changed: !1
                },
                this.handleChange = e => {
                    this._isMounted && this.setState({
                        changed: !0
                    }, ( () => {
                        setTimeout(( () => {
                            this.props.onChange(e),
                            this.props.trackInteraction()
                        }
                        ), 0)
                    }
                    ))
                }
                ,
                this.moveOptionToIndex = (e, t) => {
                    this.refs.sortable.moveOptionToIndex(e, t)
                }
            }
            componentDidMount() {
                this._isMounted = !0
            }
            componentWillUnmount() {
                this._isMounted = !1
            }
            getUserInput() {
                return {
                    options: this.refs.sortable.getOptions(),
                    changed: this.state.changed
                }
            }
            getPromptJSON() {
                return {
                    type: "sorter",
                    userInput: {
                        values: (e = this.getUserInput()).options,
                        changed: e.changed
                    }
                };
                var e
            }
            render() {
                const e = cv(this.props.correct, this.props.problemNum, !0)
                  , {apiOptions: t} = this.props
                  , n = t.isMobile ? 8 : 5;
                return me.createElement("div", {
                    className: "perseus-widget-sorter perseus-clearfix"
                }, me.createElement(Lf, {
                    options: e,
                    layout: this.props.layout,
                    margin: n,
                    padding: this.props.padding,
                    onChange: this.handleChange,
                    linterContext: this.props.linterContext,
                    ref: "sortable"
                }))
            }
        }
        hv.defaultProps = {
            correct: [],
            layout: "horizontal",
            padding: !0,
            problemNum: 0,
            onChange: function() {},
            linterContext: se
        };
        var pv = {
            name: "sorter",
            displayName: "Sorter",
            widget: hv,
            isLintable: !0,
            scorer: function(e, t) {
                return e.changed ? {
                    type: "points",
                    earned: vn.deepEq(e.options, t.correct) ? 1 : 0,
                    total: 1,
                    message: null
                } : {
                    type: "invalid",
                    message: null
                }
            }
        };
        const uv = function(e) {
            return e.filter((function(e) {
                return e.some((e => e))
            }
            ))
        };
        const {assert: dv} = Kn
          , mv = function(e, t) {
            return ["" + e, "" + t]
        }
          , fv = function(e) {
            return dv(ve().isArray(e) && 2 === e.length),
            +e[0]
        }
          , gv = function(e) {
            return dv(ve().isArray(e) && 2 === e.length),
            +e[1]
        }
          , vv = function(e) {
            return "answer" + fv(e) + "," + gv(e)
        };
        class yv extends me.Component {
            constructor(...e) {
                super(...e),
                this._getRows = () => this.props.answers.length,
                this._getColumns = () => this.props.answers[0].length,
                this.onValueChange = (e, t, n) => {
                    const r = ve().map(this.props.answers, ve().clone);
                    r[e][t] = n.target ? n.target.value : n,
                    this.props.onChange({
                        answers: r
                    }),
                    this.props.trackInteraction()
                }
                ,
                this.onHeaderChange = (e, t) => {
                    const n = this.props.headers.slice();
                    n[e] = t.content,
                    this.props.onChange({
                        headers: n
                    })
                }
                ,
                this._handleFocus = e => {
                    this.props.onFocus(e)
                }
                ,
                this._handleBlur = e => {
                    this.props.onBlur(e)
                }
                ,
                this.focus = () => (this.focusInputPath(mv(0, 0)),
                !0),
                this.focusInputPath = e => {
                    const t = vv(e)
                      , n = this.refs[t];
                    this.props.apiOptions.customKeypad ? n.focus() : fe.findDOMNode(n).focus()
                }
                ,
                this.blurInputPath = e => {
                    const t = vv(e)
                      , n = this.refs[t];
                    this.props.apiOptions.customKeypad ? n.blur() : fe.findDOMNode(n).blur()
                }
                ,
                this.getInputPaths = () => {
                    const e = this._getRows()
                      , t = this._getColumns()
                      , n = [];
                    return ve()(e).times((e => {
                        ve()(t).times((t => {
                            const r = mv(e, t);
                            n.push(r)
                        }
                        ))
                    }
                    )),
                    n
                }
                ,
                this.setInputValue = (e, t, n) => {
                    const r = fv(e)
                      , i = gv(e)
                      , s = ve().map(this.props.answers, ve().clone);
                    s[r][i] = t,
                    this.props.onChange({
                        answers: s
                    }, n)
                }
            }
            getUserInput() {
                return ve().map(this.props.answers, ve().clone)
            }
            getDOMNodeForPath(e) {
                const t = vv(e);
                return fe.findDOMNode(this.refs[t])
            }
            render() {
                const e = this._getRows()
                  , t = this._getColumns()
                  , n = this.props.headers;
                let r, i;
                const s = {};
                return this.props.apiOptions.customKeypad ? (r = va,
                i = {
                    width: 80
                },
                s.keypadElement = this.props.keypadElement) : (r = "input",
                i = {}),
                me.createElement("table", {
                    className: "perseus-widget-table-of-values non-markdown"
                }, me.createElement("thead", null, me.createElement("tr", null, ve().map(n, ( (e, t) => this.props.editableHeaders ? me.createElement("th", {
                    key: t
                }, me.createElement(this.props.Editor, {
                    ref: "columnHeader" + t,
                    apiOptions: this.props.apiOptions,
                    content: e,
                    widgetEnabled: !1,
                    onChange: ve().partial(this.onHeaderChange, t)
                })) : me.createElement("th", {
                    key: t
                }, me.createElement(ea, {
                    content: e,
                    linterContext: this.props.linterContext,
                    strings: this.context.strings
                })))))), me.createElement("tbody", null, ve()(e).times((e => me.createElement("tr", {
                    key: e
                }, ve()(t).times((t => me.createElement("td", {
                    key: t
                }, me.createElement(r, nt({
                    ref: vv(mv(e, t)),
                    type: "text",
                    value: this.props.answers[e][t],
                    disabled: this.props.apiOptions.readOnly,
                    onFocus: ve().partial(this._handleFocus, mv(e, t)),
                    onBlur: ve().partial(this._handleBlur, mv(e, t)),
                    onChange: ve().partial(this.onValueChange, e, t),
                    style: i
                }, s))))))))))
            }
        }
        yv.contextType = it,
        yv.defaultProps = function() {
            const e = ve()(4).times((function() {
                return vn.stringArrayOfSize(1)
            }
            ));
            return {
                apiOptions: Rt.defaults,
                headers: [""],
                editableHeaders: !1,
                rows: 4,
                columns: 1,
                answers: e,
                linterContext: se
            }
        }();
        var bv = {
            name: "table",
            displayName: "Table (deprecated - use markdown table instead)",
            accessible: !0,
            widget: yv,
            transform: e => {
                const t = e.answers.length
                  , n = e.answers[0].length
                  , r = ve()(t).times((function() {
                    return vn.stringArrayOfSize(n)
                }
                ));
                return ve().extend({}, e, {
                    answers: r
                })
            }
            ,
            hidden: !0,
            isLintable: !0,
            scorer: function(e, t, n) {
                const r = function(e) {
                    const t = uv(e);
                    return t.some((function(e) {
                        return e.some((function(e) {
                            return "" === e
                        }
                        ))
                    }
                    )) || !t.length ? {
                        type: "invalid",
                        message: null
                    } : null
                }(e);
                if (null != r)
                    return r;
                const i = uv(e)
                  , s = uv(t.answers);
                if (i.length !== s.length)
                    return {
                        type: "points",
                        earned: 0,
                        total: 1,
                        message: null
                    };
                const o = zt.number.createValidatorFunctional;
                let a = null;
                const l = s.every((function(e) {
                    for (let t = 0; t < i.length; t++) {
                        if (i[t].every((function(t, r) {
                            const i = e[r]
                              , s = o(i, {
                                simplify: !0
                            }, n)(t);
                            return s.message && (a = s.message),
                            s.correct
                        }
                        )))
                            return i.splice(t, 1),
                            !0
                    }
                    return !1
                }
                ));
                return {
                    type: "points",
                    earned: l ? 1 : 0,
                    total: 1,
                    message: a
                }
            }
        };
        const xv = /^https?:\/\//
          , wv = e => {
            const t = e.match(/^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#&?]*).*/);
            return t && 11 === t[7].length ? t[7] : "videoNotFound"
        }
          , kv = e => {
            const {location: t} = e
              , {useVideo: n} = yt()
              , [r,i] = xv.test(t) ? [wv(t), "YOUTUBE_ID"] : [t, "READABLE_ID"]
              , s = n(r, i)
              , {strings: o} = ot();
            switch (s.status) {
            case "loading":
                return me.createElement(le.G7, null, o.loading);
            case "success":
                {
                    var a;
                    const e = null == (a = s.data) ? void 0 : a.video;
                    return me.createElement(le.G7, {
                        style: Sv.transcriptLink
                    }, me.createElement(le.xv, null, null == e ? void 0 : e.title), me.createElement(ze.x9, {
                        size: 10
                    }), me.createElement(et.Z, {
                        href: "/transcript/" + ((null == e ? void 0 : e.contentId) || "videoNotFound"),
                        target: "_blank",
                        className: "visited-no-recolor"
                    }, o.videoTranscript))
                }
            default:
                return me.createElement(le.G7, null, o.somethingWrong)
            }
        }
          , Sv = pe.StyleSheet.create({
            transcriptLink: {
                flexDirection: "row",
                width: "100%",
                justifyContent: "center"
            }
        })
          , Ev = "{host}/embed_video?slug={slug}&internal_video_only=1"
          , Mv = /^https?:\/\//
          , Cv = /(khanacademy\.org|localhost)/
          , Tv = /(vimeo\.com)/;
        class _v extends me.Component {
            constructor(...e) {
                super(...e),
                this.isWidget = !0,
                this.change = (...e) => St.apply(this, e)
            }
            getPromptJSON() {
                return Cc("video")
            }
            render() {
                const {InitialRequestUrl: e} = gt()
                  , t = this.props.location;
                if (!t)
                    return me.createElement("div", null);
                let n;
                if (Mv.test(t))
                    n = t,
                    Tv.test(n) && (-1 === n.indexOf("?") ? n += "?dnt=1" : n += "&dnt=1");
                else {
                    n = Ev.replace("{slug}", t);
                    let r = "https://www.khanacademy.org";
                    Cv.test(e.host) && (r = e.origin),
                    n = n.replace("{host}", r)
                }
                return me.createElement(le.G7, null, me.createElement(Un, {
                    width: 1280,
                    height: 720,
                    key: t + this.props.alignment
                }, me.createElement(le.G7, {
                    style: at.srOnly
                }, this.context.strings.videoWrapper), me.createElement("iframe", {
                    className: "perseus-video-widget",
                    sandbox: "allow-same-origin allow-scripts",
                    width: 1280,
                    height: 720,
                    src: n,
                    allowFullScreen: !0
                })), me.createElement(kv, {
                    location: t
                }))
            }
        }
        _v.contextType = it;
        var Av = [kc, Ic, Fc, qc, Pc, Nh, Yc, Qc, Oh, Fh, Hh, sp, mf, If, eg, Uf, rg, Pg, Wg, Yg, xl, Sl, Jg, nv, sv, lv, pv, bv, {
            name: "video",
            displayName: "Video",
            defaultAlignment: "block",
            supportedAlignments: ["block", "float-left", "float-right", "full-width"],
            widget: _v,
            scorer: () => Oa()
        }, Lc];
        const Iv = function() {
            xo(bc),
            xo(Av),
            ko()
        }
          , Rv = "43.0.1";
        (0,
        s.Cy)("@khanacademy/perseus", Rv);
        const Nv = {
            major: 12,
            minor: 0
        }
          , Pv = {
            major: 0,
            minor: 1
        };
        var Ov = [...bc, ...Av];
        xo(Ov);
        const Lv = _o();
        Lv["::renderer::"] = Pv;
        class Dv extends me.Component {
            constructor(e) {
                super(e),
                this._currentFocus = void 0,
                this.sectionRenderers = [],
                this._handleFocusChange = (e, t) => {
                    e ? this._setCurrentFocus(e) : this._onRendererBlur(t)
                }
                ,
                this._setCurrentFocus = e => {
                    const {keypadElement: t, apiOptions: n} = this.props
                      , {isMobile: r} = n
                      , i = this._currentFocus;
                    this._currentFocus = e;
                    let s, o = !1;
                    if (this._currentFocus) {
                        const [e,...t] = this._currentFocus
                          , n = this.sectionRenderers[e].getInputPaths();
                        o = n.some((e => vn.inputPathsEqual(e, t))),
                        s = this.sectionRenderers[e].getDOMNodeForPath(t)
                    }
                    const {onFocusChange: a} = this.props.apiOptions;
                    a && setTimeout(( () => {
                        const e = null == t ? void 0 : t.getDOMNode()
                          , n = e && o ? e.getBoundingClientRect().height : 0;
                        a(this._currentFocus, i, n, o ? s : null)
                    }
                    ), 0),
                    t && r && (o ? t.activate() : t.dismiss())
                }
                ,
                this._onRendererBlur = e => {
                    const t = this._currentFocus;
                    vn.inputPathsEqual(e, t) && setTimeout(( () => {
                        vn.inputPathsEqual(this._currentFocus, t) && this._setCurrentFocus(null)
                    }
                    ))
                }
                ,
                this.blur = () => {
                    if (this._currentFocus) {
                        const [e,...t] = this._currentFocus;
                        this.sectionRenderers[e].blurPath(t)
                    }
                }
                ,
                this._sections = () => {
                    const e = Array.isArray(this.props.json) ? this.props.json : [this.props.json];
                    if (gt().JIPT.useJIPT) {
                        const t = [];
                        for (const n of e)
                            eo.parseToArray(n.content).forEach((e => {
                                t.push(nt({}, n, {
                                    content: e
                                }))
                            }
                            ));
                        return t
                    }
                    return e
                }
            }
            componentDidMount() {
                this._currentFocus = null
            }
            shouldComponentUpdate(e) {
                return e !== this.props
            }
            render() {
                const e = nt({}, Rt.defaults, this.props.apiOptions, {
                    isArticle: !0
                })
                  , t = de()({
                    "framework-perseus": !0,
                    "perseus-article": !0,
                    [Nt.MOBILE]: e.isMobile
                })
                  , n = this._sections().map(( (t, n) => me.createElement("div", {
                    key: n,
                    className: "clearfix"
                }, me.createElement(ea, nt({}, t, {
                    ref: e => {
                        e && (this.sectionRenderers[n] = e)
                    }
                    ,
                    key: n,
                    key_: n,
                    keypadElement: this.props.keypadElement,
                    apiOptions: nt({}, e, {
                        onFocusChange: (e, t) => {
                            this._handleFocusChange(e && [n].concat(e), t && [n].concat(t))
                        }
                    }),
                    linterContext: ae(this.props.linterContext, "article"),
                    legacyPerseusLint: this.props.legacyPerseusLint,
                    strings: this.context.strings
                })))));
                return me.createElement("div", {
                    className: t
                }, me.createElement(vt.Provider, {
                    value: this.props.dependencies
                }, n))
            }
        }
        Dv.contextType = it,
        Dv.defaultProps = {
            apiOptions: Rt.defaults,
            useNewStyles: !1,
            linterContext: se
        };
        class Fv extends me.Component {
            constructor(...e) {
                super(...e),
                this.getSerializedState = () => this.refs.renderer.getSerializedState(),
                this.restoreSerializedState = (e, t) => {
                    this.refs.renderer.restoreSerializedState(e, t)
                }
            }
            render() {
                const {apiOptions: e, className: t, hint: n, lastHint: r, lastRendered: i, pos: s, totalHints: o} = this.props
                  , {isMobile: a} = e
                  , l = de()("hint", !a && "perseus-hint-renderer", a && (0,
                pe.css)(zv.newHint), a && i && (0,
                pe.css)(zv.lastRenderedNewHint), r && "last-hint", i && "last-rendered", t)
                  , c = nt({}, e, {
                    customKeypad: !1
                });
                return me.createElement("div", {
                    className: l,
                    tabIndex: "-1"
                }, !e.isMobile && me.createElement("span", {
                    className: "perseus-sr-only"
                }, this.context.strings.hintPos({
                    pos: s + 1
                })), !e.isMobile && null != o && null != s && me.createElement("span", {
                    className: "perseus-hint-label",
                    style: {
                        display: "block",
                        color: e.hintProgressColor
                    }
                }, `${s + 1} / ${o}`), me.createElement(ea, {
                    ref: "renderer",
                    widgets: n.widgets,
                    content: n.content || "",
                    images: n.images,
                    apiOptions: c,
                    findExternalWidgets: this.props.findExternalWidgets,
                    linterContext: ae(this.props.linterContext, "hint"),
                    strings: this.context.strings
                }))
            }
        }
        Fv.contextType = it,
        Fv.defaultProps = {
            linterContext: se
        };
        const zv = pe.StyleSheet.create({
            newHint: {
                marginBottom: 24,
                borderLeftColor: Cn,
                borderLeftStyle: "solid",
                borderLeftWidth: 4,
                [Nl.lgOrSmaller]: {
                    paddingLeft: On
                },
                [Nl.smOrSmaller]: {
                    paddingLeft: 0
                },
                ":focus": {
                    outline: "none"
                }
            },
            lastRenderedNewHint: {
                marginBottom: 0,
                borderLeftColor: En
            }
        });
        class Bv extends me.Component {
            constructor(...e) {
                super(...e),
                this.state = {
                    isFinalHelpPage: !1
                },
                this._hintsVisible = () => null == this.props.hintsVisible || -1 === this.props.hintsVisible ? this.props.hints.length : this.props.hintsVisible,
                this._cacheImagesInHint = e => {
                    ve().each(e.images, ( (e, t) => {
                        (new Image).src = vn.getRealImageUrl(t)
                    }
                    ))
                }
                ,
                this._cacheHintImages = () => {
                    this._hintsVisible() > 0 ? ve().each(this.props.hints, this._cacheImagesInHint) : this.props.hints.length > 0 && this._cacheImagesInHint(this.props.hints[0])
                }
                ,
                this.getApiOptions = () => nt({}, Rt.defaults, this.props.apiOptions, {
                    readOnly: !1
                }),
                this.getSerializedState = () => ve().times(this._hintsVisible(), (e => this.refs["hintRenderer" + e].getSerializedState())),
                this.restoreSerializedState = (e, t) => {
                    let n = 1;
                    const r = () => {
                        --n,
                        t && 0 === n && t()
                    }
                    ;
                    ve().each(e, ( (e, t) => {
                        const i = this.refs["hintRenderer" + t];
                        i && (++n,
                        i.restoreSerializedState(e, r))
                    }
                    )),
                    r()
                }
            }
            componentDidMount() {
                this._cacheHintImages()
            }
            UNSAFE_componentWillReceiveProps(e) {
                e.hintsVisible - this.props.hintsVisible > 1 && this.setState({
                    isFinalHelpPage: !0
                })
            }
            componentDidUpdate(e, t) {
                ve().isEqual(e.hints, this.props.hints) && e.hintsVisible === this.props.hintsVisible || this._cacheHintImages();
                const n = e.hintsVisible || 0
                  , r = this.props.hintsVisible || 0;
                if (n < r && r <= this.props.hints.length && r >= 0) {
                    const e = r - 1;
                    fe.findDOMNode(this.refs["hintRenderer" + e]).focus()
                }
            }
            render() {
                const e = this.getApiOptions()
                  , t = this._hintsVisible()
                  , n = []
                  , r = this.state.isFinalHelpPage;
                this.props.hints.slice(0, t).forEach(( (i, s) => {
                    const o = s === this.props.hints.length - 1 && !/\*\*/.test(i.content)
                      , a = s === t - 1
                      , l = me.createElement(Fv, {
                        lastHint: o,
                        lastRendered: a,
                        hint: i,
                        pos: s,
                        totalHints: this.props.hints.length,
                        ref: "hintRenderer" + s,
                        key: "hintRenderer" + s,
                        apiOptions: e,
                        findExternalWidgets: this.props.findExternalWidgets,
                        linterContext: ae(this.props.linterContext, "hints[" + s + "]")
                    });
                    r ? n.push(l) : i.replace && n.length > 0 ? n[n.length - 1] = l : n.push(l)
                }
                ));
                const {getAnotherHint: i} = e
                  , s = i && t > 0 && t < this.props.hints.length
                  , o = `(${t}/${this.props.hints.length})`
                  , a = de()(this.props.className, e.isMobile && t > 0 && (0,
                pe.css)(qv.mobileHintStylesHintsRenderer));
                return me.createElement("div", {
                    className: a
                }, e.isMobile && t > 0 && me.createElement("div", {
                    className: (0,
                    pe.css)(qv.mobileHintStylesHintTitle, Bl.responsiveLabel)
                }, this.context.strings.hints), n, s && me.createElement("button", {
                    rel: "button",
                    className: (0,
                    pe.css)(qv.linkButton, qv.getAnotherHintButton, e.isMobile && qv.mobileHintStylesGetAnotherHintButton),
                    onClick: e => {
                        e.preventDefault(),
                        e.stopPropagation(),
                        i && i()
                    }
                }, me.createElement("span", {
                    className: (0,
                    pe.css)(qv.plusText, e.isMobile && qv.mobileHintStylesPlusText)
                }, "+"), me.createElement("span", {
                    className: (0,
                    pe.css)(qv.getAnotherHintText)
                }, this.context.strings.getAnotherHint, " ", o)))
            }
        }
        Bv.contextType = it,
        Bv.defaultProps = {
            linterContext: se
        };
        const qv = pe.StyleSheet.create({
            rendererMargins: {
                marginTop: On
            },
            linkButton: {
                cursor: "pointer",
                border: "none",
                backgroundColor: "transparent",
                fontSize: "100%",
                fontFamily: "inherit",
                fontWeight: "bold",
                color: En,
                padding: 0,
                position: "relative"
            },
            plusText: {
                fontSize: 20,
                position: "absolute",
                top: -3,
                left: 0
            },
            getAnotherHintText: {
                marginLeft: 16
            },
            mobileHintStylesHintsRenderer: {
                marginTop: 64,
                border: `solid ${Tn}`,
                borderWidth: "1px 0 0 0",
                position: "relative",
                ":before": {
                    content: '""',
                    display: "table",
                    clear: "both"
                },
                ":after": {
                    content: '""',
                    display: "table",
                    clear: "both"
                }
            },
            mobileHintStylesHintTitle: {
                fontFamily: "inherit",
                fontStyle: "normal",
                fontWeight: "bold",
                color: In,
                paddingTop: On,
                paddingBottom: 24,
                [Nl.lgOrSmaller]: {
                    paddingLeft: 0
                },
                [Nl.smOrSmaller]: {
                    paddingLeft: 20
                }
            },
            getAnotherHintButton: {
                marginTop: 24
            },
            mobileHintStylesGetAnotherHintButton: {
                [Nl.lgOrSmaller]: {
                    paddingLeft: 0
                },
                [Nl.smOrSmaller]: {
                    paddingLeft: 20
                }
            },
            mobileHintStylesPlusText: {
                [Nl.lgOrSmaller]: {
                    left: 0
                },
                [Nl.smOrSmaller]: {
                    left: 20
                }
            }
        })
          , Hv = {
            onRendered: e => {}
        }
          , Uv = me.createContext(Hv);
        class Gv extends me.Component {
            constructor(e) {
                super(e),
                this.questionRenderer = void 0,
                this.hintsRenderer = void 0,
                this._currentFocus = void 0,
                this._fullyRendered = void 0,
                this.blurTimeoutID = void 0,
                this._handleFocusChange = (e, t) => {
                    null != e ? this._setCurrentFocus(e) : this._onRendererBlur(t)
                }
                ,
                this.handleInteractWithWidget = e => {
                    var t;
                    const n = ve().difference(this.state.questionHighlightedWidgets, [e]);
                    this.setState({
                        questionCompleted: !1,
                        questionHighlightedWidgets: n
                    }),
                    null == (t = this.props.apiOptions) || null == t.interactionCallback || t.interactionCallback(this.questionRenderer.getUserInputMap())
                }
                ,
                this.setAssetStatus = (e, t) => {
                    const n = nt({}, this.state.assetStatuses, {
                        [e]: t
                    });
                    this.setState({
                        assetStatuses: n
                    })
                }
                ,
                this.state = {
                    questionCompleted: !1,
                    questionHighlightedWidgets: [],
                    assetStatuses: {}
                },
                this._fullyRendered = !1
            }
            componentDidMount() {
                this._currentFocus = null,
                this._fullyRendered = !1
            }
            UNSAFE_componentWillReceiveProps(e) {
                this.setState({
                    questionHighlightedWidgets: []
                })
            }
            componentDidUpdate(e, t) {
                if (this.props.apiOptions.answerableCallback) {
                    const e = 0 === this.questionRenderer.emptyWidgets().length
                      , {answerableCallback: t} = this.props.apiOptions;
                    t && t(e)
                }
                if (!this._fullyRendered) {
                    Object.values(this.state.assetStatuses).every(Boolean) && (this._fullyRendered = !0,
                    this.props.onRendered(!0))
                }
            }
            componentWillUnmount() {
                null != this.blurTimeoutID && (clearTimeout(this.blurTimeoutID),
                this.blurTimeoutID = null)
            }
            _setCurrentFocus(e) {
                const {apiOptions: {isMobile: t, onFocusChange: n}, keypadElement: r} = this.props
                  , i = this._currentFocus;
                this._currentFocus = e;
                const s = this.getInputPaths()
                  , o = this._currentFocus && s.some((e => vn.inputPathsEqual(e, this._currentFocus)));
                null != n && setTimeout(( () => {
                    const t = null == r ? void 0 : r.getDOMNode()
                      , s = t && o ? t.getBoundingClientRect().height : 0;
                    n(this._currentFocus, i, s, o && this.questionRenderer.getDOMNodeForPath(e))
                }
                ), 0),
                r && t && (o ? r.activate() : r.dismiss())
            }
            _onRendererBlur(e) {
                const t = this._currentFocus;
                ve().isEqual(e, t) && (this.blurTimeoutID = setTimeout(( () => {
                    ve().isEqual(this._currentFocus, t) && this._setCurrentFocus(null)
                }
                ), 0))
            }
            _setWidgetProps(e, t, n) {
                this.questionRenderer._setWidgetProps(e, t, n)
            }
            setInputValue(e, t, n) {
                return this.questionRenderer.setInputValue(e, t, n)
            }
            focusPath(e) {
                return this.questionRenderer.focusPath(e)
            }
            blurPath(e) {
                return this.questionRenderer.blurPath(e)
            }
            getDOMNodeForPath(e) {
                return this.questionRenderer.getDOMNodeForPath(e)
            }
            getInputPaths() {
                return this.questionRenderer.getInputPaths()
            }
            focus() {
                return this.questionRenderer.focus()
            }
            blur() {
                this._currentFocus && this.blurPath(this._currentFocus)
            }
            getNumHints() {
                return this.props.item.hints.length
            }
            getPromptJSON() {
                return this.questionRenderer.getPromptJSON()
            }
            scoreInput() {
                const e = this.questionRenderer.guessAndScore()
                  , t = e[0]
                  , n = e[1]
                  , r = [t, []]
                  , i = vn.keScoreFromPerseusScore(n, r, this.questionRenderer.getSerializedState())
                  , s = this.questionRenderer.emptyWidgets();
                return this.setState({
                    questionCompleted: i.correct,
                    questionHighlightedWidgets: s
                }),
                i
            }
            getWidgetIds() {
                return this.questionRenderer.getWidgetIds()
            }
            getSerializedState() {
                return {
                    question: this.questionRenderer.getSerializedState(),
                    hints: this.hintsRenderer.getSerializedState()
                }
            }
            restoreSerializedState(e, t) {
                let n = 2;
                const r = () => {
                    --n,
                    t && 0 === n && t()
                }
                ;
                this.questionRenderer.restoreSerializedState(e.question, r),
                this.hintsRenderer.restoreSerializedState(e.hints, r)
            }
            showRationalesForCurrentlySelectedChoices() {
                this.questionRenderer.showRationalesForCurrentlySelectedChoices()
            }
            deselectIncorrectSelectedChoices() {
                this.questionRenderer.deselectIncorrectSelectedChoices()
            }
            render() {
                const e = nt({}, Rt.defaults, this.props.apiOptions, {
                    onFocusChange: this._handleFocusChange
                })
                  , t = {
                    assetStatuses: this.state.assetStatuses,
                    setAssetStatus: this.setAssetStatus
                }
                  , n = me.createElement(jt.Provider, {
                    value: t
                }, me.createElement(ea, nt({
                    keypadElement: this.props.keypadElement,
                    problemNum: this.props.problemNum,
                    onInteractWithWidget: this.handleInteractWithWidget,
                    highlightedWidgets: this.state.questionHighlightedWidgets,
                    apiOptions: e,
                    questionCompleted: this.state.questionCompleted,
                    reviewMode: this.props.reviewMode,
                    showSolutions: this.props.showSolutions,
                    ref: e => {
                        null != e && (this.questionRenderer = e)
                    }
                    ,
                    content: this.props.item.question.content,
                    widgets: this.props.item.question.widgets,
                    images: this.props.item.question.images,
                    linterContext: ae(this.props.linterContext, "question"),
                    strings: this.context.strings
                }, this.props.dependencies)))
                  , r = me.createElement(Bv, {
                    hints: this.props.item.hints,
                    hintsVisible: this.props.hintsVisible,
                    apiOptions: e,
                    ref: e => this.hintsRenderer = e,
                    linterContext: ae(this.props.linterContext, "hints"),
                    strings: this.context.strings
                });
                return me.createElement(vt.Provider, {
                    value: this.props.dependencies
                }, me.createElement("div", null, me.createElement("div", null, n), me.createElement("div", {
                    className: e.isMobile ? void 0 : (0,
                    pe.css)(Wv.hintsContainer)
                }, r)))
            }
        }
        Gv.contextType = it,
        Gv.defaultProps = {
            apiOptions: {},
            linterContext: se,
            onRendered: e => {}
        };
        const Wv = pe.StyleSheet.create({
            hintsContainer: {
                marginLeft: 50
            }
        })
          , Vv = me.forwardRef(( (e, t) => me.createElement(Uv.Consumer, null, ( ({onRendered: n}) => me.createElement(Gv, nt({}, e, {
            onRendered: n,
            ref: t
        }))))))
          , $v = function() {}
          , jv = function(e, t, n, r) {
            let i = e.content;
            if (null != e.content) {
                const n = t(e.content);
                void 0 !== n && (i = n)
            }
            const s = bi.mapObject(e.widgets || {}, (function(e, t) {
                return null == e || null == e.type ? e : n(e, t)
            }
            ))
              , o = ve().extend({}, e, {
                content: i,
                widgets: s
            })
              , a = r(o);
            return void 0 !== a ? a : o
        }
          , Kv = function(e, t, n, r) {
            return jv(e, t = t || $v, function(e, t, n) {
                return function r(i, s) {
                    var o;
                    const a = Io(i)
                      , l = To(a.type);
                    let c;
                    c = l && (null == (o = a.version) ? void 0 : o.major) === l.major ? No(a, (t => jv(t, e, r, n))) : a;
                    const h = t(c, s);
                    return void 0 !== h ? h : c
                }
            }(t, n = n || $v, r = r || $v), r)
        }
          , Zv = {
            type: "hint"
        }
          , Yv = e => ({
            type: "array",
            elementShape: e
        });
        var Xv = {
            content: {
                type: "content"
            },
            hint: Zv,
            hints: Yv(Zv),
            tags: {
                type: "tags"
            },
            arrayOf: Yv,
            shape: e => ({
                type: "object",
                shape: e
            })
        };
        class Jv {
            constructor(e, t, n) {
                this.content = void 0,
                this.hint = void 0,
                this.tags = void 0,
                this.array = void 0,
                this.content = e,
                this.hint = t,
                this.tags = n,
                this.array = ey
            }
            setContentMapper(e) {
                return new Jv(e,this.hint,this.tags)
            }
            setHintMapper(e) {
                return new Jv(this.content,e,this.tags)
            }
            setTagsMapper(e) {
                return new Jv(this.content,this.hint,e)
            }
            setArrayMapper(e) {
                return new Qv(this.content,this.hint,this.tags,e)
            }
            mapTree(e, t) {
                return ny(e, t, [], this)
            }
        }
        class Qv {
            constructor(e, t, n, r) {
                this.content = void 0,
                this.hint = void 0,
                this.tags = void 0,
                this.array = void 0,
                this.content = e,
                this.hint = t,
                this.tags = n,
                this.array = r
            }
            setArrayMapper(e) {
                return new Qv(this.content,this.hint,this.tags,e)
            }
            mapTree(e, t) {
                return ny(e, t, [], this)
            }
        }
        function ey(e) {
            return e
        }
        function ty() {
            return new Jv(ey,ey,ey)
        }
        function ny(e, t, n, r) {
            if ("content" === t.type) {
                const i = e;
                return r.content(i, t, n)
            }
            if ("hint" === t.type) {
                const i = e;
                return r.hint(i, t, n)
            }
            if ("tags" === t.type) {
                const i = e;
                return r.tags(i, t, n)
            }
            if ("array" === t.type) {
                const i = e;
                if (!Array.isArray(i))
                    throw new s.uI(`Invalid object of type "${typeof i}" found at path ${["<root>"].concat(n).join(".")}. Expected array.`,s.D1.Internal);
                const o = t.elementShape
                  , a = i.map(( (e, t) => ny(e, o, n.concat(t), r)));
                return r.array(a, i, t, n)
            }
            if ("object" === t.type) {
                const i = e;
                if (i && "object" != typeof i)
                    throw new s.uI(`Invalid object of type "${typeof i}" found at path ${["<root>"].concat(n).join(".")}. Expected "object" type.`,s.D1.InvalidInput);
                const o = t.shape;
                if (!o)
                    throw new s.uI(`Unexpected shape ${JSON.stringify(t)} at path ${["<root>"].concat(n).join(".")}.`,s.D1.InvalidInput);
                const a = {};
                return Object.keys(o).forEach((e => {
                    if (!(e in i))
                        throw new s.uI(`Key "${e}" is missing from shape at path ${["<root>"].concat(n).join(".")}.`,s.D1.InvalidInput);
                    a[e] = ny(i[e], o[e], n.concat(e), r)
                }
                )),
                a
            }
            throw new s.uI(`unexpected shape type ${t.type}`,s.D1.InvalidInput)
        }
        function ry(e) {
            if ("content" === e.type)
                return {
                    __type: "content",
                    content: "",
                    images: {},
                    widgets: {}
                };
            if ("hint" === e.type)
                return {
                    __type: "hint",
                    replace: !1,
                    content: "",
                    images: {},
                    widgets: {}
                };
            if ("tags" === e.type)
                return [];
            if ("array" === e.type)
                return [];
            if ("object" === e.type) {
                const t = e.shape
                  , n = {};
                return Object.keys(t).forEach((e => {
                    n[e] = ry(t[e])
                }
                )),
                n
            }
            throw new s.uI(`unexpected shape type ${e.type}`,s.D1.InvalidInput)
        }
        function iy(e) {
            if (Array.isArray(e))
                return e.length ? "string" == typeof e[0] ? Xv.tags : Xv.arrayOf(iy(e[0])) : Xv.arrayOf(Xv.content);
            if ("object" == typeof e && ("content" === e.__type || "item" === e.__type))
                return Xv.content;
            if ("object" == typeof e && "hint" === e.__type)
                return Xv.hint;
            if ("object" == typeof e) {
                const t = {};
                return Object.keys(e).forEach((n => {
                    t[n] = iy(e[n])
                }
                )),
                Xv.shape(t)
            }
            throw new s.uI(`unexpected multi-item node ${JSON.stringify(e)}`,s.D1.InvalidInput)
        }
        function sy(e) {
            return e._multi
        }
        var oy = function(e) {
            return e === Object(e)
        }
          , ay = function() {
            for (var e = {}, t = 0; t < arguments.length; t++) {
                var n = arguments[t];
                if (n)
                    for (var r in n)
                        e[r] = n[r]
            }
            return e
        }
          , ly = function(e) {
            return oy(e) ? Array.isArray(e) ? e.slice() : ay(e) : e
        }
          , cy = function(e) {
            return Array.isArray(e) ? py : oy(e) ? uy : "string" == typeof e ? dy : void 0
        }
          , hy = function e(t) {
            if (t instanceof e)
                return t;
            if (!(this instanceof e))
                return new e(t);
            var n = cy(t);
            this._wrapped = n.thaw ? n.thaw(t) : t
        };
        hy.prototype.freeze = function() {
            var e = this._wrapped
              , t = cy(e);
            return t.freeze ? t.freeze(e) : e
        }
        ,
        hy.prototype.zoom = function(e) {
            return void 0 === this._zoomStack && (this._zoomStack = []),
            this._zoomStack.push({
                zoom: e,
                wrapped: this._wrapped
            }),
            this._wrapped = hy(this._wrapped).get(e),
            this
        }
        ,
        hy.prototype.deZoom = function() {
            var e = this._zoomStack.pop();
            return this._wrapped = hy(e.wrapped).set(e.zoom, this._wrapped).freeze(),
            this
        }
        ,
        hy.prototype.get = function(e) {
            for (var t = this._wrapped, n = 0; n < e.length; n++)
                t = cy(t).get(t, e[n]);
            return t
        }
        ,
        hy.prototype.mod = function(e, t) {
            var n = this._wrapped
              , r = ly(n)
              , i = cy(n);
            if (0 === e.length)
                this._wrapped = t(this._wrapped);
            else if (1 === e.length)
                this._wrapped = i.mod(r, e[0], t);
            else {
                var s = e[0]
                  , o = e.slice(1);
                r[s] = hy(n[s]).mod(o, t).freeze(),
                this._wrapped = r
            }
            return this
        }
        ,
        hy.prototype.merge = function(e, t) {
            return this._wrapped = hy(this._wrapped).mod(e, (function(e) {
                return ay(e, t)
            }
            )).freeze(),
            this
        }
        ,
        hy.prototype.del = function(e) {
            var t = this._wrapped
              , n = cy(t);
            if (1 === e.length)
                this._wrapped = n.del(t, e[0]);
            else {
                var r = e[0]
                  , i = e.slice(1)
                  , s = ly(t);
                s[r] = hy(t[r]).del(i).freeze(),
                this._wrapped = s
            }
            return this
        }
        ,
        hy.prototype.set = function(e, t) {
            return this.mod(e, (function() {
                return t
            }
            ))
        }
        ;
        const py = {
            get: function(e, t) {
                return e[t]
            },
            set: function(e, t, n) {
                var r = e.splice();
                return r[t] = n,
                r
            },
            mod: function(e, t, n) {
                var r = e.slice();
                return r[t] = n(e[t]),
                r
            },
            del: function(e, t) {
                var n = e.slice();
                return n.splice(t, 1),
                n
            }
        }
          , uy = {
            get: function(e, t) {
                return e[t]
            },
            set: function(e, t, n) {
                var r = ly(e);
                return r[t] = n,
                r
            },
            mod: function(e, t, n) {
                var r = ly(e);
                return r[t] = n(e[t]),
                r
            },
            del: function(e, t) {
                var n = ly(e);
                return delete n[t],
                n
            }
        }
          , dy = {
            get: function(e, t) {
                return e[t]
            },
            set: function(e, t, n) {
                var r = e.splice();
                return r[t] = n,
                r
            },
            mod: function(e, t, n) {
                var r = e.splice();
                return r[t] = n(e[t]),
                r
            },
            del: function(e, t) {
                var n = e.slice();
                return n.splice(t),
                n
            }
        }
          , my = ["item", "children", "shape", "serializedState", "onSerializedStateUpdated"];
        class fy extends me.Component {
            constructor(e) {
                super(e),
                this.rendererDataTreeMapper = void 0,
                this.getRenderersMapper = void 0,
                this._handleSerializedStateUpdated = (e, t) => {
                    const {onSerializedStateUpdated: n} = this.props;
                    if (n) {
                        const r = this._getSerializedState(this.props.serializedState);
                        n(hy(r).set(e, t).freeze())
                    }
                }
                ,
                this.rendererDataTreeMapper = ty().setContentMapper(( (e, t, n) => this._makeContentRendererData(e, n))).setHintMapper((e => this._makeHintRendererData(e))).setTagsMapper((e => null)),
                this.getRenderersMapper = ty().setContentMapper((e => e.makeRenderer())).setHintMapper((e => e.makeRenderer())).setArrayMapper(( (e, t, n) => this._annotateRendererArray(e, t, n))),
                this.state = this._tryMakeRendererState(this.props)
            }
            UNSAFE_componentWillReceiveProps(e) {
                e.item !== this.props.item && this.setState(this._tryMakeRendererState(e))
            }
            _tryMakeRendererState(e) {
                try {
                    return {
                        rendererDataTree: this._makeRendererDataTree(e.item, e.shape),
                        renderError: null
                    }
                } catch (e) {
                    return Ot.error("Error building tree state", s.D1.Internal, {
                        cause: e
                    }),
                    {
                        rendererDataTree: null,
                        renderError: e
                    }
                }
            }
            _getRendererProps() {
                return nt({}, ia(this.props, my), {
                    strings: this.context.strings
                })
            }
            _makeContentRendererData(e, t) {
                const n = {
                    ref: null,
                    makeRenderer: null
                }
                  , r = e => n.ref = e
                  , i = e => this._findWidgets(n, e)
                  , s = e => this._handleSerializedStateUpdated(t, e);
                return n.makeRenderer = () => me.createElement(ea, nt({}, this._getRendererProps(), e, {
                    ref: r,
                    findExternalWidgets: i,
                    serializedState: this.props.serializedState ? hy(this.props.serializedState).get(t) : null,
                    onSerializedStateUpdated: s
                })),
                n
            }
            _makeHintRendererData(e) {
                const t = e => this._findWidgets({}, e);
                return {
                    hint: e,
                    findExternalWidgets: t,
                    ref: null,
                    makeRenderer: () => me.createElement(Bv, nt({}, this._getRendererProps(), {
                        findExternalWidgets: t,
                        hints: [e]
                    }))
                }
            }
            _makeRendererDataTree(e, t) {
                const n = sy(e);
                return this.rendererDataTreeMapper.mapTree(n, t)
            }
            _findWidgets(e, t) {
                const n = [];
                return this._mapRenderers((r => {
                    e !== r && r.ref && n.push(...r.ref.findInternalWidgets(t))
                }
                )),
                n
            }
            _mapRenderers(e) {
                const {rendererDataTree: t} = this.state;
                if (!t)
                    return null;
                return ty().setContentMapper(e).setHintMapper(e).mapTree(t, this.props.shape)
            }
            _scoreFromRef(e) {
                if (!e)
                    return null;
                const [t,n] = e.guessAndScore();
                let r;
                return e.getSerializedState && (r = e.getSerializedState()),
                vn.keScoreFromPerseusScore(n, t, r)
            }
            getScores() {
                return this._mapRenderers((e => this._scoreFromRef(e.ref)))
            }
            score() {
                const e = []
                  , t = []
                  , n = this._mapRenderers((n => {
                    var r;
                    return n.ref ? (n.ref.getSerializedState && t.push(n.ref.getSerializedState()),
                    e.push(n.ref.score()),
                    null == (r = n.ref) ? void 0 : r.getUserInput()) : null
                }
                ))
                  , r = e.reduce(vn.combineScores);
                return vn.keScoreFromPerseusScore(r, n, t)
            }
            _getSerializedState(e) {
                return this._mapRenderers(( (t, n, r) => t.ref ? t.ref.getSerializedState() : e ? hy(e).get(r) : null))
            }
            restoreSerializedState(e, t) {
                let n = 0;
                const r = () => {
                    n--,
                    t && 0 === n && t()
                }
                ;
                this._mapRenderers(( (t, i, s) => {
                    var o;
                    if (!t.ref)
                        return;
                    const a = hy(e).get(s);
                    a && (n++,
                    null == (o = t.ref) || o.restoreSerializedState(a, r))
                }
                ))
            }
            _annotateRendererArray(e, t, n) {
                if ("hint" === n.elementShape.type) {
                    const n = t;
                    (e = [...e]).firstN = e => me.createElement(Bv, nt({}, this._getRendererProps(), {
                        findExternalWidgets: n[0] ? n[0].findExternalWidgets : void 0,
                        hints: n.map((e => e.hint)),
                        hintsVisible: e
                    }))
                }
                return e
            }
            _getRenderers() {
                return this.getRenderersMapper.mapTree(this.state.rendererDataTree, this.props.shape)
            }
            render() {
                return this.state.renderError ? me.createElement("div", {
                    className: (0,
                    pe.css)(gy.error)
                }, this.context.strings.errorRendering({
                    error: String(this.state.renderError)
                })) : me.createElement(vt.Provider, {
                    value: this.props.dependencies
                }, this.props.children({
                    renderers: this._getRenderers()
                }))
            }
        }
        fy.contextType = it;
        const gy = pe.StyleSheet.create({
            error: {
                color: "red"
            }
        });
        function vy(e) {
            if ("content" === e.type)
                return a().shape({
                    __type: a().oneOf(["content", "item"]).isRequired,
                    content: a().string,
                    images: a().objectOf(a().any),
                    widgets: a().objectOf(a().any)
                });
            if ("hint" === e.type)
                return a().shape({
                    __type: a().oneOf(["hint"]).isRequired,
                    content: a().string,
                    images: a().objectOf(a().any),
                    widgets: a().objectOf(a().any),
                    replace: a().bool
                });
            if ("tags" === e.type)
                return a().arrayOf(a().string.isRequired);
            if ("array" === e.type) {
                const t = vy(e.elementShape);
                return a().arrayOf(t.isRequired)
            }
            if ("object" === e.type) {
                const t = e.shape
                  , n = {};
                return Object.keys(t).forEach((e => {
                    n[e] = vy(t[e]).isRequired
                }
                )),
                a().shape(n)
            }
            throw new s.uI(`unexpected shape type ${e.type}`,s.D1.InvalidInput)
        }
        var yy = {
            MultiRenderer: fy,
            shapes: Xv,
            buildPropTypeForShape: function(e) {
                return a().oneOfType([a().shape({
                    _multi: vy(e)
                }), a().oneOf([null, void 0])])
            },
            buildEmptyItemForShape: function(e) {
                return {
                    _multi: ry(e)
                }
            },
            findContentNodesInItem: function(e, t, n) {
                const r = sy(e);
                ty().setContentMapper(n).mapTree(r, t)
            },
            findHintNodesInItem: function(e, t, n) {
                const r = sy(e);
                ty().setHintMapper(n).mapTree(r, t)
            },
            inferItemShape: function(e) {
                return iy(sy(e))
            }
        };
        const {findContentNodesInItem: by, inferItemShape: xy} = yy
          , wy = function(e, t) {
            let n = !0;
            return Kv(e, null, (function(e) {
                n = n && function(e, t) {
                    if (null == e || null == e.type)
                        return !0;
                    const n = Io(e);
                    return function(e, t) {
                        if (null == t)
                            return !1;
                        const n = e.version || {
                            major: 0,
                            minor: 0
                        };
                        return t.major > n.major || !(t.major < n.major) && t.minor >= n.minor
                    }(n, t[n.type])
                }(e, t)
            }
            )),
            n
        }
          , ky = function(e, t) {
            if (null == e || null == t)
                throw new s.uI("missing parameter to Perseus.isRenderable.item",s.D1.InvalidInput);
            if (e._multi) {
                const n = xy(e);
                let r = !0;
                return by(e, n, (e => {
                    wy(e, t) || (r = !1)
                }
                )),
                r
            }
            return wy(e.question, t)
        }
          , {findContentNodesInItem: Sy, inferItemShape: Ey} = yy;
        function My(e, t) {
            Kv(e, null, (function(e) {
                e.type && !Ao(e) && t.push(e.type)
            }
            ))
        }
        function Cy(e) {
            const t = [];
            if (e._multi) {
                const n = Ey(e);
                Sy(e, n, (e => My(e, t)))
            } else
                My(e.question, t);
            return ve().uniq(t)
        }
        function Ty(e, t, n, r) {
            const i = "" + e;
            let s, o, a, l = function(e) {
                let t = !1
                  , n = !1
                  , r = ""
                  , i = ""
                  , s = 0
                  , o = 0;
                for (let a = 0; a < e.length; a++) {
                    const l = e.charAt(a);
                    if (l >= "1" && l <= "9")
                        i += r + l,
                        r = "",
                        n = !0,
                        t || (o++,
                        s++);
                    else if ("0" == l)
                        t ? n ? (i += r + l,
                        r = "") : s-- : (o++,
                        n && (s++,
                        r += l));
                    else if (t || "." != l) {
                        if ("e" == l || "E" == l && a + 1 < e.length) {
                            const t = parseInt(e.substring(a + 1, e.length));
                            s += t,
                            o += t,
                            a = e.length
                        }
                    } else
                        i += r,
                        r = "",
                        t = !0
                }
                if ("" == i)
                    return o;
                return s
            }(i), c = function(e) {
                let t = !1
                  , n = !1
                  , r = ""
                  , i = ""
                  , s = "";
                for (let o = 0; o < e.length; o++) {
                    const a = e.charAt(o);
                    a >= "1" && a <= "9" ? (s += r + a,
                    r = "",
                    n = !0) : "0" == a ? t ? n ? (s += r + a,
                    r = "") : i += a : n ? (i += a,
                    r += a) : i += a : t || "." != a ? ("e" == a || "E" == a && o + 1 < e.length) && (parseInt(e.substring(o + 1, e.length)),
                    o = e.length) : (s += r,
                    r = "",
                    t = !0)
                }
                if ("" == s)
                    return i;
                return s
            }(i), h = function(e) {
                let t = !0
                  , n = !1
                  , r = !1
                  , i = ""
                  , s = ""
                  , o = !0;
                for (let a = 0; a < e.length; a++) {
                    const l = e.charAt(a);
                    l >= "1" && l <= "9" ? (s += i + l,
                    i = "",
                    r = !0,
                    t = !1) : "0" == l ? (n ? r && (s += i + l,
                    i = "") : r && (i += l),
                    t = !1) : n || "." != l ? "e" == l || "E" == l && a + 1 < e.length ? (parseInt(e.substring(a + 1, e.length)),
                    a = e.length) : !t || "+" != l && "-" != l || "-" == l && (o = !o) : (s += i,
                    i = "",
                    n = !0,
                    t = !1)
                }
                if ("" == s)
                    return !0;
                return o
            }(i), p = !1;
            if (0 == e || "" == c || "0" == c) {
                c = "";
                for (let e = 0; e < t; e++)
                    c += "0";
                l = t + n,
                n < 0 && -n >= t && (p = !0)
            } else {
                if (o = l - c.length - n,
                a = t - c.length,
                s = Math.min(a, o),
                s < 0) {
                    let e = Ay(c, -s);
                    e.length > c.length + s && (l++,
                    o > a && (e = Ay(e, 1))),
                    c = e
                } else if (s > 0)
                    for (let e = 0; e < s; e++)
                        c += "0";
                "" != c && "0" != c || (c = "0",
                h = !0,
                l = 1 + n,
                0 != l && (p = !0))
            }
            let u = "";
            if (h || (u += "-"),
            r || c.length > 20 || l > 4 || l < -2 || l - c.length > 0 && _y(c) > 0 || p)
                u += c.charAt(0),
                c.length > 1 && (u += "." + c.substring(1, c.length)),
                l - 1 != 0 && (u += " x 10^" + (l - 1));
            else {
                let e = ""
                  , t = ""
                  , n = !0;
                if (l > 0)
                    if (c.length > l)
                        e = c.substring(0, l),
                        t = c.substring(l, c.length);
                    else {
                        e = c,
                        n = 0 != _y(c);
                        for (let t = 0; t < l - c.length; t++)
                            e += "0"
                    }
                else {
                    for (let e = 0; e < -l; e++)
                        t += "0";
                    t += c
                }
                u += ("" == e ? "0" : e) + (n ? "." : "") + t
            }
            return u
        }
        function _y(e) {
            let t = 0;
            for (let n = e.length - 1; n >= 0; n--) {
                if ("0" != e.charAt(n))
                    return t;
                t++
            }
            return t
        }
        function Ay(e, t) {
            const n = e.length - t - 1;
            if (n < 0)
                return "";
            if (n >= e.length - 1)
                return e;
            const r = e.charAt(n + 1)
              , i = e.charAt(n);
            let s = !1;
            if (r > "5")
                s = !0;
            else if ("5" == r) {
                for (let t = n + 2; t < e.length; t++)
                    "0" != e.charAt(t) && (s = !0);
                i % 2 == 1 && (s = !0)
            }
            let o = "";
            for (let t = n; t >= 0; t--) {
                const n = e.charAt(t);
                if (s) {
                    let e;
                    if ("9" == n)
                        e = "0";
                    else {
                        switch (n) {
                        case "0":
                            e = "1";
                            break;
                        case "1":
                            e = "2";
                            break;
                        case "2":
                            e = "3";
                            break;
                        case "3":
                            e = "4";
                            break;
                        case "4":
                            e = "5";
                            break;
                        case "5":
                            e = "6";
                            break;
                        case "6":
                            e = "7";
                            break;
                        case "7":
                            e = "8";
                            break;
                        case "8":
                            e = "9"
                        }
                        s = !1
                    }
                    o = e + o
                } else
                    o = n + o
            }
            return s && (o = "1" + o),
            o
        }
        const Iy = () => {
            xo(Ov),
            ko()
        }
          , Ry = ["numeric-input", "input-number", "radio", "interactive-graph", "interactive-number-line", "categorizer", "plotter", "orderer", "protractor", "matcher", "sorter"];
        function Ny(e) {
            return `[[☃ ${e}]]`
        }
        function Py(e, t) {
            var n;
            const r = t[e];
            return null != (n = null == r ? void 0 : r.type) ? n : null
        }
        function Oy(e, t, n) {
            return Dy(e, t, n).length > 0
        }
        function Ly(e) {
            const t = []
              , n = /\[\[☃ ([A-Za-z0-9- ]+)\]\]/g;
            let r = n.exec(e);
            for (; null !== r; )
                t.push(r[1]),
                r = n.exec(e);
            return t
        }
        function Dy(e, t, n) {
            const r = [];
            return Ly(t).forEach((t => {
                const i = n[t];
                (null == i ? void 0 : i.type) === e && r.push(t)
            }
            )),
            r
        }
        function Fy(e) {
            return e.question.widgets
        }
        function zy(e, t) {
            var n;
            return null != (n = t[e]) ? n : null
        }
        function By(e, t) {
            const n = {};
            return e.forEach((e => {
                const r = zy(e, t);
                r && (n[e] = r)
            }
            )),
            n
        }
        function qy(e) {
            const t = [];
            return (0,
            Ne.XP)(e).forEach((n => {
                var r, i, s, o, a, l, c, h, p, u, d, m, f, g, v, y, b, x, w;
                const k = e[n];
                if (k.options)
                    switch (k.type) {
                    case "radio":
                        const e = k.options;
                        if (null != e && null != (r = e.choices) && r.length)
                            for (const n of e.choices)
                                null != n && n.correct && t.push(n.content);
                        break;
                    case "categorizer":
                        const n = k;
                        if (null != (i = n.options) && i.categories && null != (s = n.options) && s.items && null != (o = n.options) && o.values) {
                            var S, E, M;
                            const e = null == (S = n.options) ? void 0 : S.categories
                              , r = null == (E = n.options) ? void 0 : E.items
                              , i = null == (M = n.options) ? void 0 : M.values;
                            t.push(...i.map(( (t, n) => `${r[n]}: ${e[t]}`)))
                        }
                        break;
                    case "dropdown":
                        const T = k;
                        if (null != (a = T.options) && a.choices)
                            for (const e of T.options.choices)
                                e.correct && t.push(e.content);
                        break;
                    case "numeric-input":
                        const _ = k;
                        if (null != (l = _.options) && l.answers)
                            for (const e of _.options.answers)
                                "correct" === e.status && null != e.value && t.push(e.value.toString());
                        break;
                    case "input-number":
                        const A = k;
                        null != (c = A.options) && c.value && t.push(A.options.value.toString());
                        break;
                    case "expression":
                        const I = k;
                        null != (h = I.options) && h.answerForms && t.push(...I.options.answerForms.map((e => e.value)));
                        break;
                    case "group":
                    case "graded-group":
                        const R = k;
                        null != (p = R.options) && p.widgets && t.push(...qy(R.options.widgets));
                        break;
                    case "plotter":
                        const N = k;
                        if (null != (u = N.options) && u.categories && null != (d = N.options) && d.correct && N.options.categories.length === N.options.correct.length) {
                            const {categories: e, correct: n} = N.options;
                            t.push(`{${e.map(( (e, t) => `${e}: ${n[t]}`)).join(", ")}}`)
                        }
                        break;
                    case "interactive-graph":
                    case "grapher":
                        const P = k;
                        var C;
                        if (null != (m = P.options) && null != (m = m.correct) && m.coords)
                            t.push(`There should be point(s) on [${null == (C = P.options.correct) ? void 0 : C.coords.join("], [")}]`);
                        break;
                    case "orderer":
                        const O = k;
                        null != (f = O.options) && f.correctOptions && t.push(Hy(O.options.correctOptions));
                        break;
                    case "sorter":
                        const L = k;
                        null != (g = L.options) && g.correct && t.push(L.options.correct.join(", "));
                        break;
                    case "label-image":
                        const D = k;
                        null != (v = D.options) && v.markers && t.push(...D.options.markers.map((e => `{label: "${e.label}", position: {${e.x},${e.y}}, answer: "${e.answers.join(", ")}"}`)));
                        break;
                    case "number-line":
                        const F = k;
                        null != (null == (y = F.options) ? void 0 : y.correctX) && t.push(F.options.correctX.toString());
                        break;
                    case "matrix":
                        const z = k;
                        null != (b = z.options) && b.answers && t.push(`[${z.options.answers.join("], [")}]`);
                        break;
                    case "matcher":
                        const B = k;
                        if (null != (x = B.options) && x.left && null != (w = B.options) && w.right) {
                            const {left: e, right: n} = B.options
                              , [r,i] = B.options.labels
                              , s = [`| ${r} | ${i} |\n| --- | --- |`, ...e.map(( (e, t) => `| ${e} | ${n[t]} |`))].join("\n");
                            t.push(s)
                        }
                    }
            }
            )),
            t
        }
        const Hy = e => e.map(( ({content: e}) => e)).join("\n")
          , Uy = e => String.fromCharCode("A".charCodeAt(0) + e);
        function Gy(e, t, n) {
            if (!e)
                return "";
            if (!t)
                return e;
            let r = e;
            return (0,
            Ne.XP)(t).forEach((e => {
                var i, s, o, a, l, c, h, p, u, d, m, f, g, v, y, b, x, w, k, S;
                const E = t[e];
                if (E.options)
                    switch (E.type) {
                    case "radio":
                        const t = E
                          , _ = null == n ? void 0 : n[e];
                        if (null != (i = t.options) && null != (i = i.choices) && i.length) {
                            var M;
                            let n = Hy(_ ? _.choices.map(( ({content: e}, t) => ({
                                content: `Option ${Uy(t)}: ${e}`
                            }))) : t.options.choices);
                            !_ && null != (M = t.options) && M.randomize && (n += "\nThose options are displayed in a different order to the user. If the user says the letter, number, or ordinal number, always ask them clarify which option they are referring to.\n"),
                            r = r.replace(`[[☃ ${e}]]`, n)
                        }
                        break;
                    case "image":
                        const A = E;
                        null != (s = A.options) && s.alt && (r = r.replace(`[[☃ ${e}]]`, `<img id="${e}" alt="${A.options.alt}">`));
                        break;
                    case "label-image":
                        const I = E;
                        var C, T;
                        if (null != (o = I.options) && o.imageAlt)
                            r = r.replace(`[[☃ ${e}]]`, `[An image with dots that user needs to label. Label choices: [${I.options.choices.join(", ")}]. Image alt text: ${null != (C = null == (T = I.options) ? void 0 : T.imageAlt) ? C : ""}]`);
                        break;
                    case "explanation":
                        const R = E;
                        null != (a = R.options) && a.explanation && (r = r.replace(`[[☃ ${e}]]`, Gy(R.options.explanation, R.options.widgets)));
                        break;
                    case "passage":
                        const N = E;
                        if (null != (l = N.options) && l.passageTitle || null != (c = N.options) && c.passageText) {
                            const {passageTitle: t, passageText: n} = N.options;
                            r = r.replace(`[[☃ ${e}]]`, `# ${t}\n\n${n}`)
                        }
                        break;
                    case "group":
                    case "graded-group":
                        const P = E;
                        null != (h = P.options) && h.widgets && P.options.content && (r = r.replace(`[[☃ ${e}]]`, Gy(P.options.content, P.options.widgets)));
                        break;
                    case "graded-group-set":
                        const O = E;
                        if (null != (p = O.options) && p.gradedGroups) {
                            const t = O.options.gradedGroups.reduce(( (e, t) => (t.widgets && t.content && (e += Gy(t.content, t.widgets) + "\n"),
                            e)), "");
                            r = r.replace(`[[☃ ${e}]]`, t)
                        }
                        break;
                    case "categorizer":
                        const L = E;
                        if (null != (u = L.options) && u.categories && L.options.items) {
                            const t = L.options.categories
                              , n = L.options.items;
                            r = r.replace(`[[☃ ${e}]]`, `For each item, select the correct category. Categories: ${t.join(", ")}.\nItems:\n${n.join("\n")}\n`)
                        }
                        break;
                    case "dropdown":
                        const D = E;
                        if (null != (d = D.options) && d.choices) {
                            const t = D.options.choices.map((e => e.content));
                            r = r.replace(`[[☃ ${e}]]`, `[${t.join(" | ")}]`)
                        }
                        break;
                    case "definition":
                        const F = E;
                        null != (m = F.options) && m.togglePrompt && (r = r.replace(`[[☃ ${e}]]`, F.options.togglePrompt));
                        break;
                    case "orderer":
                        const z = E;
                        null != (f = z.options) && f.options && (r = r.replace(`[[☃ ${e}]]`, Hy(z.options.options)));
                        break;
                    case "sorter":
                        const B = E;
                        if (null != (g = B.options) && g.correct) {
                            const t = B.options.correct;
                            r = r.replace(`[[☃ ${e}]]`, `[${t.join(" | ")}]`)
                        }
                        break;
                    case "interactive-graph":
                        const q = E;
                        if (2 === (null == (v = q.options) ? void 0 : v.range.length)) {
                            const [t,n] = q.options.range;
                            r = r.replace(`[[☃ ${e}]]`, `[Graph with an x range of ${t[0]} to ${t[1]} and y range of ${n[0]} to ${n[1]}]`)
                        }
                        break;
                    case "number-line":
                        const H = E;
                        if (2 === (null == (y = H.options) ? void 0 : y.range.length) && null != (b = H.options) && b.tickStep && null != (x = H.options) && x.initialX) {
                            const [t,n] = H.options.range
                              , i = H.options.tickStep
                              , s = H.options.initialX;
                            r = r.replace(`[[☃ ${e}]]`, `[Number line with a range of ${t} to ${n}, a step of ${i}, and an initial position of ${s}]`)
                        }
                        break;
                    case "matrix":
                        const U = E;
                        if (2 === (null == (w = U.options) ? void 0 : w.matrixBoardSize.length)) {
                            const [t,n] = U.options.matrixBoardSize;
                            r = r.replace(`[[☃ ${e}]]`, `[Matrix with ${t} rows and ${n} columns. The user can click on each cell to enter a value]`)
                        }
                        break;
                    case "matcher":
                        const G = E;
                        if (null != (k = G.options) && k.left && null != (S = G.options) && S.right) {
                            const {left: t, right: n} = G.options
                              , [i,s] = G.options.labels
                              , o = [`| ${i} | ${s} |\n| --- | --- |`, ...t.map(( (e, t) => `| ${e} | ${n[t]} |`))].join("\n")
                              , a = "The user needs to move items in the right column to match the correct option on the left. The order of items on the right side will be different from what the user sees.";
                            r = r.replace(`[[☃ ${e}]]`, `${a}\n${o}`)
                        }
                        break;
                    case "numeric-input":
                    case "input-number":
                    case "expression":
                        r = r.replace(`[[☃ ${e}]]`, "?");
                        break;
                    default:
                        r = r.replace(`[[☃ ${e}]]`, `[[Unsupported ${E.type} widget: Explain to the user that you are unable to understand the content in this widget and ask them to describe it.]]`)
                    }
            }
            )),
            r
        }
        function Wy(e) {
            if (!e.widgets)
                return "";
            const t = [];
            return Object.entries(e.widgets).forEach(( ([e,n]) => {
                var r;
                n.options && "image" === n.type && !n.options.alt && null != (r = n.options.backgroundImage) && r.url && t.push({
                    widgetId: e,
                    imgUrl: n.options.backgroundImage.url
                })
            }
            )),
            JSON.stringify(t)
        }
        const Vy = ["interactive-graph", "categorizer", "grapher"]
          , $y = ["radio", "numeric-input", "input-number", "expression", ...Vy]
          , jy = (e, t) => 0 !== e.length && e.every((e => $y.includes(Py(e, t))))
          , Ky = (e, t) => Vy.includes(Py(e, t))
          , Zy = (e, t) => {
            switch (e) {
            case "categorizer":
                return t.values;
            case "input-number":
            case "numeric-input":
                return t.currentValue;
            case "radio":
                return t.choicesSelected
            }
            return t
        }
          , Yy = (e, t) => {
            const n = t.question.widgets[e].options
              , r = Py(e, Fy(t))
              , i = Mo(r);
            return null == i || null == i.getOneCorrectAnswerFromRubric ? void 0 : i.getOneCorrectAnswerFromRubric(n)
        }
          , Xy = (e, t) => -1 !== e.question.content.indexOf(t)
          , Jy = e => {
            const {widgets: t} = e.question;
            return (0,
            Ne.XP)(t).filter((t => Xy(e, t)))
        }
          , Qy = vn.deepEq;
        function eb(e=!1) {
            let t = "";
            const n = Math.floor(8 * Math.random()) + 3;
            for (let r = 0; r < n; r++) {
                const n = String.fromCharCode(97 + Math.floor(26 * Math.random()));
                t += e && 0 === r ? n.toUpperCase() : n
            }
            return t
        }
        function tb() {
            const e = []
              , t = Math.floor(10 * Math.random()) + 5;
            for (let n = 0; n < t; n++)
                e.push(eb(0 === n));
            const n = ["**", "$"]
              , r = Math.floor(Math.random() * n.length);
            return `${n[r]}${e.join(" ")}${["**", "$"][r]}`
        }
        function nb(e) {
            return {
                type: "failure",
                detail: e
            }
        }
        function rb(e) {
            return "failure" === e.type
        }
        function ib(e) {
            return "success" === e.type
        }
        const sb = (e, t) => t.success(e);
        function ob(e) {
            return (t, n) => {
                if (!Array.isArray(t))
                    return n.failure("array", t);
                const r = t.map(( (t, r) => e(t, n.forSubtree(r))));
                return function(e, t=(e => e)) {
                    const n = []
                      , r = [];
                    for (const t of e)
                        "success" === t.type ? n.push(t.value) : r.push(t.detail);
                    return r.length > 0 ? nb(r.reduce(t)) : {
                        type: "success",
                        value: n
                    }
                }(r, ab)
            }
        }
        function ab(e, t) {
            return [...e, ...t]
        }
        function lb(e, t) {
            return "boolean" == typeof e ? t.success(e) : t.failure("boolean", e)
        }
        function cb(e) {
            return (t, n) => t !== e ? n.failure(String(JSON.stringify(e)), t) : n.success(e)
        }
        function hb(...e) {
            return (t, n) => {
                if ("string" == typeof t) {
                    const r = e.indexOf(t);
                    if (r > -1)
                        return n.success(e[r])
                }
                const r = e.map((e => JSON.stringify(e)));
                return n.failure(r, t)
            }
        }
        function pb(e) {
            return null != e && Object.getPrototypeOf(e) === Object.prototype
        }
        function ub(e) {
            return (t, n) => null === t ? n.success(t) : e(t, n)
        }
        const db = (e, t) => "number" == typeof e ? t.success(e) : t.failure("number", e);
        function mb(e) {
            return (t, n) => {
                if (!pb(t))
                    return n.failure("object", t);
                const r = nt({}, t)
                  , i = [];
                for (const [s,o] of Object.entries(e)) {
                    const e = o(t[s], n.forSubtree(s));
                    ib(e) ? r[s] = e.value : i.push(...e.detail)
                }
                return i.length > 0 ? nb(i) : n.success(r)
            }
        }
        function fb(e) {
            return (t, n) => void 0 === t ? n.success(t) : e(t, n)
        }
        function gb(e, t) {
            return (n, r) => {
                if (!Array.isArray(n))
                    return r.failure("array", n);
                if (2 !== n.length)
                    return r.failure("array of length 2", n);
                const [i,s] = n
                  , o = e(i, r.forSubtree(0));
                if (rb(o))
                    return o;
                const a = t(s, r.forSubtree(1));
                return rb(a) ? a : r.success([o.value, a.value])
            }
        }
        function vb(e, t) {
            return (n, r) => {
                if (!pb(n))
                    return r.failure("object", n);
                const i = {}
                  , s = [];
                for (const [o,a] of Object.entries(n)) {
                    const n = r.forSubtree(o)
                      , l = e(o, n);
                    rb(l) && s.push(...l.detail);
                    const c = t(a, n);
                    rb(c) && s.push(...c.detail),
                    ib(l) && ib(c) && (i[l.value] = c.value)
                }
                return s.length > 0 ? nb(s) : r.success(i)
            }
        }
        const yb = (e, t) => "string" == typeof e ? t.success(e) : t.failure("string", e);
        function bb(e, t, n) {
            return (r, i) => {
                if (!Array.isArray(r))
                    return i.failure("array", r);
                if (3 !== r.length)
                    return i.failure("array of length 3", r);
                const s = e(r[0], i.forSubtree(0));
                if (rb(s))
                    return s;
                const o = t(r[1], i.forSubtree(1));
                if (rb(o))
                    return o;
                const a = n(r[2], i.forSubtree(2));
                return rb(a) ? a : i.success([s.value, o.value, a.value])
            }
        }
        function xb(e) {
            return new wb(e)
        }
        class wb {
            constructor(e) {
                this.parser = e
            }
            or(e) {
                return new wb((t = this.parser,
                n = e,
                (e, r) => {
                    const i = t(e, r);
                    return ib(i) ? i : n(e, r)
                }
                ));
                var t, n
            }
        }
        function kb(e, t) {
            return mb({
                type: e,
                static: fb(lb),
                graded: fb(lb),
                alignment: fb(yb),
                options: t,
                key: fb(db),
                version: mb({
                    major: db,
                    minor: db
                })
            })
        }
        const Sb = kb(cb("categorizer"), mb({
            items: ob(yb),
            categories: ob(yb),
            randomizeItems: lb,
            static: lb,
            values: ob(db),
            highlightLint: fb(lb),
            linterContext: fb(mb({
                contentType: yb,
                paths: ob(yb),
                stack: ob(yb)
            }))
        }))
          , Eb = kb(cb("cs-program"), mb({
            programID: yb,
            programType: sb,
            settings: ob(mb({
                name: yb,
                value: yb
            })),
            showEditor: lb,
            showButtons: lb,
            width: db,
            height: db,
            static: lb
        }))
          , Mb = kb(cb("definition"), mb({
            togglePrompt: yb,
            definition: yb,
            static: lb
        }))
          , Cb = kb(cb("dropdown"), mb({
            placeholder: yb,
            static: lb,
            choices: ob(mb({
                content: yb,
                correct: lb
            }))
        }))
          , Tb = kb(cb("explanation"), mb({
            showPrompt: yb,
            hidePrompt: yb,
            explanation: yb,
            widgets: (e, t) => Gx(e, t),
            static: lb
        }))
          , _b = mb({
            value: yb,
            form: lb,
            simplify: lb,
            considered: hb("correct", "wrong", "ungraded"),
            key: fb(yb)
        })
          , Ab = kb(cb("expression"), mb({
            answerForms: ob(_b),
            functions: ob(yb),
            times: lb,
            visibleLabel: fb(yb),
            ariaLabel: fb(yb),
            buttonSets: ob(hb("basic", "basic+div", "trig", "prealgebra", "logarithms", "basic relations", "advanced relations")),
            buttonsVisible: fb(hb("always", "never", "focused"))
        }))
          , Ib = mb({
            content: yb,
            widgets: (e, t) => Gx(e, t),
            metadata: fb(ob(yb)),
            images: vb(yb, mb({
                width: db,
                height: db
            }))
        })
          , Rb = mb({
            title: yb,
            hasHint: fb(ub(lb)),
            hint: fb(ub(( (e, t) => Ib(e, t)))),
            content: yb,
            widgets: (e, t) => Gx(e, t),
            widgetEnabled: fb(ub(lb)),
            immutableWidgets: fb(ub(lb)),
            images: vb(yb, mb({
                width: db,
                height: db
            }))
        })
          , Nb = kb(cb("graded-group"), Rb)
          , Pb = kb(cb("graded-group-set"), mb({
            gradedGroups: ob(Rb)
        }))
          , Ob = gb(db, db)
          , Lb = gb(Ob, Ob)
          , Db = kb(cb("grapher"), mb({
            availableTypes: ob(hb("absolute_value", "exponential", "linear", "logarithm", "quadratic", "sinusoid", "tangent")),
            correct: xb(mb({
                type: cb("absolute_value"),
                coords: Lb
            })).or(mb({
                type: cb("exponential"),
                asymptote: Lb,
                coords: Lb
            })).or(mb({
                type: cb("linear"),
                coords: Lb
            })).or(mb({
                type: cb("logarithm"),
                asymptote: Lb,
                coords: Lb
            })).or(mb({
                type: cb("quadratic"),
                coords: Lb
            })).or(mb({
                type: cb("sinusoid"),
                coords: Lb
            })).or(mb({
                type: cb("tangent"),
                coords: Lb
            })).parser,
            graph: mb({
                backgroundImage: mb({
                    bottom: fb(db),
                    height: fb(db),
                    left: fb(db),
                    scale: fb(db),
                    url: fb(ub(yb)),
                    width: fb(db)
                }),
                box: fb(Ob),
                editableSettings: fb(ob(hb("graph", "snap", "image", "measure"))),
                gridStep: fb(Ob),
                labels: gb(yb, yb),
                markings: hb("graph", "none", "grid"),
                range: gb(Ob, Ob),
                rulerLabel: cb(""),
                rulerTicks: db,
                showProtractor: fb(lb),
                showRuler: fb(lb),
                showTooltips: fb(lb),
                snapStep: fb(Ob),
                step: Ob,
                valid: fb(xb(lb).or(yb).parser)
            })
        }))
          , Fb = kb(cb("group"), ( (e, t) => Ib(e, t)))
          , zb = kb(cb("iframe"), mb({
            url: yb,
            settings: ob(mb({
                name: yb,
                value: yb
            })),
            width: xb(db).or(yb).parser,
            height: xb(db).or(yb).parser,
            allowFullScreen: lb,
            allowTopNavigation: fb(lb),
            static: lb
        }))
          , Bb = mb({
            url: fb(ub(yb)),
            width: fb(db),
            height: fb(db),
            top: fb(db),
            left: fb(db),
            bottom: fb(db),
            scale: fb(xb(db).or(yb).parser)
        })
          , qb = gb(db, db)
          , Hb = kb(cb("image"), mb({
            title: fb(yb),
            caption: fb(yb),
            alt: fb(yb),
            backgroundImage: Bb,
            static: fb(lb),
            labels: fb(ob(mb({
                content: yb,
                alignment: yb,
                coordinates: ob(db)
            }))),
            range: fb(gb(qb, qb)),
            box: fb(qb)
        }))
          , Ub = kb(cb("input-number"), mb({
            answerType: fb(hb("number", "decimal", "integer", "rational", "improper", "mixed", "percent", "pi")),
            inexact: fb(lb),
            maxError: fb(xb(db).or(yb).parser),
            rightAlign: fb(lb),
            simplify: hb("required", "optional", "enforced"),
            size: hb("normal", "small"),
            value: xb(db).or(yb).parser,
            customKeypad: fb(lb)
        }))
          , Gb = gb(db, db)
          , Wb = mb({
            type: cb("function"),
            key: yb,
            options: mb({
                value: yb,
                funcName: yb,
                rangeMin: yb,
                rangeMax: yb,
                color: yb,
                strokeDasharray: yb,
                strokeWidth: db
            })
        })
          , Vb = mb({
            type: cb("label"),
            key: yb,
            options: mb({
                label: yb,
                color: yb,
                coordX: yb,
                coordY: yb
            })
        })
          , $b = mb({
            type: cb("line"),
            key: yb,
            options: mb({
                color: yb,
                startX: yb,
                startY: yb,
                endX: yb,
                endY: yb,
                strokeDasharray: yb,
                strokeWidth: db,
                arrows: yb
            })
        })
          , jb = mb({
            type: cb("movable-line"),
            key: yb,
            options: mb({
                startX: yb,
                startY: yb,
                startSubscript: db,
                endX: yb,
                endY: yb,
                endSubscript: db,
                constraint: yb,
                snap: db,
                constraintFn: yb,
                constraintXMin: yb,
                constraintXMax: yb,
                constraintYMin: yb,
                constraintYMax: yb
            })
        })
          , Kb = mb({
            type: cb("movable-point"),
            key: yb,
            options: mb({
                startX: yb,
                startY: yb,
                varSubscript: db,
                constraint: yb,
                snap: db,
                constraintFn: yb,
                constraintXMin: yb,
                constraintXMax: yb,
                constraintYMin: yb,
                constraintYMax: yb
            })
        })
          , Zb = mb({
            type: cb("parametric"),
            key: yb,
            options: mb({
                x: yb,
                y: yb,
                rangeMin: yb,
                rangeMax: yb,
                color: yb,
                strokeDasharray: yb,
                strokeWidth: db
            })
        })
          , Yb = mb({
            type: cb("point"),
            key: yb,
            options: mb({
                color: yb,
                coordX: yb,
                coordY: yb
            })
        })
          , Xb = mb({
            type: cb("rectangle"),
            key: yb,
            options: mb({
                color: yb,
                coordX: yb,
                coordY: yb,
                width: yb,
                height: yb
            })
        })
          , Jb = kb(cb("interaction"), mb({
            static: lb,
            graph: mb({
                editableSettings: fb(ob(hb("canvas", "graph"))),
                box: Gb,
                labels: ob(yb),
                range: gb(Gb, Gb),
                gridStep: Gb,
                markings: hb("graph", "grid", "none"),
                snapStep: fb(Gb),
                valid: fb(xb(lb).or(yb).parser),
                backgroundImage: fb(Bb),
                showProtractor: fb(lb),
                showRuler: fb(lb),
                rulerLabel: fb(yb),
                rulerTicks: fb(db),
                tickStep: Gb
            }),
            elements: ob(xb(Wb).or(Vb).or($b).or(jb).or(Kb).or(Zb).or(Yb).or(Xb).parser)
        }))
          , Qb = gb(db, db)
          , ex = mb({
            type: cb("angle"),
            showAngles: fb(lb),
            allowReflexAngles: fb(lb),
            angleOffsetDeg: fb(db),
            snapDegrees: fb(db),
            match: fb(cb("congruent")),
            coords: fb(bb(Qb, Qb, Qb)),
            startCoords: fb(bb(Qb, Qb, Qb))
        })
          , tx = mb({
            type: cb("circle"),
            center: fb(Qb),
            radius: fb(db),
            startCoords: fb(mb({
                center: Qb,
                radius: db
            })),
            coord: fb(Qb)
        })
          , nx = mb({
            type: cb("linear"),
            coords: fb(ub(gb(Qb, Qb))),
            startCoords: fb(gb(Qb, Qb)),
            coord: fb(Qb)
        })
          , rx = mb({
            type: cb("linear-system"),
            coords: fb(ub(ob(gb(Qb, Qb)))),
            startCoords: fb(ob(gb(Qb, Qb))),
            coord: fb(Qb)
        })
          , ix = mb({
            type: cb("none")
        })
          , sx = mb({
            type: cb("point"),
            numPoints: fb(xb(db).or(cb("unlimited")).parser),
            coords: fb(ub(ob(Qb))),
            startCoords: fb(ob(Qb)),
            coord: fb(Qb)
        })
          , ox = mb({
            type: cb("polygon"),
            numSides: fb(xb(db).or(cb("unlimited")).parser),
            showAngles: fb(lb),
            showSides: fb(lb),
            snapTo: fb(hb("grid", "angles", "sides")),
            match: fb(hb("similar", "congruent", "approx")),
            startCoords: fb(ob(Qb)),
            coord: fb(Qb)
        })
          , ax = mb({
            type: cb("quadratic"),
            coords: fb(ub(bb(Qb, Qb, Qb))),
            startCoords: fb(bb(Qb, Qb, Qb)),
            coord: fb(Qb)
        })
          , lx = mb({
            type: cb("ray"),
            coords: fb(ub(gb(Qb, Qb))),
            startCoords: fb(gb(Qb, Qb)),
            coord: fb(Qb)
        })
          , cx = mb({
            type: cb("segment"),
            numSegments: fb(db),
            coords: fb(ub(ob(gb(Qb, Qb)))),
            startCoords: fb(ob(gb(Qb, Qb))),
            coord: fb(Qb)
        })
          , hx = mb({
            type: cb("sinusoid"),
            coords: fb(ub(ob(Qb))),
            startCoords: fb(ob(Qb)),
            coord: fb(Qb)
        })
          , px = xb(ex).or(ex).or(tx).or(nx).or(rx).or(ix).or(sx).or(ox).or(ax).or(lx).or(cx).or(hx).parser
          , ux = hb("blue", "green", "grayH", "purple", "pink", "orange", "red")
          , dx = hb("none", "white", "translucent", "solid")
          , mx = hb("solid", "dashed")
          , fx = mb({
            type: cb("label"),
            coord: Qb,
            text: yb,
            color: ux,
            size: hb("small", "medium", "large")
        })
          , gx = mb({
            type: cb("point"),
            coord: Qb,
            color: ux,
            filled: lb,
            labels: fb(ob(fx)),
            ariaLabel: fb(yb)
        })
          , vx = mb({
            type: cb("line"),
            kind: hb("line", "ray", "segment"),
            points: gb(gx, gx),
            color: ux,
            lineStyle: mx,
            showPoint1: lb,
            showPoint2: lb,
            labels: fb(ob(fx)),
            ariaLabel: fb(yb)
        })
          , yx = mb({
            type: cb("vector"),
            points: gb(Qb, Qb),
            color: ux,
            labels: fb(ob(fx)),
            ariaLabel: fb(yb)
        })
          , bx = mb({
            type: cb("ellipse"),
            center: Qb,
            radius: Qb,
            angle: db,
            color: ux,
            fillStyle: dx,
            strokeStyle: mx,
            labels: fb(ob(fx)),
            ariaLabel: fb(yb)
        })
          , xx = mb({
            type: cb("polygon"),
            points: ob(Qb),
            color: ux,
            showVertices: lb,
            fillStyle: dx,
            strokeStyle: mx,
            labels: fb(ob(fx)),
            ariaLabel: fb(yb)
        })
          , wx = mb({
            type: cb("function"),
            color: ux,
            strokeStyle: mx,
            equation: yb,
            directionalAxis: hb("x", "y"),
            domain: fb(Qb),
            labels: fb(ob(fx)),
            ariaLabel: fb(yb)
        })
          , kx = xb(gx).or(vx).or(yx).or(bx).or(xx).or(wx).or(fx).parser
          , Sx = kb(cb("interactive-graph"), mb({
            step: Qb,
            gridStep: Qb,
            snapStep: Qb,
            backgroundImage: fb(Bb),
            markings: hb("graph", "grid", "none"),
            labels: ob(yb),
            showProtractor: lb,
            showRuler: fb(lb),
            showTooltips: fb(lb),
            rulerLabel: fb(yb),
            rulerTicks: fb(db),
            range: gb(Qb, Qb),
            graph: px,
            correct: px,
            lockedFigures: fb(ob(kx)),
            fullGraphLabel: fb(yb),
            fullGraphAriaDescription: fb(yb)
        }))
          , Ex = kb(cb("label-image"), mb({
            choices: ob(yb),
            imageUrl: yb,
            imageAlt: yb,
            imageHeight: db,
            imageWidth: db,
            markers: ob(mb({
                answers: ob(yb),
                label: yb,
                x: db,
                y: db
            })),
            hideChoicesFromInstructions: lb,
            multipleAnswers: lb,
            static: lb
        }))
          , Mx = kb(cb("matcher"), mb({
            labels: ob(yb),
            left: ob(yb),
            right: ob(yb),
            orderMatters: lb,
            padding: lb
        }))
          , Cx = kb(cb("matrix"), mb({
            prefix: yb,
            suffix: yb,
            answers: ob(ob(db)),
            cursorPosition: ob(db),
            matrixBoardSize: ob(db),
            static: lb
        }))
          , Tx = kb(cb("measurer"), mb({
            image: Bb,
            showProtractor: lb,
            showRuler: lb,
            rulerLabel: yb,
            rulerTicks: db,
            rulerPixels: db,
            rulerLength: db,
            box: gb(db, db),
            static: lb
        }))
          , _x = kb(cb("molecule-renderer"), mb({
            widgetId: yb,
            rotationAngle: fb(db),
            smiles: fb(yb)
        }))
          , Ax = kb(cb("number-line"), mb({
            range: ob(db),
            labelRange: ob(ub(db)),
            labelStyle: yb,
            labelTicks: lb,
            isTickCtrl: fb(ub(lb)),
            divisionRange: ob(db),
            numDivisions: fb(ub(db)),
            snapDivisions: db,
            tickStep: fb(ub(db)),
            correctRel: fb(ub(yb)),
            correctX: db,
            initialX: fb(ub(db)),
            showTooltip: fb(lb),
            static: lb
        }))
          , Ix = hb("integer", "mixed", "improper", "proper", "decimal", "percent", "pi")
          , Rx = kb(cb("numeric-input"), mb({
            answers: ob(mb({
                message: yb,
                value: db,
                status: yb,
                answerForms: fb(ob(Ix)),
                strict: lb,
                maxError: fb(ub(db)),
                simplify: fb(ub(yb))
            })),
            labelText: yb,
            size: yb,
            coefficient: lb,
            rightAlign: fb(lb),
            static: lb,
            answerForms: fb(ob(mb({
                name: Ix,
                simplify: fb(ub(hb("required", "correct", "enforced", "optional")))
            })))
        }));
        function Nx(e, t) {
            return Ib(e, t)
        }
        const Px = kb(cb("orderer"), mb({
            options: ob(Nx),
            correctOptions: ob(Nx),
            otherOptions: ob(Nx),
            height: yb,
            layout: yb
        }))
          , Ox = kb(cb("passage-ref"), mb({
            passageNumber: db,
            referenceNumber: db,
            summaryText: yb
        }))
          , Lx = kb(cb("passage"), mb({
            footnotes: yb,
            passageText: yb,
            passageTitle: yb,
            showLineNumbers: lb,
            static: lb
        }))
          , Dx = kb(cb("phet-simulation"), mb({
            url: yb,
            description: yb
        }))
          , Fx = kb(cb("plotter"), mb({
            labels: ob(yb),
            categories: ob(yb),
            type: hb(...Au),
            maxY: db,
            scaleY: db,
            labelInterval: fb(ub(db)),
            snapsPerLine: db,
            starting: ob(db),
            correct: ob(db),
            picUrl: fb(ub(yb)),
            picSize: fb(ub(db)),
            picBoxHeight: fb(ub(db)),
            plotDimensions: ob(db)
        }))
          , zx = kb(cb("python-program"), mb({
            programID: yb,
            height: db
        }))
          , Bx = kb(cb("radio"), mb({
            choices: ob(mb({
                content: yb,
                clue: fb(yb),
                correct: fb(lb),
                isNoneOfTheAbove: fb(lb),
                widgets: fb(( (e, t) => Gx(e, t)))
            })),
            hasNoneOfTheAbove: fb(lb),
            countChoices: fb(lb),
            randomize: fb(lb),
            multipleSelect: fb(lb),
            deselectEnabled: fb(lb),
            onePerLine: fb(lb),
            displayCount: fb(sb),
            noneOfTheAbove: fb(cb(!1))
        }))
          , qx = kb(cb("sorter"), mb({
            correct: ob(yb),
            padding: lb,
            layout: hb("horizontal", "vertical")
        }))
          , Hx = kb(cb("table"), mb({
            headers: ob(yb),
            rows: db,
            columns: db,
            answers: ob(ob(yb))
        }))
          , Ux = kb(cb("video"), mb({
            location: yb,
            static: fb(lb)
        }))
          , Gx = (e, t) => {
            if (!pb(e))
                return t.failure("PerseusWidgetsMap", e);
            const n = {};
            for (const r of Object.keys(e)) {
                const i = Wx([r, e[r]], n, t.forSubtree(r));
                if (rb(i))
                    return i
            }
            return t.success(n)
        }
          , Wx = ([e,t], n, r) => {
            const i = Vx(e.split(" "), r);
            if (rb(i))
                return i;
            const [s,o] = i.value;
            function a(e, i) {
                const s = i(t, r);
                return rb(s) ? s : (n[e] = s.value,
                r.success(void 0))
            }
            switch (s) {
            case "categorizer":
                return a(`categorizer ${o}`, Sb);
            case "cs-program":
                return a(`cs-program ${o}`, Eb);
            case "definition":
                return a(`definition ${o}`, Mb);
            case "dropdown":
                return a(`dropdown ${o}`, Cb);
            case "explanation":
                return a(`explanation ${o}`, Tb);
            case "expression":
                return a(`expression ${o}`, Ab);
            case "grapher":
                return a(`grapher ${o}`, Db);
            case "group":
                return a(`group ${o}`, Fb);
            case "graded-group":
                return a(`graded-group ${o}`, Nb);
            case "graded-group-set":
                return a(`graded-group-set ${o}`, Pb);
            case "iframe":
                return a(`iframe ${o}`, zb);
            case "image":
                return a(`image ${o}`, Hb);
            case "input-number":
                return a(`input-number ${o}`, Ub);
            case "interaction":
                return a(`interaction ${o}`, Jb);
            case "interactive-graph":
                return a(`interactive-graph ${o}`, Sx);
            case "label-image":
                return a(`label-image ${o}`, Ex);
            case "matcher":
                return a(`matcher ${o}`, Mx);
            case "matrix":
                return a(`matrix ${o}`, Cx);
            case "measurer":
                return a(`measurer ${o}`, Tx);
            case "molecule-renderer":
                return a(`molecule-renderer ${o}`, _x);
            case "number-line":
                return a(`number-line ${o}`, Ax);
            case "numeric-input":
                return a(`numeric-input ${o}`, Rx);
            case "orderer":
                return a(`orderer ${o}`, Px);
            case "passage":
                return a(`passage ${o}`, Lx);
            case "passage-ref":
                return a(`passage-ref ${o}`, Ox);
            case "passage-ref-target":
                return a(`passage-ref-target ${o}`, sb);
            case "phet-simulation":
                return a(`phet-simulation ${o}`, Dx);
            case "plotter":
                return a(`plotter ${o}`, Fx);
            case "python-program":
                return a(`python-program ${o}`, zx);
            case "radio":
                return a(`radio ${o}`, Bx);
            case "sorter":
                return a(`sorter ${o}`, qx);
            case "table":
                return a(`table ${o}`, Hx);
            case "video":
                return a(`video ${o}`, Ux);
            default:
                return Eo(s) ? a(`${s} ${o}`, sb) : r.failure("a valid widget type", s)
            }
        }
          , Vx = gb(yb, ( (e, t) => "string" == typeof e && /^[1-9][0-9]*$/.test(e) ? t.success(+e) : t.failure("numeric string", e)))
          , $x = mb({
            replace: fb(lb),
            content: yb,
            widgets: Gx,
            metadata: fb(ob(yb)),
            images: vb(yb, mb({
                width: db,
                height: db
            }))
        });
        function jx(e) {
            if (function(e) {
                const t = tb()
                  , n = tb()
                  , r = eb()
                  , i = JSON.stringify({
                    answerArea: {
                        calculator: !1,
                        chi2Table: !1,
                        financialCalculatorMonthlyPayment: !1,
                        financialCalculatorTimeToPayOff: !1,
                        financialCalculatorTotalAmount: !1,
                        periodicTable: !1,
                        periodicTableWithKey: !1,
                        tTable: !1,
                        zTable: !1
                    },
                    hints: [n, `=${Math.floor(50 * Math.random()) + 1}`],
                    itemDataVersion: {
                        major: 0,
                        minor: 1
                    },
                    question: {
                        content: `${t}`,
                        images: {},
                        widgets: {
                            expression1: {
                                alignment: "default",
                                graded: !1,
                                options: {
                                    answerForms: [{
                                        considered: "wrong",
                                        form: !1,
                                        key: 0,
                                        simplify: !1,
                                        value: `${r}`
                                    }],
                                    ariaLabel: "Answer",
                                    buttonSets: ["basic"],
                                    functions: ["f", "g", "h"],
                                    static: !0,
                                    times: !1,
                                    visibleLabel: "Answer"
                                },
                                static: !0,
                                type: "expression",
                                version: {
                                    major: 1,
                                    minor: 0
                                }
                            }
                        }
                    }
                })
                  , s = e(`{"data":{"assessmentItem":{"__typename":"AssessmentItemOrError","error":null,"item":{"__typename":"AssessmentItem","id":"x890b3c70f3e8f4a6","itemData":"${i.replace(/"/g, '\\"')}","problemType":"Type 1","sha":"c7284a3ad65214b4e62bccce236d92f7f5d35941"}}}}`).data.assessmentItem.item.itemData;
                return Qy(s, i)
            }(JSON.parse))
                return JSON.parse(e);
            throw new Error("Something went wrong.")
        }
        mb({
            question: Ib,
            hints: ob($x),
            answerArea: vb(hb(...Mu), lb),
            itemDataVersion: mb({
                major: db,
                minor: db
            }),
            answer: sb
        });
        const Kx = {
            question: {
                content: "",
                images: {},
                widgets: {}
            },
            answerArea: {
                calculator: !1,
                chi2Table: !1,
                periodicTable: !1,
                tTable: !1,
                zTable: !1,
                financialCalculatorMonthlyPayment: !1,
                financialCalculatorTotalAmount: !1,
                financialCalculatorTimeToPayOff: !1,
                periodicTableWithKey: !1
            },
            itemDataVersion: {
                major: 0,
                minor: 1
            },
            hints: [],
            answer: null
        };
        function Zx(e={}) {
            return nt({}, Kx, e)
        }
        function Yx() {
            return {
                type: "radio",
                options: {
                    choices: []
                }
            }
        }
        function Xx() {
            return {
                type: "interactive-graph",
                options: {
                    step: [1, 1],
                    gridStep: [1, 1],
                    snapStep: [1, 1],
                    markings: "graph",
                    labels: ["x", "y"],
                    showProtractor: !1,
                    range: [[-10, 10], [-10, 10]],
                    graph: {
                        type: "angle"
                    },
                    correct: {
                        type: "angle"
                    }
                }
            }
        }
        function Jx() {
            return {
                type: "categorizer",
                options: {
                    items: [],
                    categories: [],
                    randomizeItems: !1,
                    static: !1,
                    values: []
                }
            }
        }
        function Qx() {
            return {
                type: "expression",
                options: {
                    answerForms: [],
                    buttonSets: ["basic"],
                    functions: [],
                    times: !1
                }
            }
        }
        function ew() {
            return {
                type: "numeric-input",
                options: {
                    answers: [],
                    labelText: "",
                    size: "normal",
                    coefficient: !1,
                    static: !1
                }
            }
        }
        const tw = {
            categorizer: "CATEGORIZER",
            "cs-program": "CS_PROGRAM",
            definition: "DEFINITION",
            "deprecated-standin": "DEPRECATED_STANDIN",
            dropdown: "DROPDOWN",
            explanation: "EXPLANATION",
            expression: "EXPRESSION",
            "graded-group-set": "GRADED_GROUP_SET",
            "graded-group": "GRADED_GROUP",
            grapher: "GRAPHER",
            group: "GROUP",
            iframe: "IFRAME",
            image: "IMAGE",
            "input-number": "INPUT_NUMBER",
            interaction: "INTERACTIVE",
            "interactive-graph": "INTERACTIVE_GRAPH",
            "label-image": "LABEL_IMAGE",
            "lights-puzzle": "LIGHTS_PUZZLE",
            matcher: "MATCHER",
            matrix: "MATRIX",
            measurer: "MEASURER",
            "molecule-renderer": "MOLECULE",
            "number-line": "NUMBER_LINE",
            "numeric-input": "NUMERIC_INPUT",
            orderer: "ORDERER",
            passage: "PASSAGE",
            "passage-ref": "PASSAGE_REF",
            "passage-ref-target": "PASSAGE_REF_TARGET",
            "phet-simulation": "PHET_SIMULATION",
            plotter: "PLOTTER",
            "python-program": "PYTHON_PROGRAM",
            "reaction-diagram": "REACTION_DIAGRAM",
            radio: "RADIO",
            sequence: "SEQUENCE",
            simulator: "SIMULATOR",
            sorter: "SORTER",
            table: "TABLE",
            video: "VIDEO"
        };
        function nw(e) {
            const t = tw[e];
            if (!t)
                throw new Error(`Unknown widget name: ${e}`);
            return t
        }
        const rw = {
            serialize: function() {
                return ve().omit(this.props, xt)
            }
        }
          , iw = {
            allTypes: mh,
            DEFAULT_GRAPHER_PROPS: Sh,
            chooseType: bh,
            defaultPlotProps: yh,
            getEquationString: e => {
                const t = e.plot;
                if (t.type && t.coords) {
                    return fh(t.type).getEquationString(t.coords, t.asymptote) || ""
                }
                return ""
            }
            ,
            typeToButton: Eh
        }
    }
    ,
    349125: (e, t, n) => {
        "use strict";
        n.d(t, {
            useDrag: () => fe,
            useGesture: () => ge
        });
        const r = {
            toVector: (e, t) => (void 0 === e && (e = t),
            Array.isArray(e) ? e : [e, e]),
            add: (e, t) => [e[0] + t[0], e[1] + t[1]],
            sub: (e, t) => [e[0] - t[0], e[1] - t[1]],
            addTo(e, t) {
                e[0] += t[0],
                e[1] += t[1]
            },
            subTo(e, t) {
                e[0] -= t[0],
                e[1] -= t[1]
            }
        };
        function i(e, t, n) {
            return 0 === t || Math.abs(t) === 1 / 0 ? Math.pow(e, 5 * n) : e * t * n / (t + n * e)
        }
        function s(e, t, n, r=.15) {
            return 0 === r ? function(e, t, n) {
                return Math.max(t, Math.min(e, n))
            }(e, t, n) : e < t ? -i(t - e, n - t, r) + t : e > n ? +i(e - n, n - t, r) + n : e
        }
        function o(e) {
            var t = function(e, t) {
                if ("object" != typeof e || null === e)
                    return e;
                var n = e[Symbol.toPrimitive];
                if (void 0 !== n) {
                    var r = n.call(e, t || "default");
                    if ("object" != typeof r)
                        return r;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }
                return ("string" === t ? String : Number)(e)
            }(e, "string");
            return "symbol" == typeof t ? t : String(t)
        }
        function a(e, t, n) {
            return (t = o(t))in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function l(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }
                ))),
                n.push.apply(n, r)
            }
            return n
        }
        function c(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? l(Object(n), !0).forEach((function(t) {
                    a(e, t, n[t])
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : l(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }
                ))
            }
            return e
        }
        const h = {
            pointer: {
                start: "down",
                change: "move",
                end: "up"
            },
            mouse: {
                start: "down",
                change: "move",
                end: "up"
            },
            touch: {
                start: "start",
                change: "move",
                end: "end"
            },
            gesture: {
                start: "start",
                change: "change",
                end: "end"
            }
        };
        function p(e) {
            return e ? e[0].toUpperCase() + e.slice(1) : ""
        }
        const u = ["enter", "leave"];
        function d(e, t="", n=!1) {
            const r = h[e]
              , i = r && r[t] || t;
            return "on" + p(e) + p(i) + (function(e=!1, t) {
                return e && !u.includes(t)
            }(n, i) ? "Capture" : "")
        }
        const m = ["gotpointercapture", "lostpointercapture"];
        function f(e) {
            let t = e.substring(2).toLowerCase();
            const n = !!~t.indexOf("passive");
            n && (t = t.replace("passive", ""));
            const r = m.includes(t) ? "capturecapture" : "capture"
              , i = !!~t.indexOf(r);
            return i && (t = t.replace("capture", "")),
            {
                device: t,
                capture: i,
                passive: n
            }
        }
        function g(e) {
            return "touches"in e
        }
        function v(e) {
            return g(e) ? "touch" : "pointerType"in e ? e.pointerType : "mouse"
        }
        function y(e) {
            return g(e) ? function(e) {
                return "touchend" === e.type || "touchcancel" === e.type ? e.changedTouches : e.targetTouches
            }(e)[0] : e
        }
        function b(e, t) {
            try {
                const n = t.clientX - e.clientX
                  , r = t.clientY - e.clientY
                  , i = (t.clientX + e.clientX) / 2
                  , s = (t.clientY + e.clientY) / 2
                  , o = Math.hypot(n, r)
                  , a = -180 * Math.atan2(n, r) / Math.PI;
                return {
                    angle: a,
                    distance: o,
                    origin: [i, s]
                }
            } catch (e) {}
            return null
        }
        function x(e) {
            return function(e) {
                return Array.from(e.touches).filter((t => {
                    var n, r;
                    return t.target === e.currentTarget || (null === (n = e.currentTarget) || void 0 === n || null === (r = n.contains) || void 0 === r ? void 0 : r.call(n, t.target))
                }
                ))
            }(e).map((e => e.identifier))
        }
        function w(e, t) {
            const [n,r] = Array.from(e.touches).filter((e => t.includes(e.identifier)));
            return b(n, r)
        }
        function k(e) {
            const t = y(e);
            return g(e) ? t.identifier : t.pointerId
        }
        function S(e) {
            const t = y(e);
            return [t.clientX, t.clientY]
        }
        function E(e) {
            let {deltaX: t, deltaY: n, deltaMode: r} = e;
            return 1 === r ? (t *= 40,
            n *= 40) : 2 === r && (t *= 800,
            n *= 800),
            [t, n]
        }
        function M(e, ...t) {
            return "function" == typeof e ? e(...t) : e
        }
        function C() {}
        function T(...e) {
            return 0 === e.length ? C : 1 === e.length ? e[0] : function() {
                let t;
                for (const n of e)
                    t = n.apply(this, arguments) || t;
                return t
            }
        }
        function _(e, t) {
            return Object.assign({}, t, e || {})
        }
        class A {
            constructor(e, t, n) {
                this.ctrl = e,
                this.args = t,
                this.key = n,
                this.state || (this.state = {},
                this.computeValues([0, 0]),
                this.computeInitial(),
                this.init && this.init(),
                this.reset())
            }
            get state() {
                return this.ctrl.state[this.key]
            }
            set state(e) {
                this.ctrl.state[this.key] = e
            }
            get shared() {
                return this.ctrl.state.shared
            }
            get eventStore() {
                return this.ctrl.gestureEventStores[this.key]
            }
            get timeoutStore() {
                return this.ctrl.gestureTimeoutStores[this.key]
            }
            get config() {
                return this.ctrl.config[this.key]
            }
            get sharedConfig() {
                return this.ctrl.config.shared
            }
            get handler() {
                return this.ctrl.handlers[this.key]
            }
            reset() {
                const {state: e, shared: t, ingKey: n, args: r} = this;
                t[n] = e._active = e.active = e._blocked = e._force = !1,
                e._step = [!1, !1],
                e.intentional = !1,
                e._movement = [0, 0],
                e._distance = [0, 0],
                e._direction = [0, 0],
                e._delta = [0, 0],
                e._bounds = [[-1 / 0, 1 / 0], [-1 / 0, 1 / 0]],
                e.args = r,
                e.axis = void 0,
                e.memo = void 0,
                e.elapsedTime = e.timeDelta = 0,
                e.direction = [0, 0],
                e.distance = [0, 0],
                e.overflow = [0, 0],
                e._movementBound = [!1, !1],
                e.velocity = [0, 0],
                e.movement = [0, 0],
                e.delta = [0, 0],
                e.timeStamp = 0
            }
            start(e) {
                const t = this.state
                  , n = this.config;
                t._active || (this.reset(),
                this.computeInitial(),
                t._active = !0,
                t.target = e.target,
                t.currentTarget = e.currentTarget,
                t.lastOffset = n.from ? M(n.from, t) : t.offset,
                t.offset = t.lastOffset,
                t.startTime = t.timeStamp = e.timeStamp)
            }
            computeValues(e) {
                const t = this.state;
                t._values = e,
                t.values = this.config.transform(e)
            }
            computeInitial() {
                const e = this.state;
                e._initial = e._values,
                e.initial = e.values
            }
            compute(e) {
                const {state: t, config: n, shared: i} = this;
                t.args = this.args;
                let o = 0;
                if (e && (t.event = e,
                n.preventDefault && e.cancelable && t.event.preventDefault(),
                t.type = e.type,
                i.touches = this.ctrl.pointerIds.size || this.ctrl.touchIds.size,
                i.locked = !!document.pointerLockElement,
                Object.assign(i, function(e) {
                    const t = {};
                    if ("buttons"in e && (t.buttons = e.buttons),
                    "shiftKey"in e) {
                        const {shiftKey: n, altKey: r, metaKey: i, ctrlKey: s} = e;
                        Object.assign(t, {
                            shiftKey: n,
                            altKey: r,
                            metaKey: i,
                            ctrlKey: s
                        })
                    }
                    return t
                }(e)),
                i.down = i.pressed = i.buttons % 2 == 1 || i.touches > 0,
                o = e.timeStamp - t.timeStamp,
                t.timeStamp = e.timeStamp,
                t.elapsedTime = t.timeStamp - t.startTime),
                t._active) {
                    const e = t._delta.map(Math.abs);
                    r.addTo(t._distance, e)
                }
                this.axisIntent && this.axisIntent(e);
                const [a,l] = t._movement
                  , [c,h] = n.threshold
                  , {_step: p, values: u} = t;
                if (n.hasCustomTransform ? (!1 === p[0] && (p[0] = Math.abs(a) >= c && u[0]),
                !1 === p[1] && (p[1] = Math.abs(l) >= h && u[1])) : (!1 === p[0] && (p[0] = Math.abs(a) >= c && Math.sign(a) * c),
                !1 === p[1] && (p[1] = Math.abs(l) >= h && Math.sign(l) * h)),
                t.intentional = !1 !== p[0] || !1 !== p[1],
                !t.intentional)
                    return;
                const d = [0, 0];
                if (n.hasCustomTransform) {
                    const [e,t] = u;
                    d[0] = !1 !== p[0] ? e - p[0] : 0,
                    d[1] = !1 !== p[1] ? t - p[1] : 0
                } else
                    d[0] = !1 !== p[0] ? a - p[0] : 0,
                    d[1] = !1 !== p[1] ? l - p[1] : 0;
                this.restrictToAxis && !t._blocked && this.restrictToAxis(d);
                const m = t.offset
                  , f = t._active && !t._blocked || t.active;
                f && (t.first = t._active && !t.active,
                t.last = !t._active && t.active,
                t.active = i[this.ingKey] = t._active,
                e && (t.first && ("bounds"in n && (t._bounds = M(n.bounds, t)),
                this.setup && this.setup()),
                t.movement = d,
                this.computeOffset()));
                const [g,v] = t.offset
                  , [[y,b],[x,w]] = t._bounds;
                t.overflow = [g < y ? -1 : g > b ? 1 : 0, v < x ? -1 : v > w ? 1 : 0],
                t._movementBound[0] = !!t.overflow[0] && (!1 === t._movementBound[0] ? t._movement[0] : t._movementBound[0]),
                t._movementBound[1] = !!t.overflow[1] && (!1 === t._movementBound[1] ? t._movement[1] : t._movementBound[1]);
                const k = t._active && n.rubberband || [0, 0];
                if (t.offset = function(e, [t,n], [r,i]) {
                    const [[o,a],[l,c]] = e;
                    return [s(t, o, a, r), s(n, l, c, i)]
                }(t._bounds, t.offset, k),
                t.delta = r.sub(t.offset, m),
                this.computeMovement(),
                f && (!t.last || o > 32)) {
                    t.delta = r.sub(t.offset, m);
                    const e = t.delta.map(Math.abs);
                    r.addTo(t.distance, e),
                    t.direction = t.delta.map(Math.sign),
                    t._direction = t._delta.map(Math.sign),
                    !t.first && o > 0 && (t.velocity = [e[0] / o, e[1] / o],
                    t.timeDelta = o)
                }
            }
            emit() {
                const e = this.state
                  , t = this.shared
                  , n = this.config;
                if (e._active || this.clean(),
                (e._blocked || !e.intentional) && !e._force && !n.triggerAllEvents)
                    return;
                const r = this.handler(c(c(c({}, t), e), {}, {
                    [this.aliasKey]: e.values
                }));
                void 0 !== r && (e.memo = r)
            }
            clean() {
                this.eventStore.clean(),
                this.timeoutStore.clean()
            }
        }
        class I extends A {
            constructor(...e) {
                super(...e),
                a(this, "aliasKey", "xy")
            }
            reset() {
                super.reset(),
                this.state.axis = void 0
            }
            init() {
                this.state.offset = [0, 0],
                this.state.lastOffset = [0, 0]
            }
            computeOffset() {
                this.state.offset = r.add(this.state.lastOffset, this.state.movement)
            }
            computeMovement() {
                this.state.movement = r.sub(this.state.offset, this.state.lastOffset)
            }
            axisIntent(e) {
                const t = this.state
                  , n = this.config;
                if (!t.axis && e) {
                    const r = "object" == typeof n.axisThreshold ? n.axisThreshold[v(e)] : n.axisThreshold;
                    t.axis = function([e,t], n) {
                        const r = Math.abs(e)
                          , i = Math.abs(t);
                        return r > i && r > n ? "x" : i > r && i > n ? "y" : void 0
                    }(t._movement, r)
                }
                t._blocked = (n.lockDirection || !!n.axis) && !t.axis || !!n.axis && n.axis !== t.axis
            }
            restrictToAxis(e) {
                if (this.config.axis || this.config.lockDirection)
                    switch (this.state.axis) {
                    case "x":
                        e[1] = 0;
                        break;
                    case "y":
                        e[0] = 0
                    }
            }
        }
        const R = e => e
          , N = {
            enabled: (e=!0) => e,
            eventOptions: (e, t, n) => c(c({}, n.shared.eventOptions), e),
            preventDefault: (e=!1) => e,
            triggerAllEvents: (e=!1) => e,
            rubberband(e=0) {
                switch (e) {
                case !0:
                    return [.15, .15];
                case !1:
                    return [0, 0];
                default:
                    return r.toVector(e)
                }
            },
            from: e => "function" == typeof e ? e : null != e ? r.toVector(e) : void 0,
            transform(e, t, n) {
                const r = e || n.shared.transform;
                return this.hasCustomTransform = !!r,
                r || R
            },
            threshold: e => r.toVector(e, 0)
        };
        const P = c(c({}, N), {}, {
            axis(e, t, {axis: n}) {
                if (this.lockDirection = "lock" === n,
                !this.lockDirection)
                    return n
            },
            axisThreshold: (e=0) => e,
            bounds(e={}) {
                if ("function" == typeof e)
                    return t => P.bounds(e(t));
                if ("current"in e)
                    return () => e.current;
                if ("function" == typeof HTMLElement && e instanceof HTMLElement)
                    return e;
                const {left: t=-1 / 0, right: n=1 / 0, top: r=-1 / 0, bottom: i=1 / 0} = e;
                return [[t, n], [r, i]]
            }
        })
          , O = {
            ArrowRight: (e, t=1) => [e * t, 0],
            ArrowLeft: (e, t=1) => [-1 * e * t, 0],
            ArrowUp: (e, t=1) => [0, -1 * e * t],
            ArrowDown: (e, t=1) => [0, e * t]
        };
        const L = "undefined" != typeof window && window.document && window.document.createElement;
        function D() {
            return L && "ontouchstart"in window
        }
        const F = {
            isBrowser: L,
            gesture: function() {
                try {
                    return "constructor"in GestureEvent
                } catch (e) {
                    return !1
                }
            }(),
            touch: D(),
            touchscreen: D() || L && window.navigator.maxTouchPoints > 1,
            pointer: L && "onpointerdown"in window,
            pointerLock: L && "exitPointerLock"in window.document
        }
          , z = {
            mouse: 0,
            touch: 0,
            pen: 8
        }
          , B = c(c({}, P), {}, {
            device(e, t, {pointer: {touch: n=!1, lock: r=!1, mouse: i=!1}={}}) {
                return this.pointerLock = r && F.pointerLock,
                F.touch && n ? "touch" : this.pointerLock ? "mouse" : F.pointer && !i ? "pointer" : F.touch ? "touch" : "mouse"
            },
            preventScrollAxis(e, t, {preventScroll: n}) {
                if (this.preventScrollDelay = "number" == typeof n ? n : n || void 0 === n && e ? 250 : void 0,
                F.touchscreen && !1 !== n)
                    return e || (void 0 !== n ? "y" : void 0)
            },
            pointerCapture(e, t, {pointer: {capture: n=!0, buttons: r=1, keys: i=!0}={}}) {
                return this.pointerButtons = r,
                this.keys = i,
                !this.pointerLock && "pointer" === this.device && n
            },
            threshold(e, t, {filterTaps: n=!1, tapsThreshold: i=3, axis: s}) {
                const o = r.toVector(e, n ? i : s ? 1 : 0);
                return this.filterTaps = n,
                this.tapsThreshold = i,
                o
            },
            swipe({velocity: e=.5, distance: t=50, duration: n=250}={}) {
                return {
                    velocity: this.transform(r.toVector(e)),
                    distance: this.transform(r.toVector(t)),
                    duration: n
                }
            },
            delay(e=0) {
                switch (e) {
                case !0:
                    return 180;
                case !1:
                    return 0;
                default:
                    return e
                }
            },
            axisThreshold: e => e ? c(c({}, z), e) : z,
            keyboardDisplacement: (e=10) => e
        });
        function q(e) {
            const [t,n] = e.overflow
              , [r,i] = e._delta
              , [s,o] = e._direction;
            (t < 0 && r > 0 && s < 0 || t > 0 && r < 0 && s > 0) && (e._movement[0] = e._movementBound[0]),
            (n < 0 && i > 0 && o < 0 || n > 0 && i < 0 && o > 0) && (e._movement[1] = e._movementBound[1])
        }
        const H = c(c({}, N), {}, {
            device(e, t, {shared: n, pointer: {touch: r=!1}={}}) {
                if (n.target && !F.touch && F.gesture)
                    return "gesture";
                if (F.touch && r)
                    return "touch";
                if (F.touchscreen) {
                    if (F.pointer)
                        return "pointer";
                    if (F.touch)
                        return "touch"
                }
            },
            bounds(e, t, {scaleBounds: n={}, angleBounds: r={}}) {
                const i = e => {
                    const t = _(M(n, e), {
                        min: -1 / 0,
                        max: 1 / 0
                    });
                    return [t.min, t.max]
                }
                  , s = e => {
                    const t = _(M(r, e), {
                        min: -1 / 0,
                        max: 1 / 0
                    });
                    return [t.min, t.max]
                }
                ;
                return "function" != typeof n && "function" != typeof r ? [i(), s()] : e => [i(e), s(e)]
            },
            threshold(e, t, n) {
                this.lockDirection = "lock" === n.axis;
                return r.toVector(e, this.lockDirection ? [.1, 3] : 0)
            },
            modifierKey: e => void 0 === e ? "ctrlKey" : e,
            pinchOnWheel: (e=!0) => e
        });
        const U = c(c({}, P), {}, {
            mouseOnly: (e=!0) => e
        });
        const G = P;
        const W = P;
        const V = c(c({}, P), {}, {
            mouseOnly: (e=!0) => e
        })
          , $ = new Map
          , j = new Map;
        function K(e) {
            $.set(e.key, e.engine),
            j.set(e.key, e.resolver)
        }
        const Z = {
            key: "drag",
            engine: class extends I {
                constructor(...e) {
                    super(...e),
                    a(this, "ingKey", "dragging")
                }
                reset() {
                    super.reset();
                    const e = this.state;
                    e._pointerId = void 0,
                    e._pointerActive = !1,
                    e._keyboardActive = !1,
                    e._preventScroll = !1,
                    e._delayed = !1,
                    e.swipe = [0, 0],
                    e.tap = !1,
                    e.canceled = !1,
                    e.cancel = this.cancel.bind(this)
                }
                setup() {
                    const e = this.state;
                    if (e._bounds instanceof HTMLElement) {
                        const t = e._bounds.getBoundingClientRect()
                          , n = e.currentTarget.getBoundingClientRect()
                          , r = {
                            left: t.left - n.left + e.offset[0],
                            right: t.right - n.right + e.offset[0],
                            top: t.top - n.top + e.offset[1],
                            bottom: t.bottom - n.bottom + e.offset[1]
                        };
                        e._bounds = P.bounds(r)
                    }
                }
                cancel() {
                    const e = this.state;
                    e.canceled || (e.canceled = !0,
                    e._active = !1,
                    setTimeout(( () => {
                        this.compute(),
                        this.emit()
                    }
                    ), 0))
                }
                setActive() {
                    this.state._active = this.state._pointerActive || this.state._keyboardActive
                }
                clean() {
                    this.pointerClean(),
                    this.state._pointerActive = !1,
                    this.state._keyboardActive = !1,
                    super.clean()
                }
                pointerDown(e) {
                    const t = this.config
                      , n = this.state;
                    if (null != e.buttons && (Array.isArray(t.pointerButtons) ? !t.pointerButtons.includes(e.buttons) : -1 !== t.pointerButtons && t.pointerButtons !== e.buttons))
                        return;
                    const r = this.ctrl.setEventIds(e);
                    t.pointerCapture && e.target.setPointerCapture(e.pointerId),
                    r && r.size > 1 && n._pointerActive || (this.start(e),
                    this.setupPointer(e),
                    n._pointerId = k(e),
                    n._pointerActive = !0,
                    this.computeValues(S(e)),
                    this.computeInitial(),
                    t.preventScrollAxis && "mouse" !== v(e) ? (n._active = !1,
                    this.setupScrollPrevention(e)) : t.delay > 0 ? (this.setupDelayTrigger(e),
                    t.triggerAllEvents && (this.compute(e),
                    this.emit())) : this.startPointerDrag(e))
                }
                startPointerDrag(e) {
                    const t = this.state;
                    t._active = !0,
                    t._preventScroll = !0,
                    t._delayed = !1,
                    this.compute(e),
                    this.emit()
                }
                pointerMove(e) {
                    const t = this.state
                      , n = this.config;
                    if (!t._pointerActive)
                        return;
                    const i = k(e);
                    if (void 0 !== t._pointerId && i !== t._pointerId)
                        return;
                    const s = S(e);
                    return document.pointerLockElement === e.target ? t._delta = [e.movementX, e.movementY] : (t._delta = r.sub(s, t._values),
                    this.computeValues(s)),
                    r.addTo(t._movement, t._delta),
                    this.compute(e),
                    t._delayed && t.intentional ? (this.timeoutStore.remove("dragDelay"),
                    t.active = !1,
                    void this.startPointerDrag(e)) : n.preventScrollAxis && !t._preventScroll ? t.axis ? t.axis === n.preventScrollAxis || "xy" === n.preventScrollAxis ? (t._active = !1,
                    void this.clean()) : (this.timeoutStore.remove("startPointerDrag"),
                    void this.startPointerDrag(e)) : void 0 : void this.emit()
                }
                pointerUp(e) {
                    this.ctrl.setEventIds(e);
                    try {
                        this.config.pointerCapture && e.target.hasPointerCapture(e.pointerId) && e.target.releasePointerCapture(e.pointerId)
                    } catch (e) {
                        0
                    }
                    const t = this.state
                      , n = this.config;
                    if (!t._active || !t._pointerActive)
                        return;
                    const r = k(e);
                    if (void 0 !== t._pointerId && r !== t._pointerId)
                        return;
                    this.state._pointerActive = !1,
                    this.setActive(),
                    this.compute(e);
                    const [i,s] = t._distance;
                    if (t.tap = i <= n.tapsThreshold && s <= n.tapsThreshold,
                    t.tap && n.filterTaps)
                        t._force = !0;
                    else {
                        const [e,r] = t._delta
                          , [i,s] = t._movement
                          , [o,a] = n.swipe.velocity
                          , [l,c] = n.swipe.distance
                          , h = n.swipe.duration;
                        if (t.elapsedTime < h) {
                            const n = Math.abs(e / t.timeDelta)
                              , h = Math.abs(r / t.timeDelta);
                            n > o && Math.abs(i) > l && (t.swipe[0] = Math.sign(e)),
                            h > a && Math.abs(s) > c && (t.swipe[1] = Math.sign(r))
                        }
                    }
                    this.emit()
                }
                pointerClick(e) {
                    !this.state.tap && e.detail > 0 && (e.preventDefault(),
                    e.stopPropagation())
                }
                setupPointer(e) {
                    const t = this.config
                      , n = t.device;
                    t.pointerLock && e.currentTarget.requestPointerLock(),
                    t.pointerCapture || (this.eventStore.add(this.sharedConfig.window, n, "change", this.pointerMove.bind(this)),
                    this.eventStore.add(this.sharedConfig.window, n, "end", this.pointerUp.bind(this)),
                    this.eventStore.add(this.sharedConfig.window, n, "cancel", this.pointerUp.bind(this)))
                }
                pointerClean() {
                    this.config.pointerLock && document.pointerLockElement === this.state.currentTarget && document.exitPointerLock()
                }
                preventScroll(e) {
                    this.state._preventScroll && e.cancelable && e.preventDefault()
                }
                setupScrollPrevention(e) {
                    this.state._preventScroll = !1,
                    function(e) {
                        "persist"in e && "function" == typeof e.persist && e.persist()
                    }(e);
                    const t = this.eventStore.add(this.sharedConfig.window, "touch", "change", this.preventScroll.bind(this), {
                        passive: !1
                    });
                    this.eventStore.add(this.sharedConfig.window, "touch", "end", t),
                    this.eventStore.add(this.sharedConfig.window, "touch", "cancel", t),
                    this.timeoutStore.add("startPointerDrag", this.startPointerDrag.bind(this), this.config.preventScrollDelay, e)
                }
                setupDelayTrigger(e) {
                    this.state._delayed = !0,
                    this.timeoutStore.add("dragDelay", ( () => {
                        this.state._step = [0, 0],
                        this.startPointerDrag(e)
                    }
                    ), this.config.delay)
                }
                keyDown(e) {
                    const t = O[e.key];
                    if (t) {
                        const n = this.state
                          , i = e.shiftKey ? 10 : e.altKey ? .1 : 1;
                        this.start(e),
                        n._delta = t(this.config.keyboardDisplacement, i),
                        n._keyboardActive = !0,
                        r.addTo(n._movement, n._delta),
                        this.compute(e),
                        this.emit()
                    }
                }
                keyUp(e) {
                    e.key in O && (this.state._keyboardActive = !1,
                    this.setActive(),
                    this.compute(e),
                    this.emit())
                }
                bind(e) {
                    const t = this.config.device;
                    e(t, "start", this.pointerDown.bind(this)),
                    this.config.pointerCapture && (e(t, "change", this.pointerMove.bind(this)),
                    e(t, "end", this.pointerUp.bind(this)),
                    e(t, "cancel", this.pointerUp.bind(this)),
                    e("lostPointerCapture", "", this.pointerUp.bind(this))),
                    this.config.keys && (e("key", "down", this.keyDown.bind(this)),
                    e("key", "up", this.keyUp.bind(this))),
                    this.config.filterTaps && e("click", "", this.pointerClick.bind(this), {
                        capture: !0,
                        passive: !1
                    })
                }
            }
            ,
            resolver: B
        }
          , Y = {
            key: "hover",
            engine: class extends I {
                constructor(...e) {
                    super(...e),
                    a(this, "ingKey", "hovering")
                }
                enter(e) {
                    this.config.mouseOnly && "mouse" !== e.pointerType || (this.start(e),
                    this.computeValues(S(e)),
                    this.compute(e),
                    this.emit())
                }
                leave(e) {
                    if (this.config.mouseOnly && "mouse" !== e.pointerType)
                        return;
                    const t = this.state;
                    if (!t._active)
                        return;
                    t._active = !1;
                    const n = S(e);
                    t._movement = t._delta = r.sub(n, t._values),
                    this.computeValues(n),
                    this.compute(e),
                    t.delta = t.movement,
                    this.emit()
                }
                bind(e) {
                    e("pointer", "enter", this.enter.bind(this)),
                    e("pointer", "leave", this.leave.bind(this))
                }
            }
            ,
            resolver: V
        }
          , X = {
            key: "move",
            engine: class extends I {
                constructor(...e) {
                    super(...e),
                    a(this, "ingKey", "moving")
                }
                move(e) {
                    this.config.mouseOnly && "mouse" !== e.pointerType || (this.state._active ? this.moveChange(e) : this.moveStart(e),
                    this.timeoutStore.add("moveEnd", this.moveEnd.bind(this)))
                }
                moveStart(e) {
                    this.start(e),
                    this.computeValues(S(e)),
                    this.compute(e),
                    this.computeInitial(),
                    this.emit()
                }
                moveChange(e) {
                    if (!this.state._active)
                        return;
                    const t = S(e)
                      , n = this.state;
                    n._delta = r.sub(t, n._values),
                    r.addTo(n._movement, n._delta),
                    this.computeValues(t),
                    this.compute(e),
                    this.emit()
                }
                moveEnd(e) {
                    this.state._active && (this.state._active = !1,
                    this.compute(e),
                    this.emit())
                }
                bind(e) {
                    e("pointer", "change", this.move.bind(this)),
                    e("pointer", "leave", this.moveEnd.bind(this))
                }
            }
            ,
            resolver: U
        }
          , J = {
            key: "pinch",
            engine: class extends A {
                constructor(...e) {
                    super(...e),
                    a(this, "ingKey", "pinching"),
                    a(this, "aliasKey", "da")
                }
                init() {
                    this.state.offset = [1, 0],
                    this.state.lastOffset = [1, 0],
                    this.state._pointerEvents = new Map
                }
                reset() {
                    super.reset();
                    const e = this.state;
                    e._touchIds = [],
                    e.canceled = !1,
                    e.cancel = this.cancel.bind(this),
                    e.turns = 0
                }
                computeOffset() {
                    const {type: e, movement: t, lastOffset: n} = this.state;
                    this.state.offset = "wheel" === e ? r.add(t, n) : [(1 + t[0]) * n[0], t[1] + n[1]]
                }
                computeMovement() {
                    const {offset: e, lastOffset: t} = this.state;
                    this.state.movement = [e[0] / t[0], e[1] - t[1]]
                }
                axisIntent() {
                    const e = this.state
                      , [t,n] = e._movement;
                    if (!e.axis) {
                        const r = 30 * Math.abs(t) - Math.abs(n);
                        r < 0 ? e.axis = "angle" : r > 0 && (e.axis = "scale")
                    }
                }
                restrictToAxis(e) {
                    this.config.lockDirection && ("scale" === this.state.axis ? e[1] = 0 : "angle" === this.state.axis && (e[0] = 0))
                }
                cancel() {
                    const e = this.state;
                    e.canceled || setTimeout(( () => {
                        e.canceled = !0,
                        e._active = !1,
                        this.compute(),
                        this.emit()
                    }
                    ), 0)
                }
                touchStart(e) {
                    this.ctrl.setEventIds(e);
                    const t = this.state
                      , n = this.ctrl.touchIds;
                    if (t._active && t._touchIds.every((e => n.has(e))))
                        return;
                    if (n.size < 2)
                        return;
                    this.start(e),
                    t._touchIds = Array.from(n).slice(0, 2);
                    const r = w(e, t._touchIds);
                    r && this.pinchStart(e, r)
                }
                pointerStart(e) {
                    if (null != e.buttons && e.buttons % 2 != 1)
                        return;
                    this.ctrl.setEventIds(e),
                    e.target.setPointerCapture(e.pointerId);
                    const t = this.state
                      , n = t._pointerEvents
                      , r = this.ctrl.pointerIds;
                    if (t._active && Array.from(n.keys()).every((e => r.has(e))))
                        return;
                    if (n.size < 2 && n.set(e.pointerId, e),
                    t._pointerEvents.size < 2)
                        return;
                    this.start(e);
                    const i = b(...Array.from(n.values()));
                    i && this.pinchStart(e, i)
                }
                pinchStart(e, t) {
                    this.state.origin = t.origin,
                    this.computeValues([t.distance, t.angle]),
                    this.computeInitial(),
                    this.compute(e),
                    this.emit()
                }
                touchMove(e) {
                    if (!this.state._active)
                        return;
                    const t = w(e, this.state._touchIds);
                    t && this.pinchMove(e, t)
                }
                pointerMove(e) {
                    const t = this.state._pointerEvents;
                    if (t.has(e.pointerId) && t.set(e.pointerId, e),
                    !this.state._active)
                        return;
                    const n = b(...Array.from(t.values()));
                    n && this.pinchMove(e, n)
                }
                pinchMove(e, t) {
                    const n = this.state
                      , r = n._values[1]
                      , i = t.angle - r;
                    let s = 0;
                    Math.abs(i) > 270 && (s += Math.sign(i)),
                    this.computeValues([t.distance, t.angle - 360 * s]),
                    n.origin = t.origin,
                    n.turns = s,
                    n._movement = [n._values[0] / n._initial[0] - 1, n._values[1] - n._initial[1]],
                    this.compute(e),
                    this.emit()
                }
                touchEnd(e) {
                    this.ctrl.setEventIds(e),
                    this.state._active && this.state._touchIds.some((e => !this.ctrl.touchIds.has(e))) && (this.state._active = !1,
                    this.compute(e),
                    this.emit())
                }
                pointerEnd(e) {
                    const t = this.state;
                    this.ctrl.setEventIds(e);
                    try {
                        e.target.releasePointerCapture(e.pointerId)
                    } catch (e) {}
                    t._pointerEvents.has(e.pointerId) && t._pointerEvents.delete(e.pointerId),
                    t._active && t._pointerEvents.size < 2 && (t._active = !1,
                    this.compute(e),
                    this.emit())
                }
                gestureStart(e) {
                    e.cancelable && e.preventDefault();
                    const t = this.state;
                    t._active || (this.start(e),
                    this.computeValues([e.scale, e.rotation]),
                    t.origin = [e.clientX, e.clientY],
                    this.compute(e),
                    this.emit())
                }
                gestureMove(e) {
                    if (e.cancelable && e.preventDefault(),
                    !this.state._active)
                        return;
                    const t = this.state;
                    this.computeValues([e.scale, e.rotation]),
                    t.origin = [e.clientX, e.clientY];
                    const n = t._movement;
                    t._movement = [e.scale - 1, e.rotation],
                    t._delta = r.sub(t._movement, n),
                    this.compute(e),
                    this.emit()
                }
                gestureEnd(e) {
                    this.state._active && (this.state._active = !1,
                    this.compute(e),
                    this.emit())
                }
                wheel(e) {
                    const t = this.config.modifierKey;
                    t && !(Array.isArray(t) ? t.find((t => e[t])) : e[t]) || (this.state._active ? this.wheelChange(e) : this.wheelStart(e),
                    this.timeoutStore.add("wheelEnd", this.wheelEnd.bind(this)))
                }
                wheelStart(e) {
                    this.start(e),
                    this.wheelChange(e)
                }
                wheelChange(e) {
                    "uv"in e || e.cancelable && e.preventDefault();
                    const t = this.state;
                    t._delta = [-E(e)[1] / 100 * t.offset[0], 0],
                    r.addTo(t._movement, t._delta),
                    q(t),
                    this.state.origin = [e.clientX, e.clientY],
                    this.compute(e),
                    this.emit()
                }
                wheelEnd() {
                    this.state._active && (this.state._active = !1,
                    this.compute(),
                    this.emit())
                }
                bind(e) {
                    const t = this.config.device;
                    t && (e(t, "start", this[t + "Start"].bind(this)),
                    e(t, "change", this[t + "Move"].bind(this)),
                    e(t, "end", this[t + "End"].bind(this)),
                    e(t, "cancel", this[t + "End"].bind(this)),
                    e("lostPointerCapture", "", this[t + "End"].bind(this))),
                    this.config.pinchOnWheel && e("wheel", "", this.wheel.bind(this), {
                        passive: !1
                    })
                }
            }
            ,
            resolver: H
        }
          , Q = {
            key: "scroll",
            engine: class extends I {
                constructor(...e) {
                    super(...e),
                    a(this, "ingKey", "scrolling")
                }
                scroll(e) {
                    this.state._active || this.start(e),
                    this.scrollChange(e),
                    this.timeoutStore.add("scrollEnd", this.scrollEnd.bind(this))
                }
                scrollChange(e) {
                    e.cancelable && e.preventDefault();
                    const t = this.state
                      , n = function(e) {
                        var t, n;
                        const {scrollX: r, scrollY: i, scrollLeft: s, scrollTop: o} = e.currentTarget;
                        return [null !== (t = null != r ? r : s) && void 0 !== t ? t : 0, null !== (n = null != i ? i : o) && void 0 !== n ? n : 0]
                    }(e);
                    t._delta = r.sub(n, t._values),
                    r.addTo(t._movement, t._delta),
                    this.computeValues(n),
                    this.compute(e),
                    this.emit()
                }
                scrollEnd() {
                    this.state._active && (this.state._active = !1,
                    this.compute(),
                    this.emit())
                }
                bind(e) {
                    e("scroll", "", this.scroll.bind(this))
                }
            }
            ,
            resolver: G
        }
          , ee = {
            key: "wheel",
            engine: class extends I {
                constructor(...e) {
                    super(...e),
                    a(this, "ingKey", "wheeling")
                }
                wheel(e) {
                    this.state._active || this.start(e),
                    this.wheelChange(e),
                    this.timeoutStore.add("wheelEnd", this.wheelEnd.bind(this))
                }
                wheelChange(e) {
                    const t = this.state;
                    t._delta = E(e),
                    r.addTo(t._movement, t._delta),
                    q(t),
                    this.compute(e),
                    this.emit()
                }
                wheelEnd() {
                    this.state._active && (this.state._active = !1,
                    this.compute(),
                    this.emit())
                }
                bind(e) {
                    e("wheel", "", this.wheel.bind(this))
                }
            }
            ,
            resolver: W
        };
        var te = n(667294);
        function ne(e, t) {
            if (null == e)
                return {};
            var n, r, i = function(e, t) {
                if (null == e)
                    return {};
                var n, r, i = {}, s = Object.keys(e);
                for (r = 0; r < s.length; r++)
                    n = s[r],
                    t.indexOf(n) >= 0 || (i[n] = e[n]);
                return i
            }(e, t);
            if (Object.getOwnPropertySymbols) {
                var s = Object.getOwnPropertySymbols(e);
                for (r = 0; r < s.length; r++)
                    n = s[r],
                    t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (i[n] = e[n])
            }
            return i
        }
        const re = {
            target(e) {
                if (e)
                    return () => "current"in e ? e.current : e
            },
            enabled: (e=!0) => e,
            window: (e=(F.isBrowser ? window : void 0)) => e,
            eventOptions: ({passive: e=!0, capture: t=!1}={}) => ({
                passive: e,
                capture: t
            }),
            transform: e => e
        }
          , ie = ["target", "eventOptions", "window", "enabled", "transform"];
        function se(e={}, t) {
            const n = {};
            for (const [r,i] of Object.entries(t))
                switch (typeof i) {
                case "function":
                    n[r] = i.call(n, e[r], r, e);
                    break;
                case "object":
                    n[r] = se(e[r], i);
                    break;
                case "boolean":
                    i && (n[r] = e[r])
                }
            return n
        }
        class oe {
            constructor(e, t) {
                a(this, "_listeners", new Set),
                this._ctrl = e,
                this._gestureKey = t
            }
            add(e, t, n, r, i) {
                const s = this._listeners
                  , o = function(e, t="") {
                    const n = h[e];
                    return e + (n && n[t] || t)
                }(t, n)
                  , a = c(c({}, this._gestureKey ? this._ctrl.config[this._gestureKey].eventOptions : {}), i);
                e.addEventListener(o, r, a);
                const l = () => {
                    e.removeEventListener(o, r, a),
                    s.delete(l)
                }
                ;
                return s.add(l),
                l
            }
            clean() {
                this._listeners.forEach((e => e())),
                this._listeners.clear()
            }
        }
        class ae {
            constructor() {
                a(this, "_timeouts", new Map)
            }
            add(e, t, n=140, ...r) {
                this.remove(e),
                this._timeouts.set(e, window.setTimeout(t, n, ...r))
            }
            remove(e) {
                const t = this._timeouts.get(e);
                t && window.clearTimeout(t)
            }
            clean() {
                this._timeouts.forEach((e => {
                    window.clearTimeout(e)
                }
                )),
                this._timeouts.clear()
            }
        }
        class le {
            constructor(e) {
                a(this, "gestures", new Set),
                a(this, "_targetEventStore", new oe(this)),
                a(this, "gestureEventStores", {}),
                a(this, "gestureTimeoutStores", {}),
                a(this, "handlers", {}),
                a(this, "config", {}),
                a(this, "pointerIds", new Set),
                a(this, "touchIds", new Set),
                a(this, "state", {
                    shared: {
                        shiftKey: !1,
                        metaKey: !1,
                        ctrlKey: !1,
                        altKey: !1
                    }
                }),
                function(e, t) {
                    t.drag && ce(e, "drag");
                    t.wheel && ce(e, "wheel");
                    t.scroll && ce(e, "scroll");
                    t.move && ce(e, "move");
                    t.pinch && ce(e, "pinch");
                    t.hover && ce(e, "hover")
                }(this, e)
            }
            setEventIds(e) {
                return g(e) ? (this.touchIds = new Set(x(e)),
                this.touchIds) : "pointerId"in e ? ("pointerup" === e.type || "pointercancel" === e.type ? this.pointerIds.delete(e.pointerId) : "pointerdown" === e.type && this.pointerIds.add(e.pointerId),
                this.pointerIds) : void 0
            }
            applyHandlers(e, t) {
                this.handlers = e,
                this.nativeHandlers = t
            }
            applyConfig(e, t) {
                this.config = function(e, t, n={}) {
                    const r = e
                      , {target: i, eventOptions: s, window: o, enabled: a, transform: l} = r
                      , h = ne(r, ie);
                    if (n.shared = se({
                        target: i,
                        eventOptions: s,
                        window: o,
                        enabled: a,
                        transform: l
                    }, re),
                    t) {
                        const e = j.get(t);
                        n[t] = se(c({
                            shared: n.shared
                        }, h), e)
                    } else
                        for (const e in h) {
                            const t = j.get(e);
                            t && (n[e] = se(c({
                                shared: n.shared
                            }, h[e]), t))
                        }
                    return n
                }(e, t, this.config)
            }
            clean() {
                this._targetEventStore.clean();
                for (const e of this.gestures)
                    this.gestureEventStores[e].clean(),
                    this.gestureTimeoutStores[e].clean()
            }
            effect() {
                return this.config.shared.target && this.bind(),
                () => this._targetEventStore.clean()
            }
            bind(...e) {
                const t = this.config.shared
                  , n = {};
                let r;
                if (!t.target || (r = t.target(),
                r)) {
                    if (t.enabled) {
                        for (const t of this.gestures) {
                            const i = this.config[t]
                              , s = he(n, i.eventOptions, !!r);
                            if (i.enabled) {
                                new ($.get(t))(this,e,t).bind(s)
                            }
                        }
                        const i = he(n, t.eventOptions, !!r);
                        for (const t in this.nativeHandlers)
                            i(t, "", (n => this.nativeHandlers[t](c(c({}, this.state.shared), {}, {
                                event: n,
                                args: e
                            }))), void 0, !0)
                    }
                    for (const e in n)
                        n[e] = T(...n[e]);
                    if (!r)
                        return n;
                    for (const e in n) {
                        const {device: t, capture: i, passive: s} = f(e);
                        this._targetEventStore.add(r, t, "", n[e], {
                            capture: i,
                            passive: s
                        })
                    }
                }
            }
        }
        function ce(e, t) {
            e.gestures.add(t),
            e.gestureEventStores[t] = new oe(e,t),
            e.gestureTimeoutStores[t] = new ae
        }
        const he = (e, t, n) => (r, i, s, o={}, a=!1) => {
            var l, c;
            const h = null !== (l = o.capture) && void 0 !== l ? l : t.capture
              , p = null !== (c = o.passive) && void 0 !== c ? c : t.passive;
            let u = a ? r : d(r, i, h);
            n && p && (u += "Passive"),
            e[u] = e[u] || [],
            e[u].push(s)
        }
          , pe = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/;
        function ue(e, t, n, r, i, s) {
            if (!e.has(n))
                return;
            if (!$.has(r))
                return void 0;
            const o = n + "Start"
              , a = n + "End";
            i[r] = e => {
                let r;
                return e.first && o in t && t[o](e),
                n in t && (r = t[n](e)),
                e.last && a in t && t[a](e),
                r
            }
            ,
            s[r] = s[r] || {}
        }
        function de(e, t) {
            const [n,r,i] = function(e) {
                const t = {}
                  , n = {}
                  , r = new Set;
                for (let i in e)
                    pe.test(i) ? (r.add(RegExp.lastMatch),
                    n[i] = e[i]) : t[i] = e[i];
                return [n, t, r]
            }(e)
              , s = {};
            return ue(i, n, "onDrag", "drag", s, t),
            ue(i, n, "onWheel", "wheel", s, t),
            ue(i, n, "onScroll", "scroll", s, t),
            ue(i, n, "onPinch", "pinch", s, t),
            ue(i, n, "onMove", "move", s, t),
            ue(i, n, "onHover", "hover", s, t),
            {
                handlers: s,
                config: t,
                nativeHandlers: r
            }
        }
        function me(e, t={}, n, r) {
            const i = te.useMemo(( () => new le(e)), []);
            if (i.applyHandlers(e, r),
            i.applyConfig(t, n),
            te.useEffect(i.effect.bind(i)),
            te.useEffect(( () => i.clean.bind(i)), []),
            void 0 === t.target)
                return i.bind.bind(i)
        }
        function fe(e, t) {
            return K(Z),
            me({
                drag: e
            }, t || {}, "drag")
        }
        function ge(e, t) {
            const n = ([Z, J, Q, ee, X, Y].forEach(K),
            function(e, t) {
                const {handlers: n, nativeHandlers: r, config: i} = de(e, t || {});
                return me(n, i, void 0, r)
            }
            );
            return n(e, t || {})
        }
    }
    ,
    294184: e => {
        e.exports && (e.exports = function() {
            for (var e = arguments, t = [], n = 0; n < e.length; n++) {
                var r = e[n];
                if (r)
                    if ("string" == typeof r || "number" == typeof r)
                        t.push(r);
                    else if ("object" == typeof r)
                        for (var i in r)
                            r.hasOwnProperty(i) && r[i] && t.push(i)
            }
            return t.join(" ")
        }
        )
    }
    ,
    324611: (e, t, n) => {
        "use strict";
        n.d(t, {
            rT: () => Ci,
            Pj: () => Ui,
            x1: () => Hi,
            V6: () => fi,
            XN: () => Di,
            E9: () => ji,
            mg: () => Vi,
            aH: () => $i,
            xv: () => Ki,
            pp: () => ui,
            Bh: () => li
        });
        var r = n(667294)
          , i = !0
          , s = "Invariant failed";
        function o(e, t) {
            if (!e) {
                if (i)
                    throw new Error(s);
                var n = "function" == typeof t ? t() : t
                  , r = n ? "".concat(s, ": ").concat(n) : s;
                throw new Error(r)
            }
        }
        var a = n(785893);
        function l(e, t, n) {
            return e[t] ? e[t][0] ? e[t][0][n] : e[t][n] : "contentBoxSize" === t ? e.contentRect["inlineSize" === n ? "width" : "height"] : void 0
        }
        function c(e) {
            void 0 === e && (e = {});
            var t = e.onResize
              , n = (0,
            r.useRef)(void 0);
            n.current = t;
            var i = e.round || Math.round
              , s = (0,
            r.useRef)()
              , o = (0,
            r.useState)({
                width: void 0,
                height: void 0
            })
              , a = o[0]
              , c = o[1]
              , h = (0,
            r.useRef)(!1);
            (0,
            r.useEffect)((function() {
                return h.current = !1,
                function() {
                    h.current = !0
                }
            }
            ), []);
            var p = (0,
            r.useRef)({
                width: void 0,
                height: void 0
            })
              , u = function(e, t) {
                var n = (0,
                r.useRef)(null)
                  , i = (0,
                r.useRef)(null);
                i.current = t;
                var s = (0,
                r.useRef)(null);
                (0,
                r.useEffect)((function() {
                    o()
                }
                ));
                var o = (0,
                r.useCallback)((function() {
                    var t = s.current
                      , r = i.current
                      , o = t || (r ? r instanceof Element ? r : r.current : null);
                    n.current && n.current.element === o && n.current.subscriber === e || (n.current && n.current.cleanup && n.current.cleanup(),
                    n.current = {
                        element: o,
                        subscriber: e,
                        cleanup: o ? e(o) : void 0
                    })
                }
                ), [e]);
                return (0,
                r.useEffect)((function() {
                    return function() {
                        n.current && n.current.cleanup && (n.current.cleanup(),
                        n.current = null)
                    }
                }
                ), []),
                (0,
                r.useCallback)((function(e) {
                    s.current = e,
                    o()
                }
                ), [o])
            }((0,
            r.useCallback)((function(t) {
                return s.current && s.current.box === e.box && s.current.round === i || (s.current = {
                    box: e.box,
                    round: i,
                    instance: new ResizeObserver((function(t) {
                        var r = t[0]
                          , s = "border-box" === e.box ? "borderBoxSize" : "device-pixel-content-box" === e.box ? "devicePixelContentBoxSize" : "contentBoxSize"
                          , o = l(r, s, "inlineSize")
                          , a = l(r, s, "blockSize")
                          , u = o ? i(o) : void 0
                          , d = a ? i(a) : void 0;
                        if (p.current.width !== u || p.current.height !== d) {
                            var m = {
                                width: u,
                                height: d
                            };
                            p.current.width = u,
                            p.current.height = d,
                            n.current ? n.current(m) : h.current || c(m)
                        }
                    }
                    ))
                }),
                s.current.instance.observe(t, {
                    box: e.box
                }),
                function() {
                    s.current && s.current.instance.unobserve(t)
                }
            }
            ), [e.box, i]), e.ref);
            return (0,
            r.useMemo)((function() {
                return {
                    ref: u,
                    width: a.width,
                    height: a.height
                }
            }
            ), [u, a.width, a.height])
        }
        var h = n(349125);
        class p {
            constructor(e, t, n) {
                this.lexer = void 0,
                this.start = void 0,
                this.end = void 0,
                this.lexer = e,
                this.start = t,
                this.end = n
            }
            static range(e, t) {
                return t ? e && e.loc && t.loc && e.loc.lexer === t.loc.lexer ? new p(e.loc.lexer,e.loc.start,t.loc.end) : null : e && e.loc
            }
        }
        class u {
            constructor(e, t) {
                this.text = void 0,
                this.loc = void 0,
                this.noexpand = void 0,
                this.treatAsRelax = void 0,
                this.text = e,
                this.loc = t
            }
            range(e, t) {
                return new u(t,p.range(this, e))
            }
        }
        class d {
            constructor(e, t) {
                this.name = void 0,
                this.position = void 0,
                this.length = void 0,
                this.rawMessage = void 0;
                var n, r, i = "KaTeX parse error: " + e, s = t && t.loc;
                if (s && s.start <= s.end) {
                    var o = s.lexer.input;
                    n = s.start,
                    r = s.end,
                    n === o.length ? i += " at end of input: " : i += " at position " + (n + 1) + ": ";
                    var a = o.slice(n, r).replace(/[^]/g, "$&̲");
                    i += (n > 15 ? "…" + o.slice(n - 15, n) : o.slice(0, n)) + a + (r + 15 < o.length ? o.slice(r, r + 15) + "…" : o.slice(r))
                }
                var l = new Error(i);
                return l.name = "ParseError",
                l.__proto__ = d.prototype,
                l.position = n,
                null != n && null != r && (l.length = r - n),
                l.rawMessage = e,
                l
            }
        }
        d.prototype.__proto__ = Error.prototype;
        var m = /([A-Z])/g
          , f = {
            "&": "&amp;",
            ">": "&gt;",
            "<": "&lt;",
            '"': "&quot;",
            "'": "&#x27;"
        }
          , g = /[&><"']/g;
        var v = function e(t) {
            return "ordgroup" === t.type || "color" === t.type ? 1 === t.body.length ? e(t.body[0]) : t : "font" === t.type ? e(t.body) : t
        }
          , y = {
            contains: function(e, t) {
                return -1 !== e.indexOf(t)
            },
            deflt: function(e, t) {
                return void 0 === e ? t : e
            },
            escape: function(e) {
                return String(e).replace(g, (e => f[e]))
            },
            hyphenate: function(e) {
                return e.replace(m, "-$1").toLowerCase()
            },
            getBaseElem: v,
            isCharacterBox: function(e) {
                var t = v(e);
                return "mathord" === t.type || "textord" === t.type || "atom" === t.type
            },
            protocolFromUrl: function(e) {
                var t = /^\s*([^\\/#]*?)(?::|&#0*58|&#x0*3a)/i.exec(e);
                return null != t ? t[1] : "_relative"
            }
        };
        parseFloat,
        parseInt;
        class b {
            constructor(e, t, n) {
                this.id = void 0,
                this.size = void 0,
                this.cramped = void 0,
                this.id = e,
                this.size = t,
                this.cramped = n
            }
            sup() {
                return x[w[this.id]]
            }
            sub() {
                return x[k[this.id]]
            }
            fracNum() {
                return x[S[this.id]]
            }
            fracDen() {
                return x[E[this.id]]
            }
            cramp() {
                return x[M[this.id]]
            }
            text() {
                return x[C[this.id]]
            }
            isTight() {
                return this.size >= 2
            }
        }
        var x = [new b(0,0,!1), new b(1,0,!0), new b(2,1,!1), new b(3,1,!0), new b(4,2,!1), new b(5,2,!0), new b(6,3,!1), new b(7,3,!0)]
          , w = [4, 5, 4, 5, 6, 7, 6, 7]
          , k = [5, 5, 5, 5, 7, 7, 7, 7]
          , S = [2, 3, 4, 5, 6, 7, 6, 7]
          , E = [3, 3, 5, 5, 7, 7, 7, 7]
          , M = [1, 1, 3, 3, 5, 5, 7, 7]
          , C = [0, 1, 2, 3, 2, 3, 2, 3]
          , T = {
            DISPLAY: x[0],
            TEXT: x[2],
            SCRIPT: x[4],
            SCRIPTSCRIPT: x[6]
        }
          , _ = [{
            name: "latin",
            blocks: [[256, 591], [768, 879]]
        }, {
            name: "cyrillic",
            blocks: [[1024, 1279]]
        }, {
            name: "armenian",
            blocks: [[1328, 1423]]
        }, {
            name: "brahmic",
            blocks: [[2304, 4255]]
        }, {
            name: "georgian",
            blocks: [[4256, 4351]]
        }, {
            name: "cjk",
            blocks: [[12288, 12543], [19968, 40879], [65280, 65376]]
        }, {
            name: "hangul",
            blocks: [[44032, 55215]]
        }];
        var A = [];
        function I(e) {
            for (var t = 0; t < A.length; t += 2)
                if (e >= A[t] && e <= A[t + 1])
                    return !0;
            return !1
        }
        _.forEach((e => e.blocks.forEach((e => A.push(...e)))));
        var R = 80
          , N = {
            doubleleftarrow: "M262 157\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\nm8 0v40h399730v-40zm0 194v40h399730v-40z",
            doublerightarrow: "M399738 392l\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z",
            leftarrow: "M400000 241H110l3-3c68.7-52.7 113.7-120\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\n l-3-3h399890zM100 241v40h399900v-40z",
            leftbrace: "M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z",
            leftbraceunder: "M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z",
            leftgroup: "M400000 80\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\n 435 0h399565z",
            leftgroupunder: "M400000 262\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\n 435 219h399565z",
            leftharpoon: "M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z",
            leftharpoonplus: "M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\nm0 0v40h400000v-40z",
            leftharpoondown: "M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z",
            leftharpoondownplus: "M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z",
            lefthook: "M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\n 71.5 23h399859zM103 281v-40h399897v40z",
            leftlinesegment: "M40 281 V428 H0 V94 H40 V241 H400000 v40z\nM40 281 V428 H0 V94 H40 V241 H400000 v40z",
            leftmapsto: "M40 281 V448H0V74H40V241H400000v40z\nM40 281 V448H0V74H40V241H400000v40z",
            leftToFrom: "M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z",
            longequal: "M0 50 h400000 v40H0z m0 194h40000v40H0z\nM0 50 h400000 v40H0z m0 194h40000v40H0z",
            midbrace: "M200428 334\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z",
            midbraceunder: "M199572 214\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z",
            oiintSize1: "M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z",
            oiintSize2: "M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\nc0 110 84 276 504 276s502.4-166 502.4-276z",
            oiiintSize1: "M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z",
            oiiintSize2: "M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z",
            rightarrow: "M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z",
            rightbrace: "M400000 542l\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z",
            rightbraceunder: "M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z",
            rightgroup: "M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\n 3-1 3-3v-38c-76-158-257-219-435-219H0z",
            rightgroupunder: "M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z",
            rightharpoon: "M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\n 69.2 92 94.5zm0 0v40h399900v-40z",
            rightharpoonplus: "M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z",
            rightharpoondown: "M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z",
            rightharpoondownplus: "M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\nm0-194v40h400000v-40zm0 0v40h400000v-40z",
            righthook: "M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z",
            rightlinesegment: "M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z",
            rightToFrom: "M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z",
            twoheadleftarrow: "M0 167c68 40\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z",
            twoheadrightarrow: "M400000 167\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z",
            tilde1: "M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\n-68.267.847-113-73.952-191-73.952z",
            tilde2: "M344 55.266c-142 0-300.638 81.316-311.5 86.418\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z",
            tilde3: "M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\n -338 0-409-156.573-744-156.573z",
            tilde4: "M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\n -175.236-744-175.236z",
            vec: "M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z",
            widehat1: "M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z",
            widehat2: "M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",
            widehat3: "M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",
            widehat4: "M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",
            widecheck1: "M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z",
            widecheck2: "M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",
            widecheck3: "M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",
            widecheck4: "M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",
            baraboveleftarrow: "M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z",
            rightarrowabovebar: "M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z",
            baraboveshortleftharpoon: "M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z",
            rightharpoonaboveshortbar: "M0,241 l0,40c399126,0,399993,0,399993,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z",
            shortbaraboveleftharpoon: "M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z",
            shortrightharpoonabovebar: "M53,241l0,40c398570,0,399437,0,399437,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z"
        };
        class P {
            constructor(e) {
                this.children = void 0,
                this.classes = void 0,
                this.height = void 0,
                this.depth = void 0,
                this.maxFontSize = void 0,
                this.style = void 0,
                this.children = e,
                this.classes = [],
                this.height = 0,
                this.depth = 0,
                this.maxFontSize = 0,
                this.style = {}
            }
            hasClass(e) {
                return y.contains(this.classes, e)
            }
            toNode() {
                for (var e = document.createDocumentFragment(), t = 0; t < this.children.length; t++)
                    e.appendChild(this.children[t].toNode());
                return e
            }
            toMarkup() {
                for (var e = "", t = 0; t < this.children.length; t++)
                    e += this.children[t].toMarkup();
                return e
            }
            toText() {
                return this.children.map((e => e.toText())).join("")
            }
        }
        var O = {
            "AMS-Regular": {
                32: [0, 0, 0, 0, .25],
                65: [0, .68889, 0, 0, .72222],
                66: [0, .68889, 0, 0, .66667],
                67: [0, .68889, 0, 0, .72222],
                68: [0, .68889, 0, 0, .72222],
                69: [0, .68889, 0, 0, .66667],
                70: [0, .68889, 0, 0, .61111],
                71: [0, .68889, 0, 0, .77778],
                72: [0, .68889, 0, 0, .77778],
                73: [0, .68889, 0, 0, .38889],
                74: [.16667, .68889, 0, 0, .5],
                75: [0, .68889, 0, 0, .77778],
                76: [0, .68889, 0, 0, .66667],
                77: [0, .68889, 0, 0, .94445],
                78: [0, .68889, 0, 0, .72222],
                79: [.16667, .68889, 0, 0, .77778],
                80: [0, .68889, 0, 0, .61111],
                81: [.16667, .68889, 0, 0, .77778],
                82: [0, .68889, 0, 0, .72222],
                83: [0, .68889, 0, 0, .55556],
                84: [0, .68889, 0, 0, .66667],
                85: [0, .68889, 0, 0, .72222],
                86: [0, .68889, 0, 0, .72222],
                87: [0, .68889, 0, 0, 1],
                88: [0, .68889, 0, 0, .72222],
                89: [0, .68889, 0, 0, .72222],
                90: [0, .68889, 0, 0, .66667],
                107: [0, .68889, 0, 0, .55556],
                160: [0, 0, 0, 0, .25],
                165: [0, .675, .025, 0, .75],
                174: [.15559, .69224, 0, 0, .94666],
                240: [0, .68889, 0, 0, .55556],
                295: [0, .68889, 0, 0, .54028],
                710: [0, .825, 0, 0, 2.33334],
                732: [0, .9, 0, 0, 2.33334],
                770: [0, .825, 0, 0, 2.33334],
                771: [0, .9, 0, 0, 2.33334],
                989: [.08167, .58167, 0, 0, .77778],
                1008: [0, .43056, .04028, 0, .66667],
                8245: [0, .54986, 0, 0, .275],
                8463: [0, .68889, 0, 0, .54028],
                8487: [0, .68889, 0, 0, .72222],
                8498: [0, .68889, 0, 0, .55556],
                8502: [0, .68889, 0, 0, .66667],
                8503: [0, .68889, 0, 0, .44445],
                8504: [0, .68889, 0, 0, .66667],
                8513: [0, .68889, 0, 0, .63889],
                8592: [-.03598, .46402, 0, 0, .5],
                8594: [-.03598, .46402, 0, 0, .5],
                8602: [-.13313, .36687, 0, 0, 1],
                8603: [-.13313, .36687, 0, 0, 1],
                8606: [.01354, .52239, 0, 0, 1],
                8608: [.01354, .52239, 0, 0, 1],
                8610: [.01354, .52239, 0, 0, 1.11111],
                8611: [.01354, .52239, 0, 0, 1.11111],
                8619: [0, .54986, 0, 0, 1],
                8620: [0, .54986, 0, 0, 1],
                8621: [-.13313, .37788, 0, 0, 1.38889],
                8622: [-.13313, .36687, 0, 0, 1],
                8624: [0, .69224, 0, 0, .5],
                8625: [0, .69224, 0, 0, .5],
                8630: [0, .43056, 0, 0, 1],
                8631: [0, .43056, 0, 0, 1],
                8634: [.08198, .58198, 0, 0, .77778],
                8635: [.08198, .58198, 0, 0, .77778],
                8638: [.19444, .69224, 0, 0, .41667],
                8639: [.19444, .69224, 0, 0, .41667],
                8642: [.19444, .69224, 0, 0, .41667],
                8643: [.19444, .69224, 0, 0, .41667],
                8644: [.1808, .675, 0, 0, 1],
                8646: [.1808, .675, 0, 0, 1],
                8647: [.1808, .675, 0, 0, 1],
                8648: [.19444, .69224, 0, 0, .83334],
                8649: [.1808, .675, 0, 0, 1],
                8650: [.19444, .69224, 0, 0, .83334],
                8651: [.01354, .52239, 0, 0, 1],
                8652: [.01354, .52239, 0, 0, 1],
                8653: [-.13313, .36687, 0, 0, 1],
                8654: [-.13313, .36687, 0, 0, 1],
                8655: [-.13313, .36687, 0, 0, 1],
                8666: [.13667, .63667, 0, 0, 1],
                8667: [.13667, .63667, 0, 0, 1],
                8669: [-.13313, .37788, 0, 0, 1],
                8672: [-.064, .437, 0, 0, 1.334],
                8674: [-.064, .437, 0, 0, 1.334],
                8705: [0, .825, 0, 0, .5],
                8708: [0, .68889, 0, 0, .55556],
                8709: [.08167, .58167, 0, 0, .77778],
                8717: [0, .43056, 0, 0, .42917],
                8722: [-.03598, .46402, 0, 0, .5],
                8724: [.08198, .69224, 0, 0, .77778],
                8726: [.08167, .58167, 0, 0, .77778],
                8733: [0, .69224, 0, 0, .77778],
                8736: [0, .69224, 0, 0, .72222],
                8737: [0, .69224, 0, 0, .72222],
                8738: [.03517, .52239, 0, 0, .72222],
                8739: [.08167, .58167, 0, 0, .22222],
                8740: [.25142, .74111, 0, 0, .27778],
                8741: [.08167, .58167, 0, 0, .38889],
                8742: [.25142, .74111, 0, 0, .5],
                8756: [0, .69224, 0, 0, .66667],
                8757: [0, .69224, 0, 0, .66667],
                8764: [-.13313, .36687, 0, 0, .77778],
                8765: [-.13313, .37788, 0, 0, .77778],
                8769: [-.13313, .36687, 0, 0, .77778],
                8770: [-.03625, .46375, 0, 0, .77778],
                8774: [.30274, .79383, 0, 0, .77778],
                8776: [-.01688, .48312, 0, 0, .77778],
                8778: [.08167, .58167, 0, 0, .77778],
                8782: [.06062, .54986, 0, 0, .77778],
                8783: [.06062, .54986, 0, 0, .77778],
                8785: [.08198, .58198, 0, 0, .77778],
                8786: [.08198, .58198, 0, 0, .77778],
                8787: [.08198, .58198, 0, 0, .77778],
                8790: [0, .69224, 0, 0, .77778],
                8791: [.22958, .72958, 0, 0, .77778],
                8796: [.08198, .91667, 0, 0, .77778],
                8806: [.25583, .75583, 0, 0, .77778],
                8807: [.25583, .75583, 0, 0, .77778],
                8808: [.25142, .75726, 0, 0, .77778],
                8809: [.25142, .75726, 0, 0, .77778],
                8812: [.25583, .75583, 0, 0, .5],
                8814: [.20576, .70576, 0, 0, .77778],
                8815: [.20576, .70576, 0, 0, .77778],
                8816: [.30274, .79383, 0, 0, .77778],
                8817: [.30274, .79383, 0, 0, .77778],
                8818: [.22958, .72958, 0, 0, .77778],
                8819: [.22958, .72958, 0, 0, .77778],
                8822: [.1808, .675, 0, 0, .77778],
                8823: [.1808, .675, 0, 0, .77778],
                8828: [.13667, .63667, 0, 0, .77778],
                8829: [.13667, .63667, 0, 0, .77778],
                8830: [.22958, .72958, 0, 0, .77778],
                8831: [.22958, .72958, 0, 0, .77778],
                8832: [.20576, .70576, 0, 0, .77778],
                8833: [.20576, .70576, 0, 0, .77778],
                8840: [.30274, .79383, 0, 0, .77778],
                8841: [.30274, .79383, 0, 0, .77778],
                8842: [.13597, .63597, 0, 0, .77778],
                8843: [.13597, .63597, 0, 0, .77778],
                8847: [.03517, .54986, 0, 0, .77778],
                8848: [.03517, .54986, 0, 0, .77778],
                8858: [.08198, .58198, 0, 0, .77778],
                8859: [.08198, .58198, 0, 0, .77778],
                8861: [.08198, .58198, 0, 0, .77778],
                8862: [0, .675, 0, 0, .77778],
                8863: [0, .675, 0, 0, .77778],
                8864: [0, .675, 0, 0, .77778],
                8865: [0, .675, 0, 0, .77778],
                8872: [0, .69224, 0, 0, .61111],
                8873: [0, .69224, 0, 0, .72222],
                8874: [0, .69224, 0, 0, .88889],
                8876: [0, .68889, 0, 0, .61111],
                8877: [0, .68889, 0, 0, .61111],
                8878: [0, .68889, 0, 0, .72222],
                8879: [0, .68889, 0, 0, .72222],
                8882: [.03517, .54986, 0, 0, .77778],
                8883: [.03517, .54986, 0, 0, .77778],
                8884: [.13667, .63667, 0, 0, .77778],
                8885: [.13667, .63667, 0, 0, .77778],
                8888: [0, .54986, 0, 0, 1.11111],
                8890: [.19444, .43056, 0, 0, .55556],
                8891: [.19444, .69224, 0, 0, .61111],
                8892: [.19444, .69224, 0, 0, .61111],
                8901: [0, .54986, 0, 0, .27778],
                8903: [.08167, .58167, 0, 0, .77778],
                8905: [.08167, .58167, 0, 0, .77778],
                8906: [.08167, .58167, 0, 0, .77778],
                8907: [0, .69224, 0, 0, .77778],
                8908: [0, .69224, 0, 0, .77778],
                8909: [-.03598, .46402, 0, 0, .77778],
                8910: [0, .54986, 0, 0, .76042],
                8911: [0, .54986, 0, 0, .76042],
                8912: [.03517, .54986, 0, 0, .77778],
                8913: [.03517, .54986, 0, 0, .77778],
                8914: [0, .54986, 0, 0, .66667],
                8915: [0, .54986, 0, 0, .66667],
                8916: [0, .69224, 0, 0, .66667],
                8918: [.0391, .5391, 0, 0, .77778],
                8919: [.0391, .5391, 0, 0, .77778],
                8920: [.03517, .54986, 0, 0, 1.33334],
                8921: [.03517, .54986, 0, 0, 1.33334],
                8922: [.38569, .88569, 0, 0, .77778],
                8923: [.38569, .88569, 0, 0, .77778],
                8926: [.13667, .63667, 0, 0, .77778],
                8927: [.13667, .63667, 0, 0, .77778],
                8928: [.30274, .79383, 0, 0, .77778],
                8929: [.30274, .79383, 0, 0, .77778],
                8934: [.23222, .74111, 0, 0, .77778],
                8935: [.23222, .74111, 0, 0, .77778],
                8936: [.23222, .74111, 0, 0, .77778],
                8937: [.23222, .74111, 0, 0, .77778],
                8938: [.20576, .70576, 0, 0, .77778],
                8939: [.20576, .70576, 0, 0, .77778],
                8940: [.30274, .79383, 0, 0, .77778],
                8941: [.30274, .79383, 0, 0, .77778],
                8994: [.19444, .69224, 0, 0, .77778],
                8995: [.19444, .69224, 0, 0, .77778],
                9416: [.15559, .69224, 0, 0, .90222],
                9484: [0, .69224, 0, 0, .5],
                9488: [0, .69224, 0, 0, .5],
                9492: [0, .37788, 0, 0, .5],
                9496: [0, .37788, 0, 0, .5],
                9585: [.19444, .68889, 0, 0, .88889],
                9586: [.19444, .74111, 0, 0, .88889],
                9632: [0, .675, 0, 0, .77778],
                9633: [0, .675, 0, 0, .77778],
                9650: [0, .54986, 0, 0, .72222],
                9651: [0, .54986, 0, 0, .72222],
                9654: [.03517, .54986, 0, 0, .77778],
                9660: [0, .54986, 0, 0, .72222],
                9661: [0, .54986, 0, 0, .72222],
                9664: [.03517, .54986, 0, 0, .77778],
                9674: [.11111, .69224, 0, 0, .66667],
                9733: [.19444, .69224, 0, 0, .94445],
                10003: [0, .69224, 0, 0, .83334],
                10016: [0, .69224, 0, 0, .83334],
                10731: [.11111, .69224, 0, 0, .66667],
                10846: [.19444, .75583, 0, 0, .61111],
                10877: [.13667, .63667, 0, 0, .77778],
                10878: [.13667, .63667, 0, 0, .77778],
                10885: [.25583, .75583, 0, 0, .77778],
                10886: [.25583, .75583, 0, 0, .77778],
                10887: [.13597, .63597, 0, 0, .77778],
                10888: [.13597, .63597, 0, 0, .77778],
                10889: [.26167, .75726, 0, 0, .77778],
                10890: [.26167, .75726, 0, 0, .77778],
                10891: [.48256, .98256, 0, 0, .77778],
                10892: [.48256, .98256, 0, 0, .77778],
                10901: [.13667, .63667, 0, 0, .77778],
                10902: [.13667, .63667, 0, 0, .77778],
                10933: [.25142, .75726, 0, 0, .77778],
                10934: [.25142, .75726, 0, 0, .77778],
                10935: [.26167, .75726, 0, 0, .77778],
                10936: [.26167, .75726, 0, 0, .77778],
                10937: [.26167, .75726, 0, 0, .77778],
                10938: [.26167, .75726, 0, 0, .77778],
                10949: [.25583, .75583, 0, 0, .77778],
                10950: [.25583, .75583, 0, 0, .77778],
                10955: [.28481, .79383, 0, 0, .77778],
                10956: [.28481, .79383, 0, 0, .77778],
                57350: [.08167, .58167, 0, 0, .22222],
                57351: [.08167, .58167, 0, 0, .38889],
                57352: [.08167, .58167, 0, 0, .77778],
                57353: [0, .43056, .04028, 0, .66667],
                57356: [.25142, .75726, 0, 0, .77778],
                57357: [.25142, .75726, 0, 0, .77778],
                57358: [.41951, .91951, 0, 0, .77778],
                57359: [.30274, .79383, 0, 0, .77778],
                57360: [.30274, .79383, 0, 0, .77778],
                57361: [.41951, .91951, 0, 0, .77778],
                57366: [.25142, .75726, 0, 0, .77778],
                57367: [.25142, .75726, 0, 0, .77778],
                57368: [.25142, .75726, 0, 0, .77778],
                57369: [.25142, .75726, 0, 0, .77778],
                57370: [.13597, .63597, 0, 0, .77778],
                57371: [.13597, .63597, 0, 0, .77778]
            },
            "Caligraphic-Regular": {
                32: [0, 0, 0, 0, .25],
                65: [0, .68333, 0, .19445, .79847],
                66: [0, .68333, .03041, .13889, .65681],
                67: [0, .68333, .05834, .13889, .52653],
                68: [0, .68333, .02778, .08334, .77139],
                69: [0, .68333, .08944, .11111, .52778],
                70: [0, .68333, .09931, .11111, .71875],
                71: [.09722, .68333, .0593, .11111, .59487],
                72: [0, .68333, .00965, .11111, .84452],
                73: [0, .68333, .07382, 0, .54452],
                74: [.09722, .68333, .18472, .16667, .67778],
                75: [0, .68333, .01445, .05556, .76195],
                76: [0, .68333, 0, .13889, .68972],
                77: [0, .68333, 0, .13889, 1.2009],
                78: [0, .68333, .14736, .08334, .82049],
                79: [0, .68333, .02778, .11111, .79611],
                80: [0, .68333, .08222, .08334, .69556],
                81: [.09722, .68333, 0, .11111, .81667],
                82: [0, .68333, 0, .08334, .8475],
                83: [0, .68333, .075, .13889, .60556],
                84: [0, .68333, .25417, 0, .54464],
                85: [0, .68333, .09931, .08334, .62583],
                86: [0, .68333, .08222, 0, .61278],
                87: [0, .68333, .08222, .08334, .98778],
                88: [0, .68333, .14643, .13889, .7133],
                89: [.09722, .68333, .08222, .08334, .66834],
                90: [0, .68333, .07944, .13889, .72473],
                160: [0, 0, 0, 0, .25]
            },
            "Fraktur-Regular": {
                32: [0, 0, 0, 0, .25],
                33: [0, .69141, 0, 0, .29574],
                34: [0, .69141, 0, 0, .21471],
                38: [0, .69141, 0, 0, .73786],
                39: [0, .69141, 0, 0, .21201],
                40: [.24982, .74947, 0, 0, .38865],
                41: [.24982, .74947, 0, 0, .38865],
                42: [0, .62119, 0, 0, .27764],
                43: [.08319, .58283, 0, 0, .75623],
                44: [0, .10803, 0, 0, .27764],
                45: [.08319, .58283, 0, 0, .75623],
                46: [0, .10803, 0, 0, .27764],
                47: [.24982, .74947, 0, 0, .50181],
                48: [0, .47534, 0, 0, .50181],
                49: [0, .47534, 0, 0, .50181],
                50: [0, .47534, 0, 0, .50181],
                51: [.18906, .47534, 0, 0, .50181],
                52: [.18906, .47534, 0, 0, .50181],
                53: [.18906, .47534, 0, 0, .50181],
                54: [0, .69141, 0, 0, .50181],
                55: [.18906, .47534, 0, 0, .50181],
                56: [0, .69141, 0, 0, .50181],
                57: [.18906, .47534, 0, 0, .50181],
                58: [0, .47534, 0, 0, .21606],
                59: [.12604, .47534, 0, 0, .21606],
                61: [-.13099, .36866, 0, 0, .75623],
                63: [0, .69141, 0, 0, .36245],
                65: [0, .69141, 0, 0, .7176],
                66: [0, .69141, 0, 0, .88397],
                67: [0, .69141, 0, 0, .61254],
                68: [0, .69141, 0, 0, .83158],
                69: [0, .69141, 0, 0, .66278],
                70: [.12604, .69141, 0, 0, .61119],
                71: [0, .69141, 0, 0, .78539],
                72: [.06302, .69141, 0, 0, .7203],
                73: [0, .69141, 0, 0, .55448],
                74: [.12604, .69141, 0, 0, .55231],
                75: [0, .69141, 0, 0, .66845],
                76: [0, .69141, 0, 0, .66602],
                77: [0, .69141, 0, 0, 1.04953],
                78: [0, .69141, 0, 0, .83212],
                79: [0, .69141, 0, 0, .82699],
                80: [.18906, .69141, 0, 0, .82753],
                81: [.03781, .69141, 0, 0, .82699],
                82: [0, .69141, 0, 0, .82807],
                83: [0, .69141, 0, 0, .82861],
                84: [0, .69141, 0, 0, .66899],
                85: [0, .69141, 0, 0, .64576],
                86: [0, .69141, 0, 0, .83131],
                87: [0, .69141, 0, 0, 1.04602],
                88: [0, .69141, 0, 0, .71922],
                89: [.18906, .69141, 0, 0, .83293],
                90: [.12604, .69141, 0, 0, .60201],
                91: [.24982, .74947, 0, 0, .27764],
                93: [.24982, .74947, 0, 0, .27764],
                94: [0, .69141, 0, 0, .49965],
                97: [0, .47534, 0, 0, .50046],
                98: [0, .69141, 0, 0, .51315],
                99: [0, .47534, 0, 0, .38946],
                100: [0, .62119, 0, 0, .49857],
                101: [0, .47534, 0, 0, .40053],
                102: [.18906, .69141, 0, 0, .32626],
                103: [.18906, .47534, 0, 0, .5037],
                104: [.18906, .69141, 0, 0, .52126],
                105: [0, .69141, 0, 0, .27899],
                106: [0, .69141, 0, 0, .28088],
                107: [0, .69141, 0, 0, .38946],
                108: [0, .69141, 0, 0, .27953],
                109: [0, .47534, 0, 0, .76676],
                110: [0, .47534, 0, 0, .52666],
                111: [0, .47534, 0, 0, .48885],
                112: [.18906, .52396, 0, 0, .50046],
                113: [.18906, .47534, 0, 0, .48912],
                114: [0, .47534, 0, 0, .38919],
                115: [0, .47534, 0, 0, .44266],
                116: [0, .62119, 0, 0, .33301],
                117: [0, .47534, 0, 0, .5172],
                118: [0, .52396, 0, 0, .5118],
                119: [0, .52396, 0, 0, .77351],
                120: [.18906, .47534, 0, 0, .38865],
                121: [.18906, .47534, 0, 0, .49884],
                122: [.18906, .47534, 0, 0, .39054],
                160: [0, 0, 0, 0, .25],
                8216: [0, .69141, 0, 0, .21471],
                8217: [0, .69141, 0, 0, .21471],
                58112: [0, .62119, 0, 0, .49749],
                58113: [0, .62119, 0, 0, .4983],
                58114: [.18906, .69141, 0, 0, .33328],
                58115: [.18906, .69141, 0, 0, .32923],
                58116: [.18906, .47534, 0, 0, .50343],
                58117: [0, .69141, 0, 0, .33301],
                58118: [0, .62119, 0, 0, .33409],
                58119: [0, .47534, 0, 0, .50073]
            },
            "Main-Bold": {
                32: [0, 0, 0, 0, .25],
                33: [0, .69444, 0, 0, .35],
                34: [0, .69444, 0, 0, .60278],
                35: [.19444, .69444, 0, 0, .95833],
                36: [.05556, .75, 0, 0, .575],
                37: [.05556, .75, 0, 0, .95833],
                38: [0, .69444, 0, 0, .89444],
                39: [0, .69444, 0, 0, .31944],
                40: [.25, .75, 0, 0, .44722],
                41: [.25, .75, 0, 0, .44722],
                42: [0, .75, 0, 0, .575],
                43: [.13333, .63333, 0, 0, .89444],
                44: [.19444, .15556, 0, 0, .31944],
                45: [0, .44444, 0, 0, .38333],
                46: [0, .15556, 0, 0, .31944],
                47: [.25, .75, 0, 0, .575],
                48: [0, .64444, 0, 0, .575],
                49: [0, .64444, 0, 0, .575],
                50: [0, .64444, 0, 0, .575],
                51: [0, .64444, 0, 0, .575],
                52: [0, .64444, 0, 0, .575],
                53: [0, .64444, 0, 0, .575],
                54: [0, .64444, 0, 0, .575],
                55: [0, .64444, 0, 0, .575],
                56: [0, .64444, 0, 0, .575],
                57: [0, .64444, 0, 0, .575],
                58: [0, .44444, 0, 0, .31944],
                59: [.19444, .44444, 0, 0, .31944],
                60: [.08556, .58556, 0, 0, .89444],
                61: [-.10889, .39111, 0, 0, .89444],
                62: [.08556, .58556, 0, 0, .89444],
                63: [0, .69444, 0, 0, .54305],
                64: [0, .69444, 0, 0, .89444],
                65: [0, .68611, 0, 0, .86944],
                66: [0, .68611, 0, 0, .81805],
                67: [0, .68611, 0, 0, .83055],
                68: [0, .68611, 0, 0, .88194],
                69: [0, .68611, 0, 0, .75555],
                70: [0, .68611, 0, 0, .72361],
                71: [0, .68611, 0, 0, .90416],
                72: [0, .68611, 0, 0, .9],
                73: [0, .68611, 0, 0, .43611],
                74: [0, .68611, 0, 0, .59444],
                75: [0, .68611, 0, 0, .90138],
                76: [0, .68611, 0, 0, .69166],
                77: [0, .68611, 0, 0, 1.09166],
                78: [0, .68611, 0, 0, .9],
                79: [0, .68611, 0, 0, .86388],
                80: [0, .68611, 0, 0, .78611],
                81: [.19444, .68611, 0, 0, .86388],
                82: [0, .68611, 0, 0, .8625],
                83: [0, .68611, 0, 0, .63889],
                84: [0, .68611, 0, 0, .8],
                85: [0, .68611, 0, 0, .88472],
                86: [0, .68611, .01597, 0, .86944],
                87: [0, .68611, .01597, 0, 1.18888],
                88: [0, .68611, 0, 0, .86944],
                89: [0, .68611, .02875, 0, .86944],
                90: [0, .68611, 0, 0, .70277],
                91: [.25, .75, 0, 0, .31944],
                92: [.25, .75, 0, 0, .575],
                93: [.25, .75, 0, 0, .31944],
                94: [0, .69444, 0, 0, .575],
                95: [.31, .13444, .03194, 0, .575],
                97: [0, .44444, 0, 0, .55902],
                98: [0, .69444, 0, 0, .63889],
                99: [0, .44444, 0, 0, .51111],
                100: [0, .69444, 0, 0, .63889],
                101: [0, .44444, 0, 0, .52708],
                102: [0, .69444, .10903, 0, .35139],
                103: [.19444, .44444, .01597, 0, .575],
                104: [0, .69444, 0, 0, .63889],
                105: [0, .69444, 0, 0, .31944],
                106: [.19444, .69444, 0, 0, .35139],
                107: [0, .69444, 0, 0, .60694],
                108: [0, .69444, 0, 0, .31944],
                109: [0, .44444, 0, 0, .95833],
                110: [0, .44444, 0, 0, .63889],
                111: [0, .44444, 0, 0, .575],
                112: [.19444, .44444, 0, 0, .63889],
                113: [.19444, .44444, 0, 0, .60694],
                114: [0, .44444, 0, 0, .47361],
                115: [0, .44444, 0, 0, .45361],
                116: [0, .63492, 0, 0, .44722],
                117: [0, .44444, 0, 0, .63889],
                118: [0, .44444, .01597, 0, .60694],
                119: [0, .44444, .01597, 0, .83055],
                120: [0, .44444, 0, 0, .60694],
                121: [.19444, .44444, .01597, 0, .60694],
                122: [0, .44444, 0, 0, .51111],
                123: [.25, .75, 0, 0, .575],
                124: [.25, .75, 0, 0, .31944],
                125: [.25, .75, 0, 0, .575],
                126: [.35, .34444, 0, 0, .575],
                160: [0, 0, 0, 0, .25],
                163: [0, .69444, 0, 0, .86853],
                168: [0, .69444, 0, 0, .575],
                172: [0, .44444, 0, 0, .76666],
                176: [0, .69444, 0, 0, .86944],
                177: [.13333, .63333, 0, 0, .89444],
                184: [.17014, 0, 0, 0, .51111],
                198: [0, .68611, 0, 0, 1.04166],
                215: [.13333, .63333, 0, 0, .89444],
                216: [.04861, .73472, 0, 0, .89444],
                223: [0, .69444, 0, 0, .59722],
                230: [0, .44444, 0, 0, .83055],
                247: [.13333, .63333, 0, 0, .89444],
                248: [.09722, .54167, 0, 0, .575],
                305: [0, .44444, 0, 0, .31944],
                338: [0, .68611, 0, 0, 1.16944],
                339: [0, .44444, 0, 0, .89444],
                567: [.19444, .44444, 0, 0, .35139],
                710: [0, .69444, 0, 0, .575],
                711: [0, .63194, 0, 0, .575],
                713: [0, .59611, 0, 0, .575],
                714: [0, .69444, 0, 0, .575],
                715: [0, .69444, 0, 0, .575],
                728: [0, .69444, 0, 0, .575],
                729: [0, .69444, 0, 0, .31944],
                730: [0, .69444, 0, 0, .86944],
                732: [0, .69444, 0, 0, .575],
                733: [0, .69444, 0, 0, .575],
                915: [0, .68611, 0, 0, .69166],
                916: [0, .68611, 0, 0, .95833],
                920: [0, .68611, 0, 0, .89444],
                923: [0, .68611, 0, 0, .80555],
                926: [0, .68611, 0, 0, .76666],
                928: [0, .68611, 0, 0, .9],
                931: [0, .68611, 0, 0, .83055],
                933: [0, .68611, 0, 0, .89444],
                934: [0, .68611, 0, 0, .83055],
                936: [0, .68611, 0, 0, .89444],
                937: [0, .68611, 0, 0, .83055],
                8211: [0, .44444, .03194, 0, .575],
                8212: [0, .44444, .03194, 0, 1.14999],
                8216: [0, .69444, 0, 0, .31944],
                8217: [0, .69444, 0, 0, .31944],
                8220: [0, .69444, 0, 0, .60278],
                8221: [0, .69444, 0, 0, .60278],
                8224: [.19444, .69444, 0, 0, .51111],
                8225: [.19444, .69444, 0, 0, .51111],
                8242: [0, .55556, 0, 0, .34444],
                8407: [0, .72444, .15486, 0, .575],
                8463: [0, .69444, 0, 0, .66759],
                8465: [0, .69444, 0, 0, .83055],
                8467: [0, .69444, 0, 0, .47361],
                8472: [.19444, .44444, 0, 0, .74027],
                8476: [0, .69444, 0, 0, .83055],
                8501: [0, .69444, 0, 0, .70277],
                8592: [-.10889, .39111, 0, 0, 1.14999],
                8593: [.19444, .69444, 0, 0, .575],
                8594: [-.10889, .39111, 0, 0, 1.14999],
                8595: [.19444, .69444, 0, 0, .575],
                8596: [-.10889, .39111, 0, 0, 1.14999],
                8597: [.25, .75, 0, 0, .575],
                8598: [.19444, .69444, 0, 0, 1.14999],
                8599: [.19444, .69444, 0, 0, 1.14999],
                8600: [.19444, .69444, 0, 0, 1.14999],
                8601: [.19444, .69444, 0, 0, 1.14999],
                8636: [-.10889, .39111, 0, 0, 1.14999],
                8637: [-.10889, .39111, 0, 0, 1.14999],
                8640: [-.10889, .39111, 0, 0, 1.14999],
                8641: [-.10889, .39111, 0, 0, 1.14999],
                8656: [-.10889, .39111, 0, 0, 1.14999],
                8657: [.19444, .69444, 0, 0, .70277],
                8658: [-.10889, .39111, 0, 0, 1.14999],
                8659: [.19444, .69444, 0, 0, .70277],
                8660: [-.10889, .39111, 0, 0, 1.14999],
                8661: [.25, .75, 0, 0, .70277],
                8704: [0, .69444, 0, 0, .63889],
                8706: [0, .69444, .06389, 0, .62847],
                8707: [0, .69444, 0, 0, .63889],
                8709: [.05556, .75, 0, 0, .575],
                8711: [0, .68611, 0, 0, .95833],
                8712: [.08556, .58556, 0, 0, .76666],
                8715: [.08556, .58556, 0, 0, .76666],
                8722: [.13333, .63333, 0, 0, .89444],
                8723: [.13333, .63333, 0, 0, .89444],
                8725: [.25, .75, 0, 0, .575],
                8726: [.25, .75, 0, 0, .575],
                8727: [-.02778, .47222, 0, 0, .575],
                8728: [-.02639, .47361, 0, 0, .575],
                8729: [-.02639, .47361, 0, 0, .575],
                8730: [.18, .82, 0, 0, .95833],
                8733: [0, .44444, 0, 0, .89444],
                8734: [0, .44444, 0, 0, 1.14999],
                8736: [0, .69224, 0, 0, .72222],
                8739: [.25, .75, 0, 0, .31944],
                8741: [.25, .75, 0, 0, .575],
                8743: [0, .55556, 0, 0, .76666],
                8744: [0, .55556, 0, 0, .76666],
                8745: [0, .55556, 0, 0, .76666],
                8746: [0, .55556, 0, 0, .76666],
                8747: [.19444, .69444, .12778, 0, .56875],
                8764: [-.10889, .39111, 0, 0, .89444],
                8768: [.19444, .69444, 0, 0, .31944],
                8771: [.00222, .50222, 0, 0, .89444],
                8773: [.027, .638, 0, 0, .894],
                8776: [.02444, .52444, 0, 0, .89444],
                8781: [.00222, .50222, 0, 0, .89444],
                8801: [.00222, .50222, 0, 0, .89444],
                8804: [.19667, .69667, 0, 0, .89444],
                8805: [.19667, .69667, 0, 0, .89444],
                8810: [.08556, .58556, 0, 0, 1.14999],
                8811: [.08556, .58556, 0, 0, 1.14999],
                8826: [.08556, .58556, 0, 0, .89444],
                8827: [.08556, .58556, 0, 0, .89444],
                8834: [.08556, .58556, 0, 0, .89444],
                8835: [.08556, .58556, 0, 0, .89444],
                8838: [.19667, .69667, 0, 0, .89444],
                8839: [.19667, .69667, 0, 0, .89444],
                8846: [0, .55556, 0, 0, .76666],
                8849: [.19667, .69667, 0, 0, .89444],
                8850: [.19667, .69667, 0, 0, .89444],
                8851: [0, .55556, 0, 0, .76666],
                8852: [0, .55556, 0, 0, .76666],
                8853: [.13333, .63333, 0, 0, .89444],
                8854: [.13333, .63333, 0, 0, .89444],
                8855: [.13333, .63333, 0, 0, .89444],
                8856: [.13333, .63333, 0, 0, .89444],
                8857: [.13333, .63333, 0, 0, .89444],
                8866: [0, .69444, 0, 0, .70277],
                8867: [0, .69444, 0, 0, .70277],
                8868: [0, .69444, 0, 0, .89444],
                8869: [0, .69444, 0, 0, .89444],
                8900: [-.02639, .47361, 0, 0, .575],
                8901: [-.02639, .47361, 0, 0, .31944],
                8902: [-.02778, .47222, 0, 0, .575],
                8968: [.25, .75, 0, 0, .51111],
                8969: [.25, .75, 0, 0, .51111],
                8970: [.25, .75, 0, 0, .51111],
                8971: [.25, .75, 0, 0, .51111],
                8994: [-.13889, .36111, 0, 0, 1.14999],
                8995: [-.13889, .36111, 0, 0, 1.14999],
                9651: [.19444, .69444, 0, 0, 1.02222],
                9657: [-.02778, .47222, 0, 0, .575],
                9661: [.19444, .69444, 0, 0, 1.02222],
                9667: [-.02778, .47222, 0, 0, .575],
                9711: [.19444, .69444, 0, 0, 1.14999],
                9824: [.12963, .69444, 0, 0, .89444],
                9825: [.12963, .69444, 0, 0, .89444],
                9826: [.12963, .69444, 0, 0, .89444],
                9827: [.12963, .69444, 0, 0, .89444],
                9837: [0, .75, 0, 0, .44722],
                9838: [.19444, .69444, 0, 0, .44722],
                9839: [.19444, .69444, 0, 0, .44722],
                10216: [.25, .75, 0, 0, .44722],
                10217: [.25, .75, 0, 0, .44722],
                10815: [0, .68611, 0, 0, .9],
                10927: [.19667, .69667, 0, 0, .89444],
                10928: [.19667, .69667, 0, 0, .89444],
                57376: [.19444, .69444, 0, 0, 0]
            },
            "Main-BoldItalic": {
                32: [0, 0, 0, 0, .25],
                33: [0, .69444, .11417, 0, .38611],
                34: [0, .69444, .07939, 0, .62055],
                35: [.19444, .69444, .06833, 0, .94444],
                37: [.05556, .75, .12861, 0, .94444],
                38: [0, .69444, .08528, 0, .88555],
                39: [0, .69444, .12945, 0, .35555],
                40: [.25, .75, .15806, 0, .47333],
                41: [.25, .75, .03306, 0, .47333],
                42: [0, .75, .14333, 0, .59111],
                43: [.10333, .60333, .03306, 0, .88555],
                44: [.19444, .14722, 0, 0, .35555],
                45: [0, .44444, .02611, 0, .41444],
                46: [0, .14722, 0, 0, .35555],
                47: [.25, .75, .15806, 0, .59111],
                48: [0, .64444, .13167, 0, .59111],
                49: [0, .64444, .13167, 0, .59111],
                50: [0, .64444, .13167, 0, .59111],
                51: [0, .64444, .13167, 0, .59111],
                52: [.19444, .64444, .13167, 0, .59111],
                53: [0, .64444, .13167, 0, .59111],
                54: [0, .64444, .13167, 0, .59111],
                55: [.19444, .64444, .13167, 0, .59111],
                56: [0, .64444, .13167, 0, .59111],
                57: [0, .64444, .13167, 0, .59111],
                58: [0, .44444, .06695, 0, .35555],
                59: [.19444, .44444, .06695, 0, .35555],
                61: [-.10889, .39111, .06833, 0, .88555],
                63: [0, .69444, .11472, 0, .59111],
                64: [0, .69444, .09208, 0, .88555],
                65: [0, .68611, 0, 0, .86555],
                66: [0, .68611, .0992, 0, .81666],
                67: [0, .68611, .14208, 0, .82666],
                68: [0, .68611, .09062, 0, .87555],
                69: [0, .68611, .11431, 0, .75666],
                70: [0, .68611, .12903, 0, .72722],
                71: [0, .68611, .07347, 0, .89527],
                72: [0, .68611, .17208, 0, .8961],
                73: [0, .68611, .15681, 0, .47166],
                74: [0, .68611, .145, 0, .61055],
                75: [0, .68611, .14208, 0, .89499],
                76: [0, .68611, 0, 0, .69777],
                77: [0, .68611, .17208, 0, 1.07277],
                78: [0, .68611, .17208, 0, .8961],
                79: [0, .68611, .09062, 0, .85499],
                80: [0, .68611, .0992, 0, .78721],
                81: [.19444, .68611, .09062, 0, .85499],
                82: [0, .68611, .02559, 0, .85944],
                83: [0, .68611, .11264, 0, .64999],
                84: [0, .68611, .12903, 0, .7961],
                85: [0, .68611, .17208, 0, .88083],
                86: [0, .68611, .18625, 0, .86555],
                87: [0, .68611, .18625, 0, 1.15999],
                88: [0, .68611, .15681, 0, .86555],
                89: [0, .68611, .19803, 0, .86555],
                90: [0, .68611, .14208, 0, .70888],
                91: [.25, .75, .1875, 0, .35611],
                93: [.25, .75, .09972, 0, .35611],
                94: [0, .69444, .06709, 0, .59111],
                95: [.31, .13444, .09811, 0, .59111],
                97: [0, .44444, .09426, 0, .59111],
                98: [0, .69444, .07861, 0, .53222],
                99: [0, .44444, .05222, 0, .53222],
                100: [0, .69444, .10861, 0, .59111],
                101: [0, .44444, .085, 0, .53222],
                102: [.19444, .69444, .21778, 0, .4],
                103: [.19444, .44444, .105, 0, .53222],
                104: [0, .69444, .09426, 0, .59111],
                105: [0, .69326, .11387, 0, .35555],
                106: [.19444, .69326, .1672, 0, .35555],
                107: [0, .69444, .11111, 0, .53222],
                108: [0, .69444, .10861, 0, .29666],
                109: [0, .44444, .09426, 0, .94444],
                110: [0, .44444, .09426, 0, .64999],
                111: [0, .44444, .07861, 0, .59111],
                112: [.19444, .44444, .07861, 0, .59111],
                113: [.19444, .44444, .105, 0, .53222],
                114: [0, .44444, .11111, 0, .50167],
                115: [0, .44444, .08167, 0, .48694],
                116: [0, .63492, .09639, 0, .385],
                117: [0, .44444, .09426, 0, .62055],
                118: [0, .44444, .11111, 0, .53222],
                119: [0, .44444, .11111, 0, .76777],
                120: [0, .44444, .12583, 0, .56055],
                121: [.19444, .44444, .105, 0, .56166],
                122: [0, .44444, .13889, 0, .49055],
                126: [.35, .34444, .11472, 0, .59111],
                160: [0, 0, 0, 0, .25],
                168: [0, .69444, .11473, 0, .59111],
                176: [0, .69444, 0, 0, .94888],
                184: [.17014, 0, 0, 0, .53222],
                198: [0, .68611, .11431, 0, 1.02277],
                216: [.04861, .73472, .09062, 0, .88555],
                223: [.19444, .69444, .09736, 0, .665],
                230: [0, .44444, .085, 0, .82666],
                248: [.09722, .54167, .09458, 0, .59111],
                305: [0, .44444, .09426, 0, .35555],
                338: [0, .68611, .11431, 0, 1.14054],
                339: [0, .44444, .085, 0, .82666],
                567: [.19444, .44444, .04611, 0, .385],
                710: [0, .69444, .06709, 0, .59111],
                711: [0, .63194, .08271, 0, .59111],
                713: [0, .59444, .10444, 0, .59111],
                714: [0, .69444, .08528, 0, .59111],
                715: [0, .69444, 0, 0, .59111],
                728: [0, .69444, .10333, 0, .59111],
                729: [0, .69444, .12945, 0, .35555],
                730: [0, .69444, 0, 0, .94888],
                732: [0, .69444, .11472, 0, .59111],
                733: [0, .69444, .11472, 0, .59111],
                915: [0, .68611, .12903, 0, .69777],
                916: [0, .68611, 0, 0, .94444],
                920: [0, .68611, .09062, 0, .88555],
                923: [0, .68611, 0, 0, .80666],
                926: [0, .68611, .15092, 0, .76777],
                928: [0, .68611, .17208, 0, .8961],
                931: [0, .68611, .11431, 0, .82666],
                933: [0, .68611, .10778, 0, .88555],
                934: [0, .68611, .05632, 0, .82666],
                936: [0, .68611, .10778, 0, .88555],
                937: [0, .68611, .0992, 0, .82666],
                8211: [0, .44444, .09811, 0, .59111],
                8212: [0, .44444, .09811, 0, 1.18221],
                8216: [0, .69444, .12945, 0, .35555],
                8217: [0, .69444, .12945, 0, .35555],
                8220: [0, .69444, .16772, 0, .62055],
                8221: [0, .69444, .07939, 0, .62055]
            },
            "Main-Italic": {
                32: [0, 0, 0, 0, .25],
                33: [0, .69444, .12417, 0, .30667],
                34: [0, .69444, .06961, 0, .51444],
                35: [.19444, .69444, .06616, 0, .81777],
                37: [.05556, .75, .13639, 0, .81777],
                38: [0, .69444, .09694, 0, .76666],
                39: [0, .69444, .12417, 0, .30667],
                40: [.25, .75, .16194, 0, .40889],
                41: [.25, .75, .03694, 0, .40889],
                42: [0, .75, .14917, 0, .51111],
                43: [.05667, .56167, .03694, 0, .76666],
                44: [.19444, .10556, 0, 0, .30667],
                45: [0, .43056, .02826, 0, .35778],
                46: [0, .10556, 0, 0, .30667],
                47: [.25, .75, .16194, 0, .51111],
                48: [0, .64444, .13556, 0, .51111],
                49: [0, .64444, .13556, 0, .51111],
                50: [0, .64444, .13556, 0, .51111],
                51: [0, .64444, .13556, 0, .51111],
                52: [.19444, .64444, .13556, 0, .51111],
                53: [0, .64444, .13556, 0, .51111],
                54: [0, .64444, .13556, 0, .51111],
                55: [.19444, .64444, .13556, 0, .51111],
                56: [0, .64444, .13556, 0, .51111],
                57: [0, .64444, .13556, 0, .51111],
                58: [0, .43056, .0582, 0, .30667],
                59: [.19444, .43056, .0582, 0, .30667],
                61: [-.13313, .36687, .06616, 0, .76666],
                63: [0, .69444, .1225, 0, .51111],
                64: [0, .69444, .09597, 0, .76666],
                65: [0, .68333, 0, 0, .74333],
                66: [0, .68333, .10257, 0, .70389],
                67: [0, .68333, .14528, 0, .71555],
                68: [0, .68333, .09403, 0, .755],
                69: [0, .68333, .12028, 0, .67833],
                70: [0, .68333, .13305, 0, .65277],
                71: [0, .68333, .08722, 0, .77361],
                72: [0, .68333, .16389, 0, .74333],
                73: [0, .68333, .15806, 0, .38555],
                74: [0, .68333, .14028, 0, .525],
                75: [0, .68333, .14528, 0, .76888],
                76: [0, .68333, 0, 0, .62722],
                77: [0, .68333, .16389, 0, .89666],
                78: [0, .68333, .16389, 0, .74333],
                79: [0, .68333, .09403, 0, .76666],
                80: [0, .68333, .10257, 0, .67833],
                81: [.19444, .68333, .09403, 0, .76666],
                82: [0, .68333, .03868, 0, .72944],
                83: [0, .68333, .11972, 0, .56222],
                84: [0, .68333, .13305, 0, .71555],
                85: [0, .68333, .16389, 0, .74333],
                86: [0, .68333, .18361, 0, .74333],
                87: [0, .68333, .18361, 0, .99888],
                88: [0, .68333, .15806, 0, .74333],
                89: [0, .68333, .19383, 0, .74333],
                90: [0, .68333, .14528, 0, .61333],
                91: [.25, .75, .1875, 0, .30667],
                93: [.25, .75, .10528, 0, .30667],
                94: [0, .69444, .06646, 0, .51111],
                95: [.31, .12056, .09208, 0, .51111],
                97: [0, .43056, .07671, 0, .51111],
                98: [0, .69444, .06312, 0, .46],
                99: [0, .43056, .05653, 0, .46],
                100: [0, .69444, .10333, 0, .51111],
                101: [0, .43056, .07514, 0, .46],
                102: [.19444, .69444, .21194, 0, .30667],
                103: [.19444, .43056, .08847, 0, .46],
                104: [0, .69444, .07671, 0, .51111],
                105: [0, .65536, .1019, 0, .30667],
                106: [.19444, .65536, .14467, 0, .30667],
                107: [0, .69444, .10764, 0, .46],
                108: [0, .69444, .10333, 0, .25555],
                109: [0, .43056, .07671, 0, .81777],
                110: [0, .43056, .07671, 0, .56222],
                111: [0, .43056, .06312, 0, .51111],
                112: [.19444, .43056, .06312, 0, .51111],
                113: [.19444, .43056, .08847, 0, .46],
                114: [0, .43056, .10764, 0, .42166],
                115: [0, .43056, .08208, 0, .40889],
                116: [0, .61508, .09486, 0, .33222],
                117: [0, .43056, .07671, 0, .53666],
                118: [0, .43056, .10764, 0, .46],
                119: [0, .43056, .10764, 0, .66444],
                120: [0, .43056, .12042, 0, .46389],
                121: [.19444, .43056, .08847, 0, .48555],
                122: [0, .43056, .12292, 0, .40889],
                126: [.35, .31786, .11585, 0, .51111],
                160: [0, 0, 0, 0, .25],
                168: [0, .66786, .10474, 0, .51111],
                176: [0, .69444, 0, 0, .83129],
                184: [.17014, 0, 0, 0, .46],
                198: [0, .68333, .12028, 0, .88277],
                216: [.04861, .73194, .09403, 0, .76666],
                223: [.19444, .69444, .10514, 0, .53666],
                230: [0, .43056, .07514, 0, .71555],
                248: [.09722, .52778, .09194, 0, .51111],
                338: [0, .68333, .12028, 0, .98499],
                339: [0, .43056, .07514, 0, .71555],
                710: [0, .69444, .06646, 0, .51111],
                711: [0, .62847, .08295, 0, .51111],
                713: [0, .56167, .10333, 0, .51111],
                714: [0, .69444, .09694, 0, .51111],
                715: [0, .69444, 0, 0, .51111],
                728: [0, .69444, .10806, 0, .51111],
                729: [0, .66786, .11752, 0, .30667],
                730: [0, .69444, 0, 0, .83129],
                732: [0, .66786, .11585, 0, .51111],
                733: [0, .69444, .1225, 0, .51111],
                915: [0, .68333, .13305, 0, .62722],
                916: [0, .68333, 0, 0, .81777],
                920: [0, .68333, .09403, 0, .76666],
                923: [0, .68333, 0, 0, .69222],
                926: [0, .68333, .15294, 0, .66444],
                928: [0, .68333, .16389, 0, .74333],
                931: [0, .68333, .12028, 0, .71555],
                933: [0, .68333, .11111, 0, .76666],
                934: [0, .68333, .05986, 0, .71555],
                936: [0, .68333, .11111, 0, .76666],
                937: [0, .68333, .10257, 0, .71555],
                8211: [0, .43056, .09208, 0, .51111],
                8212: [0, .43056, .09208, 0, 1.02222],
                8216: [0, .69444, .12417, 0, .30667],
                8217: [0, .69444, .12417, 0, .30667],
                8220: [0, .69444, .1685, 0, .51444],
                8221: [0, .69444, .06961, 0, .51444],
                8463: [0, .68889, 0, 0, .54028]
            },
            "Main-Regular": {
                32: [0, 0, 0, 0, .25],
                33: [0, .69444, 0, 0, .27778],
                34: [0, .69444, 0, 0, .5],
                35: [.19444, .69444, 0, 0, .83334],
                36: [.05556, .75, 0, 0, .5],
                37: [.05556, .75, 0, 0, .83334],
                38: [0, .69444, 0, 0, .77778],
                39: [0, .69444, 0, 0, .27778],
                40: [.25, .75, 0, 0, .38889],
                41: [.25, .75, 0, 0, .38889],
                42: [0, .75, 0, 0, .5],
                43: [.08333, .58333, 0, 0, .77778],
                44: [.19444, .10556, 0, 0, .27778],
                45: [0, .43056, 0, 0, .33333],
                46: [0, .10556, 0, 0, .27778],
                47: [.25, .75, 0, 0, .5],
                48: [0, .64444, 0, 0, .5],
                49: [0, .64444, 0, 0, .5],
                50: [0, .64444, 0, 0, .5],
                51: [0, .64444, 0, 0, .5],
                52: [0, .64444, 0, 0, .5],
                53: [0, .64444, 0, 0, .5],
                54: [0, .64444, 0, 0, .5],
                55: [0, .64444, 0, 0, .5],
                56: [0, .64444, 0, 0, .5],
                57: [0, .64444, 0, 0, .5],
                58: [0, .43056, 0, 0, .27778],
                59: [.19444, .43056, 0, 0, .27778],
                60: [.0391, .5391, 0, 0, .77778],
                61: [-.13313, .36687, 0, 0, .77778],
                62: [.0391, .5391, 0, 0, .77778],
                63: [0, .69444, 0, 0, .47222],
                64: [0, .69444, 0, 0, .77778],
                65: [0, .68333, 0, 0, .75],
                66: [0, .68333, 0, 0, .70834],
                67: [0, .68333, 0, 0, .72222],
                68: [0, .68333, 0, 0, .76389],
                69: [0, .68333, 0, 0, .68056],
                70: [0, .68333, 0, 0, .65278],
                71: [0, .68333, 0, 0, .78472],
                72: [0, .68333, 0, 0, .75],
                73: [0, .68333, 0, 0, .36111],
                74: [0, .68333, 0, 0, .51389],
                75: [0, .68333, 0, 0, .77778],
                76: [0, .68333, 0, 0, .625],
                77: [0, .68333, 0, 0, .91667],
                78: [0, .68333, 0, 0, .75],
                79: [0, .68333, 0, 0, .77778],
                80: [0, .68333, 0, 0, .68056],
                81: [.19444, .68333, 0, 0, .77778],
                82: [0, .68333, 0, 0, .73611],
                83: [0, .68333, 0, 0, .55556],
                84: [0, .68333, 0, 0, .72222],
                85: [0, .68333, 0, 0, .75],
                86: [0, .68333, .01389, 0, .75],
                87: [0, .68333, .01389, 0, 1.02778],
                88: [0, .68333, 0, 0, .75],
                89: [0, .68333, .025, 0, .75],
                90: [0, .68333, 0, 0, .61111],
                91: [.25, .75, 0, 0, .27778],
                92: [.25, .75, 0, 0, .5],
                93: [.25, .75, 0, 0, .27778],
                94: [0, .69444, 0, 0, .5],
                95: [.31, .12056, .02778, 0, .5],
                97: [0, .43056, 0, 0, .5],
                98: [0, .69444, 0, 0, .55556],
                99: [0, .43056, 0, 0, .44445],
                100: [0, .69444, 0, 0, .55556],
                101: [0, .43056, 0, 0, .44445],
                102: [0, .69444, .07778, 0, .30556],
                103: [.19444, .43056, .01389, 0, .5],
                104: [0, .69444, 0, 0, .55556],
                105: [0, .66786, 0, 0, .27778],
                106: [.19444, .66786, 0, 0, .30556],
                107: [0, .69444, 0, 0, .52778],
                108: [0, .69444, 0, 0, .27778],
                109: [0, .43056, 0, 0, .83334],
                110: [0, .43056, 0, 0, .55556],
                111: [0, .43056, 0, 0, .5],
                112: [.19444, .43056, 0, 0, .55556],
                113: [.19444, .43056, 0, 0, .52778],
                114: [0, .43056, 0, 0, .39167],
                115: [0, .43056, 0, 0, .39445],
                116: [0, .61508, 0, 0, .38889],
                117: [0, .43056, 0, 0, .55556],
                118: [0, .43056, .01389, 0, .52778],
                119: [0, .43056, .01389, 0, .72222],
                120: [0, .43056, 0, 0, .52778],
                121: [.19444, .43056, .01389, 0, .52778],
                122: [0, .43056, 0, 0, .44445],
                123: [.25, .75, 0, 0, .5],
                124: [.25, .75, 0, 0, .27778],
                125: [.25, .75, 0, 0, .5],
                126: [.35, .31786, 0, 0, .5],
                160: [0, 0, 0, 0, .25],
                163: [0, .69444, 0, 0, .76909],
                167: [.19444, .69444, 0, 0, .44445],
                168: [0, .66786, 0, 0, .5],
                172: [0, .43056, 0, 0, .66667],
                176: [0, .69444, 0, 0, .75],
                177: [.08333, .58333, 0, 0, .77778],
                182: [.19444, .69444, 0, 0, .61111],
                184: [.17014, 0, 0, 0, .44445],
                198: [0, .68333, 0, 0, .90278],
                215: [.08333, .58333, 0, 0, .77778],
                216: [.04861, .73194, 0, 0, .77778],
                223: [0, .69444, 0, 0, .5],
                230: [0, .43056, 0, 0, .72222],
                247: [.08333, .58333, 0, 0, .77778],
                248: [.09722, .52778, 0, 0, .5],
                305: [0, .43056, 0, 0, .27778],
                338: [0, .68333, 0, 0, 1.01389],
                339: [0, .43056, 0, 0, .77778],
                567: [.19444, .43056, 0, 0, .30556],
                710: [0, .69444, 0, 0, .5],
                711: [0, .62847, 0, 0, .5],
                713: [0, .56778, 0, 0, .5],
                714: [0, .69444, 0, 0, .5],
                715: [0, .69444, 0, 0, .5],
                728: [0, .69444, 0, 0, .5],
                729: [0, .66786, 0, 0, .27778],
                730: [0, .69444, 0, 0, .75],
                732: [0, .66786, 0, 0, .5],
                733: [0, .69444, 0, 0, .5],
                915: [0, .68333, 0, 0, .625],
                916: [0, .68333, 0, 0, .83334],
                920: [0, .68333, 0, 0, .77778],
                923: [0, .68333, 0, 0, .69445],
                926: [0, .68333, 0, 0, .66667],
                928: [0, .68333, 0, 0, .75],
                931: [0, .68333, 0, 0, .72222],
                933: [0, .68333, 0, 0, .77778],
                934: [0, .68333, 0, 0, .72222],
                936: [0, .68333, 0, 0, .77778],
                937: [0, .68333, 0, 0, .72222],
                8211: [0, .43056, .02778, 0, .5],
                8212: [0, .43056, .02778, 0, 1],
                8216: [0, .69444, 0, 0, .27778],
                8217: [0, .69444, 0, 0, .27778],
                8220: [0, .69444, 0, 0, .5],
                8221: [0, .69444, 0, 0, .5],
                8224: [.19444, .69444, 0, 0, .44445],
                8225: [.19444, .69444, 0, 0, .44445],
                8230: [0, .123, 0, 0, 1.172],
                8242: [0, .55556, 0, 0, .275],
                8407: [0, .71444, .15382, 0, .5],
                8463: [0, .68889, 0, 0, .54028],
                8465: [0, .69444, 0, 0, .72222],
                8467: [0, .69444, 0, .11111, .41667],
                8472: [.19444, .43056, 0, .11111, .63646],
                8476: [0, .69444, 0, 0, .72222],
                8501: [0, .69444, 0, 0, .61111],
                8592: [-.13313, .36687, 0, 0, 1],
                8593: [.19444, .69444, 0, 0, .5],
                8594: [-.13313, .36687, 0, 0, 1],
                8595: [.19444, .69444, 0, 0, .5],
                8596: [-.13313, .36687, 0, 0, 1],
                8597: [.25, .75, 0, 0, .5],
                8598: [.19444, .69444, 0, 0, 1],
                8599: [.19444, .69444, 0, 0, 1],
                8600: [.19444, .69444, 0, 0, 1],
                8601: [.19444, .69444, 0, 0, 1],
                8614: [.011, .511, 0, 0, 1],
                8617: [.011, .511, 0, 0, 1.126],
                8618: [.011, .511, 0, 0, 1.126],
                8636: [-.13313, .36687, 0, 0, 1],
                8637: [-.13313, .36687, 0, 0, 1],
                8640: [-.13313, .36687, 0, 0, 1],
                8641: [-.13313, .36687, 0, 0, 1],
                8652: [.011, .671, 0, 0, 1],
                8656: [-.13313, .36687, 0, 0, 1],
                8657: [.19444, .69444, 0, 0, .61111],
                8658: [-.13313, .36687, 0, 0, 1],
                8659: [.19444, .69444, 0, 0, .61111],
                8660: [-.13313, .36687, 0, 0, 1],
                8661: [.25, .75, 0, 0, .61111],
                8704: [0, .69444, 0, 0, .55556],
                8706: [0, .69444, .05556, .08334, .5309],
                8707: [0, .69444, 0, 0, .55556],
                8709: [.05556, .75, 0, 0, .5],
                8711: [0, .68333, 0, 0, .83334],
                8712: [.0391, .5391, 0, 0, .66667],
                8715: [.0391, .5391, 0, 0, .66667],
                8722: [.08333, .58333, 0, 0, .77778],
                8723: [.08333, .58333, 0, 0, .77778],
                8725: [.25, .75, 0, 0, .5],
                8726: [.25, .75, 0, 0, .5],
                8727: [-.03472, .46528, 0, 0, .5],
                8728: [-.05555, .44445, 0, 0, .5],
                8729: [-.05555, .44445, 0, 0, .5],
                8730: [.2, .8, 0, 0, .83334],
                8733: [0, .43056, 0, 0, .77778],
                8734: [0, .43056, 0, 0, 1],
                8736: [0, .69224, 0, 0, .72222],
                8739: [.25, .75, 0, 0, .27778],
                8741: [.25, .75, 0, 0, .5],
                8743: [0, .55556, 0, 0, .66667],
                8744: [0, .55556, 0, 0, .66667],
                8745: [0, .55556, 0, 0, .66667],
                8746: [0, .55556, 0, 0, .66667],
                8747: [.19444, .69444, .11111, 0, .41667],
                8764: [-.13313, .36687, 0, 0, .77778],
                8768: [.19444, .69444, 0, 0, .27778],
                8771: [-.03625, .46375, 0, 0, .77778],
                8773: [-.022, .589, 0, 0, .778],
                8776: [-.01688, .48312, 0, 0, .77778],
                8781: [-.03625, .46375, 0, 0, .77778],
                8784: [-.133, .673, 0, 0, .778],
                8801: [-.03625, .46375, 0, 0, .77778],
                8804: [.13597, .63597, 0, 0, .77778],
                8805: [.13597, .63597, 0, 0, .77778],
                8810: [.0391, .5391, 0, 0, 1],
                8811: [.0391, .5391, 0, 0, 1],
                8826: [.0391, .5391, 0, 0, .77778],
                8827: [.0391, .5391, 0, 0, .77778],
                8834: [.0391, .5391, 0, 0, .77778],
                8835: [.0391, .5391, 0, 0, .77778],
                8838: [.13597, .63597, 0, 0, .77778],
                8839: [.13597, .63597, 0, 0, .77778],
                8846: [0, .55556, 0, 0, .66667],
                8849: [.13597, .63597, 0, 0, .77778],
                8850: [.13597, .63597, 0, 0, .77778],
                8851: [0, .55556, 0, 0, .66667],
                8852: [0, .55556, 0, 0, .66667],
                8853: [.08333, .58333, 0, 0, .77778],
                8854: [.08333, .58333, 0, 0, .77778],
                8855: [.08333, .58333, 0, 0, .77778],
                8856: [.08333, .58333, 0, 0, .77778],
                8857: [.08333, .58333, 0, 0, .77778],
                8866: [0, .69444, 0, 0, .61111],
                8867: [0, .69444, 0, 0, .61111],
                8868: [0, .69444, 0, 0, .77778],
                8869: [0, .69444, 0, 0, .77778],
                8872: [.249, .75, 0, 0, .867],
                8900: [-.05555, .44445, 0, 0, .5],
                8901: [-.05555, .44445, 0, 0, .27778],
                8902: [-.03472, .46528, 0, 0, .5],
                8904: [.005, .505, 0, 0, .9],
                8942: [.03, .903, 0, 0, .278],
                8943: [-.19, .313, 0, 0, 1.172],
                8945: [-.1, .823, 0, 0, 1.282],
                8968: [.25, .75, 0, 0, .44445],
                8969: [.25, .75, 0, 0, .44445],
                8970: [.25, .75, 0, 0, .44445],
                8971: [.25, .75, 0, 0, .44445],
                8994: [-.14236, .35764, 0, 0, 1],
                8995: [-.14236, .35764, 0, 0, 1],
                9136: [.244, .744, 0, 0, .412],
                9137: [.244, .745, 0, 0, .412],
                9651: [.19444, .69444, 0, 0, .88889],
                9657: [-.03472, .46528, 0, 0, .5],
                9661: [.19444, .69444, 0, 0, .88889],
                9667: [-.03472, .46528, 0, 0, .5],
                9711: [.19444, .69444, 0, 0, 1],
                9824: [.12963, .69444, 0, 0, .77778],
                9825: [.12963, .69444, 0, 0, .77778],
                9826: [.12963, .69444, 0, 0, .77778],
                9827: [.12963, .69444, 0, 0, .77778],
                9837: [0, .75, 0, 0, .38889],
                9838: [.19444, .69444, 0, 0, .38889],
                9839: [.19444, .69444, 0, 0, .38889],
                10216: [.25, .75, 0, 0, .38889],
                10217: [.25, .75, 0, 0, .38889],
                10222: [.244, .744, 0, 0, .412],
                10223: [.244, .745, 0, 0, .412],
                10229: [.011, .511, 0, 0, 1.609],
                10230: [.011, .511, 0, 0, 1.638],
                10231: [.011, .511, 0, 0, 1.859],
                10232: [.024, .525, 0, 0, 1.609],
                10233: [.024, .525, 0, 0, 1.638],
                10234: [.024, .525, 0, 0, 1.858],
                10236: [.011, .511, 0, 0, 1.638],
                10815: [0, .68333, 0, 0, .75],
                10927: [.13597, .63597, 0, 0, .77778],
                10928: [.13597, .63597, 0, 0, .77778],
                57376: [.19444, .69444, 0, 0, 0]
            },
            "Math-BoldItalic": {
                32: [0, 0, 0, 0, .25],
                48: [0, .44444, 0, 0, .575],
                49: [0, .44444, 0, 0, .575],
                50: [0, .44444, 0, 0, .575],
                51: [.19444, .44444, 0, 0, .575],
                52: [.19444, .44444, 0, 0, .575],
                53: [.19444, .44444, 0, 0, .575],
                54: [0, .64444, 0, 0, .575],
                55: [.19444, .44444, 0, 0, .575],
                56: [0, .64444, 0, 0, .575],
                57: [.19444, .44444, 0, 0, .575],
                65: [0, .68611, 0, 0, .86944],
                66: [0, .68611, .04835, 0, .8664],
                67: [0, .68611, .06979, 0, .81694],
                68: [0, .68611, .03194, 0, .93812],
                69: [0, .68611, .05451, 0, .81007],
                70: [0, .68611, .15972, 0, .68889],
                71: [0, .68611, 0, 0, .88673],
                72: [0, .68611, .08229, 0, .98229],
                73: [0, .68611, .07778, 0, .51111],
                74: [0, .68611, .10069, 0, .63125],
                75: [0, .68611, .06979, 0, .97118],
                76: [0, .68611, 0, 0, .75555],
                77: [0, .68611, .11424, 0, 1.14201],
                78: [0, .68611, .11424, 0, .95034],
                79: [0, .68611, .03194, 0, .83666],
                80: [0, .68611, .15972, 0, .72309],
                81: [.19444, .68611, 0, 0, .86861],
                82: [0, .68611, .00421, 0, .87235],
                83: [0, .68611, .05382, 0, .69271],
                84: [0, .68611, .15972, 0, .63663],
                85: [0, .68611, .11424, 0, .80027],
                86: [0, .68611, .25555, 0, .67778],
                87: [0, .68611, .15972, 0, 1.09305],
                88: [0, .68611, .07778, 0, .94722],
                89: [0, .68611, .25555, 0, .67458],
                90: [0, .68611, .06979, 0, .77257],
                97: [0, .44444, 0, 0, .63287],
                98: [0, .69444, 0, 0, .52083],
                99: [0, .44444, 0, 0, .51342],
                100: [0, .69444, 0, 0, .60972],
                101: [0, .44444, 0, 0, .55361],
                102: [.19444, .69444, .11042, 0, .56806],
                103: [.19444, .44444, .03704, 0, .5449],
                104: [0, .69444, 0, 0, .66759],
                105: [0, .69326, 0, 0, .4048],
                106: [.19444, .69326, .0622, 0, .47083],
                107: [0, .69444, .01852, 0, .6037],
                108: [0, .69444, .0088, 0, .34815],
                109: [0, .44444, 0, 0, 1.0324],
                110: [0, .44444, 0, 0, .71296],
                111: [0, .44444, 0, 0, .58472],
                112: [.19444, .44444, 0, 0, .60092],
                113: [.19444, .44444, .03704, 0, .54213],
                114: [0, .44444, .03194, 0, .5287],
                115: [0, .44444, 0, 0, .53125],
                116: [0, .63492, 0, 0, .41528],
                117: [0, .44444, 0, 0, .68102],
                118: [0, .44444, .03704, 0, .56666],
                119: [0, .44444, .02778, 0, .83148],
                120: [0, .44444, 0, 0, .65903],
                121: [.19444, .44444, .03704, 0, .59028],
                122: [0, .44444, .04213, 0, .55509],
                160: [0, 0, 0, 0, .25],
                915: [0, .68611, .15972, 0, .65694],
                916: [0, .68611, 0, 0, .95833],
                920: [0, .68611, .03194, 0, .86722],
                923: [0, .68611, 0, 0, .80555],
                926: [0, .68611, .07458, 0, .84125],
                928: [0, .68611, .08229, 0, .98229],
                931: [0, .68611, .05451, 0, .88507],
                933: [0, .68611, .15972, 0, .67083],
                934: [0, .68611, 0, 0, .76666],
                936: [0, .68611, .11653, 0, .71402],
                937: [0, .68611, .04835, 0, .8789],
                945: [0, .44444, 0, 0, .76064],
                946: [.19444, .69444, .03403, 0, .65972],
                947: [.19444, .44444, .06389, 0, .59003],
                948: [0, .69444, .03819, 0, .52222],
                949: [0, .44444, 0, 0, .52882],
                950: [.19444, .69444, .06215, 0, .50833],
                951: [.19444, .44444, .03704, 0, .6],
                952: [0, .69444, .03194, 0, .5618],
                953: [0, .44444, 0, 0, .41204],
                954: [0, .44444, 0, 0, .66759],
                955: [0, .69444, 0, 0, .67083],
                956: [.19444, .44444, 0, 0, .70787],
                957: [0, .44444, .06898, 0, .57685],
                958: [.19444, .69444, .03021, 0, .50833],
                959: [0, .44444, 0, 0, .58472],
                960: [0, .44444, .03704, 0, .68241],
                961: [.19444, .44444, 0, 0, .6118],
                962: [.09722, .44444, .07917, 0, .42361],
                963: [0, .44444, .03704, 0, .68588],
                964: [0, .44444, .13472, 0, .52083],
                965: [0, .44444, .03704, 0, .63055],
                966: [.19444, .44444, 0, 0, .74722],
                967: [.19444, .44444, 0, 0, .71805],
                968: [.19444, .69444, .03704, 0, .75833],
                969: [0, .44444, .03704, 0, .71782],
                977: [0, .69444, 0, 0, .69155],
                981: [.19444, .69444, 0, 0, .7125],
                982: [0, .44444, .03194, 0, .975],
                1009: [.19444, .44444, 0, 0, .6118],
                1013: [0, .44444, 0, 0, .48333],
                57649: [0, .44444, 0, 0, .39352],
                57911: [.19444, .44444, 0, 0, .43889]
            },
            "Math-Italic": {
                32: [0, 0, 0, 0, .25],
                48: [0, .43056, 0, 0, .5],
                49: [0, .43056, 0, 0, .5],
                50: [0, .43056, 0, 0, .5],
                51: [.19444, .43056, 0, 0, .5],
                52: [.19444, .43056, 0, 0, .5],
                53: [.19444, .43056, 0, 0, .5],
                54: [0, .64444, 0, 0, .5],
                55: [.19444, .43056, 0, 0, .5],
                56: [0, .64444, 0, 0, .5],
                57: [.19444, .43056, 0, 0, .5],
                65: [0, .68333, 0, .13889, .75],
                66: [0, .68333, .05017, .08334, .75851],
                67: [0, .68333, .07153, .08334, .71472],
                68: [0, .68333, .02778, .05556, .82792],
                69: [0, .68333, .05764, .08334, .7382],
                70: [0, .68333, .13889, .08334, .64306],
                71: [0, .68333, 0, .08334, .78625],
                72: [0, .68333, .08125, .05556, .83125],
                73: [0, .68333, .07847, .11111, .43958],
                74: [0, .68333, .09618, .16667, .55451],
                75: [0, .68333, .07153, .05556, .84931],
                76: [0, .68333, 0, .02778, .68056],
                77: [0, .68333, .10903, .08334, .97014],
                78: [0, .68333, .10903, .08334, .80347],
                79: [0, .68333, .02778, .08334, .76278],
                80: [0, .68333, .13889, .08334, .64201],
                81: [.19444, .68333, 0, .08334, .79056],
                82: [0, .68333, .00773, .08334, .75929],
                83: [0, .68333, .05764, .08334, .6132],
                84: [0, .68333, .13889, .08334, .58438],
                85: [0, .68333, .10903, .02778, .68278],
                86: [0, .68333, .22222, 0, .58333],
                87: [0, .68333, .13889, 0, .94445],
                88: [0, .68333, .07847, .08334, .82847],
                89: [0, .68333, .22222, 0, .58056],
                90: [0, .68333, .07153, .08334, .68264],
                97: [0, .43056, 0, 0, .52859],
                98: [0, .69444, 0, 0, .42917],
                99: [0, .43056, 0, .05556, .43276],
                100: [0, .69444, 0, .16667, .52049],
                101: [0, .43056, 0, .05556, .46563],
                102: [.19444, .69444, .10764, .16667, .48959],
                103: [.19444, .43056, .03588, .02778, .47697],
                104: [0, .69444, 0, 0, .57616],
                105: [0, .65952, 0, 0, .34451],
                106: [.19444, .65952, .05724, 0, .41181],
                107: [0, .69444, .03148, 0, .5206],
                108: [0, .69444, .01968, .08334, .29838],
                109: [0, .43056, 0, 0, .87801],
                110: [0, .43056, 0, 0, .60023],
                111: [0, .43056, 0, .05556, .48472],
                112: [.19444, .43056, 0, .08334, .50313],
                113: [.19444, .43056, .03588, .08334, .44641],
                114: [0, .43056, .02778, .05556, .45116],
                115: [0, .43056, 0, .05556, .46875],
                116: [0, .61508, 0, .08334, .36111],
                117: [0, .43056, 0, .02778, .57246],
                118: [0, .43056, .03588, .02778, .48472],
                119: [0, .43056, .02691, .08334, .71592],
                120: [0, .43056, 0, .02778, .57153],
                121: [.19444, .43056, .03588, .05556, .49028],
                122: [0, .43056, .04398, .05556, .46505],
                160: [0, 0, 0, 0, .25],
                915: [0, .68333, .13889, .08334, .61528],
                916: [0, .68333, 0, .16667, .83334],
                920: [0, .68333, .02778, .08334, .76278],
                923: [0, .68333, 0, .16667, .69445],
                926: [0, .68333, .07569, .08334, .74236],
                928: [0, .68333, .08125, .05556, .83125],
                931: [0, .68333, .05764, .08334, .77986],
                933: [0, .68333, .13889, .05556, .58333],
                934: [0, .68333, 0, .08334, .66667],
                936: [0, .68333, .11, .05556, .61222],
                937: [0, .68333, .05017, .08334, .7724],
                945: [0, .43056, .0037, .02778, .6397],
                946: [.19444, .69444, .05278, .08334, .56563],
                947: [.19444, .43056, .05556, 0, .51773],
                948: [0, .69444, .03785, .05556, .44444],
                949: [0, .43056, 0, .08334, .46632],
                950: [.19444, .69444, .07378, .08334, .4375],
                951: [.19444, .43056, .03588, .05556, .49653],
                952: [0, .69444, .02778, .08334, .46944],
                953: [0, .43056, 0, .05556, .35394],
                954: [0, .43056, 0, 0, .57616],
                955: [0, .69444, 0, 0, .58334],
                956: [.19444, .43056, 0, .02778, .60255],
                957: [0, .43056, .06366, .02778, .49398],
                958: [.19444, .69444, .04601, .11111, .4375],
                959: [0, .43056, 0, .05556, .48472],
                960: [0, .43056, .03588, 0, .57003],
                961: [.19444, .43056, 0, .08334, .51702],
                962: [.09722, .43056, .07986, .08334, .36285],
                963: [0, .43056, .03588, 0, .57141],
                964: [0, .43056, .1132, .02778, .43715],
                965: [0, .43056, .03588, .02778, .54028],
                966: [.19444, .43056, 0, .08334, .65417],
                967: [.19444, .43056, 0, .05556, .62569],
                968: [.19444, .69444, .03588, .11111, .65139],
                969: [0, .43056, .03588, 0, .62245],
                977: [0, .69444, 0, .08334, .59144],
                981: [.19444, .69444, 0, .08334, .59583],
                982: [0, .43056, .02778, 0, .82813],
                1009: [.19444, .43056, 0, .08334, .51702],
                1013: [0, .43056, 0, .05556, .4059],
                57649: [0, .43056, 0, .02778, .32246],
                57911: [.19444, .43056, 0, .08334, .38403]
            },
            "SansSerif-Bold": {
                32: [0, 0, 0, 0, .25],
                33: [0, .69444, 0, 0, .36667],
                34: [0, .69444, 0, 0, .55834],
                35: [.19444, .69444, 0, 0, .91667],
                36: [.05556, .75, 0, 0, .55],
                37: [.05556, .75, 0, 0, 1.02912],
                38: [0, .69444, 0, 0, .83056],
                39: [0, .69444, 0, 0, .30556],
                40: [.25, .75, 0, 0, .42778],
                41: [.25, .75, 0, 0, .42778],
                42: [0, .75, 0, 0, .55],
                43: [.11667, .61667, 0, 0, .85556],
                44: [.10556, .13056, 0, 0, .30556],
                45: [0, .45833, 0, 0, .36667],
                46: [0, .13056, 0, 0, .30556],
                47: [.25, .75, 0, 0, .55],
                48: [0, .69444, 0, 0, .55],
                49: [0, .69444, 0, 0, .55],
                50: [0, .69444, 0, 0, .55],
                51: [0, .69444, 0, 0, .55],
                52: [0, .69444, 0, 0, .55],
                53: [0, .69444, 0, 0, .55],
                54: [0, .69444, 0, 0, .55],
                55: [0, .69444, 0, 0, .55],
                56: [0, .69444, 0, 0, .55],
                57: [0, .69444, 0, 0, .55],
                58: [0, .45833, 0, 0, .30556],
                59: [.10556, .45833, 0, 0, .30556],
                61: [-.09375, .40625, 0, 0, .85556],
                63: [0, .69444, 0, 0, .51945],
                64: [0, .69444, 0, 0, .73334],
                65: [0, .69444, 0, 0, .73334],
                66: [0, .69444, 0, 0, .73334],
                67: [0, .69444, 0, 0, .70278],
                68: [0, .69444, 0, 0, .79445],
                69: [0, .69444, 0, 0, .64167],
                70: [0, .69444, 0, 0, .61111],
                71: [0, .69444, 0, 0, .73334],
                72: [0, .69444, 0, 0, .79445],
                73: [0, .69444, 0, 0, .33056],
                74: [0, .69444, 0, 0, .51945],
                75: [0, .69444, 0, 0, .76389],
                76: [0, .69444, 0, 0, .58056],
                77: [0, .69444, 0, 0, .97778],
                78: [0, .69444, 0, 0, .79445],
                79: [0, .69444, 0, 0, .79445],
                80: [0, .69444, 0, 0, .70278],
                81: [.10556, .69444, 0, 0, .79445],
                82: [0, .69444, 0, 0, .70278],
                83: [0, .69444, 0, 0, .61111],
                84: [0, .69444, 0, 0, .73334],
                85: [0, .69444, 0, 0, .76389],
                86: [0, .69444, .01528, 0, .73334],
                87: [0, .69444, .01528, 0, 1.03889],
                88: [0, .69444, 0, 0, .73334],
                89: [0, .69444, .0275, 0, .73334],
                90: [0, .69444, 0, 0, .67223],
                91: [.25, .75, 0, 0, .34306],
                93: [.25, .75, 0, 0, .34306],
                94: [0, .69444, 0, 0, .55],
                95: [.35, .10833, .03056, 0, .55],
                97: [0, .45833, 0, 0, .525],
                98: [0, .69444, 0, 0, .56111],
                99: [0, .45833, 0, 0, .48889],
                100: [0, .69444, 0, 0, .56111],
                101: [0, .45833, 0, 0, .51111],
                102: [0, .69444, .07639, 0, .33611],
                103: [.19444, .45833, .01528, 0, .55],
                104: [0, .69444, 0, 0, .56111],
                105: [0, .69444, 0, 0, .25556],
                106: [.19444, .69444, 0, 0, .28611],
                107: [0, .69444, 0, 0, .53056],
                108: [0, .69444, 0, 0, .25556],
                109: [0, .45833, 0, 0, .86667],
                110: [0, .45833, 0, 0, .56111],
                111: [0, .45833, 0, 0, .55],
                112: [.19444, .45833, 0, 0, .56111],
                113: [.19444, .45833, 0, 0, .56111],
                114: [0, .45833, .01528, 0, .37222],
                115: [0, .45833, 0, 0, .42167],
                116: [0, .58929, 0, 0, .40417],
                117: [0, .45833, 0, 0, .56111],
                118: [0, .45833, .01528, 0, .5],
                119: [0, .45833, .01528, 0, .74445],
                120: [0, .45833, 0, 0, .5],
                121: [.19444, .45833, .01528, 0, .5],
                122: [0, .45833, 0, 0, .47639],
                126: [.35, .34444, 0, 0, .55],
                160: [0, 0, 0, 0, .25],
                168: [0, .69444, 0, 0, .55],
                176: [0, .69444, 0, 0, .73334],
                180: [0, .69444, 0, 0, .55],
                184: [.17014, 0, 0, 0, .48889],
                305: [0, .45833, 0, 0, .25556],
                567: [.19444, .45833, 0, 0, .28611],
                710: [0, .69444, 0, 0, .55],
                711: [0, .63542, 0, 0, .55],
                713: [0, .63778, 0, 0, .55],
                728: [0, .69444, 0, 0, .55],
                729: [0, .69444, 0, 0, .30556],
                730: [0, .69444, 0, 0, .73334],
                732: [0, .69444, 0, 0, .55],
                733: [0, .69444, 0, 0, .55],
                915: [0, .69444, 0, 0, .58056],
                916: [0, .69444, 0, 0, .91667],
                920: [0, .69444, 0, 0, .85556],
                923: [0, .69444, 0, 0, .67223],
                926: [0, .69444, 0, 0, .73334],
                928: [0, .69444, 0, 0, .79445],
                931: [0, .69444, 0, 0, .79445],
                933: [0, .69444, 0, 0, .85556],
                934: [0, .69444, 0, 0, .79445],
                936: [0, .69444, 0, 0, .85556],
                937: [0, .69444, 0, 0, .79445],
                8211: [0, .45833, .03056, 0, .55],
                8212: [0, .45833, .03056, 0, 1.10001],
                8216: [0, .69444, 0, 0, .30556],
                8217: [0, .69444, 0, 0, .30556],
                8220: [0, .69444, 0, 0, .55834],
                8221: [0, .69444, 0, 0, .55834]
            },
            "SansSerif-Italic": {
                32: [0, 0, 0, 0, .25],
                33: [0, .69444, .05733, 0, .31945],
                34: [0, .69444, .00316, 0, .5],
                35: [.19444, .69444, .05087, 0, .83334],
                36: [.05556, .75, .11156, 0, .5],
                37: [.05556, .75, .03126, 0, .83334],
                38: [0, .69444, .03058, 0, .75834],
                39: [0, .69444, .07816, 0, .27778],
                40: [.25, .75, .13164, 0, .38889],
                41: [.25, .75, .02536, 0, .38889],
                42: [0, .75, .11775, 0, .5],
                43: [.08333, .58333, .02536, 0, .77778],
                44: [.125, .08333, 0, 0, .27778],
                45: [0, .44444, .01946, 0, .33333],
                46: [0, .08333, 0, 0, .27778],
                47: [.25, .75, .13164, 0, .5],
                48: [0, .65556, .11156, 0, .5],
                49: [0, .65556, .11156, 0, .5],
                50: [0, .65556, .11156, 0, .5],
                51: [0, .65556, .11156, 0, .5],
                52: [0, .65556, .11156, 0, .5],
                53: [0, .65556, .11156, 0, .5],
                54: [0, .65556, .11156, 0, .5],
                55: [0, .65556, .11156, 0, .5],
                56: [0, .65556, .11156, 0, .5],
                57: [0, .65556, .11156, 0, .5],
                58: [0, .44444, .02502, 0, .27778],
                59: [.125, .44444, .02502, 0, .27778],
                61: [-.13, .37, .05087, 0, .77778],
                63: [0, .69444, .11809, 0, .47222],
                64: [0, .69444, .07555, 0, .66667],
                65: [0, .69444, 0, 0, .66667],
                66: [0, .69444, .08293, 0, .66667],
                67: [0, .69444, .11983, 0, .63889],
                68: [0, .69444, .07555, 0, .72223],
                69: [0, .69444, .11983, 0, .59722],
                70: [0, .69444, .13372, 0, .56945],
                71: [0, .69444, .11983, 0, .66667],
                72: [0, .69444, .08094, 0, .70834],
                73: [0, .69444, .13372, 0, .27778],
                74: [0, .69444, .08094, 0, .47222],
                75: [0, .69444, .11983, 0, .69445],
                76: [0, .69444, 0, 0, .54167],
                77: [0, .69444, .08094, 0, .875],
                78: [0, .69444, .08094, 0, .70834],
                79: [0, .69444, .07555, 0, .73611],
                80: [0, .69444, .08293, 0, .63889],
                81: [.125, .69444, .07555, 0, .73611],
                82: [0, .69444, .08293, 0, .64584],
                83: [0, .69444, .09205, 0, .55556],
                84: [0, .69444, .13372, 0, .68056],
                85: [0, .69444, .08094, 0, .6875],
                86: [0, .69444, .1615, 0, .66667],
                87: [0, .69444, .1615, 0, .94445],
                88: [0, .69444, .13372, 0, .66667],
                89: [0, .69444, .17261, 0, .66667],
                90: [0, .69444, .11983, 0, .61111],
                91: [.25, .75, .15942, 0, .28889],
                93: [.25, .75, .08719, 0, .28889],
                94: [0, .69444, .0799, 0, .5],
                95: [.35, .09444, .08616, 0, .5],
                97: [0, .44444, .00981, 0, .48056],
                98: [0, .69444, .03057, 0, .51667],
                99: [0, .44444, .08336, 0, .44445],
                100: [0, .69444, .09483, 0, .51667],
                101: [0, .44444, .06778, 0, .44445],
                102: [0, .69444, .21705, 0, .30556],
                103: [.19444, .44444, .10836, 0, .5],
                104: [0, .69444, .01778, 0, .51667],
                105: [0, .67937, .09718, 0, .23889],
                106: [.19444, .67937, .09162, 0, .26667],
                107: [0, .69444, .08336, 0, .48889],
                108: [0, .69444, .09483, 0, .23889],
                109: [0, .44444, .01778, 0, .79445],
                110: [0, .44444, .01778, 0, .51667],
                111: [0, .44444, .06613, 0, .5],
                112: [.19444, .44444, .0389, 0, .51667],
                113: [.19444, .44444, .04169, 0, .51667],
                114: [0, .44444, .10836, 0, .34167],
                115: [0, .44444, .0778, 0, .38333],
                116: [0, .57143, .07225, 0, .36111],
                117: [0, .44444, .04169, 0, .51667],
                118: [0, .44444, .10836, 0, .46111],
                119: [0, .44444, .10836, 0, .68334],
                120: [0, .44444, .09169, 0, .46111],
                121: [.19444, .44444, .10836, 0, .46111],
                122: [0, .44444, .08752, 0, .43472],
                126: [.35, .32659, .08826, 0, .5],
                160: [0, 0, 0, 0, .25],
                168: [0, .67937, .06385, 0, .5],
                176: [0, .69444, 0, 0, .73752],
                184: [.17014, 0, 0, 0, .44445],
                305: [0, .44444, .04169, 0, .23889],
                567: [.19444, .44444, .04169, 0, .26667],
                710: [0, .69444, .0799, 0, .5],
                711: [0, .63194, .08432, 0, .5],
                713: [0, .60889, .08776, 0, .5],
                714: [0, .69444, .09205, 0, .5],
                715: [0, .69444, 0, 0, .5],
                728: [0, .69444, .09483, 0, .5],
                729: [0, .67937, .07774, 0, .27778],
                730: [0, .69444, 0, 0, .73752],
                732: [0, .67659, .08826, 0, .5],
                733: [0, .69444, .09205, 0, .5],
                915: [0, .69444, .13372, 0, .54167],
                916: [0, .69444, 0, 0, .83334],
                920: [0, .69444, .07555, 0, .77778],
                923: [0, .69444, 0, 0, .61111],
                926: [0, .69444, .12816, 0, .66667],
                928: [0, .69444, .08094, 0, .70834],
                931: [0, .69444, .11983, 0, .72222],
                933: [0, .69444, .09031, 0, .77778],
                934: [0, .69444, .04603, 0, .72222],
                936: [0, .69444, .09031, 0, .77778],
                937: [0, .69444, .08293, 0, .72222],
                8211: [0, .44444, .08616, 0, .5],
                8212: [0, .44444, .08616, 0, 1],
                8216: [0, .69444, .07816, 0, .27778],
                8217: [0, .69444, .07816, 0, .27778],
                8220: [0, .69444, .14205, 0, .5],
                8221: [0, .69444, .00316, 0, .5]
            },
            "SansSerif-Regular": {
                32: [0, 0, 0, 0, .25],
                33: [0, .69444, 0, 0, .31945],
                34: [0, .69444, 0, 0, .5],
                35: [.19444, .69444, 0, 0, .83334],
                36: [.05556, .75, 0, 0, .5],
                37: [.05556, .75, 0, 0, .83334],
                38: [0, .69444, 0, 0, .75834],
                39: [0, .69444, 0, 0, .27778],
                40: [.25, .75, 0, 0, .38889],
                41: [.25, .75, 0, 0, .38889],
                42: [0, .75, 0, 0, .5],
                43: [.08333, .58333, 0, 0, .77778],
                44: [.125, .08333, 0, 0, .27778],
                45: [0, .44444, 0, 0, .33333],
                46: [0, .08333, 0, 0, .27778],
                47: [.25, .75, 0, 0, .5],
                48: [0, .65556, 0, 0, .5],
                49: [0, .65556, 0, 0, .5],
                50: [0, .65556, 0, 0, .5],
                51: [0, .65556, 0, 0, .5],
                52: [0, .65556, 0, 0, .5],
                53: [0, .65556, 0, 0, .5],
                54: [0, .65556, 0, 0, .5],
                55: [0, .65556, 0, 0, .5],
                56: [0, .65556, 0, 0, .5],
                57: [0, .65556, 0, 0, .5],
                58: [0, .44444, 0, 0, .27778],
                59: [.125, .44444, 0, 0, .27778],
                61: [-.13, .37, 0, 0, .77778],
                63: [0, .69444, 0, 0, .47222],
                64: [0, .69444, 0, 0, .66667],
                65: [0, .69444, 0, 0, .66667],
                66: [0, .69444, 0, 0, .66667],
                67: [0, .69444, 0, 0, .63889],
                68: [0, .69444, 0, 0, .72223],
                69: [0, .69444, 0, 0, .59722],
                70: [0, .69444, 0, 0, .56945],
                71: [0, .69444, 0, 0, .66667],
                72: [0, .69444, 0, 0, .70834],
                73: [0, .69444, 0, 0, .27778],
                74: [0, .69444, 0, 0, .47222],
                75: [0, .69444, 0, 0, .69445],
                76: [0, .69444, 0, 0, .54167],
                77: [0, .69444, 0, 0, .875],
                78: [0, .69444, 0, 0, .70834],
                79: [0, .69444, 0, 0, .73611],
                80: [0, .69444, 0, 0, .63889],
                81: [.125, .69444, 0, 0, .73611],
                82: [0, .69444, 0, 0, .64584],
                83: [0, .69444, 0, 0, .55556],
                84: [0, .69444, 0, 0, .68056],
                85: [0, .69444, 0, 0, .6875],
                86: [0, .69444, .01389, 0, .66667],
                87: [0, .69444, .01389, 0, .94445],
                88: [0, .69444, 0, 0, .66667],
                89: [0, .69444, .025, 0, .66667],
                90: [0, .69444, 0, 0, .61111],
                91: [.25, .75, 0, 0, .28889],
                93: [.25, .75, 0, 0, .28889],
                94: [0, .69444, 0, 0, .5],
                95: [.35, .09444, .02778, 0, .5],
                97: [0, .44444, 0, 0, .48056],
                98: [0, .69444, 0, 0, .51667],
                99: [0, .44444, 0, 0, .44445],
                100: [0, .69444, 0, 0, .51667],
                101: [0, .44444, 0, 0, .44445],
                102: [0, .69444, .06944, 0, .30556],
                103: [.19444, .44444, .01389, 0, .5],
                104: [0, .69444, 0, 0, .51667],
                105: [0, .67937, 0, 0, .23889],
                106: [.19444, .67937, 0, 0, .26667],
                107: [0, .69444, 0, 0, .48889],
                108: [0, .69444, 0, 0, .23889],
                109: [0, .44444, 0, 0, .79445],
                110: [0, .44444, 0, 0, .51667],
                111: [0, .44444, 0, 0, .5],
                112: [.19444, .44444, 0, 0, .51667],
                113: [.19444, .44444, 0, 0, .51667],
                114: [0, .44444, .01389, 0, .34167],
                115: [0, .44444, 0, 0, .38333],
                116: [0, .57143, 0, 0, .36111],
                117: [0, .44444, 0, 0, .51667],
                118: [0, .44444, .01389, 0, .46111],
                119: [0, .44444, .01389, 0, .68334],
                120: [0, .44444, 0, 0, .46111],
                121: [.19444, .44444, .01389, 0, .46111],
                122: [0, .44444, 0, 0, .43472],
                126: [.35, .32659, 0, 0, .5],
                160: [0, 0, 0, 0, .25],
                168: [0, .67937, 0, 0, .5],
                176: [0, .69444, 0, 0, .66667],
                184: [.17014, 0, 0, 0, .44445],
                305: [0, .44444, 0, 0, .23889],
                567: [.19444, .44444, 0, 0, .26667],
                710: [0, .69444, 0, 0, .5],
                711: [0, .63194, 0, 0, .5],
                713: [0, .60889, 0, 0, .5],
                714: [0, .69444, 0, 0, .5],
                715: [0, .69444, 0, 0, .5],
                728: [0, .69444, 0, 0, .5],
                729: [0, .67937, 0, 0, .27778],
                730: [0, .69444, 0, 0, .66667],
                732: [0, .67659, 0, 0, .5],
                733: [0, .69444, 0, 0, .5],
                915: [0, .69444, 0, 0, .54167],
                916: [0, .69444, 0, 0, .83334],
                920: [0, .69444, 0, 0, .77778],
                923: [0, .69444, 0, 0, .61111],
                926: [0, .69444, 0, 0, .66667],
                928: [0, .69444, 0, 0, .70834],
                931: [0, .69444, 0, 0, .72222],
                933: [0, .69444, 0, 0, .77778],
                934: [0, .69444, 0, 0, .72222],
                936: [0, .69444, 0, 0, .77778],
                937: [0, .69444, 0, 0, .72222],
                8211: [0, .44444, .02778, 0, .5],
                8212: [0, .44444, .02778, 0, 1],
                8216: [0, .69444, 0, 0, .27778],
                8217: [0, .69444, 0, 0, .27778],
                8220: [0, .69444, 0, 0, .5],
                8221: [0, .69444, 0, 0, .5]
            },
            "Script-Regular": {
                32: [0, 0, 0, 0, .25],
                65: [0, .7, .22925, 0, .80253],
                66: [0, .7, .04087, 0, .90757],
                67: [0, .7, .1689, 0, .66619],
                68: [0, .7, .09371, 0, .77443],
                69: [0, .7, .18583, 0, .56162],
                70: [0, .7, .13634, 0, .89544],
                71: [0, .7, .17322, 0, .60961],
                72: [0, .7, .29694, 0, .96919],
                73: [0, .7, .19189, 0, .80907],
                74: [.27778, .7, .19189, 0, 1.05159],
                75: [0, .7, .31259, 0, .91364],
                76: [0, .7, .19189, 0, .87373],
                77: [0, .7, .15981, 0, 1.08031],
                78: [0, .7, .3525, 0, .9015],
                79: [0, .7, .08078, 0, .73787],
                80: [0, .7, .08078, 0, 1.01262],
                81: [0, .7, .03305, 0, .88282],
                82: [0, .7, .06259, 0, .85],
                83: [0, .7, .19189, 0, .86767],
                84: [0, .7, .29087, 0, .74697],
                85: [0, .7, .25815, 0, .79996],
                86: [0, .7, .27523, 0, .62204],
                87: [0, .7, .27523, 0, .80532],
                88: [0, .7, .26006, 0, .94445],
                89: [0, .7, .2939, 0, .70961],
                90: [0, .7, .24037, 0, .8212],
                160: [0, 0, 0, 0, .25]
            },
            "Size1-Regular": {
                32: [0, 0, 0, 0, .25],
                40: [.35001, .85, 0, 0, .45834],
                41: [.35001, .85, 0, 0, .45834],
                47: [.35001, .85, 0, 0, .57778],
                91: [.35001, .85, 0, 0, .41667],
                92: [.35001, .85, 0, 0, .57778],
                93: [.35001, .85, 0, 0, .41667],
                123: [.35001, .85, 0, 0, .58334],
                125: [.35001, .85, 0, 0, .58334],
                160: [0, 0, 0, 0, .25],
                710: [0, .72222, 0, 0, .55556],
                732: [0, .72222, 0, 0, .55556],
                770: [0, .72222, 0, 0, .55556],
                771: [0, .72222, 0, 0, .55556],
                8214: [-99e-5, .601, 0, 0, .77778],
                8593: [1e-5, .6, 0, 0, .66667],
                8595: [1e-5, .6, 0, 0, .66667],
                8657: [1e-5, .6, 0, 0, .77778],
                8659: [1e-5, .6, 0, 0, .77778],
                8719: [.25001, .75, 0, 0, .94445],
                8720: [.25001, .75, 0, 0, .94445],
                8721: [.25001, .75, 0, 0, 1.05556],
                8730: [.35001, .85, 0, 0, 1],
                8739: [-.00599, .606, 0, 0, .33333],
                8741: [-.00599, .606, 0, 0, .55556],
                8747: [.30612, .805, .19445, 0, .47222],
                8748: [.306, .805, .19445, 0, .47222],
                8749: [.306, .805, .19445, 0, .47222],
                8750: [.30612, .805, .19445, 0, .47222],
                8896: [.25001, .75, 0, 0, .83334],
                8897: [.25001, .75, 0, 0, .83334],
                8898: [.25001, .75, 0, 0, .83334],
                8899: [.25001, .75, 0, 0, .83334],
                8968: [.35001, .85, 0, 0, .47222],
                8969: [.35001, .85, 0, 0, .47222],
                8970: [.35001, .85, 0, 0, .47222],
                8971: [.35001, .85, 0, 0, .47222],
                9168: [-99e-5, .601, 0, 0, .66667],
                10216: [.35001, .85, 0, 0, .47222],
                10217: [.35001, .85, 0, 0, .47222],
                10752: [.25001, .75, 0, 0, 1.11111],
                10753: [.25001, .75, 0, 0, 1.11111],
                10754: [.25001, .75, 0, 0, 1.11111],
                10756: [.25001, .75, 0, 0, .83334],
                10758: [.25001, .75, 0, 0, .83334]
            },
            "Size2-Regular": {
                32: [0, 0, 0, 0, .25],
                40: [.65002, 1.15, 0, 0, .59722],
                41: [.65002, 1.15, 0, 0, .59722],
                47: [.65002, 1.15, 0, 0, .81111],
                91: [.65002, 1.15, 0, 0, .47222],
                92: [.65002, 1.15, 0, 0, .81111],
                93: [.65002, 1.15, 0, 0, .47222],
                123: [.65002, 1.15, 0, 0, .66667],
                125: [.65002, 1.15, 0, 0, .66667],
                160: [0, 0, 0, 0, .25],
                710: [0, .75, 0, 0, 1],
                732: [0, .75, 0, 0, 1],
                770: [0, .75, 0, 0, 1],
                771: [0, .75, 0, 0, 1],
                8719: [.55001, 1.05, 0, 0, 1.27778],
                8720: [.55001, 1.05, 0, 0, 1.27778],
                8721: [.55001, 1.05, 0, 0, 1.44445],
                8730: [.65002, 1.15, 0, 0, 1],
                8747: [.86225, 1.36, .44445, 0, .55556],
                8748: [.862, 1.36, .44445, 0, .55556],
                8749: [.862, 1.36, .44445, 0, .55556],
                8750: [.86225, 1.36, .44445, 0, .55556],
                8896: [.55001, 1.05, 0, 0, 1.11111],
                8897: [.55001, 1.05, 0, 0, 1.11111],
                8898: [.55001, 1.05, 0, 0, 1.11111],
                8899: [.55001, 1.05, 0, 0, 1.11111],
                8968: [.65002, 1.15, 0, 0, .52778],
                8969: [.65002, 1.15, 0, 0, .52778],
                8970: [.65002, 1.15, 0, 0, .52778],
                8971: [.65002, 1.15, 0, 0, .52778],
                10216: [.65002, 1.15, 0, 0, .61111],
                10217: [.65002, 1.15, 0, 0, .61111],
                10752: [.55001, 1.05, 0, 0, 1.51112],
                10753: [.55001, 1.05, 0, 0, 1.51112],
                10754: [.55001, 1.05, 0, 0, 1.51112],
                10756: [.55001, 1.05, 0, 0, 1.11111],
                10758: [.55001, 1.05, 0, 0, 1.11111]
            },
            "Size3-Regular": {
                32: [0, 0, 0, 0, .25],
                40: [.95003, 1.45, 0, 0, .73611],
                41: [.95003, 1.45, 0, 0, .73611],
                47: [.95003, 1.45, 0, 0, 1.04445],
                91: [.95003, 1.45, 0, 0, .52778],
                92: [.95003, 1.45, 0, 0, 1.04445],
                93: [.95003, 1.45, 0, 0, .52778],
                123: [.95003, 1.45, 0, 0, .75],
                125: [.95003, 1.45, 0, 0, .75],
                160: [0, 0, 0, 0, .25],
                710: [0, .75, 0, 0, 1.44445],
                732: [0, .75, 0, 0, 1.44445],
                770: [0, .75, 0, 0, 1.44445],
                771: [0, .75, 0, 0, 1.44445],
                8730: [.95003, 1.45, 0, 0, 1],
                8968: [.95003, 1.45, 0, 0, .58334],
                8969: [.95003, 1.45, 0, 0, .58334],
                8970: [.95003, 1.45, 0, 0, .58334],
                8971: [.95003, 1.45, 0, 0, .58334],
                10216: [.95003, 1.45, 0, 0, .75],
                10217: [.95003, 1.45, 0, 0, .75]
            },
            "Size4-Regular": {
                32: [0, 0, 0, 0, .25],
                40: [1.25003, 1.75, 0, 0, .79167],
                41: [1.25003, 1.75, 0, 0, .79167],
                47: [1.25003, 1.75, 0, 0, 1.27778],
                91: [1.25003, 1.75, 0, 0, .58334],
                92: [1.25003, 1.75, 0, 0, 1.27778],
                93: [1.25003, 1.75, 0, 0, .58334],
                123: [1.25003, 1.75, 0, 0, .80556],
                125: [1.25003, 1.75, 0, 0, .80556],
                160: [0, 0, 0, 0, .25],
                710: [0, .825, 0, 0, 1.8889],
                732: [0, .825, 0, 0, 1.8889],
                770: [0, .825, 0, 0, 1.8889],
                771: [0, .825, 0, 0, 1.8889],
                8730: [1.25003, 1.75, 0, 0, 1],
                8968: [1.25003, 1.75, 0, 0, .63889],
                8969: [1.25003, 1.75, 0, 0, .63889],
                8970: [1.25003, 1.75, 0, 0, .63889],
                8971: [1.25003, 1.75, 0, 0, .63889],
                9115: [.64502, 1.155, 0, 0, .875],
                9116: [1e-5, .6, 0, 0, .875],
                9117: [.64502, 1.155, 0, 0, .875],
                9118: [.64502, 1.155, 0, 0, .875],
                9119: [1e-5, .6, 0, 0, .875],
                9120: [.64502, 1.155, 0, 0, .875],
                9121: [.64502, 1.155, 0, 0, .66667],
                9122: [-99e-5, .601, 0, 0, .66667],
                9123: [.64502, 1.155, 0, 0, .66667],
                9124: [.64502, 1.155, 0, 0, .66667],
                9125: [-99e-5, .601, 0, 0, .66667],
                9126: [.64502, 1.155, 0, 0, .66667],
                9127: [1e-5, .9, 0, 0, .88889],
                9128: [.65002, 1.15, 0, 0, .88889],
                9129: [.90001, 0, 0, 0, .88889],
                9130: [0, .3, 0, 0, .88889],
                9131: [1e-5, .9, 0, 0, .88889],
                9132: [.65002, 1.15, 0, 0, .88889],
                9133: [.90001, 0, 0, 0, .88889],
                9143: [.88502, .915, 0, 0, 1.05556],
                10216: [1.25003, 1.75, 0, 0, .80556],
                10217: [1.25003, 1.75, 0, 0, .80556],
                57344: [-.00499, .605, 0, 0, 1.05556],
                57345: [-.00499, .605, 0, 0, 1.05556],
                57680: [0, .12, 0, 0, .45],
                57681: [0, .12, 0, 0, .45],
                57682: [0, .12, 0, 0, .45],
                57683: [0, .12, 0, 0, .45]
            },
            "Typewriter-Regular": {
                32: [0, 0, 0, 0, .525],
                33: [0, .61111, 0, 0, .525],
                34: [0, .61111, 0, 0, .525],
                35: [0, .61111, 0, 0, .525],
                36: [.08333, .69444, 0, 0, .525],
                37: [.08333, .69444, 0, 0, .525],
                38: [0, .61111, 0, 0, .525],
                39: [0, .61111, 0, 0, .525],
                40: [.08333, .69444, 0, 0, .525],
                41: [.08333, .69444, 0, 0, .525],
                42: [0, .52083, 0, 0, .525],
                43: [-.08056, .53055, 0, 0, .525],
                44: [.13889, .125, 0, 0, .525],
                45: [-.08056, .53055, 0, 0, .525],
                46: [0, .125, 0, 0, .525],
                47: [.08333, .69444, 0, 0, .525],
                48: [0, .61111, 0, 0, .525],
                49: [0, .61111, 0, 0, .525],
                50: [0, .61111, 0, 0, .525],
                51: [0, .61111, 0, 0, .525],
                52: [0, .61111, 0, 0, .525],
                53: [0, .61111, 0, 0, .525],
                54: [0, .61111, 0, 0, .525],
                55: [0, .61111, 0, 0, .525],
                56: [0, .61111, 0, 0, .525],
                57: [0, .61111, 0, 0, .525],
                58: [0, .43056, 0, 0, .525],
                59: [.13889, .43056, 0, 0, .525],
                60: [-.05556, .55556, 0, 0, .525],
                61: [-.19549, .41562, 0, 0, .525],
                62: [-.05556, .55556, 0, 0, .525],
                63: [0, .61111, 0, 0, .525],
                64: [0, .61111, 0, 0, .525],
                65: [0, .61111, 0, 0, .525],
                66: [0, .61111, 0, 0, .525],
                67: [0, .61111, 0, 0, .525],
                68: [0, .61111, 0, 0, .525],
                69: [0, .61111, 0, 0, .525],
                70: [0, .61111, 0, 0, .525],
                71: [0, .61111, 0, 0, .525],
                72: [0, .61111, 0, 0, .525],
                73: [0, .61111, 0, 0, .525],
                74: [0, .61111, 0, 0, .525],
                75: [0, .61111, 0, 0, .525],
                76: [0, .61111, 0, 0, .525],
                77: [0, .61111, 0, 0, .525],
                78: [0, .61111, 0, 0, .525],
                79: [0, .61111, 0, 0, .525],
                80: [0, .61111, 0, 0, .525],
                81: [.13889, .61111, 0, 0, .525],
                82: [0, .61111, 0, 0, .525],
                83: [0, .61111, 0, 0, .525],
                84: [0, .61111, 0, 0, .525],
                85: [0, .61111, 0, 0, .525],
                86: [0, .61111, 0, 0, .525],
                87: [0, .61111, 0, 0, .525],
                88: [0, .61111, 0, 0, .525],
                89: [0, .61111, 0, 0, .525],
                90: [0, .61111, 0, 0, .525],
                91: [.08333, .69444, 0, 0, .525],
                92: [.08333, .69444, 0, 0, .525],
                93: [.08333, .69444, 0, 0, .525],
                94: [0, .61111, 0, 0, .525],
                95: [.09514, 0, 0, 0, .525],
                96: [0, .61111, 0, 0, .525],
                97: [0, .43056, 0, 0, .525],
                98: [0, .61111, 0, 0, .525],
                99: [0, .43056, 0, 0, .525],
                100: [0, .61111, 0, 0, .525],
                101: [0, .43056, 0, 0, .525],
                102: [0, .61111, 0, 0, .525],
                103: [.22222, .43056, 0, 0, .525],
                104: [0, .61111, 0, 0, .525],
                105: [0, .61111, 0, 0, .525],
                106: [.22222, .61111, 0, 0, .525],
                107: [0, .61111, 0, 0, .525],
                108: [0, .61111, 0, 0, .525],
                109: [0, .43056, 0, 0, .525],
                110: [0, .43056, 0, 0, .525],
                111: [0, .43056, 0, 0, .525],
                112: [.22222, .43056, 0, 0, .525],
                113: [.22222, .43056, 0, 0, .525],
                114: [0, .43056, 0, 0, .525],
                115: [0, .43056, 0, 0, .525],
                116: [0, .55358, 0, 0, .525],
                117: [0, .43056, 0, 0, .525],
                118: [0, .43056, 0, 0, .525],
                119: [0, .43056, 0, 0, .525],
                120: [0, .43056, 0, 0, .525],
                121: [.22222, .43056, 0, 0, .525],
                122: [0, .43056, 0, 0, .525],
                123: [.08333, .69444, 0, 0, .525],
                124: [.08333, .69444, 0, 0, .525],
                125: [.08333, .69444, 0, 0, .525],
                126: [0, .61111, 0, 0, .525],
                127: [0, .61111, 0, 0, .525],
                160: [0, 0, 0, 0, .525],
                176: [0, .61111, 0, 0, .525],
                184: [.19445, 0, 0, 0, .525],
                305: [0, .43056, 0, 0, .525],
                567: [.22222, .43056, 0, 0, .525],
                711: [0, .56597, 0, 0, .525],
                713: [0, .56555, 0, 0, .525],
                714: [0, .61111, 0, 0, .525],
                715: [0, .61111, 0, 0, .525],
                728: [0, .61111, 0, 0, .525],
                730: [0, .61111, 0, 0, .525],
                770: [0, .61111, 0, 0, .525],
                771: [0, .61111, 0, 0, .525],
                776: [0, .61111, 0, 0, .525],
                915: [0, .61111, 0, 0, .525],
                916: [0, .61111, 0, 0, .525],
                920: [0, .61111, 0, 0, .525],
                923: [0, .61111, 0, 0, .525],
                926: [0, .61111, 0, 0, .525],
                928: [0, .61111, 0, 0, .525],
                931: [0, .61111, 0, 0, .525],
                933: [0, .61111, 0, 0, .525],
                934: [0, .61111, 0, 0, .525],
                936: [0, .61111, 0, 0, .525],
                937: [0, .61111, 0, 0, .525],
                8216: [0, .61111, 0, 0, .525],
                8217: [0, .61111, 0, 0, .525],
                8242: [0, .61111, 0, 0, .525],
                9251: [.11111, .21944, 0, 0, .525]
            }
        }
          , L = {
            slant: [.25, .25, .25],
            space: [0, 0, 0],
            stretch: [0, 0, 0],
            shrink: [0, 0, 0],
            xHeight: [.431, .431, .431],
            quad: [1, 1.171, 1.472],
            extraSpace: [0, 0, 0],
            num1: [.677, .732, .925],
            num2: [.394, .384, .387],
            num3: [.444, .471, .504],
            denom1: [.686, .752, 1.025],
            denom2: [.345, .344, .532],
            sup1: [.413, .503, .504],
            sup2: [.363, .431, .404],
            sup3: [.289, .286, .294],
            sub1: [.15, .143, .2],
            sub2: [.247, .286, .4],
            supDrop: [.386, .353, .494],
            subDrop: [.05, .071, .1],
            delim1: [2.39, 1.7, 1.98],
            delim2: [1.01, 1.157, 1.42],
            axisHeight: [.25, .25, .25],
            defaultRuleThickness: [.04, .049, .049],
            bigOpSpacing1: [.111, .111, .111],
            bigOpSpacing2: [.166, .166, .166],
            bigOpSpacing3: [.2, .2, .2],
            bigOpSpacing4: [.6, .611, .611],
            bigOpSpacing5: [.1, .143, .143],
            sqrtRuleThickness: [.04, .04, .04],
            ptPerEm: [10, 10, 10],
            doubleRuleSep: [.2, .2, .2],
            arrayRuleWidth: [.04, .04, .04],
            fboxsep: [.3, .3, .3],
            fboxrule: [.04, .04, .04]
        }
          , D = {
            Å: "A",
            Ð: "D",
            Þ: "o",
            å: "a",
            ð: "d",
            þ: "o",
            А: "A",
            Б: "B",
            В: "B",
            Г: "F",
            Д: "A",
            Е: "E",
            Ж: "K",
            З: "3",
            И: "N",
            Й: "N",
            К: "K",
            Л: "N",
            М: "M",
            Н: "H",
            О: "O",
            П: "N",
            Р: "P",
            С: "C",
            Т: "T",
            У: "y",
            Ф: "O",
            Х: "X",
            Ц: "U",
            Ч: "h",
            Ш: "W",
            Щ: "W",
            Ъ: "B",
            Ы: "X",
            Ь: "B",
            Э: "3",
            Ю: "X",
            Я: "R",
            а: "a",
            б: "b",
            в: "a",
            г: "r",
            д: "y",
            е: "e",
            ж: "m",
            з: "e",
            и: "n",
            й: "n",
            к: "n",
            л: "n",
            м: "m",
            н: "n",
            о: "o",
            п: "n",
            р: "p",
            с: "c",
            т: "o",
            у: "y",
            ф: "b",
            х: "x",
            ц: "n",
            ч: "n",
            ш: "w",
            щ: "w",
            ъ: "a",
            ы: "m",
            ь: "a",
            э: "e",
            ю: "m",
            я: "r"
        };
        function F(e, t, n) {
            if (!O[t])
                throw new Error("Font metrics not found for font: " + t + ".");
            var r = e.charCodeAt(0)
              , i = O[t][r];
            if (!i && e[0]in D && (r = D[e[0]].charCodeAt(0),
            i = O[t][r]),
            i || "text" !== n || I(r) && (i = O[t][77]),
            i)
                return {
                    depth: i[0],
                    height: i[1],
                    italic: i[2],
                    skew: i[3],
                    width: i[4]
                }
        }
        var z = {};
        var B = [[1, 1, 1], [2, 1, 1], [3, 1, 1], [4, 2, 1], [5, 2, 1], [6, 3, 1], [7, 4, 2], [8, 6, 3], [9, 7, 6], [10, 8, 7], [11, 10, 9]]
          , q = [.5, .6, .7, .8, .9, 1, 1.2, 1.44, 1.728, 2.074, 2.488]
          , H = function(e, t) {
            return t.size < 2 ? e : B[e - 1][t.size - 1]
        };
        class U {
            constructor(e) {
                this.style = void 0,
                this.color = void 0,
                this.size = void 0,
                this.textSize = void 0,
                this.phantom = void 0,
                this.font = void 0,
                this.fontFamily = void 0,
                this.fontWeight = void 0,
                this.fontShape = void 0,
                this.sizeMultiplier = void 0,
                this.maxSize = void 0,
                this.minRuleThickness = void 0,
                this._fontMetrics = void 0,
                this.style = e.style,
                this.color = e.color,
                this.size = e.size || U.BASESIZE,
                this.textSize = e.textSize || this.size,
                this.phantom = !!e.phantom,
                this.font = e.font || "",
                this.fontFamily = e.fontFamily || "",
                this.fontWeight = e.fontWeight || "",
                this.fontShape = e.fontShape || "",
                this.sizeMultiplier = q[this.size - 1],
                this.maxSize = e.maxSize,
                this.minRuleThickness = e.minRuleThickness,
                this._fontMetrics = void 0
            }
            extend(e) {
                var t = {
                    style: this.style,
                    size: this.size,
                    textSize: this.textSize,
                    color: this.color,
                    phantom: this.phantom,
                    font: this.font,
                    fontFamily: this.fontFamily,
                    fontWeight: this.fontWeight,
                    fontShape: this.fontShape,
                    maxSize: this.maxSize,
                    minRuleThickness: this.minRuleThickness
                };
                for (var n in e)
                    e.hasOwnProperty(n) && (t[n] = e[n]);
                return new U(t)
            }
            havingStyle(e) {
                return this.style === e ? this : this.extend({
                    style: e,
                    size: H(this.textSize, e)
                })
            }
            havingCrampedStyle() {
                return this.havingStyle(this.style.cramp())
            }
            havingSize(e) {
                return this.size === e && this.textSize === e ? this : this.extend({
                    style: this.style.text(),
                    size: e,
                    textSize: e,
                    sizeMultiplier: q[e - 1]
                })
            }
            havingBaseStyle(e) {
                e = e || this.style.text();
                var t = H(U.BASESIZE, e);
                return this.size === t && this.textSize === U.BASESIZE && this.style === e ? this : this.extend({
                    style: e,
                    size: t
                })
            }
            havingBaseSizing() {
                var e;
                switch (this.style.id) {
                case 4:
                case 5:
                    e = 3;
                    break;
                case 6:
                case 7:
                    e = 1;
                    break;
                default:
                    e = 6
                }
                return this.extend({
                    style: this.style.text(),
                    size: e
                })
            }
            withColor(e) {
                return this.extend({
                    color: e
                })
            }
            withPhantom() {
                return this.extend({
                    phantom: !0
                })
            }
            withFont(e) {
                return this.extend({
                    font: e
                })
            }
            withTextFontFamily(e) {
                return this.extend({
                    fontFamily: e,
                    font: ""
                })
            }
            withTextFontWeight(e) {
                return this.extend({
                    fontWeight: e,
                    font: ""
                })
            }
            withTextFontShape(e) {
                return this.extend({
                    fontShape: e,
                    font: ""
                })
            }
            sizingClasses(e) {
                return e.size !== this.size ? ["sizing", "reset-size" + e.size, "size" + this.size] : []
            }
            baseSizingClasses() {
                return this.size !== U.BASESIZE ? ["sizing", "reset-size" + this.size, "size" + U.BASESIZE] : []
            }
            fontMetrics() {
                return this._fontMetrics || (this._fontMetrics = function(e) {
                    var t;
                    if (!z[t = e >= 5 ? 0 : e >= 3 ? 1 : 2]) {
                        var n = z[t] = {
                            cssEmPerMu: L.quad[t] / 18
                        };
                        for (var r in L)
                            L.hasOwnProperty(r) && (n[r] = L[r][t])
                    }
                    return z[t]
                }(this.size)),
                this._fontMetrics
            }
            getColor() {
                return this.phantom ? "transparent" : this.color
            }
        }
        U.BASESIZE = 6;
        var G = {
            pt: 1,
            mm: 7227 / 2540,
            cm: 7227 / 254,
            in: 72.27,
            bp: 1.00375,
            pc: 12,
            dd: 1238 / 1157,
            cc: 14856 / 1157,
            nd: 685 / 642,
            nc: 1370 / 107,
            sp: 1 / 65536,
            px: 1.00375
        }
          , W = {
            ex: !0,
            em: !0,
            mu: !0
        }
          , V = function(e) {
            return "string" != typeof e && (e = e.unit),
            e in G || e in W || "ex" === e
        }
          , $ = function(e, t) {
            var n;
            if (e.unit in G)
                n = G[e.unit] / t.fontMetrics().ptPerEm / t.sizeMultiplier;
            else if ("mu" === e.unit)
                n = t.fontMetrics().cssEmPerMu;
            else {
                var r;
                if (r = t.style.isTight() ? t.havingStyle(t.style.text()) : t,
                "ex" === e.unit)
                    n = r.fontMetrics().xHeight;
                else {
                    if ("em" !== e.unit)
                        throw new d("Invalid unit: '" + e.unit + "'");
                    n = r.fontMetrics().quad
                }
                r !== t && (n *= r.sizeMultiplier / t.sizeMultiplier)
            }
            return Math.min(e.number * n, t.maxSize)
        }
          , j = function(e) {
            return +e.toFixed(4) + "em"
        }
          , K = function(e) {
            return e.filter((e => e)).join(" ")
        }
          , Z = function(e, t, n) {
            if (this.classes = e || [],
            this.attributes = {},
            this.height = 0,
            this.depth = 0,
            this.maxFontSize = 0,
            this.style = n || {},
            t) {
                t.style.isTight() && this.classes.push("mtight");
                var r = t.getColor();
                r && (this.style.color = r)
            }
        }
          , Y = function(e) {
            var t = document.createElement(e);
            for (var n in t.className = K(this.classes),
            this.style)
                this.style.hasOwnProperty(n) && (t.style[n] = this.style[n]);
            for (var r in this.attributes)
                this.attributes.hasOwnProperty(r) && t.setAttribute(r, this.attributes[r]);
            for (var i = 0; i < this.children.length; i++)
                t.appendChild(this.children[i].toNode());
            return t
        }
          , X = function(e) {
            var t = "<" + e;
            this.classes.length && (t += ' class="' + y.escape(K(this.classes)) + '"');
            var n = "";
            for (var r in this.style)
                this.style.hasOwnProperty(r) && (n += y.hyphenate(r) + ":" + this.style[r] + ";");
            for (var i in n && (t += ' style="' + y.escape(n) + '"'),
            this.attributes)
                this.attributes.hasOwnProperty(i) && (t += " " + i + '="' + y.escape(this.attributes[i]) + '"');
            t += ">";
            for (var s = 0; s < this.children.length; s++)
                t += this.children[s].toMarkup();
            return t += "</" + e + ">"
        };
        class J {
            constructor(e, t, n, r) {
                this.children = void 0,
                this.attributes = void 0,
                this.classes = void 0,
                this.height = void 0,
                this.depth = void 0,
                this.width = void 0,
                this.maxFontSize = void 0,
                this.style = void 0,
                Z.call(this, e, n, r),
                this.children = t || []
            }
            setAttribute(e, t) {
                this.attributes[e] = t
            }
            hasClass(e) {
                return y.contains(this.classes, e)
            }
            toNode() {
                return Y.call(this, "span")
            }
            toMarkup() {
                return X.call(this, "span")
            }
        }
        class Q {
            constructor(e, t, n, r) {
                this.children = void 0,
                this.attributes = void 0,
                this.classes = void 0,
                this.height = void 0,
                this.depth = void 0,
                this.maxFontSize = void 0,
                this.style = void 0,
                Z.call(this, t, r),
                this.children = n || [],
                this.setAttribute("href", e)
            }
            setAttribute(e, t) {
                this.attributes[e] = t
            }
            hasClass(e) {
                return y.contains(this.classes, e)
            }
            toNode() {
                return Y.call(this, "a")
            }
            toMarkup() {
                return X.call(this, "a")
            }
        }
        class ee {
            constructor(e, t, n) {
                this.src = void 0,
                this.alt = void 0,
                this.classes = void 0,
                this.height = void 0,
                this.depth = void 0,
                this.maxFontSize = void 0,
                this.style = void 0,
                this.alt = t,
                this.src = e,
                this.classes = ["mord"],
                this.style = n
            }
            hasClass(e) {
                return y.contains(this.classes, e)
            }
            toNode() {
                var e = document.createElement("img");
                for (var t in e.src = this.src,
                e.alt = this.alt,
                e.className = "mord",
                this.style)
                    this.style.hasOwnProperty(t) && (e.style[t] = this.style[t]);
                return e
            }
            toMarkup() {
                var e = "<img  src='" + this.src + " 'alt='" + this.alt + "' "
                  , t = "";
                for (var n in this.style)
                    this.style.hasOwnProperty(n) && (t += y.hyphenate(n) + ":" + this.style[n] + ";");
                return t && (e += ' style="' + y.escape(t) + '"'),
                e += "'/>"
            }
        }
        var te = {
            î: "ı̂",
            ï: "ı̈",
            í: "ı́",
            ì: "ı̀"
        };
        class ne {
            constructor(e, t, n, r, i, s, o, a) {
                this.text = void 0,
                this.height = void 0,
                this.depth = void 0,
                this.italic = void 0,
                this.skew = void 0,
                this.width = void 0,
                this.maxFontSize = void 0,
                this.classes = void 0,
                this.style = void 0,
                this.text = e,
                this.height = t || 0,
                this.depth = n || 0,
                this.italic = r || 0,
                this.skew = i || 0,
                this.width = s || 0,
                this.classes = o || [],
                this.style = a || {},
                this.maxFontSize = 0;
                var l = function(e) {
                    for (var t = 0; t < _.length; t++)
                        for (var n = _[t], r = 0; r < n.blocks.length; r++) {
                            var i = n.blocks[r];
                            if (e >= i[0] && e <= i[1])
                                return n.name
                        }
                    return null
                }(this.text.charCodeAt(0));
                l && this.classes.push(l + "_fallback"),
                /[îïíì]/.test(this.text) && (this.text = te[this.text])
            }
            hasClass(e) {
                return y.contains(this.classes, e)
            }
            toNode() {
                var e = document.createTextNode(this.text)
                  , t = null;
                for (var n in this.italic > 0 && ((t = document.createElement("span")).style.marginRight = j(this.italic)),
                this.classes.length > 0 && ((t = t || document.createElement("span")).className = K(this.classes)),
                this.style)
                    this.style.hasOwnProperty(n) && ((t = t || document.createElement("span")).style[n] = this.style[n]);
                return t ? (t.appendChild(e),
                t) : e
            }
            toMarkup() {
                var e = !1
                  , t = "<span";
                this.classes.length && (e = !0,
                t += ' class="',
                t += y.escape(K(this.classes)),
                t += '"');
                var n = "";
                for (var r in this.italic > 0 && (n += "margin-right:" + this.italic + "em;"),
                this.style)
                    this.style.hasOwnProperty(r) && (n += y.hyphenate(r) + ":" + this.style[r] + ";");
                n && (e = !0,
                t += ' style="' + y.escape(n) + '"');
                var i = y.escape(this.text);
                return e ? (t += ">",
                t += i,
                t += "</span>") : i
            }
        }
        class re {
            constructor(e, t) {
                this.children = void 0,
                this.attributes = void 0,
                this.children = e || [],
                this.attributes = t || {}
            }
            toNode() {
                var e = document.createElementNS("http://www.w3.org/2000/svg", "svg");
                for (var t in this.attributes)
                    Object.prototype.hasOwnProperty.call(this.attributes, t) && e.setAttribute(t, this.attributes[t]);
                for (var n = 0; n < this.children.length; n++)
                    e.appendChild(this.children[n].toNode());
                return e
            }
            toMarkup() {
                var e = '<svg xmlns="http://www.w3.org/2000/svg"';
                for (var t in this.attributes)
                    Object.prototype.hasOwnProperty.call(this.attributes, t) && (e += " " + t + "='" + this.attributes[t] + "'");
                e += ">";
                for (var n = 0; n < this.children.length; n++)
                    e += this.children[n].toMarkup();
                return e += "</svg>"
            }
        }
        class ie {
            constructor(e, t) {
                this.pathName = void 0,
                this.alternate = void 0,
                this.pathName = e,
                this.alternate = t
            }
            toNode() {
                var e = document.createElementNS("http://www.w3.org/2000/svg", "path");
                return this.alternate ? e.setAttribute("d", this.alternate) : e.setAttribute("d", N[this.pathName]),
                e
            }
            toMarkup() {
                return this.alternate ? "<path d='" + this.alternate + "'/>" : "<path d='" + N[this.pathName] + "'/>"
            }
        }
        class se {
            constructor(e) {
                this.attributes = void 0,
                this.attributes = e || {}
            }
            toNode() {
                var e = document.createElementNS("http://www.w3.org/2000/svg", "line");
                for (var t in this.attributes)
                    Object.prototype.hasOwnProperty.call(this.attributes, t) && e.setAttribute(t, this.attributes[t]);
                return e
            }
            toMarkup() {
                var e = "<line";
                for (var t in this.attributes)
                    Object.prototype.hasOwnProperty.call(this.attributes, t) && (e += " " + t + "='" + this.attributes[t] + "'");
                return e += "/>"
            }
        }
        function oe(e) {
            if (e instanceof ne)
                return e;
            throw new Error("Expected symbolNode but got " + String(e) + ".")
        }
        var ae = {
            bin: 1,
            close: 1,
            inner: 1,
            open: 1,
            punct: 1,
            rel: 1
        }
          , le = {
            "accent-token": 1,
            mathord: 1,
            "op-token": 1,
            spacing: 1,
            textord: 1
        }
          , ce = {
            math: {},
            text: {}
        };
        function he(e, t, n, r, i, s) {
            ce[e][i] = {
                font: t,
                group: n,
                replace: r
            },
            s && r && (ce[e][r] = ce[e][i])
        }
        var pe = "math"
          , ue = "text"
          , de = "main"
          , me = "ams"
          , fe = "accent-token"
          , ge = "bin"
          , ve = "close"
          , ye = "inner"
          , be = "mathord"
          , xe = "op-token"
          , we = "open"
          , ke = "punct"
          , Se = "rel"
          , Ee = "spacing"
          , Me = "textord";
        he(pe, de, Se, "≡", "\\equiv", !0),
        he(pe, de, Se, "≺", "\\prec", !0),
        he(pe, de, Se, "≻", "\\succ", !0),
        he(pe, de, Se, "∼", "\\sim", !0),
        he(pe, de, Se, "⊥", "\\perp"),
        he(pe, de, Se, "⪯", "\\preceq", !0),
        he(pe, de, Se, "⪰", "\\succeq", !0),
        he(pe, de, Se, "≃", "\\simeq", !0),
        he(pe, de, Se, "∣", "\\mid", !0),
        he(pe, de, Se, "≪", "\\ll", !0),
        he(pe, de, Se, "≫", "\\gg", !0),
        he(pe, de, Se, "≍", "\\asymp", !0),
        he(pe, de, Se, "∥", "\\parallel"),
        he(pe, de, Se, "⋈", "\\bowtie", !0),
        he(pe, de, Se, "⌣", "\\smile", !0),
        he(pe, de, Se, "⊑", "\\sqsubseteq", !0),
        he(pe, de, Se, "⊒", "\\sqsupseteq", !0),
        he(pe, de, Se, "≐", "\\doteq", !0),
        he(pe, de, Se, "⌢", "\\frown", !0),
        he(pe, de, Se, "∋", "\\ni", !0),
        he(pe, de, Se, "∝", "\\propto", !0),
        he(pe, de, Se, "⊢", "\\vdash", !0),
        he(pe, de, Se, "⊣", "\\dashv", !0),
        he(pe, de, Se, "∋", "\\owns"),
        he(pe, de, ke, ".", "\\ldotp"),
        he(pe, de, ke, "⋅", "\\cdotp"),
        he(pe, de, Me, "#", "\\#"),
        he(ue, de, Me, "#", "\\#"),
        he(pe, de, Me, "&", "\\&"),
        he(ue, de, Me, "&", "\\&"),
        he(pe, de, Me, "ℵ", "\\aleph", !0),
        he(pe, de, Me, "∀", "\\forall", !0),
        he(pe, de, Me, "ℏ", "\\hbar", !0),
        he(pe, de, Me, "∃", "\\exists", !0),
        he(pe, de, Me, "∇", "\\nabla", !0),
        he(pe, de, Me, "♭", "\\flat", !0),
        he(pe, de, Me, "ℓ", "\\ell", !0),
        he(pe, de, Me, "♮", "\\natural", !0),
        he(pe, de, Me, "♣", "\\clubsuit", !0),
        he(pe, de, Me, "℘", "\\wp", !0),
        he(pe, de, Me, "♯", "\\sharp", !0),
        he(pe, de, Me, "♢", "\\diamondsuit", !0),
        he(pe, de, Me, "ℜ", "\\Re", !0),
        he(pe, de, Me, "♡", "\\heartsuit", !0),
        he(pe, de, Me, "ℑ", "\\Im", !0),
        he(pe, de, Me, "♠", "\\spadesuit", !0),
        he(pe, de, Me, "§", "\\S", !0),
        he(ue, de, Me, "§", "\\S"),
        he(pe, de, Me, "¶", "\\P", !0),
        he(ue, de, Me, "¶", "\\P"),
        he(pe, de, Me, "†", "\\dag"),
        he(ue, de, Me, "†", "\\dag"),
        he(ue, de, Me, "†", "\\textdagger"),
        he(pe, de, Me, "‡", "\\ddag"),
        he(ue, de, Me, "‡", "\\ddag"),
        he(ue, de, Me, "‡", "\\textdaggerdbl"),
        he(pe, de, ve, "⎱", "\\rmoustache", !0),
        he(pe, de, we, "⎰", "\\lmoustache", !0),
        he(pe, de, ve, "⟯", "\\rgroup", !0),
        he(pe, de, we, "⟮", "\\lgroup", !0),
        he(pe, de, ge, "∓", "\\mp", !0),
        he(pe, de, ge, "⊖", "\\ominus", !0),
        he(pe, de, ge, "⊎", "\\uplus", !0),
        he(pe, de, ge, "⊓", "\\sqcap", !0),
        he(pe, de, ge, "∗", "\\ast"),
        he(pe, de, ge, "⊔", "\\sqcup", !0),
        he(pe, de, ge, "◯", "\\bigcirc", !0),
        he(pe, de, ge, "∙", "\\bullet", !0),
        he(pe, de, ge, "‡", "\\ddagger"),
        he(pe, de, ge, "≀", "\\wr", !0),
        he(pe, de, ge, "⨿", "\\amalg"),
        he(pe, de, ge, "&", "\\And"),
        he(pe, de, Se, "⟵", "\\longleftarrow", !0),
        he(pe, de, Se, "⇐", "\\Leftarrow", !0),
        he(pe, de, Se, "⟸", "\\Longleftarrow", !0),
        he(pe, de, Se, "⟶", "\\longrightarrow", !0),
        he(pe, de, Se, "⇒", "\\Rightarrow", !0),
        he(pe, de, Se, "⟹", "\\Longrightarrow", !0),
        he(pe, de, Se, "↔", "\\leftrightarrow", !0),
        he(pe, de, Se, "⟷", "\\longleftrightarrow", !0),
        he(pe, de, Se, "⇔", "\\Leftrightarrow", !0),
        he(pe, de, Se, "⟺", "\\Longleftrightarrow", !0),
        he(pe, de, Se, "↦", "\\mapsto", !0),
        he(pe, de, Se, "⟼", "\\longmapsto", !0),
        he(pe, de, Se, "↗", "\\nearrow", !0),
        he(pe, de, Se, "↩", "\\hookleftarrow", !0),
        he(pe, de, Se, "↪", "\\hookrightarrow", !0),
        he(pe, de, Se, "↘", "\\searrow", !0),
        he(pe, de, Se, "↼", "\\leftharpoonup", !0),
        he(pe, de, Se, "⇀", "\\rightharpoonup", !0),
        he(pe, de, Se, "↙", "\\swarrow", !0),
        he(pe, de, Se, "↽", "\\leftharpoondown", !0),
        he(pe, de, Se, "⇁", "\\rightharpoondown", !0),
        he(pe, de, Se, "↖", "\\nwarrow", !0),
        he(pe, de, Se, "⇌", "\\rightleftharpoons", !0),
        he(pe, me, Se, "≮", "\\nless", !0),
        he(pe, me, Se, "", "\\@nleqslant"),
        he(pe, me, Se, "", "\\@nleqq"),
        he(pe, me, Se, "⪇", "\\lneq", !0),
        he(pe, me, Se, "≨", "\\lneqq", !0),
        he(pe, me, Se, "", "\\@lvertneqq"),
        he(pe, me, Se, "⋦", "\\lnsim", !0),
        he(pe, me, Se, "⪉", "\\lnapprox", !0),
        he(pe, me, Se, "⊀", "\\nprec", !0),
        he(pe, me, Se, "⋠", "\\npreceq", !0),
        he(pe, me, Se, "⋨", "\\precnsim", !0),
        he(pe, me, Se, "⪹", "\\precnapprox", !0),
        he(pe, me, Se, "≁", "\\nsim", !0),
        he(pe, me, Se, "", "\\@nshortmid"),
        he(pe, me, Se, "∤", "\\nmid", !0),
        he(pe, me, Se, "⊬", "\\nvdash", !0),
        he(pe, me, Se, "⊭", "\\nvDash", !0),
        he(pe, me, Se, "⋪", "\\ntriangleleft"),
        he(pe, me, Se, "⋬", "\\ntrianglelefteq", !0),
        he(pe, me, Se, "⊊", "\\subsetneq", !0),
        he(pe, me, Se, "", "\\@varsubsetneq"),
        he(pe, me, Se, "⫋", "\\subsetneqq", !0),
        he(pe, me, Se, "", "\\@varsubsetneqq"),
        he(pe, me, Se, "≯", "\\ngtr", !0),
        he(pe, me, Se, "", "\\@ngeqslant"),
        he(pe, me, Se, "", "\\@ngeqq"),
        he(pe, me, Se, "⪈", "\\gneq", !0),
        he(pe, me, Se, "≩", "\\gneqq", !0),
        he(pe, me, Se, "", "\\@gvertneqq"),
        he(pe, me, Se, "⋧", "\\gnsim", !0),
        he(pe, me, Se, "⪊", "\\gnapprox", !0),
        he(pe, me, Se, "⊁", "\\nsucc", !0),
        he(pe, me, Se, "⋡", "\\nsucceq", !0),
        he(pe, me, Se, "⋩", "\\succnsim", !0),
        he(pe, me, Se, "⪺", "\\succnapprox", !0),
        he(pe, me, Se, "≆", "\\ncong", !0),
        he(pe, me, Se, "", "\\@nshortparallel"),
        he(pe, me, Se, "∦", "\\nparallel", !0),
        he(pe, me, Se, "⊯", "\\nVDash", !0),
        he(pe, me, Se, "⋫", "\\ntriangleright"),
        he(pe, me, Se, "⋭", "\\ntrianglerighteq", !0),
        he(pe, me, Se, "", "\\@nsupseteqq"),
        he(pe, me, Se, "⊋", "\\supsetneq", !0),
        he(pe, me, Se, "", "\\@varsupsetneq"),
        he(pe, me, Se, "⫌", "\\supsetneqq", !0),
        he(pe, me, Se, "", "\\@varsupsetneqq"),
        he(pe, me, Se, "⊮", "\\nVdash", !0),
        he(pe, me, Se, "⪵", "\\precneqq", !0),
        he(pe, me, Se, "⪶", "\\succneqq", !0),
        he(pe, me, Se, "", "\\@nsubseteqq"),
        he(pe, me, ge, "⊴", "\\unlhd"),
        he(pe, me, ge, "⊵", "\\unrhd"),
        he(pe, me, Se, "↚", "\\nleftarrow", !0),
        he(pe, me, Se, "↛", "\\nrightarrow", !0),
        he(pe, me, Se, "⇍", "\\nLeftarrow", !0),
        he(pe, me, Se, "⇏", "\\nRightarrow", !0),
        he(pe, me, Se, "↮", "\\nleftrightarrow", !0),
        he(pe, me, Se, "⇎", "\\nLeftrightarrow", !0),
        he(pe, me, Se, "△", "\\vartriangle"),
        he(pe, me, Me, "ℏ", "\\hslash"),
        he(pe, me, Me, "▽", "\\triangledown"),
        he(pe, me, Me, "◊", "\\lozenge"),
        he(pe, me, Me, "Ⓢ", "\\circledS"),
        he(pe, me, Me, "®", "\\circledR"),
        he(ue, me, Me, "®", "\\circledR"),
        he(pe, me, Me, "∡", "\\measuredangle", !0),
        he(pe, me, Me, "∄", "\\nexists"),
        he(pe, me, Me, "℧", "\\mho"),
        he(pe, me, Me, "Ⅎ", "\\Finv", !0),
        he(pe, me, Me, "⅁", "\\Game", !0),
        he(pe, me, Me, "‵", "\\backprime"),
        he(pe, me, Me, "▲", "\\blacktriangle"),
        he(pe, me, Me, "▼", "\\blacktriangledown"),
        he(pe, me, Me, "■", "\\blacksquare"),
        he(pe, me, Me, "⧫", "\\blacklozenge"),
        he(pe, me, Me, "★", "\\bigstar"),
        he(pe, me, Me, "∢", "\\sphericalangle", !0),
        he(pe, me, Me, "∁", "\\complement", !0),
        he(pe, me, Me, "ð", "\\eth", !0),
        he(ue, de, Me, "ð", "ð"),
        he(pe, me, Me, "╱", "\\diagup"),
        he(pe, me, Me, "╲", "\\diagdown"),
        he(pe, me, Me, "□", "\\square"),
        he(pe, me, Me, "□", "\\Box"),
        he(pe, me, Me, "◊", "\\Diamond"),
        he(pe, me, Me, "¥", "\\yen", !0),
        he(ue, me, Me, "¥", "\\yen", !0),
        he(pe, me, Me, "✓", "\\checkmark", !0),
        he(ue, me, Me, "✓", "\\checkmark"),
        he(pe, me, Me, "ℶ", "\\beth", !0),
        he(pe, me, Me, "ℸ", "\\daleth", !0),
        he(pe, me, Me, "ℷ", "\\gimel", !0),
        he(pe, me, Me, "ϝ", "\\digamma", !0),
        he(pe, me, Me, "ϰ", "\\varkappa"),
        he(pe, me, we, "┌", "\\@ulcorner", !0),
        he(pe, me, ve, "┐", "\\@urcorner", !0),
        he(pe, me, we, "└", "\\@llcorner", !0),
        he(pe, me, ve, "┘", "\\@lrcorner", !0),
        he(pe, me, Se, "≦", "\\leqq", !0),
        he(pe, me, Se, "⩽", "\\leqslant", !0),
        he(pe, me, Se, "⪕", "\\eqslantless", !0),
        he(pe, me, Se, "≲", "\\lesssim", !0),
        he(pe, me, Se, "⪅", "\\lessapprox", !0),
        he(pe, me, Se, "≊", "\\approxeq", !0),
        he(pe, me, ge, "⋖", "\\lessdot"),
        he(pe, me, Se, "⋘", "\\lll", !0),
        he(pe, me, Se, "≶", "\\lessgtr", !0),
        he(pe, me, Se, "⋚", "\\lesseqgtr", !0),
        he(pe, me, Se, "⪋", "\\lesseqqgtr", !0),
        he(pe, me, Se, "≑", "\\doteqdot"),
        he(pe, me, Se, "≓", "\\risingdotseq", !0),
        he(pe, me, Se, "≒", "\\fallingdotseq", !0),
        he(pe, me, Se, "∽", "\\backsim", !0),
        he(pe, me, Se, "⋍", "\\backsimeq", !0),
        he(pe, me, Se, "⫅", "\\subseteqq", !0),
        he(pe, me, Se, "⋐", "\\Subset", !0),
        he(pe, me, Se, "⊏", "\\sqsubset", !0),
        he(pe, me, Se, "≼", "\\preccurlyeq", !0),
        he(pe, me, Se, "⋞", "\\curlyeqprec", !0),
        he(pe, me, Se, "≾", "\\precsim", !0),
        he(pe, me, Se, "⪷", "\\precapprox", !0),
        he(pe, me, Se, "⊲", "\\vartriangleleft"),
        he(pe, me, Se, "⊴", "\\trianglelefteq"),
        he(pe, me, Se, "⊨", "\\vDash", !0),
        he(pe, me, Se, "⊪", "\\Vvdash", !0),
        he(pe, me, Se, "⌣", "\\smallsmile"),
        he(pe, me, Se, "⌢", "\\smallfrown"),
        he(pe, me, Se, "≏", "\\bumpeq", !0),
        he(pe, me, Se, "≎", "\\Bumpeq", !0),
        he(pe, me, Se, "≧", "\\geqq", !0),
        he(pe, me, Se, "⩾", "\\geqslant", !0),
        he(pe, me, Se, "⪖", "\\eqslantgtr", !0),
        he(pe, me, Se, "≳", "\\gtrsim", !0),
        he(pe, me, Se, "⪆", "\\gtrapprox", !0),
        he(pe, me, ge, "⋗", "\\gtrdot"),
        he(pe, me, Se, "⋙", "\\ggg", !0),
        he(pe, me, Se, "≷", "\\gtrless", !0),
        he(pe, me, Se, "⋛", "\\gtreqless", !0),
        he(pe, me, Se, "⪌", "\\gtreqqless", !0),
        he(pe, me, Se, "≖", "\\eqcirc", !0),
        he(pe, me, Se, "≗", "\\circeq", !0),
        he(pe, me, Se, "≜", "\\triangleq", !0),
        he(pe, me, Se, "∼", "\\thicksim"),
        he(pe, me, Se, "≈", "\\thickapprox"),
        he(pe, me, Se, "⫆", "\\supseteqq", !0),
        he(pe, me, Se, "⋑", "\\Supset", !0),
        he(pe, me, Se, "⊐", "\\sqsupset", !0),
        he(pe, me, Se, "≽", "\\succcurlyeq", !0),
        he(pe, me, Se, "⋟", "\\curlyeqsucc", !0),
        he(pe, me, Se, "≿", "\\succsim", !0),
        he(pe, me, Se, "⪸", "\\succapprox", !0),
        he(pe, me, Se, "⊳", "\\vartriangleright"),
        he(pe, me, Se, "⊵", "\\trianglerighteq"),
        he(pe, me, Se, "⊩", "\\Vdash", !0),
        he(pe, me, Se, "∣", "\\shortmid"),
        he(pe, me, Se, "∥", "\\shortparallel"),
        he(pe, me, Se, "≬", "\\between", !0),
        he(pe, me, Se, "⋔", "\\pitchfork", !0),
        he(pe, me, Se, "∝", "\\varpropto"),
        he(pe, me, Se, "◀", "\\blacktriangleleft"),
        he(pe, me, Se, "∴", "\\therefore", !0),
        he(pe, me, Se, "∍", "\\backepsilon"),
        he(pe, me, Se, "▶", "\\blacktriangleright"),
        he(pe, me, Se, "∵", "\\because", !0),
        he(pe, me, Se, "⋘", "\\llless"),
        he(pe, me, Se, "⋙", "\\gggtr"),
        he(pe, me, ge, "⊲", "\\lhd"),
        he(pe, me, ge, "⊳", "\\rhd"),
        he(pe, me, Se, "≂", "\\eqsim", !0),
        he(pe, de, Se, "⋈", "\\Join"),
        he(pe, me, Se, "≑", "\\Doteq", !0),
        he(pe, me, ge, "∔", "\\dotplus", !0),
        he(pe, me, ge, "∖", "\\smallsetminus"),
        he(pe, me, ge, "⋒", "\\Cap", !0),
        he(pe, me, ge, "⋓", "\\Cup", !0),
        he(pe, me, ge, "⩞", "\\doublebarwedge", !0),
        he(pe, me, ge, "⊟", "\\boxminus", !0),
        he(pe, me, ge, "⊞", "\\boxplus", !0),
        he(pe, me, ge, "⋇", "\\divideontimes", !0),
        he(pe, me, ge, "⋉", "\\ltimes", !0),
        he(pe, me, ge, "⋊", "\\rtimes", !0),
        he(pe, me, ge, "⋋", "\\leftthreetimes", !0),
        he(pe, me, ge, "⋌", "\\rightthreetimes", !0),
        he(pe, me, ge, "⋏", "\\curlywedge", !0),
        he(pe, me, ge, "⋎", "\\curlyvee", !0),
        he(pe, me, ge, "⊝", "\\circleddash", !0),
        he(pe, me, ge, "⊛", "\\circledast", !0),
        he(pe, me, ge, "⋅", "\\centerdot"),
        he(pe, me, ge, "⊺", "\\intercal", !0),
        he(pe, me, ge, "⋒", "\\doublecap"),
        he(pe, me, ge, "⋓", "\\doublecup"),
        he(pe, me, ge, "⊠", "\\boxtimes", !0),
        he(pe, me, Se, "⇢", "\\dashrightarrow", !0),
        he(pe, me, Se, "⇠", "\\dashleftarrow", !0),
        he(pe, me, Se, "⇇", "\\leftleftarrows", !0),
        he(pe, me, Se, "⇆", "\\leftrightarrows", !0),
        he(pe, me, Se, "⇚", "\\Lleftarrow", !0),
        he(pe, me, Se, "↞", "\\twoheadleftarrow", !0),
        he(pe, me, Se, "↢", "\\leftarrowtail", !0),
        he(pe, me, Se, "↫", "\\looparrowleft", !0),
        he(pe, me, Se, "⇋", "\\leftrightharpoons", !0),
        he(pe, me, Se, "↶", "\\curvearrowleft", !0),
        he(pe, me, Se, "↺", "\\circlearrowleft", !0),
        he(pe, me, Se, "↰", "\\Lsh", !0),
        he(pe, me, Se, "⇈", "\\upuparrows", !0),
        he(pe, me, Se, "↿", "\\upharpoonleft", !0),
        he(pe, me, Se, "⇃", "\\downharpoonleft", !0),
        he(pe, de, Se, "⊶", "\\origof", !0),
        he(pe, de, Se, "⊷", "\\imageof", !0),
        he(pe, me, Se, "⊸", "\\multimap", !0),
        he(pe, me, Se, "↭", "\\leftrightsquigarrow", !0),
        he(pe, me, Se, "⇉", "\\rightrightarrows", !0),
        he(pe, me, Se, "⇄", "\\rightleftarrows", !0),
        he(pe, me, Se, "↠", "\\twoheadrightarrow", !0),
        he(pe, me, Se, "↣", "\\rightarrowtail", !0),
        he(pe, me, Se, "↬", "\\looparrowright", !0),
        he(pe, me, Se, "↷", "\\curvearrowright", !0),
        he(pe, me, Se, "↻", "\\circlearrowright", !0),
        he(pe, me, Se, "↱", "\\Rsh", !0),
        he(pe, me, Se, "⇊", "\\downdownarrows", !0),
        he(pe, me, Se, "↾", "\\upharpoonright", !0),
        he(pe, me, Se, "⇂", "\\downharpoonright", !0),
        he(pe, me, Se, "⇝", "\\rightsquigarrow", !0),
        he(pe, me, Se, "⇝", "\\leadsto"),
        he(pe, me, Se, "⇛", "\\Rrightarrow", !0),
        he(pe, me, Se, "↾", "\\restriction"),
        he(pe, de, Me, "‘", "`"),
        he(pe, de, Me, "$", "\\$"),
        he(ue, de, Me, "$", "\\$"),
        he(ue, de, Me, "$", "\\textdollar"),
        he(pe, de, Me, "%", "\\%"),
        he(ue, de, Me, "%", "\\%"),
        he(pe, de, Me, "_", "\\_"),
        he(ue, de, Me, "_", "\\_"),
        he(ue, de, Me, "_", "\\textunderscore"),
        he(pe, de, Me, "∠", "\\angle", !0),
        he(pe, de, Me, "∞", "\\infty", !0),
        he(pe, de, Me, "′", "\\prime"),
        he(pe, de, Me, "△", "\\triangle"),
        he(pe, de, Me, "Γ", "\\Gamma", !0),
        he(pe, de, Me, "Δ", "\\Delta", !0),
        he(pe, de, Me, "Θ", "\\Theta", !0),
        he(pe, de, Me, "Λ", "\\Lambda", !0),
        he(pe, de, Me, "Ξ", "\\Xi", !0),
        he(pe, de, Me, "Π", "\\Pi", !0),
        he(pe, de, Me, "Σ", "\\Sigma", !0),
        he(pe, de, Me, "Υ", "\\Upsilon", !0),
        he(pe, de, Me, "Φ", "\\Phi", !0),
        he(pe, de, Me, "Ψ", "\\Psi", !0),
        he(pe, de, Me, "Ω", "\\Omega", !0),
        he(pe, de, Me, "A", "Α"),
        he(pe, de, Me, "B", "Β"),
        he(pe, de, Me, "E", "Ε"),
        he(pe, de, Me, "Z", "Ζ"),
        he(pe, de, Me, "H", "Η"),
        he(pe, de, Me, "I", "Ι"),
        he(pe, de, Me, "K", "Κ"),
        he(pe, de, Me, "M", "Μ"),
        he(pe, de, Me, "N", "Ν"),
        he(pe, de, Me, "O", "Ο"),
        he(pe, de, Me, "P", "Ρ"),
        he(pe, de, Me, "T", "Τ"),
        he(pe, de, Me, "X", "Χ"),
        he(pe, de, Me, "¬", "\\neg", !0),
        he(pe, de, Me, "¬", "\\lnot"),
        he(pe, de, Me, "⊤", "\\top"),
        he(pe, de, Me, "⊥", "\\bot"),
        he(pe, de, Me, "∅", "\\emptyset"),
        he(pe, me, Me, "∅", "\\varnothing"),
        he(pe, de, be, "α", "\\alpha", !0),
        he(pe, de, be, "β", "\\beta", !0),
        he(pe, de, be, "γ", "\\gamma", !0),
        he(pe, de, be, "δ", "\\delta", !0),
        he(pe, de, be, "ϵ", "\\epsilon", !0),
        he(pe, de, be, "ζ", "\\zeta", !0),
        he(pe, de, be, "η", "\\eta", !0),
        he(pe, de, be, "θ", "\\theta", !0),
        he(pe, de, be, "ι", "\\iota", !0),
        he(pe, de, be, "κ", "\\kappa", !0),
        he(pe, de, be, "λ", "\\lambda", !0),
        he(pe, de, be, "μ", "\\mu", !0),
        he(pe, de, be, "ν", "\\nu", !0),
        he(pe, de, be, "ξ", "\\xi", !0),
        he(pe, de, be, "ο", "\\omicron", !0),
        he(pe, de, be, "π", "\\pi", !0),
        he(pe, de, be, "ρ", "\\rho", !0),
        he(pe, de, be, "σ", "\\sigma", !0),
        he(pe, de, be, "τ", "\\tau", !0),
        he(pe, de, be, "υ", "\\upsilon", !0),
        he(pe, de, be, "ϕ", "\\phi", !0),
        he(pe, de, be, "χ", "\\chi", !0),
        he(pe, de, be, "ψ", "\\psi", !0),
        he(pe, de, be, "ω", "\\omega", !0),
        he(pe, de, be, "ε", "\\varepsilon", !0),
        he(pe, de, be, "ϑ", "\\vartheta", !0),
        he(pe, de, be, "ϖ", "\\varpi", !0),
        he(pe, de, be, "ϱ", "\\varrho", !0),
        he(pe, de, be, "ς", "\\varsigma", !0),
        he(pe, de, be, "φ", "\\varphi", !0),
        he(pe, de, ge, "∗", "*", !0),
        he(pe, de, ge, "+", "+"),
        he(pe, de, ge, "−", "-", !0),
        he(pe, de, ge, "⋅", "\\cdot", !0),
        he(pe, de, ge, "∘", "\\circ", !0),
        he(pe, de, ge, "÷", "\\div", !0),
        he(pe, de, ge, "±", "\\pm", !0),
        he(pe, de, ge, "×", "\\times", !0),
        he(pe, de, ge, "∩", "\\cap", !0),
        he(pe, de, ge, "∪", "\\cup", !0),
        he(pe, de, ge, "∖", "\\setminus", !0),
        he(pe, de, ge, "∧", "\\land"),
        he(pe, de, ge, "∨", "\\lor"),
        he(pe, de, ge, "∧", "\\wedge", !0),
        he(pe, de, ge, "∨", "\\vee", !0),
        he(pe, de, Me, "√", "\\surd"),
        he(pe, de, we, "⟨", "\\langle", !0),
        he(pe, de, we, "∣", "\\lvert"),
        he(pe, de, we, "∥", "\\lVert"),
        he(pe, de, ve, "?", "?"),
        he(pe, de, ve, "!", "!"),
        he(pe, de, ve, "⟩", "\\rangle", !0),
        he(pe, de, ve, "∣", "\\rvert"),
        he(pe, de, ve, "∥", "\\rVert"),
        he(pe, de, Se, "=", "="),
        he(pe, de, Se, ":", ":"),
        he(pe, de, Se, "≈", "\\approx", !0),
        he(pe, de, Se, "≅", "\\cong", !0),
        he(pe, de, Se, "≥", "\\ge"),
        he(pe, de, Se, "≥", "\\geq", !0),
        he(pe, de, Se, "←", "\\gets"),
        he(pe, de, Se, ">", "\\gt", !0),
        he(pe, de, Se, "∈", "\\in", !0),
        he(pe, de, Se, "", "\\@not"),
        he(pe, de, Se, "⊂", "\\subset", !0),
        he(pe, de, Se, "⊃", "\\supset", !0),
        he(pe, de, Se, "⊆", "\\subseteq", !0),
        he(pe, de, Se, "⊇", "\\supseteq", !0),
        he(pe, me, Se, "⊈", "\\nsubseteq", !0),
        he(pe, me, Se, "⊉", "\\nsupseteq", !0),
        he(pe, de, Se, "⊨", "\\models"),
        he(pe, de, Se, "←", "\\leftarrow", !0),
        he(pe, de, Se, "≤", "\\le"),
        he(pe, de, Se, "≤", "\\leq", !0),
        he(pe, de, Se, "<", "\\lt", !0),
        he(pe, de, Se, "→", "\\rightarrow", !0),
        he(pe, de, Se, "→", "\\to"),
        he(pe, me, Se, "≱", "\\ngeq", !0),
        he(pe, me, Se, "≰", "\\nleq", !0),
        he(pe, de, Ee, " ", "\\ "),
        he(pe, de, Ee, " ", "\\space"),
        he(pe, de, Ee, " ", "\\nobreakspace"),
        he(ue, de, Ee, " ", "\\ "),
        he(ue, de, Ee, " ", " "),
        he(ue, de, Ee, " ", "\\space"),
        he(ue, de, Ee, " ", "\\nobreakspace"),
        he(pe, de, Ee, null, "\\nobreak"),
        he(pe, de, Ee, null, "\\allowbreak"),
        he(pe, de, ke, ",", ","),
        he(pe, de, ke, ";", ";"),
        he(pe, me, ge, "⊼", "\\barwedge", !0),
        he(pe, me, ge, "⊻", "\\veebar", !0),
        he(pe, de, ge, "⊙", "\\odot", !0),
        he(pe, de, ge, "⊕", "\\oplus", !0),
        he(pe, de, ge, "⊗", "\\otimes", !0),
        he(pe, de, Me, "∂", "\\partial", !0),
        he(pe, de, ge, "⊘", "\\oslash", !0),
        he(pe, me, ge, "⊚", "\\circledcirc", !0),
        he(pe, me, ge, "⊡", "\\boxdot", !0),
        he(pe, de, ge, "△", "\\bigtriangleup"),
        he(pe, de, ge, "▽", "\\bigtriangledown"),
        he(pe, de, ge, "†", "\\dagger"),
        he(pe, de, ge, "⋄", "\\diamond"),
        he(pe, de, ge, "⋆", "\\star"),
        he(pe, de, ge, "◃", "\\triangleleft"),
        he(pe, de, ge, "▹", "\\triangleright"),
        he(pe, de, we, "{", "\\{"),
        he(ue, de, Me, "{", "\\{"),
        he(ue, de, Me, "{", "\\textbraceleft"),
        he(pe, de, ve, "}", "\\}"),
        he(ue, de, Me, "}", "\\}"),
        he(ue, de, Me, "}", "\\textbraceright"),
        he(pe, de, we, "{", "\\lbrace"),
        he(pe, de, ve, "}", "\\rbrace"),
        he(pe, de, we, "[", "\\lbrack", !0),
        he(ue, de, Me, "[", "\\lbrack", !0),
        he(pe, de, ve, "]", "\\rbrack", !0),
        he(ue, de, Me, "]", "\\rbrack", !0),
        he(pe, de, we, "(", "\\lparen", !0),
        he(pe, de, ve, ")", "\\rparen", !0),
        he(ue, de, Me, "<", "\\textless", !0),
        he(ue, de, Me, ">", "\\textgreater", !0),
        he(pe, de, we, "⌊", "\\lfloor", !0),
        he(pe, de, ve, "⌋", "\\rfloor", !0),
        he(pe, de, we, "⌈", "\\lceil", !0),
        he(pe, de, ve, "⌉", "\\rceil", !0),
        he(pe, de, Me, "\\", "\\backslash"),
        he(pe, de, Me, "∣", "|"),
        he(pe, de, Me, "∣", "\\vert"),
        he(ue, de, Me, "|", "\\textbar", !0),
        he(pe, de, Me, "∥", "\\|"),
        he(pe, de, Me, "∥", "\\Vert"),
        he(ue, de, Me, "∥", "\\textbardbl"),
        he(ue, de, Me, "~", "\\textasciitilde"),
        he(ue, de, Me, "\\", "\\textbackslash"),
        he(ue, de, Me, "^", "\\textasciicircum"),
        he(pe, de, Se, "↑", "\\uparrow", !0),
        he(pe, de, Se, "⇑", "\\Uparrow", !0),
        he(pe, de, Se, "↓", "\\downarrow", !0),
        he(pe, de, Se, "⇓", "\\Downarrow", !0),
        he(pe, de, Se, "↕", "\\updownarrow", !0),
        he(pe, de, Se, "⇕", "\\Updownarrow", !0),
        he(pe, de, xe, "∐", "\\coprod"),
        he(pe, de, xe, "⋁", "\\bigvee"),
        he(pe, de, xe, "⋀", "\\bigwedge"),
        he(pe, de, xe, "⨄", "\\biguplus"),
        he(pe, de, xe, "⋂", "\\bigcap"),
        he(pe, de, xe, "⋃", "\\bigcup"),
        he(pe, de, xe, "∫", "\\int"),
        he(pe, de, xe, "∫", "\\intop"),
        he(pe, de, xe, "∬", "\\iint"),
        he(pe, de, xe, "∭", "\\iiint"),
        he(pe, de, xe, "∏", "\\prod"),
        he(pe, de, xe, "∑", "\\sum"),
        he(pe, de, xe, "⨂", "\\bigotimes"),
        he(pe, de, xe, "⨁", "\\bigoplus"),
        he(pe, de, xe, "⨀", "\\bigodot"),
        he(pe, de, xe, "∮", "\\oint"),
        he(pe, de, xe, "∯", "\\oiint"),
        he(pe, de, xe, "∰", "\\oiiint"),
        he(pe, de, xe, "⨆", "\\bigsqcup"),
        he(pe, de, xe, "∫", "\\smallint"),
        he(ue, de, ye, "…", "\\textellipsis"),
        he(pe, de, ye, "…", "\\mathellipsis"),
        he(ue, de, ye, "…", "\\ldots", !0),
        he(pe, de, ye, "…", "\\ldots", !0),
        he(pe, de, ye, "⋯", "\\@cdots", !0),
        he(pe, de, ye, "⋱", "\\ddots", !0),
        he(pe, de, Me, "⋮", "\\varvdots"),
        he(pe, de, fe, "ˊ", "\\acute"),
        he(pe, de, fe, "ˋ", "\\grave"),
        he(pe, de, fe, "¨", "\\ddot"),
        he(pe, de, fe, "~", "\\tilde"),
        he(pe, de, fe, "ˉ", "\\bar"),
        he(pe, de, fe, "˘", "\\breve"),
        he(pe, de, fe, "ˇ", "\\check"),
        he(pe, de, fe, "^", "\\hat"),
        he(pe, de, fe, "⃗", "\\vec"),
        he(pe, de, fe, "˙", "\\dot"),
        he(pe, de, fe, "˚", "\\mathring"),
        he(pe, de, be, "", "\\@imath"),
        he(pe, de, be, "", "\\@jmath"),
        he(pe, de, Me, "ı", "ı"),
        he(pe, de, Me, "ȷ", "ȷ"),
        he(ue, de, Me, "ı", "\\i", !0),
        he(ue, de, Me, "ȷ", "\\j", !0),
        he(ue, de, Me, "ß", "\\ss", !0),
        he(ue, de, Me, "æ", "\\ae", !0),
        he(ue, de, Me, "œ", "\\oe", !0),
        he(ue, de, Me, "ø", "\\o", !0),
        he(ue, de, Me, "Æ", "\\AE", !0),
        he(ue, de, Me, "Œ", "\\OE", !0),
        he(ue, de, Me, "Ø", "\\O", !0),
        he(ue, de, fe, "ˊ", "\\'"),
        he(ue, de, fe, "ˋ", "\\`"),
        he(ue, de, fe, "ˆ", "\\^"),
        he(ue, de, fe, "˜", "\\~"),
        he(ue, de, fe, "ˉ", "\\="),
        he(ue, de, fe, "˘", "\\u"),
        he(ue, de, fe, "˙", "\\."),
        he(ue, de, fe, "¸", "\\c"),
        he(ue, de, fe, "˚", "\\r"),
        he(ue, de, fe, "ˇ", "\\v"),
        he(ue, de, fe, "¨", '\\"'),
        he(ue, de, fe, "˝", "\\H"),
        he(ue, de, fe, "◯", "\\textcircled");
        var Ce = {
            "--": !0,
            "---": !0,
            "``": !0,
            "''": !0
        };
        he(ue, de, Me, "–", "--", !0),
        he(ue, de, Me, "–", "\\textendash"),
        he(ue, de, Me, "—", "---", !0),
        he(ue, de, Me, "—", "\\textemdash"),
        he(ue, de, Me, "‘", "`", !0),
        he(ue, de, Me, "‘", "\\textquoteleft"),
        he(ue, de, Me, "’", "'", !0),
        he(ue, de, Me, "’", "\\textquoteright"),
        he(ue, de, Me, "“", "``", !0),
        he(ue, de, Me, "“", "\\textquotedblleft"),
        he(ue, de, Me, "”", "''", !0),
        he(ue, de, Me, "”", "\\textquotedblright"),
        he(pe, de, Me, "°", "\\degree", !0),
        he(ue, de, Me, "°", "\\degree"),
        he(ue, de, Me, "°", "\\textdegree", !0),
        he(pe, de, Me, "£", "\\pounds"),
        he(pe, de, Me, "£", "\\mathsterling", !0),
        he(ue, de, Me, "£", "\\pounds"),
        he(ue, de, Me, "£", "\\textsterling", !0),
        he(pe, me, Me, "✠", "\\maltese"),
        he(ue, me, Me, "✠", "\\maltese");
        for (var Te = '0123456789/@."', _e = 0; _e < 14; _e++) {
            var Ae = Te.charAt(_e);
            he(pe, de, Me, Ae, Ae)
        }
        for (var Ie = '0123456789!@*()-=+";:?/.,', Re = 0; Re < 25; Re++) {
            var Ne = Ie.charAt(Re);
            he(ue, de, Me, Ne, Ne)
        }
        for (var Pe = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", Oe = 0; Oe < 52; Oe++) {
            var Le = Pe.charAt(Oe);
            he(pe, de, be, Le, Le),
            he(ue, de, Me, Le, Le)
        }
        he(pe, me, Me, "C", "ℂ"),
        he(ue, me, Me, "C", "ℂ"),
        he(pe, me, Me, "H", "ℍ"),
        he(ue, me, Me, "H", "ℍ"),
        he(pe, me, Me, "N", "ℕ"),
        he(ue, me, Me, "N", "ℕ"),
        he(pe, me, Me, "P", "ℙ"),
        he(ue, me, Me, "P", "ℙ"),
        he(pe, me, Me, "Q", "ℚ"),
        he(ue, me, Me, "Q", "ℚ"),
        he(pe, me, Me, "R", "ℝ"),
        he(ue, me, Me, "R", "ℝ"),
        he(pe, me, Me, "Z", "ℤ"),
        he(ue, me, Me, "Z", "ℤ"),
        he(pe, de, be, "h", "ℎ"),
        he(ue, de, be, "h", "ℎ");
        for (var De = "", Fe = 0; Fe < 52; Fe++) {
            var ze = Pe.charAt(Fe);
            he(pe, de, be, ze, De = String.fromCharCode(55349, 56320 + Fe)),
            he(ue, de, Me, ze, De),
            he(pe, de, be, ze, De = String.fromCharCode(55349, 56372 + Fe)),
            he(ue, de, Me, ze, De),
            he(pe, de, be, ze, De = String.fromCharCode(55349, 56424 + Fe)),
            he(ue, de, Me, ze, De),
            he(pe, de, be, ze, De = String.fromCharCode(55349, 56580 + Fe)),
            he(ue, de, Me, ze, De),
            he(pe, de, be, ze, De = String.fromCharCode(55349, 56684 + Fe)),
            he(ue, de, Me, ze, De),
            he(pe, de, be, ze, De = String.fromCharCode(55349, 56736 + Fe)),
            he(ue, de, Me, ze, De),
            he(pe, de, be, ze, De = String.fromCharCode(55349, 56788 + Fe)),
            he(ue, de, Me, ze, De),
            he(pe, de, be, ze, De = String.fromCharCode(55349, 56840 + Fe)),
            he(ue, de, Me, ze, De),
            he(pe, de, be, ze, De = String.fromCharCode(55349, 56944 + Fe)),
            he(ue, de, Me, ze, De),
            Fe < 26 && (he(pe, de, be, ze, De = String.fromCharCode(55349, 56632 + Fe)),
            he(ue, de, Me, ze, De),
            he(pe, de, be, ze, De = String.fromCharCode(55349, 56476 + Fe)),
            he(ue, de, Me, ze, De))
        }
        he(pe, de, be, "k", De = String.fromCharCode(55349, 56668)),
        he(ue, de, Me, "k", De);
        for (var Be = 0; Be < 10; Be++) {
            var qe = Be.toString();
            he(pe, de, be, qe, De = String.fromCharCode(55349, 57294 + Be)),
            he(ue, de, Me, qe, De),
            he(pe, de, be, qe, De = String.fromCharCode(55349, 57314 + Be)),
            he(ue, de, Me, qe, De),
            he(pe, de, be, qe, De = String.fromCharCode(55349, 57324 + Be)),
            he(ue, de, Me, qe, De),
            he(pe, de, be, qe, De = String.fromCharCode(55349, 57334 + Be)),
            he(ue, de, Me, qe, De)
        }
        for (var He = "ÐÞþ", Ue = 0; Ue < 3; Ue++) {
            var Ge = He.charAt(Ue);
            he(pe, de, be, Ge, Ge),
            he(ue, de, Me, Ge, Ge)
        }
        var We = [["mathbf", "textbf", "Main-Bold"], ["mathbf", "textbf", "Main-Bold"], ["mathnormal", "textit", "Math-Italic"], ["mathnormal", "textit", "Math-Italic"], ["boldsymbol", "boldsymbol", "Main-BoldItalic"], ["boldsymbol", "boldsymbol", "Main-BoldItalic"], ["mathscr", "textscr", "Script-Regular"], ["", "", ""], ["", "", ""], ["", "", ""], ["mathfrak", "textfrak", "Fraktur-Regular"], ["mathfrak", "textfrak", "Fraktur-Regular"], ["mathbb", "textbb", "AMS-Regular"], ["mathbb", "textbb", "AMS-Regular"], ["mathboldfrak", "textboldfrak", "Fraktur-Regular"], ["mathboldfrak", "textboldfrak", "Fraktur-Regular"], ["mathsf", "textsf", "SansSerif-Regular"], ["mathsf", "textsf", "SansSerif-Regular"], ["mathboldsf", "textboldsf", "SansSerif-Bold"], ["mathboldsf", "textboldsf", "SansSerif-Bold"], ["mathitsf", "textitsf", "SansSerif-Italic"], ["mathitsf", "textitsf", "SansSerif-Italic"], ["", "", ""], ["", "", ""], ["mathtt", "texttt", "Typewriter-Regular"], ["mathtt", "texttt", "Typewriter-Regular"]]
          , Ve = [["mathbf", "textbf", "Main-Bold"], ["", "", ""], ["mathsf", "textsf", "SansSerif-Regular"], ["mathboldsf", "textboldsf", "SansSerif-Bold"], ["mathtt", "texttt", "Typewriter-Regular"]]
          , $e = function(e, t, n) {
            return ce[n][e] && ce[n][e].replace && (e = ce[n][e].replace),
            {
                value: e,
                metrics: F(e, t, n)
            }
        }
          , je = function(e, t, n, r, i) {
            var s, o = $e(e, t, n), a = o.metrics;
            if (e = o.value,
            a) {
                var l = a.italic;
                ("text" === n || r && "mathit" === r.font) && (l = 0),
                s = new ne(e,a.height,a.depth,l,a.skew,a.width,i)
            } else
                "undefined" != typeof console && console.warn("No character metrics for '" + e + "' in style '" + t + "' and mode '" + n + "'"),
                s = new ne(e,0,0,0,0,0,i);
            if (r) {
                s.maxFontSize = r.sizeMultiplier,
                r.style.isTight() && s.classes.push("mtight");
                var c = r.getColor();
                c && (s.style.color = c)
            }
            return s
        }
          , Ke = (e, t) => {
            if (K(e.classes) !== K(t.classes) || e.skew !== t.skew || e.maxFontSize !== t.maxFontSize)
                return !1;
            if (1 === e.classes.length) {
                var n = e.classes[0];
                if ("mbin" === n || "mord" === n)
                    return !1
            }
            for (var r in e.style)
                if (e.style.hasOwnProperty(r) && e.style[r] !== t.style[r])
                    return !1;
            for (var i in t.style)
                if (t.style.hasOwnProperty(i) && e.style[i] !== t.style[i])
                    return !1;
            return !0
        }
          , Ze = function(e) {
            for (var t = 0, n = 0, r = 0, i = 0; i < e.children.length; i++) {
                var s = e.children[i];
                s.height > t && (t = s.height),
                s.depth > n && (n = s.depth),
                s.maxFontSize > r && (r = s.maxFontSize)
            }
            e.height = t,
            e.depth = n,
            e.maxFontSize = r
        }
          , Ye = function(e, t, n, r) {
            var i = new J(e,t,n,r);
            return Ze(i),
            i
        }
          , Xe = (e, t, n, r) => new J(e,t,n,r)
          , Je = function(e) {
            var t = new P(e);
            return Ze(t),
            t
        }
          , Qe = function(e, t, n) {
            var r = "";
            switch (e) {
            case "amsrm":
                r = "AMS";
                break;
            case "textrm":
                r = "Main";
                break;
            case "textsf":
                r = "SansSerif";
                break;
            case "texttt":
                r = "Typewriter";
                break;
            default:
                r = e
            }
            return r + "-" + ("textbf" === t && "textit" === n ? "BoldItalic" : "textbf" === t ? "Bold" : "textit" === t ? "Italic" : "Regular")
        }
          , et = {
            mathbf: {
                variant: "bold",
                fontName: "Main-Bold"
            },
            mathrm: {
                variant: "normal",
                fontName: "Main-Regular"
            },
            textit: {
                variant: "italic",
                fontName: "Main-Italic"
            },
            mathit: {
                variant: "italic",
                fontName: "Main-Italic"
            },
            mathnormal: {
                variant: "italic",
                fontName: "Math-Italic"
            },
            mathbb: {
                variant: "double-struck",
                fontName: "AMS-Regular"
            },
            mathcal: {
                variant: "script",
                fontName: "Caligraphic-Regular"
            },
            mathfrak: {
                variant: "fraktur",
                fontName: "Fraktur-Regular"
            },
            mathscr: {
                variant: "script",
                fontName: "Script-Regular"
            },
            mathsf: {
                variant: "sans-serif",
                fontName: "SansSerif-Regular"
            },
            mathtt: {
                variant: "monospace",
                fontName: "Typewriter-Regular"
            }
        }
          , tt = {
            vec: ["vec", .471, .714],
            oiintSize1: ["oiintSize1", .957, .499],
            oiintSize2: ["oiintSize2", 1.472, .659],
            oiiintSize1: ["oiiintSize1", 1.304, .499],
            oiiintSize2: ["oiiintSize2", 1.98, .659]
        }
          , nt = {
            fontMap: et,
            makeSymbol: je,
            mathsym: function(e, t, n, r) {
                return void 0 === r && (r = []),
                "boldsymbol" === n.font && $e(e, "Main-Bold", t).metrics ? je(e, "Main-Bold", t, n, r.concat(["mathbf"])) : "\\" === e || "main" === ce[t][e].font ? je(e, "Main-Regular", t, n, r) : je(e, "AMS-Regular", t, n, r.concat(["amsrm"]))
            },
            makeSpan: Ye,
            makeSvgSpan: Xe,
            makeLineSpan: function(e, t, n) {
                var r = Ye([e], [], t);
                return r.height = Math.max(n || t.fontMetrics().defaultRuleThickness, t.minRuleThickness),
                r.style.borderBottomWidth = j(r.height),
                r.maxFontSize = 1,
                r
            },
            makeAnchor: function(e, t, n, r) {
                var i = new Q(e,t,n,r);
                return Ze(i),
                i
            },
            makeFragment: Je,
            wrapFragment: function(e, t) {
                return e instanceof P ? Ye([], [e], t) : e
            },
            makeVList: function(e, t) {
                for (var {children: n, depth: r} = function(e) {
                    if ("individualShift" === e.positionType) {
                        for (var t = e.children, n = [t[0]], r = -t[0].shift - t[0].elem.depth, i = r, s = 1; s < t.length; s++) {
                            var o = -t[s].shift - i - t[s].elem.depth
                              , a = o - (t[s - 1].elem.height + t[s - 1].elem.depth);
                            i += o,
                            n.push({
                                type: "kern",
                                size: a
                            }),
                            n.push(t[s])
                        }
                        return {
                            children: n,
                            depth: r
                        }
                    }
                    var l;
                    if ("top" === e.positionType) {
                        for (var c = e.positionData, h = 0; h < e.children.length; h++) {
                            var p = e.children[h];
                            c -= "kern" === p.type ? p.size : p.elem.height + p.elem.depth
                        }
                        l = c
                    } else if ("bottom" === e.positionType)
                        l = -e.positionData;
                    else {
                        var u = e.children[0];
                        if ("elem" !== u.type)
                            throw new Error('First child must have type "elem".');
                        if ("shift" === e.positionType)
                            l = -u.elem.depth - e.positionData;
                        else {
                            if ("firstBaseline" !== e.positionType)
                                throw new Error("Invalid positionType " + e.positionType + ".");
                            l = -u.elem.depth
                        }
                    }
                    return {
                        children: e.children,
                        depth: l
                    }
                }(e), i = 0, s = 0; s < n.length; s++) {
                    var o = n[s];
                    if ("elem" === o.type) {
                        var a = o.elem;
                        i = Math.max(i, a.maxFontSize, a.height)
                    }
                }
                i += 2;
                var l = Ye(["pstrut"], []);
                l.style.height = j(i);
                for (var c = [], h = r, p = r, u = r, d = 0; d < n.length; d++) {
                    var m = n[d];
                    if ("kern" === m.type)
                        u += m.size;
                    else {
                        var f = m.elem
                          , g = m.wrapperClasses || []
                          , v = m.wrapperStyle || {}
                          , y = Ye(g, [l, f], void 0, v);
                        y.style.top = j(-i - u - f.depth),
                        m.marginLeft && (y.style.marginLeft = m.marginLeft),
                        m.marginRight && (y.style.marginRight = m.marginRight),
                        c.push(y),
                        u += f.height + f.depth
                    }
                    h = Math.min(h, u),
                    p = Math.max(p, u)
                }
                var b, x = Ye(["vlist"], c);
                if (x.style.height = j(p),
                h < 0) {
                    var w = Ye([], [])
                      , k = Ye(["vlist"], [w]);
                    k.style.height = j(-h);
                    var S = Ye(["vlist-s"], [new ne("​")]);
                    b = [Ye(["vlist-r"], [x, S]), Ye(["vlist-r"], [k])]
                } else
                    b = [Ye(["vlist-r"], [x])];
                var E = Ye(["vlist-t"], b);
                return 2 === b.length && E.classes.push("vlist-t2"),
                E.height = p,
                E.depth = -h,
                E
            },
            makeOrd: function(e, t, n) {
                var r = e.mode
                  , i = e.text
                  , s = ["mord"]
                  , o = "math" === r || "text" === r && t.font
                  , a = o ? t.font : t.fontFamily
                  , l = ""
                  , c = "";
                if (55349 === i.charCodeAt(0) && ([l,c] = function(e, t) {
                    var n = 1024 * (e.charCodeAt(0) - 55296) + (e.charCodeAt(1) - 56320) + 65536
                      , r = "math" === t ? 0 : 1;
                    if (119808 <= n && n < 120484) {
                        var i = Math.floor((n - 119808) / 26);
                        return [We[i][2], We[i][r]]
                    }
                    if (120782 <= n && n <= 120831) {
                        var s = Math.floor((n - 120782) / 10);
                        return [Ve[s][2], Ve[s][r]]
                    }
                    if (120485 === n || 120486 === n)
                        return [We[0][2], We[0][r]];
                    if (120486 < n && n < 120782)
                        return ["", ""];
                    throw new d("Unsupported character: " + e)
                }(i, r)),
                l.length > 0)
                    return je(i, l, r, t, s.concat(c));
                if (a) {
                    var h, p;
                    if ("boldsymbol" === a) {
                        var u = function(e, t, n, r, i) {
                            return "textord" !== i && $e(e, "Math-BoldItalic", t).metrics ? {
                                fontName: "Math-BoldItalic",
                                fontClass: "boldsymbol"
                            } : {
                                fontName: "Main-Bold",
                                fontClass: "mathbf"
                            }
                        }(i, r, 0, 0, n);
                        h = u.fontName,
                        p = [u.fontClass]
                    } else
                        o ? (h = et[a].fontName,
                        p = [a]) : (h = Qe(a, t.fontWeight, t.fontShape),
                        p = [a, t.fontWeight, t.fontShape]);
                    if ($e(i, h, r).metrics)
                        return je(i, h, r, t, s.concat(p));
                    if (Ce.hasOwnProperty(i) && "Typewriter" === h.slice(0, 10)) {
                        for (var m = [], f = 0; f < i.length; f++)
                            m.push(je(i[f], h, r, t, s.concat(p)));
                        return Je(m)
                    }
                }
                if ("mathord" === n)
                    return je(i, "Math-Italic", r, t, s.concat(["mathnormal"]));
                if ("textord" === n) {
                    var g = ce[r][i] && ce[r][i].font;
                    if ("ams" === g) {
                        var v = Qe("amsrm", t.fontWeight, t.fontShape);
                        return je(i, v, r, t, s.concat("amsrm", t.fontWeight, t.fontShape))
                    }
                    if ("main" !== g && g) {
                        var y = Qe(g, t.fontWeight, t.fontShape);
                        return je(i, y, r, t, s.concat(y, t.fontWeight, t.fontShape))
                    }
                    var b = Qe("textrm", t.fontWeight, t.fontShape);
                    return je(i, b, r, t, s.concat(t.fontWeight, t.fontShape))
                }
                throw new Error("unexpected type: " + n + " in makeOrd")
            },
            makeGlue: (e, t) => {
                var n = Ye(["mspace"], [], t)
                  , r = $(e, t);
                return n.style.marginRight = j(r),
                n
            }
            ,
            staticSvg: function(e, t) {
                var [n,r,i] = tt[e]
                  , s = new ie(n)
                  , o = new re([s],{
                    width: j(r),
                    height: j(i),
                    style: "width:" + j(r),
                    viewBox: "0 0 " + 1e3 * r + " " + 1e3 * i,
                    preserveAspectRatio: "xMinYMin"
                })
                  , a = Xe(["overlay"], [o], t);
                return a.height = i,
                a.style.height = j(i),
                a.style.width = j(r),
                a
            },
            svgData: tt,
            tryCombineChars: e => {
                for (var t = 0; t < e.length - 1; t++) {
                    var n = e[t]
                      , r = e[t + 1];
                    n instanceof ne && r instanceof ne && Ke(n, r) && (n.text += r.text,
                    n.height = Math.max(n.height, r.height),
                    n.depth = Math.max(n.depth, r.depth),
                    n.italic = r.italic,
                    e.splice(t + 1, 1),
                    t--)
                }
                return e
            }
        }
          , rt = {
            number: 3,
            unit: "mu"
        }
          , it = {
            number: 4,
            unit: "mu"
        }
          , st = {
            number: 5,
            unit: "mu"
        }
          , ot = {
            mord: {
                mop: rt,
                mbin: it,
                mrel: st,
                minner: rt
            },
            mop: {
                mord: rt,
                mop: rt,
                mrel: st,
                minner: rt
            },
            mbin: {
                mord: it,
                mop: it,
                mopen: it,
                minner: it
            },
            mrel: {
                mord: st,
                mop: st,
                mopen: st,
                minner: st
            },
            mopen: {},
            mclose: {
                mop: rt,
                mbin: it,
                mrel: st,
                minner: rt
            },
            mpunct: {
                mord: rt,
                mop: rt,
                mrel: st,
                mopen: rt,
                mclose: rt,
                mpunct: rt,
                minner: rt
            },
            minner: {
                mord: rt,
                mop: rt,
                mbin: it,
                mrel: st,
                mopen: rt,
                mpunct: rt,
                minner: rt
            }
        }
          , at = {
            mord: {
                mop: rt
            },
            mop: {
                mord: rt,
                mop: rt
            },
            mbin: {},
            mrel: {},
            mopen: {},
            mclose: {
                mop: rt
            },
            mpunct: {},
            minner: {
                mop: rt
            }
        }
          , lt = {}
          , ct = {}
          , ht = {};
        function pt(e) {
            for (var {type: t, names: n, props: r, handler: i, htmlBuilder: s, mathmlBuilder: o} = e, a = {
                type: t,
                numArgs: r.numArgs,
                argTypes: r.argTypes,
                allowedInArgument: !!r.allowedInArgument,
                allowedInText: !!r.allowedInText,
                allowedInMath: void 0 === r.allowedInMath || r.allowedInMath,
                numOptionalArgs: r.numOptionalArgs || 0,
                infix: !!r.infix,
                primitive: !!r.primitive,
                handler: i
            }, l = 0; l < n.length; ++l)
                lt[n[l]] = a;
            t && (s && (ct[t] = s),
            o && (ht[t] = o))
        }
        function ut(e) {
            var {type: t, htmlBuilder: n, mathmlBuilder: r} = e;
            pt({
                type: t,
                names: [],
                props: {
                    numArgs: 0
                },
                handler() {
                    throw new Error("Should never be called.")
                },
                htmlBuilder: n,
                mathmlBuilder: r
            })
        }
        var dt = function(e) {
            return "ordgroup" === e.type && 1 === e.body.length ? e.body[0] : e
        }
          , mt = function(e) {
            return "ordgroup" === e.type ? e.body : [e]
        }
          , ft = nt.makeSpan
          , gt = ["leftmost", "mbin", "mopen", "mrel", "mop", "mpunct"]
          , vt = ["rightmost", "mrel", "mclose", "mpunct"]
          , yt = {
            display: T.DISPLAY,
            text: T.TEXT,
            script: T.SCRIPT,
            scriptscript: T.SCRIPTSCRIPT
        }
          , bt = {
            mord: "mord",
            mop: "mop",
            mbin: "mbin",
            mrel: "mrel",
            mopen: "mopen",
            mclose: "mclose",
            mpunct: "mpunct",
            minner: "minner"
        }
          , xt = function(e, t, n, r) {
            void 0 === r && (r = [null, null]);
            for (var i = [], s = 0; s < e.length; s++) {
                var o = Ct(e[s], t);
                if (o instanceof P) {
                    var a = o.children;
                    i.push(...a)
                } else
                    i.push(o)
            }
            if (nt.tryCombineChars(i),
            !n)
                return i;
            var l = t;
            if (1 === e.length) {
                var c = e[0];
                "sizing" === c.type ? l = t.havingSize(c.size) : "styling" === c.type && (l = t.havingStyle(yt[c.style]))
            }
            var h = ft([r[0] || "leftmost"], [], t)
              , p = ft([r[1] || "rightmost"], [], t)
              , u = "root" === n;
            return wt(i, ( (e, t) => {
                var n = t.classes[0]
                  , r = e.classes[0];
                "mbin" === n && y.contains(vt, r) ? t.classes[0] = "mord" : "mbin" === r && y.contains(gt, n) && (e.classes[0] = "mord")
            }
            ), {
                node: h
            }, p, u),
            wt(i, ( (e, t) => {
                var n = Et(t)
                  , r = Et(e)
                  , i = n && r ? e.hasClass("mtight") ? at[n][r] : ot[n][r] : null;
                if (i)
                    return nt.makeGlue(i, l)
            }
            ), {
                node: h
            }, p, u),
            i
        }
          , wt = function e(t, n, r, i, s) {
            i && t.push(i);
            for (var o = 0; o < t.length; o++) {
                var a = t[o]
                  , l = kt(a);
                if (l)
                    e(l.children, n, r, null, s);
                else {
                    var c = !a.hasClass("mspace");
                    if (c) {
                        var h = n(a, r.node);
                        h && (r.insertAfter ? r.insertAfter(h) : (t.unshift(h),
                        o++))
                    }
                    c ? r.node = a : s && a.hasClass("newline") && (r.node = ft(["leftmost"])),
                    r.insertAfter = (e => n => {
                        t.splice(e + 1, 0, n),
                        o++
                    }
                    )(o)
                }
            }
            i && t.pop()
        }
          , kt = function(e) {
            return e instanceof P || e instanceof Q || e instanceof J && e.hasClass("enclosing") ? e : null
        }
          , St = function e(t, n) {
            var r = kt(t);
            if (r) {
                var i = r.children;
                if (i.length) {
                    if ("right" === n)
                        return e(i[i.length - 1], "right");
                    if ("left" === n)
                        return e(i[0], "left")
                }
            }
            return t
        }
          , Et = function(e, t) {
            return e ? (t && (e = St(e, t)),
            bt[e.classes[0]] || null) : null
        }
          , Mt = function(e, t) {
            var n = ["nulldelimiter"].concat(e.baseSizingClasses());
            return ft(t.concat(n))
        }
          , Ct = function(e, t, n) {
            if (!e)
                return ft();
            if (ct[e.type]) {
                var r = ct[e.type](e, t);
                if (n && t.size !== n.size) {
                    r = ft(t.sizingClasses(n), [r], t);
                    var i = t.sizeMultiplier / n.sizeMultiplier;
                    r.height *= i,
                    r.depth *= i
                }
                return r
            }
            throw new d("Got group of unknown type: '" + e.type + "'")
        };
        function Tt(e) {
            return new P(e)
        }
        class _t {
            constructor(e, t, n) {
                this.type = void 0,
                this.attributes = void 0,
                this.children = void 0,
                this.classes = void 0,
                this.type = e,
                this.attributes = {},
                this.children = t || [],
                this.classes = n || []
            }
            setAttribute(e, t) {
                this.attributes[e] = t
            }
            getAttribute(e) {
                return this.attributes[e]
            }
            toNode() {
                var e = document.createElementNS("http://www.w3.org/1998/Math/MathML", this.type);
                for (var t in this.attributes)
                    Object.prototype.hasOwnProperty.call(this.attributes, t) && e.setAttribute(t, this.attributes[t]);
                this.classes.length > 0 && (e.className = K(this.classes));
                for (var n = 0; n < this.children.length; n++)
                    e.appendChild(this.children[n].toNode());
                return e
            }
            toMarkup() {
                var e = "<" + this.type;
                for (var t in this.attributes)
                    Object.prototype.hasOwnProperty.call(this.attributes, t) && (e += " " + t + '="',
                    e += y.escape(this.attributes[t]),
                    e += '"');
                this.classes.length > 0 && (e += ' class ="' + y.escape(K(this.classes)) + '"'),
                e += ">";
                for (var n = 0; n < this.children.length; n++)
                    e += this.children[n].toMarkup();
                return e += "</" + this.type + ">"
            }
            toText() {
                return this.children.map((e => e.toText())).join("")
            }
        }
        class At {
            constructor(e) {
                this.text = void 0,
                this.text = e
            }
            toNode() {
                return document.createTextNode(this.text)
            }
            toMarkup() {
                return y.escape(this.toText())
            }
            toText() {
                return this.text
            }
        }
        var It = {
            MathNode: _t,
            TextNode: At,
            SpaceNode: class {
                constructor(e) {
                    this.width = void 0,
                    this.character = void 0,
                    this.width = e,
                    this.character = e >= .05555 && e <= .05556 ? " " : e >= .1666 && e <= .1667 ? " " : e >= .2222 && e <= .2223 ? " " : e >= .2777 && e <= .2778 ? "  " : e >= -.05556 && e <= -.05555 ? " ⁣" : e >= -.1667 && e <= -.1666 ? " ⁣" : e >= -.2223 && e <= -.2222 ? " ⁣" : e >= -.2778 && e <= -.2777 ? " ⁣" : null
                }
                toNode() {
                    if (this.character)
                        return document.createTextNode(this.character);
                    var e = document.createElementNS("http://www.w3.org/1998/Math/MathML", "mspace");
                    return e.setAttribute("width", j(this.width)),
                    e
                }
                toMarkup() {
                    return this.character ? "<mtext>" + this.character + "</mtext>" : '<mspace width="' + j(this.width) + '"/>'
                }
                toText() {
                    return this.character ? this.character : " "
                }
            }
            ,
            newDocumentFragment: Tt
        }
          , Rt = function(e, t, n) {
            return !ce[t][e] || !ce[t][e].replace || 55349 === e.charCodeAt(0) || Ce.hasOwnProperty(e) && n && (n.fontFamily && "tt" === n.fontFamily.slice(4, 6) || n.font && "tt" === n.font.slice(4, 6)) || (e = ce[t][e].replace),
            new It.TextNode(e)
        }
          , Nt = function(e) {
            return 1 === e.length ? e[0] : new It.MathNode("mrow",e)
        }
          , Pt = function(e, t) {
            if ("texttt" === t.fontFamily)
                return "monospace";
            if ("textsf" === t.fontFamily)
                return "textit" === t.fontShape && "textbf" === t.fontWeight ? "sans-serif-bold-italic" : "textit" === t.fontShape ? "sans-serif-italic" : "textbf" === t.fontWeight ? "bold-sans-serif" : "sans-serif";
            if ("textit" === t.fontShape && "textbf" === t.fontWeight)
                return "bold-italic";
            if ("textit" === t.fontShape)
                return "italic";
            if ("textbf" === t.fontWeight)
                return "bold";
            var n = t.font;
            if (!n || "mathnormal" === n)
                return null;
            var r = e.mode;
            if ("mathit" === n)
                return "italic";
            if ("boldsymbol" === n)
                return "textord" === e.type ? "bold" : "bold-italic";
            if ("mathbf" === n)
                return "bold";
            if ("mathbb" === n)
                return "double-struck";
            if ("mathfrak" === n)
                return "fraktur";
            if ("mathscr" === n || "mathcal" === n)
                return "script";
            if ("mathsf" === n)
                return "sans-serif";
            if ("mathtt" === n)
                return "monospace";
            var i = e.text;
            return y.contains(["\\imath", "\\jmath"], i) ? null : (ce[r][i] && ce[r][i].replace && (i = ce[r][i].replace),
            F(i, nt.fontMap[n].fontName, r) ? nt.fontMap[n].variant : null)
        }
          , Ot = function(e, t, n) {
            if (1 === e.length) {
                var r = Dt(e[0], t);
                return n && r instanceof _t && "mo" === r.type && (r.setAttribute("lspace", "0em"),
                r.setAttribute("rspace", "0em")),
                [r]
            }
            for (var i, s = [], o = 0; o < e.length; o++) {
                var a = Dt(e[o], t);
                if (a instanceof _t && i instanceof _t) {
                    if ("mtext" === a.type && "mtext" === i.type && a.getAttribute("mathvariant") === i.getAttribute("mathvariant")) {
                        i.children.push(...a.children);
                        continue
                    }
                    if ("mn" === a.type && "mn" === i.type) {
                        i.children.push(...a.children);
                        continue
                    }
                    if ("mi" === a.type && 1 === a.children.length && "mn" === i.type) {
                        var l = a.children[0];
                        if (l instanceof At && "." === l.text) {
                            i.children.push(...a.children);
                            continue
                        }
                    } else if ("mi" === i.type && 1 === i.children.length) {
                        var c = i.children[0];
                        if (c instanceof At && "̸" === c.text && ("mo" === a.type || "mi" === a.type || "mn" === a.type)) {
                            var h = a.children[0];
                            h instanceof At && h.text.length > 0 && (h.text = h.text.slice(0, 1) + "̸" + h.text.slice(1),
                            s.pop())
                        }
                    }
                }
                s.push(a),
                i = a
            }
            return s
        }
          , Lt = function(e, t, n) {
            return Nt(Ot(e, t, n))
        }
          , Dt = function(e, t) {
            if (!e)
                return new It.MathNode("mrow");
            if (ht[e.type])
                return ht[e.type](e, t);
            throw new d("Got group of unknown type: '" + e.type + "'")
        };
        var Ft = {
            widehat: "^",
            widecheck: "ˇ",
            widetilde: "~",
            utilde: "~",
            overleftarrow: "←",
            underleftarrow: "←",
            xleftarrow: "←",
            overrightarrow: "→",
            underrightarrow: "→",
            xrightarrow: "→",
            underbrace: "⏟",
            overbrace: "⏞",
            overgroup: "⏠",
            undergroup: "⏡",
            overleftrightarrow: "↔",
            underleftrightarrow: "↔",
            xleftrightarrow: "↔",
            Overrightarrow: "⇒",
            xRightarrow: "⇒",
            overleftharpoon: "↼",
            xleftharpoonup: "↼",
            overrightharpoon: "⇀",
            xrightharpoonup: "⇀",
            xLeftarrow: "⇐",
            xLeftrightarrow: "⇔",
            xhookleftarrow: "↩",
            xhookrightarrow: "↪",
            xmapsto: "↦",
            xrightharpoondown: "⇁",
            xleftharpoondown: "↽",
            xrightleftharpoons: "⇌",
            xleftrightharpoons: "⇋",
            xtwoheadleftarrow: "↞",
            xtwoheadrightarrow: "↠",
            xlongequal: "=",
            xtofrom: "⇄",
            xrightleftarrows: "⇄",
            xrightequilibrium: "⇌",
            xleftequilibrium: "⇋",
            "\\cdrightarrow": "→",
            "\\cdleftarrow": "←",
            "\\cdlongequal": "="
        }
          , zt = {
            overrightarrow: [["rightarrow"], .888, 522, "xMaxYMin"],
            overleftarrow: [["leftarrow"], .888, 522, "xMinYMin"],
            underrightarrow: [["rightarrow"], .888, 522, "xMaxYMin"],
            underleftarrow: [["leftarrow"], .888, 522, "xMinYMin"],
            xrightarrow: [["rightarrow"], 1.469, 522, "xMaxYMin"],
            "\\cdrightarrow": [["rightarrow"], 3, 522, "xMaxYMin"],
            xleftarrow: [["leftarrow"], 1.469, 522, "xMinYMin"],
            "\\cdleftarrow": [["leftarrow"], 3, 522, "xMinYMin"],
            Overrightarrow: [["doublerightarrow"], .888, 560, "xMaxYMin"],
            xRightarrow: [["doublerightarrow"], 1.526, 560, "xMaxYMin"],
            xLeftarrow: [["doubleleftarrow"], 1.526, 560, "xMinYMin"],
            overleftharpoon: [["leftharpoon"], .888, 522, "xMinYMin"],
            xleftharpoonup: [["leftharpoon"], .888, 522, "xMinYMin"],
            xleftharpoondown: [["leftharpoondown"], .888, 522, "xMinYMin"],
            overrightharpoon: [["rightharpoon"], .888, 522, "xMaxYMin"],
            xrightharpoonup: [["rightharpoon"], .888, 522, "xMaxYMin"],
            xrightharpoondown: [["rightharpoondown"], .888, 522, "xMaxYMin"],
            xlongequal: [["longequal"], .888, 334, "xMinYMin"],
            "\\cdlongequal": [["longequal"], 3, 334, "xMinYMin"],
            xtwoheadleftarrow: [["twoheadleftarrow"], .888, 334, "xMinYMin"],
            xtwoheadrightarrow: [["twoheadrightarrow"], .888, 334, "xMaxYMin"],
            overleftrightarrow: [["leftarrow", "rightarrow"], .888, 522],
            overbrace: [["leftbrace", "midbrace", "rightbrace"], 1.6, 548],
            underbrace: [["leftbraceunder", "midbraceunder", "rightbraceunder"], 1.6, 548],
            underleftrightarrow: [["leftarrow", "rightarrow"], .888, 522],
            xleftrightarrow: [["leftarrow", "rightarrow"], 1.75, 522],
            xLeftrightarrow: [["doubleleftarrow", "doublerightarrow"], 1.75, 560],
            xrightleftharpoons: [["leftharpoondownplus", "rightharpoonplus"], 1.75, 716],
            xleftrightharpoons: [["leftharpoonplus", "rightharpoondownplus"], 1.75, 716],
            xhookleftarrow: [["leftarrow", "righthook"], 1.08, 522],
            xhookrightarrow: [["lefthook", "rightarrow"], 1.08, 522],
            overlinesegment: [["leftlinesegment", "rightlinesegment"], .888, 522],
            underlinesegment: [["leftlinesegment", "rightlinesegment"], .888, 522],
            overgroup: [["leftgroup", "rightgroup"], .888, 342],
            undergroup: [["leftgroupunder", "rightgroupunder"], .888, 342],
            xmapsto: [["leftmapsto", "rightarrow"], 1.5, 522],
            xtofrom: [["leftToFrom", "rightToFrom"], 1.75, 528],
            xrightleftarrows: [["baraboveleftarrow", "rightarrowabovebar"], 1.75, 901],
            xrightequilibrium: [["baraboveshortleftharpoon", "rightharpoonaboveshortbar"], 1.75, 716],
            xleftequilibrium: [["shortbaraboveleftharpoon", "shortrightharpoonabovebar"], 1.75, 716]
        }
          , Bt = function(e, t, n, r, i) {
            var s, o = e.height + e.depth + n + r;
            if (/fbox|color|angl/.test(t)) {
                if (s = nt.makeSpan(["stretchy", t], [], i),
                "fbox" === t) {
                    var a = i.color && i.getColor();
                    a && (s.style.borderColor = a)
                }
            } else {
                var l = [];
                /^[bx]cancel$/.test(t) && l.push(new se({
                    x1: "0",
                    y1: "0",
                    x2: "100%",
                    y2: "100%",
                    "stroke-width": "0.046em"
                })),
                /^x?cancel$/.test(t) && l.push(new se({
                    x1: "0",
                    y1: "100%",
                    x2: "100%",
                    y2: "0",
                    "stroke-width": "0.046em"
                }));
                var c = new re(l,{
                    width: "100%",
                    height: j(o)
                });
                s = nt.makeSvgSpan([], [c], i)
            }
            return s.height = o,
            s.style.height = j(o),
            s
        }
          , qt = function(e) {
            var t = new It.MathNode("mo",[new It.TextNode(Ft[e.replace(/^\\/, "")])]);
            return t.setAttribute("stretchy", "true"),
            t
        }
          , Ht = function(e, t) {
            var {span: n, minWidth: r, height: i} = function() {
                var n = 4e5
                  , r = e.label.slice(1);
                if (y.contains(["widehat", "widecheck", "widetilde", "utilde"], r)) {
                    var i, s, o, a = "ordgroup" === (d = e.base).type ? d.body.length : 1;
                    if (a > 5)
                        "widehat" === r || "widecheck" === r ? (i = 420,
                        n = 2364,
                        o = .42,
                        s = r + "4") : (i = 312,
                        n = 2340,
                        o = .34,
                        s = "tilde4");
                    else {
                        var l = [1, 1, 2, 2, 3, 3][a];
                        "widehat" === r || "widecheck" === r ? (n = [0, 1062, 2364, 2364, 2364][l],
                        i = [0, 239, 300, 360, 420][l],
                        o = [0, .24, .3, .3, .36, .42][l],
                        s = r + l) : (n = [0, 600, 1033, 2339, 2340][l],
                        i = [0, 260, 286, 306, 312][l],
                        o = [0, .26, .286, .3, .306, .34][l],
                        s = "tilde" + l)
                    }
                    var c = new ie(s)
                      , h = new re([c],{
                        width: "100%",
                        height: j(o),
                        viewBox: "0 0 " + n + " " + i,
                        preserveAspectRatio: "none"
                    });
                    return {
                        span: nt.makeSvgSpan([], [h], t),
                        minWidth: 0,
                        height: o
                    }
                }
                var p, u, d, m = [], f = zt[r], [g,v,b] = f, x = b / 1e3, w = g.length;
                if (1 === w)
                    p = ["hide-tail"],
                    u = [f[3]];
                else if (2 === w)
                    p = ["halfarrow-left", "halfarrow-right"],
                    u = ["xMinYMin", "xMaxYMin"];
                else {
                    if (3 !== w)
                        throw new Error("Correct katexImagesData or update code here to support\n                    " + w + " children.");
                    p = ["brace-left", "brace-center", "brace-right"],
                    u = ["xMinYMin", "xMidYMin", "xMaxYMin"]
                }
                for (var k = 0; k < w; k++) {
                    var S = new ie(g[k])
                      , E = new re([S],{
                        width: "400em",
                        height: j(x),
                        viewBox: "0 0 " + n + " " + b,
                        preserveAspectRatio: u[k] + " slice"
                    })
                      , M = nt.makeSvgSpan([p[k]], [E], t);
                    if (1 === w)
                        return {
                            span: M,
                            minWidth: v,
                            height: x
                        };
                    M.style.height = j(x),
                    m.push(M)
                }
                return {
                    span: nt.makeSpan(["stretchy"], m, t),
                    minWidth: v,
                    height: x
                }
            }();
            return n.height = i,
            n.style.height = j(i),
            r > 0 && (n.style.minWidth = j(r)),
            n
        };
        function Ut(e, t) {
            if (!e || e.type !== t)
                throw new Error("Expected node of type " + t + ", but got " + (e ? "node of type " + e.type : String(e)));
            return e
        }
        function Gt(e) {
            var t = Wt(e);
            if (!t)
                throw new Error("Expected node of symbol group type, but got " + (e ? "node of type " + e.type : String(e)));
            return t
        }
        function Wt(e) {
            return e && ("atom" === e.type || le.hasOwnProperty(e.type)) ? e : null
        }
        var Vt = (e, t) => {
            var n, r, i;
            e && "supsub" === e.type ? (n = (r = Ut(e.base, "accent")).base,
            e.base = n,
            i = function(e) {
                if (e instanceof J)
                    return e;
                throw new Error("Expected span<HtmlDomNode> but got " + String(e) + ".")
            }(Ct(e, t)),
            e.base = r) : n = (r = Ut(e, "accent")).base;
            var s = Ct(n, t.havingCrampedStyle())
              , o = 0;
            if (r.isShifty && y.isCharacterBox(n)) {
                var a = y.getBaseElem(n);
                o = oe(Ct(a, t.havingCrampedStyle())).skew
            }
            var l, c = "\\c" === r.label, h = c ? s.height + s.depth : Math.min(s.height, t.fontMetrics().xHeight);
            if (r.isStretchy)
                l = Ht(r, t),
                l = nt.makeVList({
                    positionType: "firstBaseline",
                    children: [{
                        type: "elem",
                        elem: s
                    }, {
                        type: "elem",
                        elem: l,
                        wrapperClasses: ["svg-align"],
                        wrapperStyle: o > 0 ? {
                            width: "calc(100% - " + j(2 * o) + ")",
                            marginLeft: j(2 * o)
                        } : void 0
                    }]
                }, t);
            else {
                var p, u;
                "\\vec" === r.label ? (p = nt.staticSvg("vec", t),
                u = nt.svgData.vec[1]) : ((p = oe(p = nt.makeOrd({
                    mode: r.mode,
                    text: r.label
                }, t, "textord"))).italic = 0,
                u = p.width,
                c && (h += p.depth)),
                l = nt.makeSpan(["accent-body"], [p]);
                var d = "\\textcircled" === r.label;
                d && (l.classes.push("accent-full"),
                h = s.height);
                var m = o;
                d || (m -= u / 2),
                l.style.left = j(m),
                "\\textcircled" === r.label && (l.style.top = ".2em"),
                l = nt.makeVList({
                    positionType: "firstBaseline",
                    children: [{
                        type: "elem",
                        elem: s
                    }, {
                        type: "kern",
                        size: -h
                    }, {
                        type: "elem",
                        elem: l
                    }]
                }, t)
            }
            var f = nt.makeSpan(["mord", "accent"], [l], t);
            return i ? (i.children[0] = f,
            i.height = Math.max(f.height, i.height),
            i.classes[0] = "mord",
            i) : f
        }
          , $t = (e, t) => {
            var n = e.isStretchy ? qt(e.label) : new It.MathNode("mo",[Rt(e.label, e.mode)])
              , r = new It.MathNode("mover",[Dt(e.base, t), n]);
            return r.setAttribute("accent", "true"),
            r
        }
          , jt = new RegExp(["\\acute", "\\grave", "\\ddot", "\\tilde", "\\bar", "\\breve", "\\check", "\\hat", "\\vec", "\\dot", "\\mathring"].map((e => "\\" + e)).join("|"));
        pt({
            type: "accent",
            names: ["\\acute", "\\grave", "\\ddot", "\\tilde", "\\bar", "\\breve", "\\check", "\\hat", "\\vec", "\\dot", "\\mathring", "\\widecheck", "\\widehat", "\\widetilde", "\\overrightarrow", "\\overleftarrow", "\\Overrightarrow", "\\overleftrightarrow", "\\overgroup", "\\overlinesegment", "\\overleftharpoon", "\\overrightharpoon"],
            props: {
                numArgs: 1
            },
            handler: (e, t) => {
                var n = dt(t[0])
                  , r = !jt.test(e.funcName)
                  , i = !r || "\\widehat" === e.funcName || "\\widetilde" === e.funcName || "\\widecheck" === e.funcName;
                return {
                    type: "accent",
                    mode: e.parser.mode,
                    label: e.funcName,
                    isStretchy: r,
                    isShifty: i,
                    base: n
                }
            }
            ,
            htmlBuilder: Vt,
            mathmlBuilder: $t
        }),
        pt({
            type: "accent",
            names: ["\\'", "\\`", "\\^", "\\~", "\\=", "\\u", "\\.", '\\"', "\\c", "\\r", "\\H", "\\v", "\\textcircled"],
            props: {
                numArgs: 1,
                allowedInText: !0,
                allowedInMath: !0,
                argTypes: ["primitive"]
            },
            handler: (e, t) => {
                var n = t[0]
                  , r = e.parser.mode;
                return "math" === r && (e.parser.settings.reportNonstrict("mathVsTextAccents", "LaTeX's accent " + e.funcName + " works only in text mode"),
                r = "text"),
                {
                    type: "accent",
                    mode: r,
                    label: e.funcName,
                    isStretchy: !1,
                    isShifty: !0,
                    base: n
                }
            }
            ,
            htmlBuilder: Vt,
            mathmlBuilder: $t
        }),
        pt({
            type: "accentUnder",
            names: ["\\underleftarrow", "\\underrightarrow", "\\underleftrightarrow", "\\undergroup", "\\underlinesegment", "\\utilde"],
            props: {
                numArgs: 1
            },
            handler: (e, t) => {
                var {parser: n, funcName: r} = e
                  , i = t[0];
                return {
                    type: "accentUnder",
                    mode: n.mode,
                    label: r,
                    base: i
                }
            }
            ,
            htmlBuilder: (e, t) => {
                var n = Ct(e.base, t)
                  , r = Ht(e, t)
                  , i = "\\utilde" === e.label ? .12 : 0
                  , s = nt.makeVList({
                    positionType: "top",
                    positionData: n.height,
                    children: [{
                        type: "elem",
                        elem: r,
                        wrapperClasses: ["svg-align"]
                    }, {
                        type: "kern",
                        size: i
                    }, {
                        type: "elem",
                        elem: n
                    }]
                }, t);
                return nt.makeSpan(["mord", "accentunder"], [s], t)
            }
            ,
            mathmlBuilder: (e, t) => {
                var n = qt(e.label)
                  , r = new It.MathNode("munder",[Dt(e.base, t), n]);
                return r.setAttribute("accentunder", "true"),
                r
            }
        });
        var Kt = e => {
            var t = new It.MathNode("mpadded",e ? [e] : []);
            return t.setAttribute("width", "+0.6em"),
            t.setAttribute("lspace", "0.3em"),
            t
        }
        ;
        pt({
            type: "xArrow",
            names: ["\\xleftarrow", "\\xrightarrow", "\\xLeftarrow", "\\xRightarrow", "\\xleftrightarrow", "\\xLeftrightarrow", "\\xhookleftarrow", "\\xhookrightarrow", "\\xmapsto", "\\xrightharpoondown", "\\xrightharpoonup", "\\xleftharpoondown", "\\xleftharpoonup", "\\xrightleftharpoons", "\\xleftrightharpoons", "\\xlongequal", "\\xtwoheadrightarrow", "\\xtwoheadleftarrow", "\\xtofrom", "\\xrightleftarrows", "\\xrightequilibrium", "\\xleftequilibrium", "\\\\cdrightarrow", "\\\\cdleftarrow", "\\\\cdlongequal"],
            props: {
                numArgs: 1,
                numOptionalArgs: 1
            },
            handler(e, t, n) {
                var {parser: r, funcName: i} = e;
                return {
                    type: "xArrow",
                    mode: r.mode,
                    label: i,
                    body: t[0],
                    below: n[0]
                }
            },
            htmlBuilder(e, t) {
                var n, r = t.style, i = t.havingStyle(r.sup()), s = nt.wrapFragment(Ct(e.body, i, t), t), o = "\\x" === e.label.slice(0, 2) ? "x" : "cd";
                s.classes.push(o + "-arrow-pad"),
                e.below && (i = t.havingStyle(r.sub()),
                (n = nt.wrapFragment(Ct(e.below, i, t), t)).classes.push(o + "-arrow-pad"));
                var a, l = Ht(e, t), c = -t.fontMetrics().axisHeight + .5 * l.height, h = -t.fontMetrics().axisHeight - .5 * l.height - .111;
                if ((s.depth > .25 || "\\xleftequilibrium" === e.label) && (h -= s.depth),
                n) {
                    var p = -t.fontMetrics().axisHeight + n.height + .5 * l.height + .111;
                    a = nt.makeVList({
                        positionType: "individualShift",
                        children: [{
                            type: "elem",
                            elem: s,
                            shift: h
                        }, {
                            type: "elem",
                            elem: l,
                            shift: c
                        }, {
                            type: "elem",
                            elem: n,
                            shift: p
                        }]
                    }, t)
                } else
                    a = nt.makeVList({
                        positionType: "individualShift",
                        children: [{
                            type: "elem",
                            elem: s,
                            shift: h
                        }, {
                            type: "elem",
                            elem: l,
                            shift: c
                        }]
                    }, t);
                return a.children[0].children[0].children[1].classes.push("svg-align"),
                nt.makeSpan(["mrel", "x-arrow"], [a], t)
            },
            mathmlBuilder(e, t) {
                var n, r = qt(e.label);
                if (r.setAttribute("minsize", "x" === e.label.charAt(0) ? "1.75em" : "3.0em"),
                e.body) {
                    var i = Kt(Dt(e.body, t));
                    if (e.below) {
                        var s = Kt(Dt(e.below, t));
                        n = new It.MathNode("munderover",[r, s, i])
                    } else
                        n = new It.MathNode("mover",[r, i])
                } else if (e.below) {
                    var o = Kt(Dt(e.below, t));
                    n = new It.MathNode("munder",[r, o])
                } else
                    n = Kt(),
                    n = new It.MathNode("mover",[r, n]);
                return n
            }
        });
        var Zt = nt.makeSpan;
        function Yt(e, t) {
            var n = xt(e.body, t, !0);
            return Zt([e.mclass], n, t)
        }
        function Xt(e, t) {
            var n, r = Ot(e.body, t);
            return "minner" === e.mclass ? n = new It.MathNode("mpadded",r) : "mord" === e.mclass ? e.isCharacterBox ? (n = r[0]).type = "mi" : n = new It.MathNode("mi",r) : (e.isCharacterBox ? (n = r[0]).type = "mo" : n = new It.MathNode("mo",r),
            "mbin" === e.mclass ? (n.attributes.lspace = "0.22em",
            n.attributes.rspace = "0.22em") : "mpunct" === e.mclass ? (n.attributes.lspace = "0em",
            n.attributes.rspace = "0.17em") : "mopen" === e.mclass || "mclose" === e.mclass ? (n.attributes.lspace = "0em",
            n.attributes.rspace = "0em") : "minner" === e.mclass && (n.attributes.lspace = "0.0556em",
            n.attributes.width = "+0.1111em")),
            n
        }
        pt({
            type: "mclass",
            names: ["\\mathord", "\\mathbin", "\\mathrel", "\\mathopen", "\\mathclose", "\\mathpunct", "\\mathinner"],
            props: {
                numArgs: 1,
                primitive: !0
            },
            handler(e, t) {
                var {parser: n, funcName: r} = e
                  , i = t[0];
                return {
                    type: "mclass",
                    mode: n.mode,
                    mclass: "m" + r.slice(5),
                    body: mt(i),
                    isCharacterBox: y.isCharacterBox(i)
                }
            },
            htmlBuilder: Yt,
            mathmlBuilder: Xt
        });
        var Jt = e => {
            var t = "ordgroup" === e.type && e.body.length ? e.body[0] : e;
            return "atom" !== t.type || "bin" !== t.family && "rel" !== t.family ? "mord" : "m" + t.family
        }
        ;
        pt({
            type: "mclass",
            names: ["\\@binrel"],
            props: {
                numArgs: 2
            },
            handler(e, t) {
                var {parser: n} = e;
                return {
                    type: "mclass",
                    mode: n.mode,
                    mclass: Jt(t[0]),
                    body: mt(t[1]),
                    isCharacterBox: y.isCharacterBox(t[1])
                }
            }
        }),
        pt({
            type: "mclass",
            names: ["\\stackrel", "\\overset", "\\underset"],
            props: {
                numArgs: 2
            },
            handler(e, t) {
                var n, {parser: r, funcName: i} = e, s = t[1], o = t[0];
                n = "\\stackrel" !== i ? Jt(s) : "mrel";
                var a = {
                    type: "op",
                    mode: s.mode,
                    limits: !0,
                    alwaysHandleSupSub: !0,
                    parentIsSupSub: !1,
                    symbol: !1,
                    suppressBaseShift: "\\stackrel" !== i,
                    body: mt(s)
                }
                  , l = {
                    type: "supsub",
                    mode: o.mode,
                    base: a,
                    sup: "\\underset" === i ? null : o,
                    sub: "\\underset" === i ? o : null
                };
                return {
                    type: "mclass",
                    mode: r.mode,
                    mclass: n,
                    body: [l],
                    isCharacterBox: y.isCharacterBox(l)
                }
            },
            htmlBuilder: Yt,
            mathmlBuilder: Xt
        }),
        pt({
            type: "pmb",
            names: ["\\pmb"],
            props: {
                numArgs: 1,
                allowedInText: !0
            },
            handler(e, t) {
                var {parser: n} = e;
                return {
                    type: "pmb",
                    mode: n.mode,
                    mclass: Jt(t[0]),
                    body: mt(t[0])
                }
            },
            htmlBuilder(e, t) {
                var n = xt(e.body, t, !0)
                  , r = nt.makeSpan([e.mclass], n, t);
                return r.style.textShadow = "0.02em 0.01em 0.04px",
                r
            },
            mathmlBuilder(e, t) {
                var n = Ot(e.body, t)
                  , r = new It.MathNode("mstyle",n);
                return r.setAttribute("style", "text-shadow: 0.02em 0.01em 0.04px"),
                r
            }
        });
        var Qt = {
            ">": "\\\\cdrightarrow",
            "<": "\\\\cdleftarrow",
            "=": "\\\\cdlongequal",
            A: "\\uparrow",
            V: "\\downarrow",
            "|": "\\Vert",
            ".": "no arrow"
        }
          , en = e => "textord" === e.type && "@" === e.text;
        function tn(e, t, n) {
            var r = Qt[e];
            switch (r) {
            case "\\\\cdrightarrow":
            case "\\\\cdleftarrow":
                return n.callFunction(r, [t[0]], [t[1]]);
            case "\\uparrow":
            case "\\downarrow":
                var i = {
                    type: "atom",
                    text: r,
                    mode: "math",
                    family: "rel"
                }
                  , s = {
                    type: "ordgroup",
                    mode: "math",
                    body: [n.callFunction("\\\\cdleft", [t[0]], []), n.callFunction("\\Big", [i], []), n.callFunction("\\\\cdright", [t[1]], [])]
                };
                return n.callFunction("\\\\cdparent", [s], []);
            case "\\\\cdlongequal":
                return n.callFunction("\\\\cdlongequal", [], []);
            case "\\Vert":
                return n.callFunction("\\Big", [{
                    type: "textord",
                    text: "\\Vert",
                    mode: "math"
                }], []);
            default:
                return {
                    type: "textord",
                    text: " ",
                    mode: "math"
                }
            }
        }
        pt({
            type: "cdlabel",
            names: ["\\\\cdleft", "\\\\cdright"],
            props: {
                numArgs: 1
            },
            handler(e, t) {
                var {parser: n, funcName: r} = e;
                return {
                    type: "cdlabel",
                    mode: n.mode,
                    side: r.slice(4),
                    label: t[0]
                }
            },
            htmlBuilder(e, t) {
                var n = t.havingStyle(t.style.sup())
                  , r = nt.wrapFragment(Ct(e.label, n, t), t);
                return r.classes.push("cd-label-" + e.side),
                r.style.bottom = j(.8 - r.depth),
                r.height = 0,
                r.depth = 0,
                r
            },
            mathmlBuilder(e, t) {
                var n = new It.MathNode("mrow",[Dt(e.label, t)]);
                return (n = new It.MathNode("mpadded",[n])).setAttribute("width", "0"),
                "left" === e.side && n.setAttribute("lspace", "-1width"),
                n.setAttribute("voffset", "0.7em"),
                (n = new It.MathNode("mstyle",[n])).setAttribute("displaystyle", "false"),
                n.setAttribute("scriptlevel", "1"),
                n
            }
        }),
        pt({
            type: "cdlabelparent",
            names: ["\\\\cdparent"],
            props: {
                numArgs: 1
            },
            handler(e, t) {
                var {parser: n} = e;
                return {
                    type: "cdlabelparent",
                    mode: n.mode,
                    fragment: t[0]
                }
            },
            htmlBuilder(e, t) {
                var n = nt.wrapFragment(Ct(e.fragment, t), t);
                return n.classes.push("cd-vert-arrow"),
                n
            },
            mathmlBuilder: (e, t) => new It.MathNode("mrow",[Dt(e.fragment, t)])
        }),
        pt({
            type: "textord",
            names: ["\\@char"],
            props: {
                numArgs: 1,
                allowedInText: !0
            },
            handler(e, t) {
                for (var {parser: n} = e, r = Ut(t[0], "ordgroup").body, i = "", s = 0; s < r.length; s++) {
                    i += Ut(r[s], "textord").text
                }
                var o, a = parseInt(i);
                if (isNaN(a))
                    throw new d("\\@char has non-numeric argument " + i);
                if (a < 0 || a >= 1114111)
                    throw new d("\\@char with invalid code point " + i);
                return a <= 65535 ? o = String.fromCharCode(a) : (a -= 65536,
                o = String.fromCharCode(55296 + (a >> 10), 56320 + (1023 & a))),
                {
                    type: "textord",
                    mode: n.mode,
                    text: o
                }
            }
        });
        var nn = (e, t) => {
            var n = xt(e.body, t.withColor(e.color), !1);
            return nt.makeFragment(n)
        }
          , rn = (e, t) => {
            var n = Ot(e.body, t.withColor(e.color))
              , r = new It.MathNode("mstyle",n);
            return r.setAttribute("mathcolor", e.color),
            r
        }
        ;
        pt({
            type: "color",
            names: ["\\textcolor"],
            props: {
                numArgs: 2,
                allowedInText: !0,
                argTypes: ["color", "original"]
            },
            handler(e, t) {
                var {parser: n} = e
                  , r = Ut(t[0], "color-token").color
                  , i = t[1];
                return {
                    type: "color",
                    mode: n.mode,
                    color: r,
                    body: mt(i)
                }
            },
            htmlBuilder: nn,
            mathmlBuilder: rn
        }),
        pt({
            type: "color",
            names: ["\\color"],
            props: {
                numArgs: 1,
                allowedInText: !0,
                argTypes: ["color"]
            },
            handler(e, t) {
                var {parser: n, breakOnTokenText: r} = e
                  , i = Ut(t[0], "color-token").color;
                n.gullet.macros.set("\\current@color", i);
                var s = n.parseExpression(!0, r);
                return {
                    type: "color",
                    mode: n.mode,
                    color: i,
                    body: s
                }
            },
            htmlBuilder: nn,
            mathmlBuilder: rn
        }),
        pt({
            type: "cr",
            names: ["\\\\"],
            props: {
                numArgs: 0,
                numOptionalArgs: 0,
                allowedInText: !0
            },
            handler(e, t, n) {
                var {parser: r} = e
                  , i = "[" === r.gullet.future().text ? r.parseSizeGroup(!0) : null
                  , s = !r.settings.displayMode || !r.settings.useStrictBehavior("newLineInDisplayMode", "In LaTeX, \\\\ or \\newline does nothing in display mode");
                return {
                    type: "cr",
                    mode: r.mode,
                    newLine: s,
                    size: i && Ut(i, "size").value
                }
            },
            htmlBuilder(e, t) {
                var n = nt.makeSpan(["mspace"], [], t);
                return e.newLine && (n.classes.push("newline"),
                e.size && (n.style.marginTop = j($(e.size, t)))),
                n
            },
            mathmlBuilder(e, t) {
                var n = new It.MathNode("mspace");
                return e.newLine && (n.setAttribute("linebreak", "newline"),
                e.size && n.setAttribute("height", j($(e.size, t)))),
                n
            }
        });
        var sn = {
            "\\global": "\\global",
            "\\long": "\\\\globallong",
            "\\\\globallong": "\\\\globallong",
            "\\def": "\\gdef",
            "\\gdef": "\\gdef",
            "\\edef": "\\xdef",
            "\\xdef": "\\xdef",
            "\\let": "\\\\globallet",
            "\\futurelet": "\\\\globalfuture"
        }
          , on = e => {
            var t = e.text;
            if (/^(?:[\\{}$&#^_]|EOF)$/.test(t))
                throw new d("Expected a control sequence",e);
            return t
        }
          , an = (e, t, n, r) => {
            var i = e.gullet.macros.get(n.text);
            null == i && (n.noexpand = !0,
            i = {
                tokens: [n],
                numArgs: 0,
                unexpandable: !e.gullet.isExpandable(n.text)
            }),
            e.gullet.macros.set(t, i, r)
        }
        ;
        pt({
            type: "internal",
            names: ["\\global", "\\long", "\\\\globallong"],
            props: {
                numArgs: 0,
                allowedInText: !0
            },
            handler(e) {
                var {parser: t, funcName: n} = e;
                t.consumeSpaces();
                var r = t.fetch();
                if (sn[r.text])
                    return "\\global" !== n && "\\\\globallong" !== n || (r.text = sn[r.text]),
                    Ut(t.parseFunction(), "internal");
                throw new d("Invalid token after macro prefix",r)
            }
        }),
        pt({
            type: "internal",
            names: ["\\def", "\\gdef", "\\edef", "\\xdef"],
            props: {
                numArgs: 0,
                allowedInText: !0,
                primitive: !0
            },
            handler(e) {
                var {parser: t, funcName: n} = e
                  , r = t.gullet.popToken()
                  , i = r.text;
                if (/^(?:[\\{}$&#^_]|EOF)$/.test(i))
                    throw new d("Expected a control sequence",r);
                for (var s, o = 0, a = [[]]; "{" !== t.gullet.future().text; )
                    if ("#" === (r = t.gullet.popToken()).text) {
                        if ("{" === t.gullet.future().text) {
                            s = t.gullet.future(),
                            a[o].push("{");
                            break
                        }
                        if (r = t.gullet.popToken(),
                        !/^[1-9]$/.test(r.text))
                            throw new d('Invalid argument number "' + r.text + '"');
                        if (parseInt(r.text) !== o + 1)
                            throw new d('Argument number "' + r.text + '" out of order');
                        o++,
                        a.push([])
                    } else {
                        if ("EOF" === r.text)
                            throw new d("Expected a macro definition");
                        a[o].push(r.text)
                    }
                var {tokens: l} = t.gullet.consumeArg();
                return s && l.unshift(s),
                "\\edef" !== n && "\\xdef" !== n || (l = t.gullet.expandTokens(l)).reverse(),
                t.gullet.macros.set(i, {
                    tokens: l,
                    numArgs: o,
                    delimiters: a
                }, n === sn[n]),
                {
                    type: "internal",
                    mode: t.mode
                }
            }
        }),
        pt({
            type: "internal",
            names: ["\\let", "\\\\globallet"],
            props: {
                numArgs: 0,
                allowedInText: !0,
                primitive: !0
            },
            handler(e) {
                var {parser: t, funcName: n} = e
                  , r = on(t.gullet.popToken());
                t.gullet.consumeSpaces();
                var i = (e => {
                    var t = e.gullet.popToken();
                    return "=" === t.text && " " === (t = e.gullet.popToken()).text && (t = e.gullet.popToken()),
                    t
                }
                )(t);
                return an(t, r, i, "\\\\globallet" === n),
                {
                    type: "internal",
                    mode: t.mode
                }
            }
        }),
        pt({
            type: "internal",
            names: ["\\futurelet", "\\\\globalfuture"],
            props: {
                numArgs: 0,
                allowedInText: !0,
                primitive: !0
            },
            handler(e) {
                var {parser: t, funcName: n} = e
                  , r = on(t.gullet.popToken())
                  , i = t.gullet.popToken()
                  , s = t.gullet.popToken();
                return an(t, r, s, "\\\\globalfuture" === n),
                t.gullet.pushToken(s),
                t.gullet.pushToken(i),
                {
                    type: "internal",
                    mode: t.mode
                }
            }
        });
        var ln = function(e, t, n) {
            var r = F(ce.math[e] && ce.math[e].replace || e, t, n);
            if (!r)
                throw new Error("Unsupported symbol " + e + " and font size " + t + ".");
            return r
        }
          , cn = function(e, t, n, r) {
            var i = n.havingBaseStyle(t)
              , s = nt.makeSpan(r.concat(i.sizingClasses(n)), [e], n)
              , o = i.sizeMultiplier / n.sizeMultiplier;
            return s.height *= o,
            s.depth *= o,
            s.maxFontSize = i.sizeMultiplier,
            s
        }
          , hn = function(e, t, n) {
            var r = t.havingBaseStyle(n)
              , i = (1 - t.sizeMultiplier / r.sizeMultiplier) * t.fontMetrics().axisHeight;
            e.classes.push("delimcenter"),
            e.style.top = j(i),
            e.height -= i,
            e.depth += i
        }
          , pn = function(e, t, n, r, i, s) {
            var o = function(e, t, n, r) {
                return nt.makeSymbol(e, "Size" + t + "-Regular", n, r)
            }(e, t, i, r)
              , a = cn(nt.makeSpan(["delimsizing", "size" + t], [o], r), T.TEXT, r, s);
            return n && hn(a, r, T.TEXT),
            a
        }
          , un = function(e, t, n) {
            var r;
            return r = "Size1-Regular" === t ? "delim-size1" : "delim-size4",
            {
                type: "elem",
                elem: nt.makeSpan(["delimsizinginner", r], [nt.makeSpan([], [nt.makeSymbol(e, t, n)])])
            }
        }
          , dn = function(e, t, n) {
            var r = O["Size4-Regular"][e.charCodeAt(0)] ? O["Size4-Regular"][e.charCodeAt(0)][4] : O["Size1-Regular"][e.charCodeAt(0)][4]
              , i = new ie("inner",function(e, t) {
                switch (e) {
                case "⎜":
                    return "M291 0 H417 V" + t + " H291z M291 0 H417 V" + t + " H291z";
                case "∣":
                    return "M145 0 H188 V" + t + " H145z M145 0 H188 V" + t + " H145z";
                case "∥":
                    return "M145 0 H188 V" + t + " H145z M145 0 H188 V" + t + " H145zM367 0 H410 V" + t + " H367z M367 0 H410 V" + t + " H367z";
                case "⎟":
                    return "M457 0 H583 V" + t + " H457z M457 0 H583 V" + t + " H457z";
                case "⎢":
                    return "M319 0 H403 V" + t + " H319z M319 0 H403 V" + t + " H319z";
                case "⎥":
                    return "M263 0 H347 V" + t + " H263z M263 0 H347 V" + t + " H263z";
                case "⎪":
                    return "M384 0 H504 V" + t + " H384z M384 0 H504 V" + t + " H384z";
                case "⏐":
                    return "M312 0 H355 V" + t + " H312z M312 0 H355 V" + t + " H312z";
                case "‖":
                    return "M257 0 H300 V" + t + " H257z M257 0 H300 V" + t + " H257zM478 0 H521 V" + t + " H478z M478 0 H521 V" + t + " H478z";
                default:
                    return ""
                }
            }(e, Math.round(1e3 * t)))
              , s = new re([i],{
                width: j(r),
                height: j(t),
                style: "width:" + j(r),
                viewBox: "0 0 " + 1e3 * r + " " + Math.round(1e3 * t),
                preserveAspectRatio: "xMinYMin"
            })
              , o = nt.makeSvgSpan([], [s], n);
            return o.height = t,
            o.style.height = j(t),
            o.style.width = j(r),
            {
                type: "elem",
                elem: o
            }
        }
          , mn = {
            type: "kern",
            size: -.008
        }
          , fn = ["|", "\\lvert", "\\rvert", "\\vert"]
          , gn = ["\\|", "\\lVert", "\\rVert", "\\Vert"]
          , vn = function(e, t, n, r, i, s) {
            var o, a, l, c, h = "", p = 0;
            o = l = c = e,
            a = null;
            var u = "Size1-Regular";
            "\\uparrow" === e ? l = c = "⏐" : "\\Uparrow" === e ? l = c = "‖" : "\\downarrow" === e ? o = l = "⏐" : "\\Downarrow" === e ? o = l = "‖" : "\\updownarrow" === e ? (o = "\\uparrow",
            l = "⏐",
            c = "\\downarrow") : "\\Updownarrow" === e ? (o = "\\Uparrow",
            l = "‖",
            c = "\\Downarrow") : y.contains(fn, e) ? (l = "∣",
            h = "vert",
            p = 333) : y.contains(gn, e) ? (l = "∥",
            h = "doublevert",
            p = 556) : "[" === e || "\\lbrack" === e ? (o = "⎡",
            l = "⎢",
            c = "⎣",
            u = "Size4-Regular",
            h = "lbrack",
            p = 667) : "]" === e || "\\rbrack" === e ? (o = "⎤",
            l = "⎥",
            c = "⎦",
            u = "Size4-Regular",
            h = "rbrack",
            p = 667) : "\\lfloor" === e || "⌊" === e ? (l = o = "⎢",
            c = "⎣",
            u = "Size4-Regular",
            h = "lfloor",
            p = 667) : "\\lceil" === e || "⌈" === e ? (o = "⎡",
            l = c = "⎢",
            u = "Size4-Regular",
            h = "lceil",
            p = 667) : "\\rfloor" === e || "⌋" === e ? (l = o = "⎥",
            c = "⎦",
            u = "Size4-Regular",
            h = "rfloor",
            p = 667) : "\\rceil" === e || "⌉" === e ? (o = "⎤",
            l = c = "⎥",
            u = "Size4-Regular",
            h = "rceil",
            p = 667) : "(" === e || "\\lparen" === e ? (o = "⎛",
            l = "⎜",
            c = "⎝",
            u = "Size4-Regular",
            h = "lparen",
            p = 875) : ")" === e || "\\rparen" === e ? (o = "⎞",
            l = "⎟",
            c = "⎠",
            u = "Size4-Regular",
            h = "rparen",
            p = 875) : "\\{" === e || "\\lbrace" === e ? (o = "⎧",
            a = "⎨",
            c = "⎩",
            l = "⎪",
            u = "Size4-Regular") : "\\}" === e || "\\rbrace" === e ? (o = "⎫",
            a = "⎬",
            c = "⎭",
            l = "⎪",
            u = "Size4-Regular") : "\\lgroup" === e || "⟮" === e ? (o = "⎧",
            c = "⎩",
            l = "⎪",
            u = "Size4-Regular") : "\\rgroup" === e || "⟯" === e ? (o = "⎫",
            c = "⎭",
            l = "⎪",
            u = "Size4-Regular") : "\\lmoustache" === e || "⎰" === e ? (o = "⎧",
            c = "⎭",
            l = "⎪",
            u = "Size4-Regular") : "\\rmoustache" !== e && "⎱" !== e || (o = "⎫",
            c = "⎩",
            l = "⎪",
            u = "Size4-Regular");
            var d = ln(o, u, i)
              , m = d.height + d.depth
              , f = ln(l, u, i)
              , g = f.height + f.depth
              , v = ln(c, u, i)
              , b = v.height + v.depth
              , x = 0
              , w = 1;
            if (null !== a) {
                var k = ln(a, u, i);
                x = k.height + k.depth,
                w = 2
            }
            var S = m + b + x
              , E = S + Math.max(0, Math.ceil((t - S) / (w * g))) * w * g
              , M = r.fontMetrics().axisHeight;
            n && (M *= r.sizeMultiplier);
            var C = E / 2 - M
              , _ = [];
            if (h.length > 0) {
                var A = E - m - b
                  , I = Math.round(1e3 * E)
                  , R = function(e, t) {
                    switch (e) {
                    case "lbrack":
                        return "M403 1759 V84 H666 V0 H319 V1759 v" + t + " v1759 h347 v-84\nH403z M403 1759 V0 H319 V1759 v" + t + " v1759 h84z";
                    case "rbrack":
                        return "M347 1759 V0 H0 V84 H263 V1759 v" + t + " v1759 H0 v84 H347z\nM347 1759 V0 H263 V1759 v" + t + " v1759 h84z";
                    case "vert":
                        return "M145 15 v585 v" + t + " v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v" + -t + " v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M188 15 H145 v585 v" + t + " v585 h43z";
                    case "doublevert":
                        return "M145 15 v585 v" + t + " v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v" + -t + " v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M188 15 H145 v585 v" + t + " v585 h43z\nM367 15 v585 v" + t + " v585 c2.667,10,9.667,15,21,15\nc10,0,16.667,-5,20,-15 v-585 v" + -t + " v-585 c-2.667,-10,-9.667,-15,-21,-15\nc-10,0,-16.667,5,-20,15z M410 15 H367 v585 v" + t + " v585 h43z";
                    case "lfloor":
                        return "M319 602 V0 H403 V602 v" + t + " v1715 h263 v84 H319z\nMM319 602 V0 H403 V602 v" + t + " v1715 H319z";
                    case "rfloor":
                        return "M319 602 V0 H403 V602 v" + t + " v1799 H0 v-84 H319z\nMM319 602 V0 H403 V602 v" + t + " v1715 H319z";
                    case "lceil":
                        return "M403 1759 V84 H666 V0 H319 V1759 v" + t + " v602 h84z\nM403 1759 V0 H319 V1759 v" + t + " v602 h84z";
                    case "rceil":
                        return "M347 1759 V0 H0 V84 H263 V1759 v" + t + " v602 h84z\nM347 1759 V0 h-84 V1759 v" + t + " v602 h84z";
                    case "lparen":
                        return "M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1\nc-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,\n-36,557 l0," + (t + 84) + "c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,\n949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9\nc0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,\n-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189\nl0,-" + (t + 92) + "c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,\n-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z";
                    case "rparen":
                        return "M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,\n63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5\nc11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0," + (t + 9) + "\nc-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664\nc-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11\nc0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17\nc242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558\nl0,-" + (t + 144) + "c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,\n-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z";
                    default:
                        throw new Error("Unknown stretchy delimiter.")
                    }
                }(h, Math.round(1e3 * A))
                  , N = new ie(h,R)
                  , P = (p / 1e3).toFixed(3) + "em"
                  , O = (I / 1e3).toFixed(3) + "em"
                  , L = new re([N],{
                    width: P,
                    height: O,
                    viewBox: "0 0 " + p + " " + I
                })
                  , D = nt.makeSvgSpan([], [L], r);
                D.height = I / 1e3,
                D.style.width = P,
                D.style.height = O,
                _.push({
                    type: "elem",
                    elem: D
                })
            } else {
                if (_.push(un(c, u, i)),
                _.push(mn),
                null === a) {
                    var F = E - m - b + .016;
                    _.push(dn(l, F, r))
                } else {
                    var z = (E - m - b - x) / 2 + .016;
                    _.push(dn(l, z, r)),
                    _.push(mn),
                    _.push(un(a, u, i)),
                    _.push(mn),
                    _.push(dn(l, z, r))
                }
                _.push(mn),
                _.push(un(o, u, i))
            }
            var B = r.havingBaseStyle(T.TEXT)
              , q = nt.makeVList({
                positionType: "bottom",
                positionData: C,
                children: _
            }, B);
            return cn(nt.makeSpan(["delimsizing", "mult"], [q], B), T.TEXT, r, s)
        }
          , yn = .08
          , bn = function(e, t, n, r, i) {
            var s = function(e, t, n) {
                t *= 1e3;
                var r = "";
                switch (e) {
                case "sqrtMain":
                    r = function(e, t) {
                        return "M95," + (622 + e + t) + "\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl" + e / 2.075 + " -" + e + "\nc5.3,-9.3,12,-14,20,-14\nH400000v" + (40 + e) + "H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM" + (834 + e) + " " + t + "h400000v" + (40 + e) + "h-400000z"
                    }(t, R);
                    break;
                case "sqrtSize1":
                    r = function(e, t) {
                        return "M263," + (601 + e + t) + "c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl" + e / 2.084 + " -" + e + "\nc4.7,-7.3,11,-11,19,-11\nH40000v" + (40 + e) + "H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM" + (1001 + e) + " " + t + "h400000v" + (40 + e) + "h-400000z"
                    }(t, R);
                    break;
                case "sqrtSize2":
                    r = function(e, t) {
                        return "M983 " + (10 + e + t) + "\nl" + e / 3.13 + " -" + e + "\nc4,-6.7,10,-10,18,-10 H400000v" + (40 + e) + "\nH1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7\ns-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744\nc-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30\nc26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722\nc56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5\nc53.7,-170.3,84.5,-266.8,92.5,-289.5z\nM" + (1001 + e) + " " + t + "h400000v" + (40 + e) + "h-400000z"
                    }(t, R);
                    break;
                case "sqrtSize3":
                    r = function(e, t) {
                        return "M424," + (2398 + e + t) + "\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\nl" + e / 4.223 + " -" + e + "c4,-6.7,10,-10,18,-10 H400000\nv" + (40 + e) + "H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\nc-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M" + (1001 + e) + " " + t + "\nh400000v" + (40 + e) + "h-400000z"
                    }(t, R);
                    break;
                case "sqrtSize4":
                    r = function(e, t) {
                        return "M473," + (2713 + e + t) + "\nc339.3,-1799.3,509.3,-2700,510,-2702 l" + e / 5.298 + " -" + e + "\nc3.3,-7.3,9.3,-11,18,-11 H400000v" + (40 + e) + "H1017.7\ns-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200\nc0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26\ns76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,\n606zM" + (1001 + e) + " " + t + "h400000v" + (40 + e) + "H1017.7z"
                    }(t, R);
                    break;
                case "sqrtTall":
                    r = function(e, t, n) {
                        return "M702 " + (e + t) + "H400000" + (40 + e) + "\nH742v" + (n - 54 - t - e) + "l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1\nh-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170\nc-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667\n219 661 l218 661zM702 " + t + "H400000v" + (40 + e) + "H742z"
                    }(t, R, n)
                }
                return r
            }(e, r, n)
              , o = new ie(e,s)
              , a = new re([o],{
                width: "400em",
                height: j(t),
                viewBox: "0 0 400000 " + n,
                preserveAspectRatio: "xMinYMin slice"
            });
            return nt.makeSvgSpan(["hide-tail"], [a], i)
        }
          , xn = ["(", "\\lparen", ")", "\\rparen", "[", "\\lbrack", "]", "\\rbrack", "\\{", "\\lbrace", "\\}", "\\rbrace", "\\lfloor", "\\rfloor", "⌊", "⌋", "\\lceil", "\\rceil", "⌈", "⌉", "\\surd"]
          , wn = ["\\uparrow", "\\downarrow", "\\updownarrow", "\\Uparrow", "\\Downarrow", "\\Updownarrow", "|", "\\|", "\\vert", "\\Vert", "\\lvert", "\\rvert", "\\lVert", "\\rVert", "\\lgroup", "\\rgroup", "⟮", "⟯", "\\lmoustache", "\\rmoustache", "⎰", "⎱"]
          , kn = ["<", ">", "\\langle", "\\rangle", "/", "\\backslash", "\\lt", "\\gt"]
          , Sn = [0, 1.2, 1.8, 2.4, 3]
          , En = [{
            type: "small",
            style: T.SCRIPTSCRIPT
        }, {
            type: "small",
            style: T.SCRIPT
        }, {
            type: "small",
            style: T.TEXT
        }, {
            type: "large",
            size: 1
        }, {
            type: "large",
            size: 2
        }, {
            type: "large",
            size: 3
        }, {
            type: "large",
            size: 4
        }]
          , Mn = [{
            type: "small",
            style: T.SCRIPTSCRIPT
        }, {
            type: "small",
            style: T.SCRIPT
        }, {
            type: "small",
            style: T.TEXT
        }, {
            type: "stack"
        }]
          , Cn = [{
            type: "small",
            style: T.SCRIPTSCRIPT
        }, {
            type: "small",
            style: T.SCRIPT
        }, {
            type: "small",
            style: T.TEXT
        }, {
            type: "large",
            size: 1
        }, {
            type: "large",
            size: 2
        }, {
            type: "large",
            size: 3
        }, {
            type: "large",
            size: 4
        }, {
            type: "stack"
        }]
          , Tn = function(e) {
            if ("small" === e.type)
                return "Main-Regular";
            if ("large" === e.type)
                return "Size" + e.size + "-Regular";
            if ("stack" === e.type)
                return "Size4-Regular";
            throw new Error("Add support for delim type '" + e.type + "' here.")
        }
          , _n = function(e, t, n, r) {
            for (var i = Math.min(2, 3 - r.style.size); i < n.length && "stack" !== n[i].type; i++) {
                var s = ln(e, Tn(n[i]), "math")
                  , o = s.height + s.depth;
                if ("small" === n[i].type && (o *= r.havingBaseStyle(n[i].style).sizeMultiplier),
                o > t)
                    return n[i]
            }
            return n[n.length - 1]
        }
          , An = function(e, t, n, r, i, s) {
            var o;
            "<" === e || "\\lt" === e || "⟨" === e ? e = "\\langle" : ">" !== e && "\\gt" !== e && "⟩" !== e || (e = "\\rangle"),
            o = y.contains(kn, e) ? En : y.contains(xn, e) ? Cn : Mn;
            var a = _n(e, t, o, r);
            return "small" === a.type ? function(e, t, n, r, i, s) {
                var o = nt.makeSymbol(e, "Main-Regular", i, r)
                  , a = cn(o, t, r, s);
                return n && hn(a, r, t),
                a
            }(e, a.style, n, r, i, s) : "large" === a.type ? pn(e, a.size, n, r, i, s) : vn(e, t, n, r, i, s)
        }
          , In = {
            sqrtImage: function(e, t) {
                var n, r, i = t.havingBaseSizing(), s = _n("\\surd", e * i.sizeMultiplier, Cn, i), o = i.sizeMultiplier, a = Math.max(0, t.minRuleThickness - t.fontMetrics().sqrtRuleThickness), l = 0, c = 0, h = 0;
                return "small" === s.type ? (e < 1 ? o = 1 : e < 1.4 && (o = .7),
                c = (1 + a) / o,
                (n = bn("sqrtMain", l = (1 + a + yn) / o, h = 1e3 + 1e3 * a + 80, a, t)).style.minWidth = "0.853em",
                r = .833 / o) : "large" === s.type ? (h = 1080 * Sn[s.size],
                c = (Sn[s.size] + a) / o,
                l = (Sn[s.size] + a + yn) / o,
                (n = bn("sqrtSize" + s.size, l, h, a, t)).style.minWidth = "1.02em",
                r = 1 / o) : (l = e + a + yn,
                c = e + a,
                h = Math.floor(1e3 * e + a) + 80,
                (n = bn("sqrtTall", l, h, a, t)).style.minWidth = "0.742em",
                r = 1.056),
                n.height = c,
                n.style.height = j(l),
                {
                    span: n,
                    advanceWidth: r,
                    ruleWidth: (t.fontMetrics().sqrtRuleThickness + a) * o
                }
            },
            sizedDelim: function(e, t, n, r, i) {
                if ("<" === e || "\\lt" === e || "⟨" === e ? e = "\\langle" : ">" !== e && "\\gt" !== e && "⟩" !== e || (e = "\\rangle"),
                y.contains(xn, e) || y.contains(kn, e))
                    return pn(e, t, !1, n, r, i);
                if (y.contains(wn, e))
                    return vn(e, Sn[t], !1, n, r, i);
                throw new d("Illegal delimiter: '" + e + "'")
            },
            sizeToMaxHeight: Sn,
            customSizedDelim: An,
            leftRightDelim: function(e, t, n, r, i, s) {
                var o = r.fontMetrics().axisHeight * r.sizeMultiplier
                  , a = 5 / r.fontMetrics().ptPerEm
                  , l = Math.max(t - o, n + o)
                  , c = Math.max(l / 500 * 901, 2 * l - a);
                return An(e, c, !0, r, i, s)
            }
        }
          , Rn = {
            "\\bigl": {
                mclass: "mopen",
                size: 1
            },
            "\\Bigl": {
                mclass: "mopen",
                size: 2
            },
            "\\biggl": {
                mclass: "mopen",
                size: 3
            },
            "\\Biggl": {
                mclass: "mopen",
                size: 4
            },
            "\\bigr": {
                mclass: "mclose",
                size: 1
            },
            "\\Bigr": {
                mclass: "mclose",
                size: 2
            },
            "\\biggr": {
                mclass: "mclose",
                size: 3
            },
            "\\Biggr": {
                mclass: "mclose",
                size: 4
            },
            "\\bigm": {
                mclass: "mrel",
                size: 1
            },
            "\\Bigm": {
                mclass: "mrel",
                size: 2
            },
            "\\biggm": {
                mclass: "mrel",
                size: 3
            },
            "\\Biggm": {
                mclass: "mrel",
                size: 4
            },
            "\\big": {
                mclass: "mord",
                size: 1
            },
            "\\Big": {
                mclass: "mord",
                size: 2
            },
            "\\bigg": {
                mclass: "mord",
                size: 3
            },
            "\\Bigg": {
                mclass: "mord",
                size: 4
            }
        }
          , Nn = ["(", "\\lparen", ")", "\\rparen", "[", "\\lbrack", "]", "\\rbrack", "\\{", "\\lbrace", "\\}", "\\rbrace", "\\lfloor", "\\rfloor", "⌊", "⌋", "\\lceil", "\\rceil", "⌈", "⌉", "<", ">", "\\langle", "⟨", "\\rangle", "⟩", "\\lt", "\\gt", "\\lvert", "\\rvert", "\\lVert", "\\rVert", "\\lgroup", "\\rgroup", "⟮", "⟯", "\\lmoustache", "\\rmoustache", "⎰", "⎱", "/", "\\backslash", "|", "\\vert", "\\|", "\\Vert", "\\uparrow", "\\Uparrow", "\\downarrow", "\\Downarrow", "\\updownarrow", "\\Updownarrow", "."];
        function Pn(e, t) {
            var n = Wt(e);
            if (n && y.contains(Nn, n.text))
                return n;
            throw new d(n ? "Invalid delimiter '" + n.text + "' after '" + t.funcName + "'" : "Invalid delimiter type '" + e.type + "'",e)
        }
        function On(e) {
            if (!e.body)
                throw new Error("Bug: The leftright ParseNode wasn't fully parsed.")
        }
        pt({
            type: "delimsizing",
            names: ["\\bigl", "\\Bigl", "\\biggl", "\\Biggl", "\\bigr", "\\Bigr", "\\biggr", "\\Biggr", "\\bigm", "\\Bigm", "\\biggm", "\\Biggm", "\\big", "\\Big", "\\bigg", "\\Bigg"],
            props: {
                numArgs: 1,
                argTypes: ["primitive"]
            },
            handler: (e, t) => {
                var n = Pn(t[0], e);
                return {
                    type: "delimsizing",
                    mode: e.parser.mode,
                    size: Rn[e.funcName].size,
                    mclass: Rn[e.funcName].mclass,
                    delim: n.text
                }
            }
            ,
            htmlBuilder: (e, t) => "." === e.delim ? nt.makeSpan([e.mclass]) : In.sizedDelim(e.delim, e.size, t, e.mode, [e.mclass]),
            mathmlBuilder: e => {
                var t = [];
                "." !== e.delim && t.push(Rt(e.delim, e.mode));
                var n = new It.MathNode("mo",t);
                "mopen" === e.mclass || "mclose" === e.mclass ? n.setAttribute("fence", "true") : n.setAttribute("fence", "false"),
                n.setAttribute("stretchy", "true");
                var r = j(In.sizeToMaxHeight[e.size]);
                return n.setAttribute("minsize", r),
                n.setAttribute("maxsize", r),
                n
            }
        }),
        pt({
            type: "leftright-right",
            names: ["\\right"],
            props: {
                numArgs: 1,
                primitive: !0
            },
            handler: (e, t) => {
                var n = e.parser.gullet.macros.get("\\current@color");
                if (n && "string" != typeof n)
                    throw new d("\\current@color set to non-string in \\right");
                return {
                    type: "leftright-right",
                    mode: e.parser.mode,
                    delim: Pn(t[0], e).text,
                    color: n
                }
            }
        }),
        pt({
            type: "leftright",
            names: ["\\left"],
            props: {
                numArgs: 1,
                primitive: !0
            },
            handler: (e, t) => {
                var n = Pn(t[0], e)
                  , r = e.parser;
                ++r.leftrightDepth;
                var i = r.parseExpression(!1);
                --r.leftrightDepth,
                r.expect("\\right", !1);
                var s = Ut(r.parseFunction(), "leftright-right");
                return {
                    type: "leftright",
                    mode: r.mode,
                    body: i,
                    left: n.text,
                    right: s.delim,
                    rightColor: s.color
                }
            }
            ,
            htmlBuilder: (e, t) => {
                On(e);
                for (var n, r, i = xt(e.body, t, !0, ["mopen", "mclose"]), s = 0, o = 0, a = !1, l = 0; l < i.length; l++)
                    i[l].isMiddle ? a = !0 : (s = Math.max(i[l].height, s),
                    o = Math.max(i[l].depth, o));
                if (s *= t.sizeMultiplier,
                o *= t.sizeMultiplier,
                n = "." === e.left ? Mt(t, ["mopen"]) : In.leftRightDelim(e.left, s, o, t, e.mode, ["mopen"]),
                i.unshift(n),
                a)
                    for (var c = 1; c < i.length; c++) {
                        var h = i[c].isMiddle;
                        h && (i[c] = In.leftRightDelim(h.delim, s, o, h.options, e.mode, []))
                    }
                if ("." === e.right)
                    r = Mt(t, ["mclose"]);
                else {
                    var p = e.rightColor ? t.withColor(e.rightColor) : t;
                    r = In.leftRightDelim(e.right, s, o, p, e.mode, ["mclose"])
                }
                return i.push(r),
                nt.makeSpan(["minner"], i, t)
            }
            ,
            mathmlBuilder: (e, t) => {
                On(e);
                var n = Ot(e.body, t);
                if ("." !== e.left) {
                    var r = new It.MathNode("mo",[Rt(e.left, e.mode)]);
                    r.setAttribute("fence", "true"),
                    n.unshift(r)
                }
                if ("." !== e.right) {
                    var i = new It.MathNode("mo",[Rt(e.right, e.mode)]);
                    i.setAttribute("fence", "true"),
                    e.rightColor && i.setAttribute("mathcolor", e.rightColor),
                    n.push(i)
                }
                return Nt(n)
            }
        }),
        pt({
            type: "middle",
            names: ["\\middle"],
            props: {
                numArgs: 1,
                primitive: !0
            },
            handler: (e, t) => {
                var n = Pn(t[0], e);
                if (!e.parser.leftrightDepth)
                    throw new d("\\middle without preceding \\left",n);
                return {
                    type: "middle",
                    mode: e.parser.mode,
                    delim: n.text
                }
            }
            ,
            htmlBuilder: (e, t) => {
                var n;
                if ("." === e.delim)
                    n = Mt(t, []);
                else {
                    n = In.sizedDelim(e.delim, 1, t, e.mode, []);
                    var r = {
                        delim: e.delim,
                        options: t
                    };
                    n.isMiddle = r
                }
                return n
            }
            ,
            mathmlBuilder: (e, t) => {
                var n = "\\vert" === e.delim || "|" === e.delim ? Rt("|", "text") : Rt(e.delim, e.mode)
                  , r = new It.MathNode("mo",[n]);
                return r.setAttribute("fence", "true"),
                r.setAttribute("lspace", "0.05em"),
                r.setAttribute("rspace", "0.05em"),
                r
            }
        });
        var Ln = (e, t) => {
            var n, r, i, s = nt.wrapFragment(Ct(e.body, t), t), o = e.label.slice(1), a = t.sizeMultiplier, l = 0, c = y.isCharacterBox(e.body);
            if ("sout" === o)
                (n = nt.makeSpan(["stretchy", "sout"])).height = t.fontMetrics().defaultRuleThickness / a,
                l = -.5 * t.fontMetrics().xHeight;
            else if ("phase" === o) {
                var h = $({
                    number: .6,
                    unit: "pt"
                }, t)
                  , p = $({
                    number: .35,
                    unit: "ex"
                }, t);
                a /= t.havingBaseSizing().sizeMultiplier;
                var u = s.height + s.depth + h + p;
                s.style.paddingLeft = j(u / 2 + h);
                var d = Math.floor(1e3 * u * a)
                  , m = "M400000 " + (r = d) + " H0 L" + r / 2 + " 0 l65 45 L145 " + (r - 80) + " H400000z"
                  , f = new re([new ie("phase",m)],{
                    width: "400em",
                    height: j(d / 1e3),
                    viewBox: "0 0 400000 " + d,
                    preserveAspectRatio: "xMinYMin slice"
                });
                (n = nt.makeSvgSpan(["hide-tail"], [f], t)).style.height = j(u),
                l = s.depth + h + p
            } else {
                /cancel/.test(o) ? c || s.classes.push("cancel-pad") : "angl" === o ? s.classes.push("anglpad") : s.classes.push("boxpad");
                var g = 0
                  , v = 0
                  , b = 0;
                /box/.test(o) ? (b = Math.max(t.fontMetrics().fboxrule, t.minRuleThickness),
                v = g = t.fontMetrics().fboxsep + ("colorbox" === o ? 0 : b)) : "angl" === o ? (g = 4 * (b = Math.max(t.fontMetrics().defaultRuleThickness, t.minRuleThickness)),
                v = Math.max(0, .25 - s.depth)) : v = g = c ? .2 : 0,
                n = Bt(s, o, g, v, t),
                /fbox|boxed|fcolorbox/.test(o) ? (n.style.borderStyle = "solid",
                n.style.borderWidth = j(b)) : "angl" === o && .049 !== b && (n.style.borderTopWidth = j(b),
                n.style.borderRightWidth = j(b)),
                l = s.depth + v,
                e.backgroundColor && (n.style.backgroundColor = e.backgroundColor,
                e.borderColor && (n.style.borderColor = e.borderColor))
            }
            if (e.backgroundColor)
                i = nt.makeVList({
                    positionType: "individualShift",
                    children: [{
                        type: "elem",
                        elem: n,
                        shift: l
                    }, {
                        type: "elem",
                        elem: s,
                        shift: 0
                    }]
                }, t);
            else {
                var x = /cancel|phase/.test(o) ? ["svg-align"] : [];
                i = nt.makeVList({
                    positionType: "individualShift",
                    children: [{
                        type: "elem",
                        elem: s,
                        shift: 0
                    }, {
                        type: "elem",
                        elem: n,
                        shift: l,
                        wrapperClasses: x
                    }]
                }, t)
            }
            return /cancel/.test(o) && (i.height = s.height,
            i.depth = s.depth),
            /cancel/.test(o) && !c ? nt.makeSpan(["mord", "cancel-lap"], [i], t) : nt.makeSpan(["mord"], [i], t)
        }
          , Dn = (e, t) => {
            var n = 0
              , r = new It.MathNode(e.label.indexOf("colorbox") > -1 ? "mpadded" : "menclose",[Dt(e.body, t)]);
            switch (e.label) {
            case "\\cancel":
                r.setAttribute("notation", "updiagonalstrike");
                break;
            case "\\bcancel":
                r.setAttribute("notation", "downdiagonalstrike");
                break;
            case "\\phase":
                r.setAttribute("notation", "phasorangle");
                break;
            case "\\sout":
                r.setAttribute("notation", "horizontalstrike");
                break;
            case "\\fbox":
                r.setAttribute("notation", "box");
                break;
            case "\\angl":
                r.setAttribute("notation", "actuarial");
                break;
            case "\\fcolorbox":
            case "\\colorbox":
                if (n = t.fontMetrics().fboxsep * t.fontMetrics().ptPerEm,
                r.setAttribute("width", "+" + 2 * n + "pt"),
                r.setAttribute("height", "+" + 2 * n + "pt"),
                r.setAttribute("lspace", n + "pt"),
                r.setAttribute("voffset", n + "pt"),
                "\\fcolorbox" === e.label) {
                    var i = Math.max(t.fontMetrics().fboxrule, t.minRuleThickness);
                    r.setAttribute("style", "border: " + i + "em solid " + String(e.borderColor))
                }
                break;
            case "\\xcancel":
                r.setAttribute("notation", "updiagonalstrike downdiagonalstrike")
            }
            return e.backgroundColor && r.setAttribute("mathbackground", e.backgroundColor),
            r
        }
        ;
        pt({
            type: "enclose",
            names: ["\\colorbox"],
            props: {
                numArgs: 2,
                allowedInText: !0,
                argTypes: ["color", "text"]
            },
            handler(e, t, n) {
                var {parser: r, funcName: i} = e
                  , s = Ut(t[0], "color-token").color
                  , o = t[1];
                return {
                    type: "enclose",
                    mode: r.mode,
                    label: i,
                    backgroundColor: s,
                    body: o
                }
            },
            htmlBuilder: Ln,
            mathmlBuilder: Dn
        }),
        pt({
            type: "enclose",
            names: ["\\fcolorbox"],
            props: {
                numArgs: 3,
                allowedInText: !0,
                argTypes: ["color", "color", "text"]
            },
            handler(e, t, n) {
                var {parser: r, funcName: i} = e
                  , s = Ut(t[0], "color-token").color
                  , o = Ut(t[1], "color-token").color
                  , a = t[2];
                return {
                    type: "enclose",
                    mode: r.mode,
                    label: i,
                    backgroundColor: o,
                    borderColor: s,
                    body: a
                }
            },
            htmlBuilder: Ln,
            mathmlBuilder: Dn
        }),
        pt({
            type: "enclose",
            names: ["\\fbox"],
            props: {
                numArgs: 1,
                argTypes: ["hbox"],
                allowedInText: !0
            },
            handler(e, t) {
                var {parser: n} = e;
                return {
                    type: "enclose",
                    mode: n.mode,
                    label: "\\fbox",
                    body: t[0]
                }
            }
        }),
        pt({
            type: "enclose",
            names: ["\\cancel", "\\bcancel", "\\xcancel", "\\sout", "\\phase"],
            props: {
                numArgs: 1
            },
            handler(e, t) {
                var {parser: n, funcName: r} = e
                  , i = t[0];
                return {
                    type: "enclose",
                    mode: n.mode,
                    label: r,
                    body: i
                }
            },
            htmlBuilder: Ln,
            mathmlBuilder: Dn
        }),
        pt({
            type: "enclose",
            names: ["\\angl"],
            props: {
                numArgs: 1,
                argTypes: ["hbox"],
                allowedInText: !1
            },
            handler(e, t) {
                var {parser: n} = e;
                return {
                    type: "enclose",
                    mode: n.mode,
                    label: "\\angl",
                    body: t[0]
                }
            }
        });
        var Fn = {};
        function zn(e) {
            for (var {type: t, names: n, props: r, handler: i, htmlBuilder: s, mathmlBuilder: o} = e, a = {
                type: t,
                numArgs: r.numArgs || 0,
                allowedInText: !1,
                numOptionalArgs: 0,
                handler: i
            }, l = 0; l < n.length; ++l)
                Fn[n[l]] = a;
            s && (ct[t] = s),
            o && (ht[t] = o)
        }
        var Bn = {};
        function qn(e, t) {
            Bn[e] = t
        }
        function Hn(e) {
            var t = [];
            e.consumeSpaces();
            var n = e.fetch().text;
            for ("\\relax" === n && (e.consume(),
            e.consumeSpaces(),
            n = e.fetch().text); "\\hline" === n || "\\hdashline" === n; )
                e.consume(),
                t.push("\\hdashline" === n),
                e.consumeSpaces(),
                n = e.fetch().text;
            return t
        }
        var Un = e => {
            if (!e.parser.settings.displayMode)
                throw new d("{" + e.envName + "} can be used only in display mode.")
        }
        ;
        function Gn(e) {
            if (-1 === e.indexOf("ed"))
                return -1 === e.indexOf("*")
        }
        function Wn(e, t, n) {
            var {hskipBeforeAndAfter: r, addJot: i, cols: s, arraystretch: o, colSeparationType: a, autoTag: l, singleRow: c, emptySingleRow: h, maxNumCols: p, leqno: m} = t;
            if (e.gullet.beginGroup(),
            c || e.gullet.macros.set("\\cr", "\\\\\\relax"),
            !o) {
                var f = e.gullet.expandMacroAsText("\\arraystretch");
                if (null == f)
                    o = 1;
                else if (!(o = parseFloat(f)) || o < 0)
                    throw new d("Invalid \\arraystretch: " + f)
            }
            e.gullet.beginGroup();
            var g = []
              , v = [g]
              , y = []
              , b = []
              , x = null != l ? [] : void 0;
            function w() {
                l && e.gullet.macros.set("\\@eqnsw", "1", !0)
            }
            function k() {
                x && (e.gullet.macros.get("\\df@tag") ? (x.push(e.subparse([new u("\\df@tag")])),
                e.gullet.macros.set("\\df@tag", void 0, !0)) : x.push(Boolean(l) && "1" === e.gullet.macros.get("\\@eqnsw")))
            }
            for (w(),
            b.push(Hn(e)); ; ) {
                var S = e.parseExpression(!1, c ? "\\end" : "\\\\");
                e.gullet.endGroup(),
                e.gullet.beginGroup(),
                S = {
                    type: "ordgroup",
                    mode: e.mode,
                    body: S
                },
                n && (S = {
                    type: "styling",
                    mode: e.mode,
                    style: n,
                    body: [S]
                }),
                g.push(S);
                var E = e.fetch().text;
                if ("&" === E) {
                    if (p && g.length === p) {
                        if (c || a)
                            throw new d("Too many tab characters: &",e.nextToken);
                        e.settings.reportNonstrict("textEnv", "Too few columns specified in the {array} column argument.")
                    }
                    e.consume()
                } else {
                    if ("\\end" === E) {
                        k(),
                        1 === g.length && "styling" === S.type && 0 === S.body[0].body.length && (v.length > 1 || !h) && v.pop(),
                        b.length < v.length + 1 && b.push([]);
                        break
                    }
                    if ("\\\\" !== E)
                        throw new d("Expected & or \\\\ or \\cr or \\end",e.nextToken);
                    e.consume();
                    var M = void 0;
                    " " !== e.gullet.future().text && (M = e.parseSizeGroup(!0)),
                    y.push(M ? M.value : null),
                    k(),
                    b.push(Hn(e)),
                    g = [],
                    v.push(g),
                    w()
                }
            }
            return e.gullet.endGroup(),
            e.gullet.endGroup(),
            {
                type: "array",
                mode: e.mode,
                addJot: i,
                arraystretch: o,
                body: v,
                cols: s,
                rowGaps: y,
                hskipBeforeAndAfter: r,
                hLinesBeforeRow: b,
                colSeparationType: a,
                tags: x,
                leqno: m
            }
        }
        function Vn(e) {
            return "d" === e.slice(0, 1) ? "display" : "text"
        }
        var $n = function(e, t) {
            var n, r, i = e.body.length, s = e.hLinesBeforeRow, o = 0, a = new Array(i), l = [], c = Math.max(t.fontMetrics().arrayRuleWidth, t.minRuleThickness), h = 1 / t.fontMetrics().ptPerEm, p = 5 * h;
            e.colSeparationType && "small" === e.colSeparationType && (p = t.havingStyle(T.SCRIPT).sizeMultiplier / t.sizeMultiplier * .2778);
            var u = "CD" === e.colSeparationType ? $({
                number: 3,
                unit: "ex"
            }, t) : 12 * h
              , m = 3 * h
              , f = e.arraystretch * u
              , g = .7 * f
              , v = .3 * f
              , b = 0;
            function x(e) {
                for (var t = 0; t < e.length; ++t)
                    t > 0 && (b += .25),
                    l.push({
                        pos: b,
                        isDashed: e[t]
                    })
            }
            for (x(s[0]),
            n = 0; n < e.body.length; ++n) {
                var w = e.body[n]
                  , k = g
                  , S = v;
                o < w.length && (o = w.length);
                var E = new Array(w.length);
                for (r = 0; r < w.length; ++r) {
                    var M = Ct(w[r], t);
                    S < M.depth && (S = M.depth),
                    k < M.height && (k = M.height),
                    E[r] = M
                }
                var C = e.rowGaps[n]
                  , _ = 0;
                C && (_ = $(C, t)) > 0 && (S < (_ += v) && (S = _),
                _ = 0),
                e.addJot && (S += m),
                E.height = k,
                E.depth = S,
                b += k,
                E.pos = b,
                b += S + _,
                a[n] = E,
                x(s[n + 1])
            }
            var A, I, R = b / 2 + t.fontMetrics().axisHeight, N = e.cols || [], P = [], O = [];
            if (e.tags && e.tags.some((e => e)))
                for (n = 0; n < i; ++n) {
                    var L = a[n]
                      , D = L.pos - R
                      , F = e.tags[n]
                      , z = void 0;
                    (z = !0 === F ? nt.makeSpan(["eqn-num"], [], t) : !1 === F ? nt.makeSpan([], [], t) : nt.makeSpan([], xt(F, t, !0), t)).depth = L.depth,
                    z.height = L.height,
                    O.push({
                        type: "elem",
                        elem: z,
                        shift: D
                    })
                }
            for (r = 0,
            I = 0; r < o || I < N.length; ++r,
            ++I) {
                for (var B = N[I] || {}, q = !0; "separator" === B.type; ) {
                    if (q || ((A = nt.makeSpan(["arraycolsep"], [])).style.width = j(t.fontMetrics().doubleRuleSep),
                    P.push(A)),
                    "|" !== B.separator && ":" !== B.separator)
                        throw new d("Invalid separator type: " + B.separator);
                    var H = "|" === B.separator ? "solid" : "dashed"
                      , U = nt.makeSpan(["vertical-separator"], [], t);
                    U.style.height = j(b),
                    U.style.borderRightWidth = j(c),
                    U.style.borderRightStyle = H,
                    U.style.margin = "0 " + j(-c / 2);
                    var G = b - R;
                    G && (U.style.verticalAlign = j(-G)),
                    P.push(U),
                    B = N[++I] || {},
                    q = !1
                }
                if (!(r >= o)) {
                    var W = void 0;
                    (r > 0 || e.hskipBeforeAndAfter) && 0 !== (W = y.deflt(B.pregap, p)) && ((A = nt.makeSpan(["arraycolsep"], [])).style.width = j(W),
                    P.push(A));
                    var V = [];
                    for (n = 0; n < i; ++n) {
                        var K = a[n]
                          , Z = K[r];
                        if (Z) {
                            var Y = K.pos - R;
                            Z.depth = K.depth,
                            Z.height = K.height,
                            V.push({
                                type: "elem",
                                elem: Z,
                                shift: Y
                            })
                        }
                    }
                    V = nt.makeVList({
                        positionType: "individualShift",
                        children: V
                    }, t),
                    V = nt.makeSpan(["col-align-" + (B.align || "c")], [V]),
                    P.push(V),
                    (r < o - 1 || e.hskipBeforeAndAfter) && 0 !== (W = y.deflt(B.postgap, p)) && ((A = nt.makeSpan(["arraycolsep"], [])).style.width = j(W),
                    P.push(A))
                }
            }
            if (a = nt.makeSpan(["mtable"], P),
            l.length > 0) {
                for (var X = nt.makeLineSpan("hline", t, c), J = nt.makeLineSpan("hdashline", t, c), Q = [{
                    type: "elem",
                    elem: a,
                    shift: 0
                }]; l.length > 0; ) {
                    var ee = l.pop()
                      , te = ee.pos - R;
                    ee.isDashed ? Q.push({
                        type: "elem",
                        elem: J,
                        shift: te
                    }) : Q.push({
                        type: "elem",
                        elem: X,
                        shift: te
                    })
                }
                a = nt.makeVList({
                    positionType: "individualShift",
                    children: Q
                }, t)
            }
            if (0 === O.length)
                return nt.makeSpan(["mord"], [a], t);
            var ne = nt.makeVList({
                positionType: "individualShift",
                children: O
            }, t);
            return ne = nt.makeSpan(["tag"], [ne], t),
            nt.makeFragment([a, ne])
        }
          , jn = {
            c: "center ",
            l: "left ",
            r: "right "
        }
          , Kn = function(e, t) {
            for (var n = [], r = new It.MathNode("mtd",[],["mtr-glue"]), i = new It.MathNode("mtd",[],["mml-eqn-num"]), s = 0; s < e.body.length; s++) {
                for (var o = e.body[s], a = [], l = 0; l < o.length; l++)
                    a.push(new It.MathNode("mtd",[Dt(o[l], t)]));
                e.tags && e.tags[s] && (a.unshift(r),
                a.push(r),
                e.leqno ? a.unshift(i) : a.push(i)),
                n.push(new It.MathNode("mtr",a))
            }
            var c = new It.MathNode("mtable",n)
              , h = .5 === e.arraystretch ? .1 : .16 + e.arraystretch - 1 + (e.addJot ? .09 : 0);
            c.setAttribute("rowspacing", j(h));
            var p = ""
              , u = "";
            if (e.cols && e.cols.length > 0) {
                var d = e.cols
                  , m = ""
                  , f = !1
                  , g = 0
                  , v = d.length;
                "separator" === d[0].type && (p += "top ",
                g = 1),
                "separator" === d[d.length - 1].type && (p += "bottom ",
                v -= 1);
                for (var y = g; y < v; y++)
                    "align" === d[y].type ? (u += jn[d[y].align],
                    f && (m += "none "),
                    f = !0) : "separator" === d[y].type && f && (m += "|" === d[y].separator ? "solid " : "dashed ",
                    f = !1);
                c.setAttribute("columnalign", u.trim()),
                /[sd]/.test(m) && c.setAttribute("columnlines", m.trim())
            }
            if ("align" === e.colSeparationType) {
                for (var b = e.cols || [], x = "", w = 1; w < b.length; w++)
                    x += w % 2 ? "0em " : "1em ";
                c.setAttribute("columnspacing", x.trim())
            } else
                "alignat" === e.colSeparationType || "gather" === e.colSeparationType ? c.setAttribute("columnspacing", "0em") : "small" === e.colSeparationType ? c.setAttribute("columnspacing", "0.2778em") : "CD" === e.colSeparationType ? c.setAttribute("columnspacing", "0.5em") : c.setAttribute("columnspacing", "1em");
            var k = ""
              , S = e.hLinesBeforeRow;
            p += S[0].length > 0 ? "left " : "",
            p += S[S.length - 1].length > 0 ? "right " : "";
            for (var E = 1; E < S.length - 1; E++)
                k += 0 === S[E].length ? "none " : S[E][0] ? "dashed " : "solid ";
            return /[sd]/.test(k) && c.setAttribute("rowlines", k.trim()),
            "" !== p && (c = new It.MathNode("menclose",[c])).setAttribute("notation", p.trim()),
            e.arraystretch && e.arraystretch < 1 && (c = new It.MathNode("mstyle",[c])).setAttribute("scriptlevel", "1"),
            c
        }
          , Zn = function(e, t) {
            -1 === e.envName.indexOf("ed") && Un(e);
            var n, r = [], i = e.envName.indexOf("at") > -1 ? "alignat" : "align", s = "split" === e.envName, o = Wn(e.parser, {
                cols: r,
                addJot: !0,
                autoTag: s ? void 0 : Gn(e.envName),
                emptySingleRow: !0,
                colSeparationType: i,
                maxNumCols: s ? 2 : void 0,
                leqno: e.parser.settings.leqno
            }, "display"), a = 0, l = {
                type: "ordgroup",
                mode: e.mode,
                body: []
            };
            if (t[0] && "ordgroup" === t[0].type) {
                for (var c = "", h = 0; h < t[0].body.length; h++) {
                    c += Ut(t[0].body[h], "textord").text
                }
                n = Number(c),
                a = 2 * n
            }
            var p = !a;
            o.body.forEach((function(e) {
                for (var t = 1; t < e.length; t += 2) {
                    var r = Ut(e[t], "styling");
                    Ut(r.body[0], "ordgroup").body.unshift(l)
                }
                if (p)
                    a < e.length && (a = e.length);
                else {
                    var i = e.length / 2;
                    if (n < i)
                        throw new d("Too many math in a row: expected " + n + ", but got " + i,e[0])
                }
            }
            ));
            for (var u = 0; u < a; ++u) {
                var m = "r"
                  , f = 0;
                u % 2 == 1 ? m = "l" : u > 0 && p && (f = 1),
                r[u] = {
                    type: "align",
                    align: m,
                    pregap: f,
                    postgap: 0
                }
            }
            return o.colSeparationType = p ? "align" : "alignat",
            o
        };
        zn({
            type: "array",
            names: ["array", "darray"],
            props: {
                numArgs: 1
            },
            handler(e, t) {
                var n = (Wt(t[0]) ? [t[0]] : Ut(t[0], "ordgroup").body).map((function(e) {
                    var t = Gt(e).text;
                    if (-1 !== "lcr".indexOf(t))
                        return {
                            type: "align",
                            align: t
                        };
                    if ("|" === t)
                        return {
                            type: "separator",
                            separator: "|"
                        };
                    if (":" === t)
                        return {
                            type: "separator",
                            separator: ":"
                        };
                    throw new d("Unknown column alignment: " + t,e)
                }
                ))
                  , r = {
                    cols: n,
                    hskipBeforeAndAfter: !0,
                    maxNumCols: n.length
                };
                return Wn(e.parser, r, Vn(e.envName))
            },
            htmlBuilder: $n,
            mathmlBuilder: Kn
        }),
        zn({
            type: "array",
            names: ["matrix", "pmatrix", "bmatrix", "Bmatrix", "vmatrix", "Vmatrix", "matrix*", "pmatrix*", "bmatrix*", "Bmatrix*", "vmatrix*", "Vmatrix*"],
            props: {
                numArgs: 0
            },
            handler(e) {
                var t = {
                    matrix: null,
                    pmatrix: ["(", ")"],
                    bmatrix: ["[", "]"],
                    Bmatrix: ["\\{", "\\}"],
                    vmatrix: ["|", "|"],
                    Vmatrix: ["\\Vert", "\\Vert"]
                }[e.envName.replace("*", "")]
                  , n = "c"
                  , r = {
                    hskipBeforeAndAfter: !1,
                    cols: [{
                        type: "align",
                        align: n
                    }]
                };
                if ("*" === e.envName.charAt(e.envName.length - 1)) {
                    var i = e.parser;
                    if (i.consumeSpaces(),
                    "[" === i.fetch().text) {
                        if (i.consume(),
                        i.consumeSpaces(),
                        n = i.fetch().text,
                        -1 === "lcr".indexOf(n))
                            throw new d("Expected l or c or r",i.nextToken);
                        i.consume(),
                        i.consumeSpaces(),
                        i.expect("]"),
                        i.consume(),
                        r.cols = [{
                            type: "align",
                            align: n
                        }]
                    }
                }
                var s = Wn(e.parser, r, Vn(e.envName))
                  , o = Math.max(0, ...s.body.map((e => e.length)));
                return s.cols = new Array(o).fill({
                    type: "align",
                    align: n
                }),
                t ? {
                    type: "leftright",
                    mode: e.mode,
                    body: [s],
                    left: t[0],
                    right: t[1],
                    rightColor: void 0
                } : s
            },
            htmlBuilder: $n,
            mathmlBuilder: Kn
        }),
        zn({
            type: "array",
            names: ["smallmatrix"],
            props: {
                numArgs: 0
            },
            handler(e) {
                var t = Wn(e.parser, {
                    arraystretch: .5
                }, "script");
                return t.colSeparationType = "small",
                t
            },
            htmlBuilder: $n,
            mathmlBuilder: Kn
        }),
        zn({
            type: "array",
            names: ["subarray"],
            props: {
                numArgs: 1
            },
            handler(e, t) {
                var n = (Wt(t[0]) ? [t[0]] : Ut(t[0], "ordgroup").body).map((function(e) {
                    var t = Gt(e).text;
                    if (-1 !== "lc".indexOf(t))
                        return {
                            type: "align",
                            align: t
                        };
                    throw new d("Unknown column alignment: " + t,e)
                }
                ));
                if (n.length > 1)
                    throw new d("{subarray} can contain only one column");
                var r = {
                    cols: n,
                    hskipBeforeAndAfter: !1,
                    arraystretch: .5
                };
                if ((r = Wn(e.parser, r, "script")).body.length > 0 && r.body[0].length > 1)
                    throw new d("{subarray} can contain only one column");
                return r
            },
            htmlBuilder: $n,
            mathmlBuilder: Kn
        }),
        zn({
            type: "array",
            names: ["cases", "dcases", "rcases", "drcases"],
            props: {
                numArgs: 0
            },
            handler(e) {
                var t = Wn(e.parser, {
                    arraystretch: 1.2,
                    cols: [{
                        type: "align",
                        align: "l",
                        pregap: 0,
                        postgap: 1
                    }, {
                        type: "align",
                        align: "l",
                        pregap: 0,
                        postgap: 0
                    }]
                }, Vn(e.envName));
                return {
                    type: "leftright",
                    mode: e.mode,
                    body: [t],
                    left: e.envName.indexOf("r") > -1 ? "." : "\\{",
                    right: e.envName.indexOf("r") > -1 ? "\\}" : ".",
                    rightColor: void 0
                }
            },
            htmlBuilder: $n,
            mathmlBuilder: Kn
        }),
        zn({
            type: "array",
            names: ["align", "align*", "aligned", "split"],
            props: {
                numArgs: 0
            },
            handler: Zn,
            htmlBuilder: $n,
            mathmlBuilder: Kn
        }),
        zn({
            type: "array",
            names: ["gathered", "gather", "gather*"],
            props: {
                numArgs: 0
            },
            handler(e) {
                y.contains(["gather", "gather*"], e.envName) && Un(e);
                var t = {
                    cols: [{
                        type: "align",
                        align: "c"
                    }],
                    addJot: !0,
                    colSeparationType: "gather",
                    autoTag: Gn(e.envName),
                    emptySingleRow: !0,
                    leqno: e.parser.settings.leqno
                };
                return Wn(e.parser, t, "display")
            },
            htmlBuilder: $n,
            mathmlBuilder: Kn
        }),
        zn({
            type: "array",
            names: ["alignat", "alignat*", "alignedat"],
            props: {
                numArgs: 1
            },
            handler: Zn,
            htmlBuilder: $n,
            mathmlBuilder: Kn
        }),
        zn({
            type: "array",
            names: ["equation", "equation*"],
            props: {
                numArgs: 0
            },
            handler(e) {
                Un(e);
                var t = {
                    autoTag: Gn(e.envName),
                    emptySingleRow: !0,
                    singleRow: !0,
                    maxNumCols: 1,
                    leqno: e.parser.settings.leqno
                };
                return Wn(e.parser, t, "display")
            },
            htmlBuilder: $n,
            mathmlBuilder: Kn
        }),
        zn({
            type: "array",
            names: ["CD"],
            props: {
                numArgs: 0
            },
            handler: e => (Un(e),
            function(e) {
                var t = [];
                for (e.gullet.beginGroup(),
                e.gullet.macros.set("\\cr", "\\\\\\relax"),
                e.gullet.beginGroup(); ; ) {
                    t.push(e.parseExpression(!1, "\\\\")),
                    e.gullet.endGroup(),
                    e.gullet.beginGroup();
                    var n = e.fetch().text;
                    if ("&" !== n && "\\\\" !== n) {
                        if ("\\end" === n) {
                            0 === t[t.length - 1].length && t.pop();
                            break
                        }
                        throw new d("Expected \\\\ or \\cr or \\end",e.nextToken)
                    }
                    e.consume()
                }
                for (var r, i, s = [], o = [s], a = 0; a < t.length; a++) {
                    for (var l = t[a], c = {
                        type: "styling",
                        body: [],
                        mode: "math",
                        style: "display"
                    }, h = 0; h < l.length; h++)
                        if (en(l[h])) {
                            s.push(c);
                            var p = Gt(l[h += 1]).text
                              , u = new Array(2);
                            if (u[0] = {
                                type: "ordgroup",
                                mode: "math",
                                body: []
                            },
                            u[1] = {
                                type: "ordgroup",
                                mode: "math",
                                body: []
                            },
                            "=|.".indexOf(p) > -1)
                                ;
                            else {
                                if (!("<>AV".indexOf(p) > -1))
                                    throw new d('Expected one of "<>AV=|." after @',l[h]);
                                for (var m = 0; m < 2; m++) {
                                    for (var f = !0, g = h + 1; g < l.length; g++) {
                                        if (i = p,
                                        ("mathord" === (r = l[g]).type || "atom" === r.type) && r.text === i) {
                                            f = !1,
                                            h = g;
                                            break
                                        }
                                        if (en(l[g]))
                                            throw new d("Missing a " + p + " character to complete a CD arrow.",l[g]);
                                        u[m].body.push(l[g])
                                    }
                                    if (f)
                                        throw new d("Missing a " + p + " character to complete a CD arrow.",l[h])
                                }
                            }
                            var v = {
                                type: "styling",
                                body: [tn(p, u, e)],
                                mode: "math",
                                style: "display"
                            };
                            s.push(v),
                            c = {
                                type: "styling",
                                body: [],
                                mode: "math",
                                style: "display"
                            }
                        } else
                            c.body.push(l[h]);
                    a % 2 == 0 ? s.push(c) : s.shift(),
                    s = [],
                    o.push(s)
                }
                return e.gullet.endGroup(),
                e.gullet.endGroup(),
                {
                    type: "array",
                    mode: "math",
                    body: o,
                    arraystretch: 1,
                    addJot: !0,
                    rowGaps: [null],
                    cols: new Array(o[0].length).fill({
                        type: "align",
                        align: "c",
                        pregap: .25,
                        postgap: .25
                    }),
                    colSeparationType: "CD",
                    hLinesBeforeRow: new Array(o.length + 1).fill([])
                }
            }(e.parser)),
            htmlBuilder: $n,
            mathmlBuilder: Kn
        }),
        qn("\\nonumber", "\\gdef\\@eqnsw{0}"),
        qn("\\notag", "\\nonumber"),
        pt({
            type: "text",
            names: ["\\hline", "\\hdashline"],
            props: {
                numArgs: 0,
                allowedInText: !0,
                allowedInMath: !0
            },
            handler(e, t) {
                throw new d(e.funcName + " valid only within array environment")
            }
        });
        var Yn = Fn;
        pt({
            type: "environment",
            names: ["\\begin", "\\end"],
            props: {
                numArgs: 1,
                argTypes: ["text"]
            },
            handler(e, t) {
                var {parser: n, funcName: r} = e
                  , i = t[0];
                if ("ordgroup" !== i.type)
                    throw new d("Invalid environment name",i);
                for (var s = "", o = 0; o < i.body.length; ++o)
                    s += Ut(i.body[o], "textord").text;
                if ("\\begin" === r) {
                    if (!Yn.hasOwnProperty(s))
                        throw new d("No such environment: " + s,i);
                    var a = Yn[s]
                      , {args: l, optArgs: c} = n.parseArguments("\\begin{" + s + "}", a)
                      , h = {
                        mode: n.mode,
                        envName: s,
                        parser: n
                    }
                      , p = a.handler(h, l, c);
                    n.expect("\\end", !1);
                    var u = n.nextToken
                      , m = Ut(n.parseFunction(), "environment");
                    if (m.name !== s)
                        throw new d("Mismatch: \\begin{" + s + "} matched by \\end{" + m.name + "}",u);
                    return p
                }
                return {
                    type: "environment",
                    mode: n.mode,
                    name: s,
                    nameGroup: i
                }
            }
        });
        var Xn = (e, t) => {
            var n = e.font
              , r = t.withFont(n);
            return Ct(e.body, r)
        }
          , Jn = (e, t) => {
            var n = e.font
              , r = t.withFont(n);
            return Dt(e.body, r)
        }
          , Qn = {
            "\\Bbb": "\\mathbb",
            "\\bold": "\\mathbf",
            "\\frak": "\\mathfrak",
            "\\bm": "\\boldsymbol"
        };
        pt({
            type: "font",
            names: ["\\mathrm", "\\mathit", "\\mathbf", "\\mathnormal", "\\mathbb", "\\mathcal", "\\mathfrak", "\\mathscr", "\\mathsf", "\\mathtt", "\\Bbb", "\\bold", "\\frak"],
            props: {
                numArgs: 1,
                allowedInArgument: !0
            },
            handler: (e, t) => {
                var {parser: n, funcName: r} = e
                  , i = dt(t[0])
                  , s = r;
                return s in Qn && (s = Qn[s]),
                {
                    type: "font",
                    mode: n.mode,
                    font: s.slice(1),
                    body: i
                }
            }
            ,
            htmlBuilder: Xn,
            mathmlBuilder: Jn
        }),
        pt({
            type: "mclass",
            names: ["\\boldsymbol", "\\bm"],
            props: {
                numArgs: 1
            },
            handler: (e, t) => {
                var {parser: n} = e
                  , r = t[0]
                  , i = y.isCharacterBox(r);
                return {
                    type: "mclass",
                    mode: n.mode,
                    mclass: Jt(r),
                    body: [{
                        type: "font",
                        mode: n.mode,
                        font: "boldsymbol",
                        body: r
                    }],
                    isCharacterBox: i
                }
            }
        }),
        pt({
            type: "font",
            names: ["\\rm", "\\sf", "\\tt", "\\bf", "\\it", "\\cal"],
            props: {
                numArgs: 0,
                allowedInText: !0
            },
            handler: (e, t) => {
                var {parser: n, funcName: r, breakOnTokenText: i} = e
                  , {mode: s} = n
                  , o = n.parseExpression(!0, i);
                return {
                    type: "font",
                    mode: s,
                    font: "math" + r.slice(1),
                    body: {
                        type: "ordgroup",
                        mode: n.mode,
                        body: o
                    }
                }
            }
            ,
            htmlBuilder: Xn,
            mathmlBuilder: Jn
        });
        var er = (e, t) => {
            var n = t;
            return "display" === e ? n = n.id >= T.SCRIPT.id ? n.text() : T.DISPLAY : "text" === e && n.size === T.DISPLAY.size ? n = T.TEXT : "script" === e ? n = T.SCRIPT : "scriptscript" === e && (n = T.SCRIPTSCRIPT),
            n
        }
          , tr = (e, t) => {
            var n, r = er(e.size, t.style), i = r.fracNum(), s = r.fracDen();
            n = t.havingStyle(i);
            var o = Ct(e.numer, n, t);
            if (e.continued) {
                var a = 8.5 / t.fontMetrics().ptPerEm
                  , l = 3.5 / t.fontMetrics().ptPerEm;
                o.height = o.height < a ? a : o.height,
                o.depth = o.depth < l ? l : o.depth
            }
            n = t.havingStyle(s);
            var c, h, p, u, d, m, f, g, v, y, b = Ct(e.denom, n, t);
            if (e.hasBarLine ? (e.barSize ? (h = $(e.barSize, t),
            c = nt.makeLineSpan("frac-line", t, h)) : c = nt.makeLineSpan("frac-line", t),
            h = c.height,
            p = c.height) : (c = null,
            h = 0,
            p = t.fontMetrics().defaultRuleThickness),
            r.size === T.DISPLAY.size || "display" === e.size ? (u = t.fontMetrics().num1,
            d = h > 0 ? 3 * p : 7 * p,
            m = t.fontMetrics().denom1) : (h > 0 ? (u = t.fontMetrics().num2,
            d = p) : (u = t.fontMetrics().num3,
            d = 3 * p),
            m = t.fontMetrics().denom2),
            c) {
                var x = t.fontMetrics().axisHeight;
                u - o.depth - (x + .5 * h) < d && (u += d - (u - o.depth - (x + .5 * h))),
                x - .5 * h - (b.height - m) < d && (m += d - (x - .5 * h - (b.height - m)));
                var w = -(x - .5 * h);
                f = nt.makeVList({
                    positionType: "individualShift",
                    children: [{
                        type: "elem",
                        elem: b,
                        shift: m
                    }, {
                        type: "elem",
                        elem: c,
                        shift: w
                    }, {
                        type: "elem",
                        elem: o,
                        shift: -u
                    }]
                }, t)
            } else {
                var k = u - o.depth - (b.height - m);
                k < d && (u += .5 * (d - k),
                m += .5 * (d - k)),
                f = nt.makeVList({
                    positionType: "individualShift",
                    children: [{
                        type: "elem",
                        elem: b,
                        shift: m
                    }, {
                        type: "elem",
                        elem: o,
                        shift: -u
                    }]
                }, t)
            }
            return n = t.havingStyle(r),
            f.height *= n.sizeMultiplier / t.sizeMultiplier,
            f.depth *= n.sizeMultiplier / t.sizeMultiplier,
            g = r.size === T.DISPLAY.size ? t.fontMetrics().delim1 : r.size === T.SCRIPTSCRIPT.size ? t.havingStyle(T.SCRIPT).fontMetrics().delim2 : t.fontMetrics().delim2,
            v = null == e.leftDelim ? Mt(t, ["mopen"]) : In.customSizedDelim(e.leftDelim, g, !0, t.havingStyle(r), e.mode, ["mopen"]),
            y = e.continued ? nt.makeSpan([]) : null == e.rightDelim ? Mt(t, ["mclose"]) : In.customSizedDelim(e.rightDelim, g, !0, t.havingStyle(r), e.mode, ["mclose"]),
            nt.makeSpan(["mord"].concat(n.sizingClasses(t)), [v, nt.makeSpan(["mfrac"], [f]), y], t)
        }
          , nr = (e, t) => {
            var n = new It.MathNode("mfrac",[Dt(e.numer, t), Dt(e.denom, t)]);
            if (e.hasBarLine) {
                if (e.barSize) {
                    var r = $(e.barSize, t);
                    n.setAttribute("linethickness", j(r))
                }
            } else
                n.setAttribute("linethickness", "0px");
            var i = er(e.size, t.style);
            if (i.size !== t.style.size) {
                n = new It.MathNode("mstyle",[n]);
                var s = i.size === T.DISPLAY.size ? "true" : "false";
                n.setAttribute("displaystyle", s),
                n.setAttribute("scriptlevel", "0")
            }
            if (null != e.leftDelim || null != e.rightDelim) {
                var o = [];
                if (null != e.leftDelim) {
                    var a = new It.MathNode("mo",[new It.TextNode(e.leftDelim.replace("\\", ""))]);
                    a.setAttribute("fence", "true"),
                    o.push(a)
                }
                if (o.push(n),
                null != e.rightDelim) {
                    var l = new It.MathNode("mo",[new It.TextNode(e.rightDelim.replace("\\", ""))]);
                    l.setAttribute("fence", "true"),
                    o.push(l)
                }
                return Nt(o)
            }
            return n
        }
        ;
        pt({
            type: "genfrac",
            names: ["\\dfrac", "\\frac", "\\tfrac", "\\dbinom", "\\binom", "\\tbinom", "\\\\atopfrac", "\\\\bracefrac", "\\\\brackfrac"],
            props: {
                numArgs: 2,
                allowedInArgument: !0
            },
            handler: (e, t) => {
                var n, {parser: r, funcName: i} = e, s = t[0], o = t[1], a = null, l = null, c = "auto";
                switch (i) {
                case "\\dfrac":
                case "\\frac":
                case "\\tfrac":
                    n = !0;
                    break;
                case "\\\\atopfrac":
                    n = !1;
                    break;
                case "\\dbinom":
                case "\\binom":
                case "\\tbinom":
                    n = !1,
                    a = "(",
                    l = ")";
                    break;
                case "\\\\bracefrac":
                    n = !1,
                    a = "\\{",
                    l = "\\}";
                    break;
                case "\\\\brackfrac":
                    n = !1,
                    a = "[",
                    l = "]";
                    break;
                default:
                    throw new Error("Unrecognized genfrac command")
                }
                switch (i) {
                case "\\dfrac":
                case "\\dbinom":
                    c = "display";
                    break;
                case "\\tfrac":
                case "\\tbinom":
                    c = "text"
                }
                return {
                    type: "genfrac",
                    mode: r.mode,
                    continued: !1,
                    numer: s,
                    denom: o,
                    hasBarLine: n,
                    leftDelim: a,
                    rightDelim: l,
                    size: c,
                    barSize: null
                }
            }
            ,
            htmlBuilder: tr,
            mathmlBuilder: nr
        }),
        pt({
            type: "genfrac",
            names: ["\\cfrac"],
            props: {
                numArgs: 2
            },
            handler: (e, t) => {
                var {parser: n, funcName: r} = e
                  , i = t[0]
                  , s = t[1];
                return {
                    type: "genfrac",
                    mode: n.mode,
                    continued: !0,
                    numer: i,
                    denom: s,
                    hasBarLine: !0,
                    leftDelim: null,
                    rightDelim: null,
                    size: "display",
                    barSize: null
                }
            }
        }),
        pt({
            type: "infix",
            names: ["\\over", "\\choose", "\\atop", "\\brace", "\\brack"],
            props: {
                numArgs: 0,
                infix: !0
            },
            handler(e) {
                var t, {parser: n, funcName: r, token: i} = e;
                switch (r) {
                case "\\over":
                    t = "\\frac";
                    break;
                case "\\choose":
                    t = "\\binom";
                    break;
                case "\\atop":
                    t = "\\\\atopfrac";
                    break;
                case "\\brace":
                    t = "\\\\bracefrac";
                    break;
                case "\\brack":
                    t = "\\\\brackfrac";
                    break;
                default:
                    throw new Error("Unrecognized infix genfrac command")
                }
                return {
                    type: "infix",
                    mode: n.mode,
                    replaceWith: t,
                    token: i
                }
            }
        });
        var rr = ["display", "text", "script", "scriptscript"]
          , ir = function(e) {
            var t = null;
            return e.length > 0 && (t = "." === (t = e) ? null : t),
            t
        };
        pt({
            type: "genfrac",
            names: ["\\genfrac"],
            props: {
                numArgs: 6,
                allowedInArgument: !0,
                argTypes: ["math", "math", "size", "text", "math", "math"]
            },
            handler(e, t) {
                var n, {parser: r} = e, i = t[4], s = t[5], o = dt(t[0]), a = "atom" === o.type && "open" === o.family ? ir(o.text) : null, l = dt(t[1]), c = "atom" === l.type && "close" === l.family ? ir(l.text) : null, h = Ut(t[2], "size"), p = null;
                n = !!h.isBlank || (p = h.value).number > 0;
                var u = "auto"
                  , d = t[3];
                if ("ordgroup" === d.type) {
                    if (d.body.length > 0) {
                        var m = Ut(d.body[0], "textord");
                        u = rr[Number(m.text)]
                    }
                } else
                    d = Ut(d, "textord"),
                    u = rr[Number(d.text)];
                return {
                    type: "genfrac",
                    mode: r.mode,
                    numer: i,
                    denom: s,
                    continued: !1,
                    hasBarLine: n,
                    barSize: p,
                    leftDelim: a,
                    rightDelim: c,
                    size: u
                }
            },
            htmlBuilder: tr,
            mathmlBuilder: nr
        }),
        pt({
            type: "infix",
            names: ["\\above"],
            props: {
                numArgs: 1,
                argTypes: ["size"],
                infix: !0
            },
            handler(e, t) {
                var {parser: n, funcName: r, token: i} = e;
                return {
                    type: "infix",
                    mode: n.mode,
                    replaceWith: "\\\\abovefrac",
                    size: Ut(t[0], "size").value,
                    token: i
                }
            }
        }),
        pt({
            type: "genfrac",
            names: ["\\\\abovefrac"],
            props: {
                numArgs: 3,
                argTypes: ["math", "size", "math"]
            },
            handler: (e, t) => {
                var {parser: n, funcName: r} = e
                  , i = t[0]
                  , s = function(e) {
                    if (!e)
                        throw new Error("Expected non-null, but got " + String(e));
                    return e
                }(Ut(t[1], "infix").size)
                  , o = t[2]
                  , a = s.number > 0;
                return {
                    type: "genfrac",
                    mode: n.mode,
                    numer: i,
                    denom: o,
                    continued: !1,
                    hasBarLine: a,
                    barSize: s,
                    leftDelim: null,
                    rightDelim: null,
                    size: "auto"
                }
            }
            ,
            htmlBuilder: tr,
            mathmlBuilder: nr
        });
        var sr = (e, t) => {
            var n, r, i = t.style;
            "supsub" === e.type ? (n = e.sup ? Ct(e.sup, t.havingStyle(i.sup()), t) : Ct(e.sub, t.havingStyle(i.sub()), t),
            r = Ut(e.base, "horizBrace")) : r = Ut(e, "horizBrace");
            var s, o = Ct(r.base, t.havingBaseStyle(T.DISPLAY)), a = Ht(r, t);
            if (r.isOver ? (s = nt.makeVList({
                positionType: "firstBaseline",
                children: [{
                    type: "elem",
                    elem: o
                }, {
                    type: "kern",
                    size: .1
                }, {
                    type: "elem",
                    elem: a
                }]
            }, t)).children[0].children[0].children[1].classes.push("svg-align") : (s = nt.makeVList({
                positionType: "bottom",
                positionData: o.depth + .1 + a.height,
                children: [{
                    type: "elem",
                    elem: a
                }, {
                    type: "kern",
                    size: .1
                }, {
                    type: "elem",
                    elem: o
                }]
            }, t)).children[0].children[0].children[0].classes.push("svg-align"),
            n) {
                var l = nt.makeSpan(["mord", r.isOver ? "mover" : "munder"], [s], t);
                s = r.isOver ? nt.makeVList({
                    positionType: "firstBaseline",
                    children: [{
                        type: "elem",
                        elem: l
                    }, {
                        type: "kern",
                        size: .2
                    }, {
                        type: "elem",
                        elem: n
                    }]
                }, t) : nt.makeVList({
                    positionType: "bottom",
                    positionData: l.depth + .2 + n.height + n.depth,
                    children: [{
                        type: "elem",
                        elem: n
                    }, {
                        type: "kern",
                        size: .2
                    }, {
                        type: "elem",
                        elem: l
                    }]
                }, t)
            }
            return nt.makeSpan(["mord", r.isOver ? "mover" : "munder"], [s], t)
        }
        ;
        pt({
            type: "horizBrace",
            names: ["\\overbrace", "\\underbrace"],
            props: {
                numArgs: 1
            },
            handler(e, t) {
                var {parser: n, funcName: r} = e;
                return {
                    type: "horizBrace",
                    mode: n.mode,
                    label: r,
                    isOver: /^\\over/.test(r),
                    base: t[0]
                }
            },
            htmlBuilder: sr,
            mathmlBuilder: (e, t) => {
                var n = qt(e.label);
                return new It.MathNode(e.isOver ? "mover" : "munder",[Dt(e.base, t), n])
            }
        }),
        pt({
            type: "href",
            names: ["\\href"],
            props: {
                numArgs: 2,
                argTypes: ["url", "original"],
                allowedInText: !0
            },
            handler: (e, t) => {
                var {parser: n} = e
                  , r = t[1]
                  , i = Ut(t[0], "url").url;
                return n.settings.isTrusted({
                    command: "\\href",
                    url: i
                }) ? {
                    type: "href",
                    mode: n.mode,
                    href: i,
                    body: mt(r)
                } : n.formatUnsupportedCmd("\\href")
            }
            ,
            htmlBuilder: (e, t) => {
                var n = xt(e.body, t, !1);
                return nt.makeAnchor(e.href, [], n, t)
            }
            ,
            mathmlBuilder: (e, t) => {
                var n = Lt(e.body, t);
                return n instanceof _t || (n = new _t("mrow",[n])),
                n.setAttribute("href", e.href),
                n
            }
        }),
        pt({
            type: "href",
            names: ["\\url"],
            props: {
                numArgs: 1,
                argTypes: ["url"],
                allowedInText: !0
            },
            handler: (e, t) => {
                var {parser: n} = e
                  , r = Ut(t[0], "url").url;
                if (!n.settings.isTrusted({
                    command: "\\url",
                    url: r
                }))
                    return n.formatUnsupportedCmd("\\url");
                for (var i = [], s = 0; s < r.length; s++) {
                    var o = r[s];
                    "~" === o && (o = "\\textasciitilde"),
                    i.push({
                        type: "textord",
                        mode: "text",
                        text: o
                    })
                }
                var a = {
                    type: "text",
                    mode: n.mode,
                    font: "\\texttt",
                    body: i
                };
                return {
                    type: "href",
                    mode: n.mode,
                    href: r,
                    body: mt(a)
                }
            }
        }),
        pt({
            type: "hbox",
            names: ["\\hbox"],
            props: {
                numArgs: 1,
                argTypes: ["text"],
                allowedInText: !0,
                primitive: !0
            },
            handler(e, t) {
                var {parser: n} = e;
                return {
                    type: "hbox",
                    mode: n.mode,
                    body: mt(t[0])
                }
            },
            htmlBuilder(e, t) {
                var n = xt(e.body, t, !1);
                return nt.makeFragment(n)
            },
            mathmlBuilder: (e, t) => new It.MathNode("mrow",Ot(e.body, t))
        }),
        pt({
            type: "html",
            names: ["\\htmlClass", "\\htmlId", "\\htmlStyle", "\\htmlData"],
            props: {
                numArgs: 2,
                argTypes: ["raw", "original"],
                allowedInText: !0
            },
            handler: (e, t) => {
                var n, {parser: r, funcName: i, token: s} = e, o = Ut(t[0], "raw").string, a = t[1];
                r.settings.strict && r.settings.reportNonstrict("htmlExtension", "HTML extension is disabled on strict mode");
                var l = {};
                switch (i) {
                case "\\htmlClass":
                    l.class = o,
                    n = {
                        command: "\\htmlClass",
                        class: o
                    };
                    break;
                case "\\htmlId":
                    l.id = o,
                    n = {
                        command: "\\htmlId",
                        id: o
                    };
                    break;
                case "\\htmlStyle":
                    l.style = o,
                    n = {
                        command: "\\htmlStyle",
                        style: o
                    };
                    break;
                case "\\htmlData":
                    for (var c = o.split(","), h = 0; h < c.length; h++) {
                        var p = c[h].split("=");
                        if (2 !== p.length)
                            throw new d("Error parsing key-value for \\htmlData");
                        l["data-" + p[0].trim()] = p[1].trim()
                    }
                    n = {
                        command: "\\htmlData",
                        attributes: l
                    };
                    break;
                default:
                    throw new Error("Unrecognized html command")
                }
                return r.settings.isTrusted(n) ? {
                    type: "html",
                    mode: r.mode,
                    attributes: l,
                    body: mt(a)
                } : r.formatUnsupportedCmd(i)
            }
            ,
            htmlBuilder: (e, t) => {
                var n = xt(e.body, t, !1)
                  , r = ["enclosing"];
                e.attributes.class && r.push(...e.attributes.class.trim().split(/\s+/));
                var i = nt.makeSpan(r, n, t);
                for (var s in e.attributes)
                    "class" !== s && e.attributes.hasOwnProperty(s) && i.setAttribute(s, e.attributes[s]);
                return i
            }
            ,
            mathmlBuilder: (e, t) => Lt(e.body, t)
        }),
        pt({
            type: "htmlmathml",
            names: ["\\html@mathml"],
            props: {
                numArgs: 2,
                allowedInText: !0
            },
            handler: (e, t) => {
                var {parser: n} = e;
                return {
                    type: "htmlmathml",
                    mode: n.mode,
                    html: mt(t[0]),
                    mathml: mt(t[1])
                }
            }
            ,
            htmlBuilder: (e, t) => {
                var n = xt(e.html, t, !1);
                return nt.makeFragment(n)
            }
            ,
            mathmlBuilder: (e, t) => Lt(e.mathml, t)
        });
        var or = function(e) {
            if (/^[-+]? *(\d+(\.\d*)?|\.\d+)$/.test(e))
                return {
                    number: +e,
                    unit: "bp"
                };
            var t = /([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(e);
            if (!t)
                throw new d("Invalid size: '" + e + "' in \\includegraphics");
            var n = {
                number: +(t[1] + t[2]),
                unit: t[3]
            };
            if (!V(n))
                throw new d("Invalid unit: '" + n.unit + "' in \\includegraphics.");
            return n
        };
        pt({
            type: "includegraphics",
            names: ["\\includegraphics"],
            props: {
                numArgs: 1,
                numOptionalArgs: 1,
                argTypes: ["raw", "url"],
                allowedInText: !1
            },
            handler: (e, t, n) => {
                var {parser: r} = e
                  , i = {
                    number: 0,
                    unit: "em"
                }
                  , s = {
                    number: .9,
                    unit: "em"
                }
                  , o = {
                    number: 0,
                    unit: "em"
                }
                  , a = "";
                if (n[0])
                    for (var l = Ut(n[0], "raw").string.split(","), c = 0; c < l.length; c++) {
                        var h = l[c].split("=");
                        if (2 === h.length) {
                            var p = h[1].trim();
                            switch (h[0].trim()) {
                            case "alt":
                                a = p;
                                break;
                            case "width":
                                i = or(p);
                                break;
                            case "height":
                                s = or(p);
                                break;
                            case "totalheight":
                                o = or(p);
                                break;
                            default:
                                throw new d("Invalid key: '" + h[0] + "' in \\includegraphics.")
                            }
                        }
                    }
                var u = Ut(t[0], "url").url;
                return "" === a && (a = (a = (a = u).replace(/^.*[\\/]/, "")).substring(0, a.lastIndexOf("."))),
                r.settings.isTrusted({
                    command: "\\includegraphics",
                    url: u
                }) ? {
                    type: "includegraphics",
                    mode: r.mode,
                    alt: a,
                    width: i,
                    height: s,
                    totalheight: o,
                    src: u
                } : r.formatUnsupportedCmd("\\includegraphics")
            }
            ,
            htmlBuilder: (e, t) => {
                var n = $(e.height, t)
                  , r = 0;
                e.totalheight.number > 0 && (r = $(e.totalheight, t) - n);
                var i = 0;
                e.width.number > 0 && (i = $(e.width, t));
                var s = {
                    height: j(n + r)
                };
                i > 0 && (s.width = j(i)),
                r > 0 && (s.verticalAlign = j(-r));
                var o = new ee(e.src,e.alt,s);
                return o.height = n,
                o.depth = r,
                o
            }
            ,
            mathmlBuilder: (e, t) => {
                var n = new It.MathNode("mglyph",[]);
                n.setAttribute("alt", e.alt);
                var r = $(e.height, t)
                  , i = 0;
                if (e.totalheight.number > 0 && (i = $(e.totalheight, t) - r,
                n.setAttribute("valign", j(-i))),
                n.setAttribute("height", j(r + i)),
                e.width.number > 0) {
                    var s = $(e.width, t);
                    n.setAttribute("width", j(s))
                }
                return n.setAttribute("src", e.src),
                n
            }
        }),
        pt({
            type: "kern",
            names: ["\\kern", "\\mkern", "\\hskip", "\\mskip"],
            props: {
                numArgs: 1,
                argTypes: ["size"],
                primitive: !0,
                allowedInText: !0
            },
            handler(e, t) {
                var {parser: n, funcName: r} = e
                  , i = Ut(t[0], "size");
                if (n.settings.strict) {
                    var s = "m" === r[1]
                      , o = "mu" === i.value.unit;
                    s ? (o || n.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + r + " supports only mu units, not " + i.value.unit + " units"),
                    "math" !== n.mode && n.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + r + " works only in math mode")) : o && n.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + r + " doesn't support mu units")
                }
                return {
                    type: "kern",
                    mode: n.mode,
                    dimension: i.value
                }
            },
            htmlBuilder: (e, t) => nt.makeGlue(e.dimension, t),
            mathmlBuilder(e, t) {
                var n = $(e.dimension, t);
                return new It.SpaceNode(n)
            }
        }),
        pt({
            type: "lap",
            names: ["\\mathllap", "\\mathrlap", "\\mathclap"],
            props: {
                numArgs: 1,
                allowedInText: !0
            },
            handler: (e, t) => {
                var {parser: n, funcName: r} = e
                  , i = t[0];
                return {
                    type: "lap",
                    mode: n.mode,
                    alignment: r.slice(5),
                    body: i
                }
            }
            ,
            htmlBuilder: (e, t) => {
                var n;
                "clap" === e.alignment ? (n = nt.makeSpan([], [Ct(e.body, t)]),
                n = nt.makeSpan(["inner"], [n], t)) : n = nt.makeSpan(["inner"], [Ct(e.body, t)]);
                var r = nt.makeSpan(["fix"], [])
                  , i = nt.makeSpan([e.alignment], [n, r], t)
                  , s = nt.makeSpan(["strut"]);
                return s.style.height = j(i.height + i.depth),
                i.depth && (s.style.verticalAlign = j(-i.depth)),
                i.children.unshift(s),
                i = nt.makeSpan(["thinbox"], [i], t),
                nt.makeSpan(["mord", "vbox"], [i], t)
            }
            ,
            mathmlBuilder: (e, t) => {
                var n = new It.MathNode("mpadded",[Dt(e.body, t)]);
                if ("rlap" !== e.alignment) {
                    var r = "llap" === e.alignment ? "-1" : "-0.5";
                    n.setAttribute("lspace", r + "width")
                }
                return n.setAttribute("width", "0px"),
                n
            }
        }),
        pt({
            type: "styling",
            names: ["\\(", "$"],
            props: {
                numArgs: 0,
                allowedInText: !0,
                allowedInMath: !1
            },
            handler(e, t) {
                var {funcName: n, parser: r} = e
                  , i = r.mode;
                r.switchMode("math");
                var s = "\\(" === n ? "\\)" : "$"
                  , o = r.parseExpression(!1, s);
                return r.expect(s),
                r.switchMode(i),
                {
                    type: "styling",
                    mode: r.mode,
                    style: "text",
                    body: o
                }
            }
        }),
        pt({
            type: "text",
            names: ["\\)", "\\]"],
            props: {
                numArgs: 0,
                allowedInText: !0,
                allowedInMath: !1
            },
            handler(e, t) {
                throw new d("Mismatched " + e.funcName)
            }
        });
        var ar = (e, t) => {
            switch (t.style.size) {
            case T.DISPLAY.size:
                return e.display;
            case T.TEXT.size:
                return e.text;
            case T.SCRIPT.size:
                return e.script;
            case T.SCRIPTSCRIPT.size:
                return e.scriptscript;
            default:
                return e.text
            }
        }
        ;
        pt({
            type: "mathchoice",
            names: ["\\mathchoice"],
            props: {
                numArgs: 4,
                primitive: !0
            },
            handler: (e, t) => {
                var {parser: n} = e;
                return {
                    type: "mathchoice",
                    mode: n.mode,
                    display: mt(t[0]),
                    text: mt(t[1]),
                    script: mt(t[2]),
                    scriptscript: mt(t[3])
                }
            }
            ,
            htmlBuilder: (e, t) => {
                var n = ar(e, t)
                  , r = xt(n, t, !1);
                return nt.makeFragment(r)
            }
            ,
            mathmlBuilder: (e, t) => {
                var n = ar(e, t);
                return Lt(n, t)
            }
        });
        var lr = (e, t, n, r, i, s, o) => {
            e = nt.makeSpan([], [e]);
            var a, l, c, h = n && y.isCharacterBox(n);
            if (t) {
                var p = Ct(t, r.havingStyle(i.sup()), r);
                l = {
                    elem: p,
                    kern: Math.max(r.fontMetrics().bigOpSpacing1, r.fontMetrics().bigOpSpacing3 - p.depth)
                }
            }
            if (n) {
                var u = Ct(n, r.havingStyle(i.sub()), r);
                a = {
                    elem: u,
                    kern: Math.max(r.fontMetrics().bigOpSpacing2, r.fontMetrics().bigOpSpacing4 - u.height)
                }
            }
            if (l && a) {
                var d = r.fontMetrics().bigOpSpacing5 + a.elem.height + a.elem.depth + a.kern + e.depth + o;
                c = nt.makeVList({
                    positionType: "bottom",
                    positionData: d,
                    children: [{
                        type: "kern",
                        size: r.fontMetrics().bigOpSpacing5
                    }, {
                        type: "elem",
                        elem: a.elem,
                        marginLeft: j(-s)
                    }, {
                        type: "kern",
                        size: a.kern
                    }, {
                        type: "elem",
                        elem: e
                    }, {
                        type: "kern",
                        size: l.kern
                    }, {
                        type: "elem",
                        elem: l.elem,
                        marginLeft: j(s)
                    }, {
                        type: "kern",
                        size: r.fontMetrics().bigOpSpacing5
                    }]
                }, r)
            } else if (a) {
                var m = e.height - o;
                c = nt.makeVList({
                    positionType: "top",
                    positionData: m,
                    children: [{
                        type: "kern",
                        size: r.fontMetrics().bigOpSpacing5
                    }, {
                        type: "elem",
                        elem: a.elem,
                        marginLeft: j(-s)
                    }, {
                        type: "kern",
                        size: a.kern
                    }, {
                        type: "elem",
                        elem: e
                    }]
                }, r)
            } else {
                if (!l)
                    return e;
                var f = e.depth + o;
                c = nt.makeVList({
                    positionType: "bottom",
                    positionData: f,
                    children: [{
                        type: "elem",
                        elem: e
                    }, {
                        type: "kern",
                        size: l.kern
                    }, {
                        type: "elem",
                        elem: l.elem,
                        marginLeft: j(s)
                    }, {
                        type: "kern",
                        size: r.fontMetrics().bigOpSpacing5
                    }]
                }, r)
            }
            var g = [c];
            if (a && 0 !== s && !h) {
                var v = nt.makeSpan(["mspace"], [], r);
                v.style.marginRight = j(s),
                g.unshift(v)
            }
            return nt.makeSpan(["mop", "op-limits"], g, r)
        }
          , cr = ["\\smallint"]
          , hr = (e, t) => {
            var n, r, i, s = !1;
            "supsub" === e.type ? (n = e.sup,
            r = e.sub,
            i = Ut(e.base, "op"),
            s = !0) : i = Ut(e, "op");
            var o, a = t.style, l = !1;
            if (a.size === T.DISPLAY.size && i.symbol && !y.contains(cr, i.name) && (l = !0),
            i.symbol) {
                var c = l ? "Size2-Regular" : "Size1-Regular"
                  , h = "";
                if ("\\oiint" !== i.name && "\\oiiint" !== i.name || (h = i.name.slice(1),
                i.name = "oiint" === h ? "\\iint" : "\\iiint"),
                o = nt.makeSymbol(i.name, c, "math", t, ["mop", "op-symbol", l ? "large-op" : "small-op"]),
                h.length > 0) {
                    var p = o.italic
                      , u = nt.staticSvg(h + "Size" + (l ? "2" : "1"), t);
                    o = nt.makeVList({
                        positionType: "individualShift",
                        children: [{
                            type: "elem",
                            elem: o,
                            shift: 0
                        }, {
                            type: "elem",
                            elem: u,
                            shift: l ? .08 : 0
                        }]
                    }, t),
                    i.name = "\\" + h,
                    o.classes.unshift("mop"),
                    o.italic = p
                }
            } else if (i.body) {
                var d = xt(i.body, t, !0);
                1 === d.length && d[0]instanceof ne ? (o = d[0]).classes[0] = "mop" : o = nt.makeSpan(["mop"], d, t)
            } else {
                for (var m = [], f = 1; f < i.name.length; f++)
                    m.push(nt.mathsym(i.name[f], i.mode, t));
                o = nt.makeSpan(["mop"], m, t)
            }
            var g = 0
              , v = 0;
            return (o instanceof ne || "\\oiint" === i.name || "\\oiiint" === i.name) && !i.suppressBaseShift && (g = (o.height - o.depth) / 2 - t.fontMetrics().axisHeight,
            v = o.italic),
            s ? lr(o, n, r, t, a, v, g) : (g && (o.style.position = "relative",
            o.style.top = j(g)),
            o)
        }
          , pr = (e, t) => {
            var n;
            if (e.symbol)
                n = new _t("mo",[Rt(e.name, e.mode)]),
                y.contains(cr, e.name) && n.setAttribute("largeop", "false");
            else if (e.body)
                n = new _t("mo",Ot(e.body, t));
            else {
                n = new _t("mi",[new At(e.name.slice(1))]);
                var r = new _t("mo",[Rt("⁡", "text")]);
                n = e.parentIsSupSub ? new _t("mrow",[n, r]) : Tt([n, r])
            }
            return n
        }
          , ur = {
            "∏": "\\prod",
            "∐": "\\coprod",
            "∑": "\\sum",
            "⋀": "\\bigwedge",
            "⋁": "\\bigvee",
            "⋂": "\\bigcap",
            "⋃": "\\bigcup",
            "⨀": "\\bigodot",
            "⨁": "\\bigoplus",
            "⨂": "\\bigotimes",
            "⨄": "\\biguplus",
            "⨆": "\\bigsqcup"
        };
        pt({
            type: "op",
            names: ["\\coprod", "\\bigvee", "\\bigwedge", "\\biguplus", "\\bigcap", "\\bigcup", "\\intop", "\\prod", "\\sum", "\\bigotimes", "\\bigoplus", "\\bigodot", "\\bigsqcup", "\\smallint", "∏", "∐", "∑", "⋀", "⋁", "⋂", "⋃", "⨀", "⨁", "⨂", "⨄", "⨆"],
            props: {
                numArgs: 0
            },
            handler: (e, t) => {
                var {parser: n, funcName: r} = e
                  , i = r;
                return 1 === i.length && (i = ur[i]),
                {
                    type: "op",
                    mode: n.mode,
                    limits: !0,
                    parentIsSupSub: !1,
                    symbol: !0,
                    name: i
                }
            }
            ,
            htmlBuilder: hr,
            mathmlBuilder: pr
        }),
        pt({
            type: "op",
            names: ["\\mathop"],
            props: {
                numArgs: 1,
                primitive: !0
            },
            handler: (e, t) => {
                var {parser: n} = e
                  , r = t[0];
                return {
                    type: "op",
                    mode: n.mode,
                    limits: !1,
                    parentIsSupSub: !1,
                    symbol: !1,
                    body: mt(r)
                }
            }
            ,
            htmlBuilder: hr,
            mathmlBuilder: pr
        });
        var dr = {
            "∫": "\\int",
            "∬": "\\iint",
            "∭": "\\iiint",
            "∮": "\\oint",
            "∯": "\\oiint",
            "∰": "\\oiiint"
        };
        pt({
            type: "op",
            names: ["\\arcsin", "\\arccos", "\\arctan", "\\arctg", "\\arcctg", "\\arg", "\\ch", "\\cos", "\\cosec", "\\cosh", "\\cot", "\\cotg", "\\coth", "\\csc", "\\ctg", "\\cth", "\\deg", "\\dim", "\\exp", "\\hom", "\\ker", "\\lg", "\\ln", "\\log", "\\sec", "\\sin", "\\sinh", "\\sh", "\\tan", "\\tanh", "\\tg", "\\th"],
            props: {
                numArgs: 0
            },
            handler(e) {
                var {parser: t, funcName: n} = e;
                return {
                    type: "op",
                    mode: t.mode,
                    limits: !1,
                    parentIsSupSub: !1,
                    symbol: !1,
                    name: n
                }
            },
            htmlBuilder: hr,
            mathmlBuilder: pr
        }),
        pt({
            type: "op",
            names: ["\\det", "\\gcd", "\\inf", "\\lim", "\\max", "\\min", "\\Pr", "\\sup"],
            props: {
                numArgs: 0
            },
            handler(e) {
                var {parser: t, funcName: n} = e;
                return {
                    type: "op",
                    mode: t.mode,
                    limits: !0,
                    parentIsSupSub: !1,
                    symbol: !1,
                    name: n
                }
            },
            htmlBuilder: hr,
            mathmlBuilder: pr
        }),
        pt({
            type: "op",
            names: ["\\int", "\\iint", "\\iiint", "\\oint", "\\oiint", "\\oiiint", "∫", "∬", "∭", "∮", "∯", "∰"],
            props: {
                numArgs: 0
            },
            handler(e) {
                var {parser: t, funcName: n} = e
                  , r = n;
                return 1 === r.length && (r = dr[r]),
                {
                    type: "op",
                    mode: t.mode,
                    limits: !1,
                    parentIsSupSub: !1,
                    symbol: !0,
                    name: r
                }
            },
            htmlBuilder: hr,
            mathmlBuilder: pr
        });
        var mr = (e, t) => {
            var n, r, i, s, o = !1;
            if ("supsub" === e.type ? (n = e.sup,
            r = e.sub,
            i = Ut(e.base, "operatorname"),
            o = !0) : i = Ut(e, "operatorname"),
            i.body.length > 0) {
                for (var a = i.body.map((e => {
                    var t = e.text;
                    return "string" == typeof t ? {
                        type: "textord",
                        mode: e.mode,
                        text: t
                    } : e
                }
                )), l = xt(a, t.withFont("mathrm"), !0), c = 0; c < l.length; c++) {
                    var h = l[c];
                    h instanceof ne && (h.text = h.text.replace(/\u2212/, "-").replace(/\u2217/, "*"))
                }
                s = nt.makeSpan(["mop"], l, t)
            } else
                s = nt.makeSpan(["mop"], [], t);
            return o ? lr(s, n, r, t, t.style, 0, 0) : s
        }
        ;
        function fr(e, t, n) {
            for (var r = xt(e, t, !1), i = t.sizeMultiplier / n.sizeMultiplier, s = 0; s < r.length; s++) {
                var o = r[s].classes.indexOf("sizing");
                o < 0 ? Array.prototype.push.apply(r[s].classes, t.sizingClasses(n)) : r[s].classes[o + 1] === "reset-size" + t.size && (r[s].classes[o + 1] = "reset-size" + n.size),
                r[s].height *= i,
                r[s].depth *= i
            }
            return nt.makeFragment(r)
        }
        pt({
            type: "operatorname",
            names: ["\\operatorname@", "\\operatornamewithlimits"],
            props: {
                numArgs: 1
            },
            handler: (e, t) => {
                var {parser: n, funcName: r} = e
                  , i = t[0];
                return {
                    type: "operatorname",
                    mode: n.mode,
                    body: mt(i),
                    alwaysHandleSupSub: "\\operatornamewithlimits" === r,
                    limits: !1,
                    parentIsSupSub: !1
                }
            }
            ,
            htmlBuilder: mr,
            mathmlBuilder: (e, t) => {
                for (var n = Ot(e.body, t.withFont("mathrm")), r = !0, i = 0; i < n.length; i++) {
                    var s = n[i];
                    if (s instanceof It.SpaceNode)
                        ;
                    else if (s instanceof It.MathNode)
                        switch (s.type) {
                        case "mi":
                        case "mn":
                        case "ms":
                        case "mspace":
                        case "mtext":
                            break;
                        case "mo":
                            var o = s.children[0];
                            1 === s.children.length && o instanceof It.TextNode ? o.text = o.text.replace(/\u2212/, "-").replace(/\u2217/, "*") : r = !1;
                            break;
                        default:
                            r = !1
                        }
                    else
                        r = !1
                }
                if (r) {
                    var a = n.map((e => e.toText())).join("");
                    n = [new It.TextNode(a)]
                }
                var l = new It.MathNode("mi",n);
                l.setAttribute("mathvariant", "normal");
                var c = new It.MathNode("mo",[Rt("⁡", "text")]);
                return e.parentIsSupSub ? new It.MathNode("mrow",[l, c]) : It.newDocumentFragment([l, c])
            }
        }),
        qn("\\operatorname", "\\@ifstar\\operatornamewithlimits\\operatorname@"),
        ut({
            type: "ordgroup",
            htmlBuilder: (e, t) => e.semisimple ? nt.makeFragment(xt(e.body, t, !1)) : nt.makeSpan(["mord"], xt(e.body, t, !0), t),
            mathmlBuilder: (e, t) => Lt(e.body, t, !0)
        }),
        pt({
            type: "overline",
            names: ["\\overline"],
            props: {
                numArgs: 1
            },
            handler(e, t) {
                var {parser: n} = e
                  , r = t[0];
                return {
                    type: "overline",
                    mode: n.mode,
                    body: r
                }
            },
            htmlBuilder(e, t) {
                var n = Ct(e.body, t.havingCrampedStyle())
                  , r = nt.makeLineSpan("overline-line", t)
                  , i = t.fontMetrics().defaultRuleThickness
                  , s = nt.makeVList({
                    positionType: "firstBaseline",
                    children: [{
                        type: "elem",
                        elem: n
                    }, {
                        type: "kern",
                        size: 3 * i
                    }, {
                        type: "elem",
                        elem: r
                    }, {
                        type: "kern",
                        size: i
                    }]
                }, t);
                return nt.makeSpan(["mord", "overline"], [s], t)
            },
            mathmlBuilder(e, t) {
                var n = new It.MathNode("mo",[new It.TextNode("‾")]);
                n.setAttribute("stretchy", "true");
                var r = new It.MathNode("mover",[Dt(e.body, t), n]);
                return r.setAttribute("accent", "true"),
                r
            }
        }),
        pt({
            type: "phantom",
            names: ["\\phantom"],
            props: {
                numArgs: 1,
                allowedInText: !0
            },
            handler: (e, t) => {
                var {parser: n} = e
                  , r = t[0];
                return {
                    type: "phantom",
                    mode: n.mode,
                    body: mt(r)
                }
            }
            ,
            htmlBuilder: (e, t) => {
                var n = xt(e.body, t.withPhantom(), !1);
                return nt.makeFragment(n)
            }
            ,
            mathmlBuilder: (e, t) => {
                var n = Ot(e.body, t);
                return new It.MathNode("mphantom",n)
            }
        }),
        pt({
            type: "hphantom",
            names: ["\\hphantom"],
            props: {
                numArgs: 1,
                allowedInText: !0
            },
            handler: (e, t) => {
                var {parser: n} = e
                  , r = t[0];
                return {
                    type: "hphantom",
                    mode: n.mode,
                    body: r
                }
            }
            ,
            htmlBuilder: (e, t) => {
                var n = nt.makeSpan([], [Ct(e.body, t.withPhantom())]);
                if (n.height = 0,
                n.depth = 0,
                n.children)
                    for (var r = 0; r < n.children.length; r++)
                        n.children[r].height = 0,
                        n.children[r].depth = 0;
                return n = nt.makeVList({
                    positionType: "firstBaseline",
                    children: [{
                        type: "elem",
                        elem: n
                    }]
                }, t),
                nt.makeSpan(["mord"], [n], t)
            }
            ,
            mathmlBuilder: (e, t) => {
                var n = Ot(mt(e.body), t)
                  , r = new It.MathNode("mphantom",n)
                  , i = new It.MathNode("mpadded",[r]);
                return i.setAttribute("height", "0px"),
                i.setAttribute("depth", "0px"),
                i
            }
        }),
        pt({
            type: "vphantom",
            names: ["\\vphantom"],
            props: {
                numArgs: 1,
                allowedInText: !0
            },
            handler: (e, t) => {
                var {parser: n} = e
                  , r = t[0];
                return {
                    type: "vphantom",
                    mode: n.mode,
                    body: r
                }
            }
            ,
            htmlBuilder: (e, t) => {
                var n = nt.makeSpan(["inner"], [Ct(e.body, t.withPhantom())])
                  , r = nt.makeSpan(["fix"], []);
                return nt.makeSpan(["mord", "rlap"], [n, r], t)
            }
            ,
            mathmlBuilder: (e, t) => {
                var n = Ot(mt(e.body), t)
                  , r = new It.MathNode("mphantom",n)
                  , i = new It.MathNode("mpadded",[r]);
                return i.setAttribute("width", "0px"),
                i
            }
        }),
        pt({
            type: "raisebox",
            names: ["\\raisebox"],
            props: {
                numArgs: 2,
                argTypes: ["size", "hbox"],
                allowedInText: !0
            },
            handler(e, t) {
                var {parser: n} = e
                  , r = Ut(t[0], "size").value
                  , i = t[1];
                return {
                    type: "raisebox",
                    mode: n.mode,
                    dy: r,
                    body: i
                }
            },
            htmlBuilder(e, t) {
                var n = Ct(e.body, t)
                  , r = $(e.dy, t);
                return nt.makeVList({
                    positionType: "shift",
                    positionData: -r,
                    children: [{
                        type: "elem",
                        elem: n
                    }]
                }, t)
            },
            mathmlBuilder(e, t) {
                var n = new It.MathNode("mpadded",[Dt(e.body, t)])
                  , r = e.dy.number + e.dy.unit;
                return n.setAttribute("voffset", r),
                n
            }
        }),
        pt({
            type: "internal",
            names: ["\\relax"],
            props: {
                numArgs: 0,
                allowedInText: !0
            },
            handler(e) {
                var {parser: t} = e;
                return {
                    type: "internal",
                    mode: t.mode
                }
            }
        }),
        pt({
            type: "rule",
            names: ["\\rule"],
            props: {
                numArgs: 2,
                numOptionalArgs: 1,
                argTypes: ["size", "size", "size"]
            },
            handler(e, t, n) {
                var {parser: r} = e
                  , i = n[0]
                  , s = Ut(t[0], "size")
                  , o = Ut(t[1], "size");
                return {
                    type: "rule",
                    mode: r.mode,
                    shift: i && Ut(i, "size").value,
                    width: s.value,
                    height: o.value
                }
            },
            htmlBuilder(e, t) {
                var n = nt.makeSpan(["mord", "rule"], [], t)
                  , r = $(e.width, t)
                  , i = $(e.height, t)
                  , s = e.shift ? $(e.shift, t) : 0;
                return n.style.borderRightWidth = j(r),
                n.style.borderTopWidth = j(i),
                n.style.bottom = j(s),
                n.width = r,
                n.height = i + s,
                n.depth = -s,
                n.maxFontSize = 1.125 * i * t.sizeMultiplier,
                n
            },
            mathmlBuilder(e, t) {
                var n = $(e.width, t)
                  , r = $(e.height, t)
                  , i = e.shift ? $(e.shift, t) : 0
                  , s = t.color && t.getColor() || "black"
                  , o = new It.MathNode("mspace");
                o.setAttribute("mathbackground", s),
                o.setAttribute("width", j(n)),
                o.setAttribute("height", j(r));
                var a = new It.MathNode("mpadded",[o]);
                return i >= 0 ? a.setAttribute("height", j(i)) : (a.setAttribute("height", j(i)),
                a.setAttribute("depth", j(-i))),
                a.setAttribute("voffset", j(i)),
                a
            }
        });
        var gr = ["\\tiny", "\\sixptsize", "\\scriptsize", "\\footnotesize", "\\small", "\\normalsize", "\\large", "\\Large", "\\LARGE", "\\huge", "\\Huge"];
        pt({
            type: "sizing",
            names: gr,
            props: {
                numArgs: 0,
                allowedInText: !0
            },
            handler: (e, t) => {
                var {breakOnTokenText: n, funcName: r, parser: i} = e
                  , s = i.parseExpression(!1, n);
                return {
                    type: "sizing",
                    mode: i.mode,
                    size: gr.indexOf(r) + 1,
                    body: s
                }
            }
            ,
            htmlBuilder: (e, t) => {
                var n = t.havingSize(e.size);
                return fr(e.body, n, t)
            }
            ,
            mathmlBuilder: (e, t) => {
                var n = t.havingSize(e.size)
                  , r = Ot(e.body, n)
                  , i = new It.MathNode("mstyle",r);
                return i.setAttribute("mathsize", j(n.sizeMultiplier)),
                i
            }
        }),
        pt({
            type: "smash",
            names: ["\\smash"],
            props: {
                numArgs: 1,
                numOptionalArgs: 1,
                allowedInText: !0
            },
            handler: (e, t, n) => {
                var {parser: r} = e
                  , i = !1
                  , s = !1
                  , o = n[0] && Ut(n[0], "ordgroup");
                if (o)
                    for (var a = "", l = 0; l < o.body.length; ++l) {
                        if ("t" === (a = o.body[l].text))
                            i = !0;
                        else {
                            if ("b" !== a) {
                                i = !1,
                                s = !1;
                                break
                            }
                            s = !0
                        }
                    }
                else
                    i = !0,
                    s = !0;
                var c = t[0];
                return {
                    type: "smash",
                    mode: r.mode,
                    body: c,
                    smashHeight: i,
                    smashDepth: s
                }
            }
            ,
            htmlBuilder: (e, t) => {
                var n = nt.makeSpan([], [Ct(e.body, t)]);
                if (!e.smashHeight && !e.smashDepth)
                    return n;
                if (e.smashHeight && (n.height = 0,
                n.children))
                    for (var r = 0; r < n.children.length; r++)
                        n.children[r].height = 0;
                if (e.smashDepth && (n.depth = 0,
                n.children))
                    for (var i = 0; i < n.children.length; i++)
                        n.children[i].depth = 0;
                var s = nt.makeVList({
                    positionType: "firstBaseline",
                    children: [{
                        type: "elem",
                        elem: n
                    }]
                }, t);
                return nt.makeSpan(["mord"], [s], t)
            }
            ,
            mathmlBuilder: (e, t) => {
                var n = new It.MathNode("mpadded",[Dt(e.body, t)]);
                return e.smashHeight && n.setAttribute("height", "0px"),
                e.smashDepth && n.setAttribute("depth", "0px"),
                n
            }
        }),
        pt({
            type: "sqrt",
            names: ["\\sqrt"],
            props: {
                numArgs: 1,
                numOptionalArgs: 1
            },
            handler(e, t, n) {
                var {parser: r} = e
                  , i = n[0]
                  , s = t[0];
                return {
                    type: "sqrt",
                    mode: r.mode,
                    body: s,
                    index: i
                }
            },
            htmlBuilder(e, t) {
                var n = Ct(e.body, t.havingCrampedStyle());
                0 === n.height && (n.height = t.fontMetrics().xHeight),
                n = nt.wrapFragment(n, t);
                var r = t.fontMetrics().defaultRuleThickness
                  , i = r;
                t.style.id < T.TEXT.id && (i = t.fontMetrics().xHeight);
                var s = r + i / 4
                  , o = n.height + n.depth + s + r
                  , {span: a, ruleWidth: l, advanceWidth: c} = In.sqrtImage(o, t)
                  , h = a.height - l;
                h > n.height + n.depth + s && (s = (s + h - n.height - n.depth) / 2);
                var p = a.height - n.height - s - l;
                n.style.paddingLeft = j(c);
                var u = nt.makeVList({
                    positionType: "firstBaseline",
                    children: [{
                        type: "elem",
                        elem: n,
                        wrapperClasses: ["svg-align"]
                    }, {
                        type: "kern",
                        size: -(n.height + p)
                    }, {
                        type: "elem",
                        elem: a
                    }, {
                        type: "kern",
                        size: l
                    }]
                }, t);
                if (e.index) {
                    var d = t.havingStyle(T.SCRIPTSCRIPT)
                      , m = Ct(e.index, d, t)
                      , f = .6 * (u.height - u.depth)
                      , g = nt.makeVList({
                        positionType: "shift",
                        positionData: -f,
                        children: [{
                            type: "elem",
                            elem: m
                        }]
                    }, t)
                      , v = nt.makeSpan(["root"], [g]);
                    return nt.makeSpan(["mord", "sqrt"], [v, u], t)
                }
                return nt.makeSpan(["mord", "sqrt"], [u], t)
            },
            mathmlBuilder(e, t) {
                var {body: n, index: r} = e;
                return r ? new It.MathNode("mroot",[Dt(n, t), Dt(r, t)]) : new It.MathNode("msqrt",[Dt(n, t)])
            }
        });
        var vr = {
            display: T.DISPLAY,
            text: T.TEXT,
            script: T.SCRIPT,
            scriptscript: T.SCRIPTSCRIPT
        };
        pt({
            type: "styling",
            names: ["\\displaystyle", "\\textstyle", "\\scriptstyle", "\\scriptscriptstyle"],
            props: {
                numArgs: 0,
                allowedInText: !0,
                primitive: !0
            },
            handler(e, t) {
                var {breakOnTokenText: n, funcName: r, parser: i} = e
                  , s = i.parseExpression(!0, n)
                  , o = r.slice(1, r.length - 5);
                return {
                    type: "styling",
                    mode: i.mode,
                    style: o,
                    body: s
                }
            },
            htmlBuilder(e, t) {
                var n = vr[e.style]
                  , r = t.havingStyle(n).withFont("");
                return fr(e.body, r, t)
            },
            mathmlBuilder(e, t) {
                var n = vr[e.style]
                  , r = t.havingStyle(n)
                  , i = Ot(e.body, r)
                  , s = new It.MathNode("mstyle",i)
                  , o = {
                    display: ["0", "true"],
                    text: ["0", "false"],
                    script: ["1", "false"],
                    scriptscript: ["2", "false"]
                }[e.style];
                return s.setAttribute("scriptlevel", o[0]),
                s.setAttribute("displaystyle", o[1]),
                s
            }
        });
        ut({
            type: "supsub",
            htmlBuilder(e, t) {
                var n = function(e, t) {
                    var n = e.base;
                    return n ? "op" === n.type ? n.limits && (t.style.size === T.DISPLAY.size || n.alwaysHandleSupSub) ? hr : null : "operatorname" === n.type ? n.alwaysHandleSupSub && (t.style.size === T.DISPLAY.size || n.limits) ? mr : null : "accent" === n.type ? y.isCharacterBox(n.base) ? Vt : null : "horizBrace" === n.type && !e.sub === n.isOver ? sr : null : null
                }(e, t);
                if (n)
                    return n(e, t);
                var r, i, s, {base: o, sup: a, sub: l} = e, c = Ct(o, t), h = t.fontMetrics(), p = 0, u = 0, d = o && y.isCharacterBox(o);
                if (a) {
                    var m = t.havingStyle(t.style.sup());
                    r = Ct(a, m, t),
                    d || (p = c.height - m.fontMetrics().supDrop * m.sizeMultiplier / t.sizeMultiplier)
                }
                if (l) {
                    var f = t.havingStyle(t.style.sub());
                    i = Ct(l, f, t),
                    d || (u = c.depth + f.fontMetrics().subDrop * f.sizeMultiplier / t.sizeMultiplier)
                }
                s = t.style === T.DISPLAY ? h.sup1 : t.style.cramped ? h.sup3 : h.sup2;
                var g, v = t.sizeMultiplier, b = j(.5 / h.ptPerEm / v), x = null;
                if (i) {
                    var w = e.base && "op" === e.base.type && e.base.name && ("\\oiint" === e.base.name || "\\oiiint" === e.base.name);
                    (c instanceof ne || w) && (x = j(-c.italic))
                }
                if (r && i) {
                    p = Math.max(p, s, r.depth + .25 * h.xHeight),
                    u = Math.max(u, h.sub2);
                    var k = 4 * h.defaultRuleThickness;
                    if (p - r.depth - (i.height - u) < k) {
                        u = k - (p - r.depth) + i.height;
                        var S = .8 * h.xHeight - (p - r.depth);
                        S > 0 && (p += S,
                        u -= S)
                    }
                    var E = [{
                        type: "elem",
                        elem: i,
                        shift: u,
                        marginRight: b,
                        marginLeft: x
                    }, {
                        type: "elem",
                        elem: r,
                        shift: -p,
                        marginRight: b
                    }];
                    g = nt.makeVList({
                        positionType: "individualShift",
                        children: E
                    }, t)
                } else if (i) {
                    u = Math.max(u, h.sub1, i.height - .8 * h.xHeight);
                    var M = [{
                        type: "elem",
                        elem: i,
                        marginLeft: x,
                        marginRight: b
                    }];
                    g = nt.makeVList({
                        positionType: "shift",
                        positionData: u,
                        children: M
                    }, t)
                } else {
                    if (!r)
                        throw new Error("supsub must have either sup or sub.");
                    p = Math.max(p, s, r.depth + .25 * h.xHeight),
                    g = nt.makeVList({
                        positionType: "shift",
                        positionData: -p,
                        children: [{
                            type: "elem",
                            elem: r,
                            marginRight: b
                        }]
                    }, t)
                }
                var C = Et(c, "right") || "mord";
                return nt.makeSpan([C], [c, nt.makeSpan(["msupsub"], [g])], t)
            },
            mathmlBuilder(e, t) {
                var n, r = !1;
                e.base && "horizBrace" === e.base.type && !!e.sup === e.base.isOver && (r = !0,
                n = e.base.isOver),
                !e.base || "op" !== e.base.type && "operatorname" !== e.base.type || (e.base.parentIsSupSub = !0);
                var i, s = [Dt(e.base, t)];
                if (e.sub && s.push(Dt(e.sub, t)),
                e.sup && s.push(Dt(e.sup, t)),
                r)
                    i = n ? "mover" : "munder";
                else if (e.sub)
                    if (e.sup) {
                        var o = e.base;
                        i = o && "op" === o.type && o.limits && t.style === T.DISPLAY || o && "operatorname" === o.type && o.alwaysHandleSupSub && (t.style === T.DISPLAY || o.limits) ? "munderover" : "msubsup"
                    } else {
                        var a = e.base;
                        i = a && "op" === a.type && a.limits && (t.style === T.DISPLAY || a.alwaysHandleSupSub) || a && "operatorname" === a.type && a.alwaysHandleSupSub && (a.limits || t.style === T.DISPLAY) ? "munder" : "msub"
                    }
                else {
                    var l = e.base;
                    i = l && "op" === l.type && l.limits && (t.style === T.DISPLAY || l.alwaysHandleSupSub) || l && "operatorname" === l.type && l.alwaysHandleSupSub && (l.limits || t.style === T.DISPLAY) ? "mover" : "msup"
                }
                return new It.MathNode(i,s)
            }
        }),
        ut({
            type: "atom",
            htmlBuilder: (e, t) => nt.mathsym(e.text, e.mode, t, ["m" + e.family]),
            mathmlBuilder(e, t) {
                var n = new It.MathNode("mo",[Rt(e.text, e.mode)]);
                if ("bin" === e.family) {
                    var r = Pt(e, t);
                    "bold-italic" === r && n.setAttribute("mathvariant", r)
                } else
                    "punct" === e.family ? n.setAttribute("separator", "true") : "open" !== e.family && "close" !== e.family || n.setAttribute("stretchy", "false");
                return n
            }
        });
        var yr = {
            mi: "italic",
            mn: "normal",
            mtext: "normal"
        };
        ut({
            type: "mathord",
            htmlBuilder: (e, t) => nt.makeOrd(e, t, "mathord"),
            mathmlBuilder(e, t) {
                var n = new It.MathNode("mi",[Rt(e.text, e.mode, t)])
                  , r = Pt(e, t) || "italic";
                return r !== yr[n.type] && n.setAttribute("mathvariant", r),
                n
            }
        }),
        ut({
            type: "textord",
            htmlBuilder: (e, t) => nt.makeOrd(e, t, "textord"),
            mathmlBuilder(e, t) {
                var n, r = Rt(e.text, e.mode, t), i = Pt(e, t) || "normal";
                return n = "text" === e.mode ? new It.MathNode("mtext",[r]) : /[0-9]/.test(e.text) ? new It.MathNode("mn",[r]) : "\\prime" === e.text ? new It.MathNode("mo",[r]) : new It.MathNode("mi",[r]),
                i !== yr[n.type] && n.setAttribute("mathvariant", i),
                n
            }
        });
        var br = {
            "\\nobreak": "nobreak",
            "\\allowbreak": "allowbreak"
        }
          , xr = {
            " ": {},
            "\\ ": {},
            "~": {
                className: "nobreak"
            },
            "\\space": {},
            "\\nobreakspace": {
                className: "nobreak"
            }
        };
        ut({
            type: "spacing",
            htmlBuilder(e, t) {
                if (xr.hasOwnProperty(e.text)) {
                    var n = xr[e.text].className || "";
                    if ("text" === e.mode) {
                        var r = nt.makeOrd(e, t, "textord");
                        return r.classes.push(n),
                        r
                    }
                    return nt.makeSpan(["mspace", n], [nt.mathsym(e.text, e.mode, t)], t)
                }
                if (br.hasOwnProperty(e.text))
                    return nt.makeSpan(["mspace", br[e.text]], [], t);
                throw new d('Unknown type of space "' + e.text + '"')
            },
            mathmlBuilder(e, t) {
                if (!xr.hasOwnProperty(e.text)) {
                    if (br.hasOwnProperty(e.text))
                        return new It.MathNode("mspace");
                    throw new d('Unknown type of space "' + e.text + '"')
                }
                return new It.MathNode("mtext",[new It.TextNode(" ")])
            }
        });
        var wr = () => {
            var e = new It.MathNode("mtd",[]);
            return e.setAttribute("width", "50%"),
            e
        }
        ;
        ut({
            type: "tag",
            mathmlBuilder(e, t) {
                var n = new It.MathNode("mtable",[new It.MathNode("mtr",[wr(), new It.MathNode("mtd",[Lt(e.body, t)]), wr(), new It.MathNode("mtd",[Lt(e.tag, t)])])]);
                return n.setAttribute("width", "100%"),
                n
            }
        });
        var kr = {
            "\\text": void 0,
            "\\textrm": "textrm",
            "\\textsf": "textsf",
            "\\texttt": "texttt",
            "\\textnormal": "textrm"
        }
          , Sr = {
            "\\textbf": "textbf",
            "\\textmd": "textmd"
        }
          , Er = {
            "\\textit": "textit",
            "\\textup": "textup"
        }
          , Mr = (e, t) => {
            var n = e.font;
            return n ? kr[n] ? t.withTextFontFamily(kr[n]) : Sr[n] ? t.withTextFontWeight(Sr[n]) : t.withTextFontShape(Er[n]) : t
        }
        ;
        pt({
            type: "text",
            names: ["\\text", "\\textrm", "\\textsf", "\\texttt", "\\textnormal", "\\textbf", "\\textmd", "\\textit", "\\textup"],
            props: {
                numArgs: 1,
                argTypes: ["text"],
                allowedInArgument: !0,
                allowedInText: !0
            },
            handler(e, t) {
                var {parser: n, funcName: r} = e
                  , i = t[0];
                return {
                    type: "text",
                    mode: n.mode,
                    body: mt(i),
                    font: r
                }
            },
            htmlBuilder(e, t) {
                var n = Mr(e, t)
                  , r = xt(e.body, n, !0);
                return nt.makeSpan(["mord", "text"], r, n)
            },
            mathmlBuilder(e, t) {
                var n = Mr(e, t);
                return Lt(e.body, n)
            }
        }),
        pt({
            type: "underline",
            names: ["\\underline"],
            props: {
                numArgs: 1,
                allowedInText: !0
            },
            handler(e, t) {
                var {parser: n} = e;
                return {
                    type: "underline",
                    mode: n.mode,
                    body: t[0]
                }
            },
            htmlBuilder(e, t) {
                var n = Ct(e.body, t)
                  , r = nt.makeLineSpan("underline-line", t)
                  , i = t.fontMetrics().defaultRuleThickness
                  , s = nt.makeVList({
                    positionType: "top",
                    positionData: n.height,
                    children: [{
                        type: "kern",
                        size: i
                    }, {
                        type: "elem",
                        elem: r
                    }, {
                        type: "kern",
                        size: 3 * i
                    }, {
                        type: "elem",
                        elem: n
                    }]
                }, t);
                return nt.makeSpan(["mord", "underline"], [s], t)
            },
            mathmlBuilder(e, t) {
                var n = new It.MathNode("mo",[new It.TextNode("‾")]);
                n.setAttribute("stretchy", "true");
                var r = new It.MathNode("munder",[Dt(e.body, t), n]);
                return r.setAttribute("accentunder", "true"),
                r
            }
        }),
        pt({
            type: "vcenter",
            names: ["\\vcenter"],
            props: {
                numArgs: 1,
                argTypes: ["original"],
                allowedInText: !1
            },
            handler(e, t) {
                var {parser: n} = e;
                return {
                    type: "vcenter",
                    mode: n.mode,
                    body: t[0]
                }
            },
            htmlBuilder(e, t) {
                var n = Ct(e.body, t)
                  , r = t.fontMetrics().axisHeight
                  , i = .5 * (n.height - r - (n.depth + r));
                return nt.makeVList({
                    positionType: "shift",
                    positionData: i,
                    children: [{
                        type: "elem",
                        elem: n
                    }]
                }, t)
            },
            mathmlBuilder: (e, t) => new It.MathNode("mpadded",[Dt(e.body, t)],["vcenter"])
        }),
        pt({
            type: "verb",
            names: ["\\verb"],
            props: {
                numArgs: 0,
                allowedInText: !0
            },
            handler(e, t, n) {
                throw new d("\\verb ended by end of line instead of matching delimiter")
            },
            htmlBuilder(e, t) {
                for (var n = Cr(e), r = [], i = t.havingStyle(t.style.text()), s = 0; s < n.length; s++) {
                    var o = n[s];
                    "~" === o && (o = "\\textasciitilde"),
                    r.push(nt.makeSymbol(o, "Typewriter-Regular", e.mode, i, ["mord", "texttt"]))
                }
                return nt.makeSpan(["mord", "text"].concat(i.sizingClasses(t)), nt.tryCombineChars(r), i)
            },
            mathmlBuilder(e, t) {
                var n = new It.TextNode(Cr(e))
                  , r = new It.MathNode("mtext",[n]);
                return r.setAttribute("mathvariant", "monospace"),
                r
            }
        });
        var Cr = e => e.body.replace(/ /g, e.star ? "␣" : " ")
          , Tr = lt
          , _r = "[ \r\n\t]"
          , Ar = "(\\\\[a-zA-Z@]+)" + _r + "*"
          , Ir = "[̀-ͯ]"
          , Rr = new RegExp(Ir + "+$")
          , Nr = "(" + _r + "+)|\\\\(\n|[ \r\t]+\n?)[ \r\t]*|([!-\\[\\]-‧‪-퟿豈-￿]" + Ir + "*|[\ud800-\udbff][\udc00-\udfff]" + Ir + "*|\\\\verb\\*([^]).*?\\4|\\\\verb([^*a-zA-Z]).*?\\5|" + Ar + "|\\\\[^\ud800-\udfff])";
        class Pr {
            constructor(e, t) {
                this.input = void 0,
                this.settings = void 0,
                this.tokenRegex = void 0,
                this.catcodes = void 0,
                this.input = e,
                this.settings = t,
                this.tokenRegex = new RegExp(Nr,"g"),
                this.catcodes = {
                    "%": 14,
                    "~": 13
                }
            }
            setCatcode(e, t) {
                this.catcodes[e] = t
            }
            lex() {
                var e = this.input
                  , t = this.tokenRegex.lastIndex;
                if (t === e.length)
                    return new u("EOF",new p(this,t,t));
                var n = this.tokenRegex.exec(e);
                if (null === n || n.index !== t)
                    throw new d("Unexpected character: '" + e[t] + "'",new u(e[t],new p(this,t,t + 1)));
                var r = n[6] || n[3] || (n[2] ? "\\ " : " ");
                if (14 === this.catcodes[r]) {
                    var i = e.indexOf("\n", this.tokenRegex.lastIndex);
                    return -1 === i ? (this.tokenRegex.lastIndex = e.length,
                    this.settings.reportNonstrict("commentAtEnd", "% comment has no terminating newline; LaTeX would fail because of commenting the end of math mode (e.g. $)")) : this.tokenRegex.lastIndex = i + 1,
                    this.lex()
                }
                return new u(r,new p(this,t,this.tokenRegex.lastIndex))
            }
        }
        class Or {
            constructor(e, t) {
                void 0 === e && (e = {}),
                void 0 === t && (t = {}),
                this.current = void 0,
                this.builtins = void 0,
                this.undefStack = void 0,
                this.current = t,
                this.builtins = e,
                this.undefStack = []
            }
            beginGroup() {
                this.undefStack.push({})
            }
            endGroup() {
                if (0 === this.undefStack.length)
                    throw new d("Unbalanced namespace destruction: attempt to pop global namespace; please report this as a bug");
                var e = this.undefStack.pop();
                for (var t in e)
                    e.hasOwnProperty(t) && (null == e[t] ? delete this.current[t] : this.current[t] = e[t])
            }
            endGroups() {
                for (; this.undefStack.length > 0; )
                    this.endGroup()
            }
            has(e) {
                return this.current.hasOwnProperty(e) || this.builtins.hasOwnProperty(e)
            }
            get(e) {
                return this.current.hasOwnProperty(e) ? this.current[e] : this.builtins[e]
            }
            set(e, t, n) {
                if (void 0 === n && (n = !1),
                n) {
                    for (var r = 0; r < this.undefStack.length; r++)
                        delete this.undefStack[r][e];
                    this.undefStack.length > 0 && (this.undefStack[this.undefStack.length - 1][e] = t)
                } else {
                    var i = this.undefStack[this.undefStack.length - 1];
                    i && !i.hasOwnProperty(e) && (i[e] = this.current[e])
                }
                null == t ? delete this.current[e] : this.current[e] = t
            }
        }
        var Lr = Bn;
        qn("\\noexpand", (function(e) {
            var t = e.popToken();
            return e.isExpandable(t.text) && (t.noexpand = !0,
            t.treatAsRelax = !0),
            {
                tokens: [t],
                numArgs: 0
            }
        }
        )),
        qn("\\expandafter", (function(e) {
            var t = e.popToken();
            return e.expandOnce(!0),
            {
                tokens: [t],
                numArgs: 0
            }
        }
        )),
        qn("\\@firstoftwo", (function(e) {
            return {
                tokens: e.consumeArgs(2)[0],
                numArgs: 0
            }
        }
        )),
        qn("\\@secondoftwo", (function(e) {
            return {
                tokens: e.consumeArgs(2)[1],
                numArgs: 0
            }
        }
        )),
        qn("\\@ifnextchar", (function(e) {
            var t = e.consumeArgs(3);
            e.consumeSpaces();
            var n = e.future();
            return 1 === t[0].length && t[0][0].text === n.text ? {
                tokens: t[1],
                numArgs: 0
            } : {
                tokens: t[2],
                numArgs: 0
            }
        }
        )),
        qn("\\@ifstar", "\\@ifnextchar *{\\@firstoftwo{#1}}"),
        qn("\\TextOrMath", (function(e) {
            var t = e.consumeArgs(2);
            return "text" === e.mode ? {
                tokens: t[0],
                numArgs: 0
            } : {
                tokens: t[1],
                numArgs: 0
            }
        }
        ));
        var Dr = {
            0: 0,
            1: 1,
            2: 2,
            3: 3,
            4: 4,
            5: 5,
            6: 6,
            7: 7,
            8: 8,
            9: 9,
            a: 10,
            A: 10,
            b: 11,
            B: 11,
            c: 12,
            C: 12,
            d: 13,
            D: 13,
            e: 14,
            E: 14,
            f: 15,
            F: 15
        };
        qn("\\char", (function(e) {
            var t, n = e.popToken(), r = "";
            if ("'" === n.text)
                t = 8,
                n = e.popToken();
            else if ('"' === n.text)
                t = 16,
                n = e.popToken();
            else if ("`" === n.text)
                if ("\\" === (n = e.popToken()).text[0])
                    r = n.text.charCodeAt(1);
                else {
                    if ("EOF" === n.text)
                        throw new d("\\char` missing argument");
                    r = n.text.charCodeAt(0)
                }
            else
                t = 10;
            if (t) {
                if (null == (r = Dr[n.text]) || r >= t)
                    throw new d("Invalid base-" + t + " digit " + n.text);
                for (var i; null != (i = Dr[e.future().text]) && i < t; )
                    r *= t,
                    r += i,
                    e.popToken()
            }
            return "\\@char{" + r + "}"
        }
        ));
        var Fr = (e, t, n) => {
            var r = e.consumeArg().tokens;
            if (1 !== r.length)
                throw new d("\\newcommand's first argument must be a macro name");
            var i = r[0].text
              , s = e.isDefined(i);
            if (s && !t)
                throw new d("\\newcommand{" + i + "} attempting to redefine " + i + "; use \\renewcommand");
            if (!s && !n)
                throw new d("\\renewcommand{" + i + "} when command " + i + " does not yet exist; use \\newcommand");
            var o = 0;
            if (1 === (r = e.consumeArg().tokens).length && "[" === r[0].text) {
                for (var a = "", l = e.expandNextToken(); "]" !== l.text && "EOF" !== l.text; )
                    a += l.text,
                    l = e.expandNextToken();
                if (!a.match(/^\s*[0-9]+\s*$/))
                    throw new d("Invalid number of arguments: " + a);
                o = parseInt(a),
                r = e.consumeArg().tokens
            }
            return e.macros.set(i, {
                tokens: r,
                numArgs: o
            }),
            ""
        }
        ;
        qn("\\newcommand", (e => Fr(e, !1, !0))),
        qn("\\renewcommand", (e => Fr(e, !0, !1))),
        qn("\\providecommand", (e => Fr(e, !0, !0))),
        qn("\\message", (e => {
            var t = e.consumeArgs(1)[0];
            return console.log(t.reverse().map((e => e.text)).join("")),
            ""
        }
        )),
        qn("\\errmessage", (e => {
            var t = e.consumeArgs(1)[0];
            return console.error(t.reverse().map((e => e.text)).join("")),
            ""
        }
        )),
        qn("\\show", (e => {
            var t = e.popToken()
              , n = t.text;
            return console.log(t, e.macros.get(n), Tr[n], ce.math[n], ce.text[n]),
            ""
        }
        )),
        qn("\\bgroup", "{"),
        qn("\\egroup", "}"),
        qn("~", "\\nobreakspace"),
        qn("\\lq", "`"),
        qn("\\rq", "'"),
        qn("\\aa", "\\r a"),
        qn("\\AA", "\\r A"),
        qn("\\textcopyright", "\\html@mathml{\\textcircled{c}}{\\char`©}"),
        qn("\\copyright", "\\TextOrMath{\\textcopyright}{\\text{\\textcopyright}}"),
        qn("\\textregistered", "\\html@mathml{\\textcircled{\\scriptsize R}}{\\char`®}"),
        qn("ℬ", "\\mathscr{B}"),
        qn("ℰ", "\\mathscr{E}"),
        qn("ℱ", "\\mathscr{F}"),
        qn("ℋ", "\\mathscr{H}"),
        qn("ℐ", "\\mathscr{I}"),
        qn("ℒ", "\\mathscr{L}"),
        qn("ℳ", "\\mathscr{M}"),
        qn("ℛ", "\\mathscr{R}"),
        qn("ℭ", "\\mathfrak{C}"),
        qn("ℌ", "\\mathfrak{H}"),
        qn("ℨ", "\\mathfrak{Z}"),
        qn("\\Bbbk", "\\Bbb{k}"),
        qn("·", "\\cdotp"),
        qn("\\llap", "\\mathllap{\\textrm{#1}}"),
        qn("\\rlap", "\\mathrlap{\\textrm{#1}}"),
        qn("\\clap", "\\mathclap{\\textrm{#1}}"),
        qn("\\mathstrut", "\\vphantom{(}"),
        qn("\\underbar", "\\underline{\\text{#1}}"),
        qn("\\not", '\\html@mathml{\\mathrel{\\mathrlap\\@not}}{\\char"338}'),
        qn("\\neq", "\\html@mathml{\\mathrel{\\not=}}{\\mathrel{\\char`≠}}"),
        qn("\\ne", "\\neq"),
        qn("≠", "\\neq"),
        qn("\\notin", "\\html@mathml{\\mathrel{{\\in}\\mathllap{/\\mskip1mu}}}{\\mathrel{\\char`∉}}"),
        qn("∉", "\\notin"),
        qn("≘", "\\html@mathml{\\mathrel{=\\kern{-1em}\\raisebox{0.4em}{$\\scriptsize\\frown$}}}{\\mathrel{\\char`≘}}"),
        qn("≙", "\\html@mathml{\\stackrel{\\tiny\\wedge}{=}}{\\mathrel{\\char`≘}}"),
        qn("≚", "\\html@mathml{\\stackrel{\\tiny\\vee}{=}}{\\mathrel{\\char`≚}}"),
        qn("≛", "\\html@mathml{\\stackrel{\\scriptsize\\star}{=}}{\\mathrel{\\char`≛}}"),
        qn("≝", "\\html@mathml{\\stackrel{\\tiny\\mathrm{def}}{=}}{\\mathrel{\\char`≝}}"),
        qn("≞", "\\html@mathml{\\stackrel{\\tiny\\mathrm{m}}{=}}{\\mathrel{\\char`≞}}"),
        qn("≟", "\\html@mathml{\\stackrel{\\tiny?}{=}}{\\mathrel{\\char`≟}}"),
        qn("⟂", "\\perp"),
        qn("‼", "\\mathclose{!\\mkern-0.8mu!}"),
        qn("∌", "\\notni"),
        qn("⌜", "\\ulcorner"),
        qn("⌝", "\\urcorner"),
        qn("⌞", "\\llcorner"),
        qn("⌟", "\\lrcorner"),
        qn("©", "\\copyright"),
        qn("®", "\\textregistered"),
        qn("️", "\\textregistered"),
        qn("\\ulcorner", '\\html@mathml{\\@ulcorner}{\\mathop{\\char"231c}}'),
        qn("\\urcorner", '\\html@mathml{\\@urcorner}{\\mathop{\\char"231d}}'),
        qn("\\llcorner", '\\html@mathml{\\@llcorner}{\\mathop{\\char"231e}}'),
        qn("\\lrcorner", '\\html@mathml{\\@lrcorner}{\\mathop{\\char"231f}}'),
        qn("\\vdots", "\\mathord{\\varvdots\\rule{0pt}{15pt}}"),
        qn("⋮", "\\vdots"),
        qn("\\varGamma", "\\mathit{\\Gamma}"),
        qn("\\varDelta", "\\mathit{\\Delta}"),
        qn("\\varTheta", "\\mathit{\\Theta}"),
        qn("\\varLambda", "\\mathit{\\Lambda}"),
        qn("\\varXi", "\\mathit{\\Xi}"),
        qn("\\varPi", "\\mathit{\\Pi}"),
        qn("\\varSigma", "\\mathit{\\Sigma}"),
        qn("\\varUpsilon", "\\mathit{\\Upsilon}"),
        qn("\\varPhi", "\\mathit{\\Phi}"),
        qn("\\varPsi", "\\mathit{\\Psi}"),
        qn("\\varOmega", "\\mathit{\\Omega}"),
        qn("\\substack", "\\begin{subarray}{c}#1\\end{subarray}"),
        qn("\\colon", "\\nobreak\\mskip2mu\\mathpunct{}\\mathchoice{\\mkern-3mu}{\\mkern-3mu}{}{}{:}\\mskip6mu\\relax"),
        qn("\\boxed", "\\fbox{$\\displaystyle{#1}$}"),
        qn("\\iff", "\\DOTSB\\;\\Longleftrightarrow\\;"),
        qn("\\implies", "\\DOTSB\\;\\Longrightarrow\\;"),
        qn("\\impliedby", "\\DOTSB\\;\\Longleftarrow\\;");
        var zr = {
            ",": "\\dotsc",
            "\\not": "\\dotsb",
            "+": "\\dotsb",
            "=": "\\dotsb",
            "<": "\\dotsb",
            ">": "\\dotsb",
            "-": "\\dotsb",
            "*": "\\dotsb",
            ":": "\\dotsb",
            "\\DOTSB": "\\dotsb",
            "\\coprod": "\\dotsb",
            "\\bigvee": "\\dotsb",
            "\\bigwedge": "\\dotsb",
            "\\biguplus": "\\dotsb",
            "\\bigcap": "\\dotsb",
            "\\bigcup": "\\dotsb",
            "\\prod": "\\dotsb",
            "\\sum": "\\dotsb",
            "\\bigotimes": "\\dotsb",
            "\\bigoplus": "\\dotsb",
            "\\bigodot": "\\dotsb",
            "\\bigsqcup": "\\dotsb",
            "\\And": "\\dotsb",
            "\\longrightarrow": "\\dotsb",
            "\\Longrightarrow": "\\dotsb",
            "\\longleftarrow": "\\dotsb",
            "\\Longleftarrow": "\\dotsb",
            "\\longleftrightarrow": "\\dotsb",
            "\\Longleftrightarrow": "\\dotsb",
            "\\mapsto": "\\dotsb",
            "\\longmapsto": "\\dotsb",
            "\\hookrightarrow": "\\dotsb",
            "\\doteq": "\\dotsb",
            "\\mathbin": "\\dotsb",
            "\\mathrel": "\\dotsb",
            "\\relbar": "\\dotsb",
            "\\Relbar": "\\dotsb",
            "\\xrightarrow": "\\dotsb",
            "\\xleftarrow": "\\dotsb",
            "\\DOTSI": "\\dotsi",
            "\\int": "\\dotsi",
            "\\oint": "\\dotsi",
            "\\iint": "\\dotsi",
            "\\iiint": "\\dotsi",
            "\\iiiint": "\\dotsi",
            "\\idotsint": "\\dotsi",
            "\\DOTSX": "\\dotsx"
        };
        qn("\\dots", (function(e) {
            var t = "\\dotso"
              , n = e.expandAfterFuture().text;
            return n in zr ? t = zr[n] : ("\\not" === n.slice(0, 4) || n in ce.math && y.contains(["bin", "rel"], ce.math[n].group)) && (t = "\\dotsb"),
            t
        }
        ));
        var Br = {
            ")": !0,
            "]": !0,
            "\\rbrack": !0,
            "\\}": !0,
            "\\rbrace": !0,
            "\\rangle": !0,
            "\\rceil": !0,
            "\\rfloor": !0,
            "\\rgroup": !0,
            "\\rmoustache": !0,
            "\\right": !0,
            "\\bigr": !0,
            "\\biggr": !0,
            "\\Bigr": !0,
            "\\Biggr": !0,
            $: !0,
            ";": !0,
            ".": !0,
            ",": !0
        };
        qn("\\dotso", (function(e) {
            return e.future().text in Br ? "\\ldots\\," : "\\ldots"
        }
        )),
        qn("\\dotsc", (function(e) {
            var t = e.future().text;
            return t in Br && "," !== t ? "\\ldots\\," : "\\ldots"
        }
        )),
        qn("\\cdots", (function(e) {
            return e.future().text in Br ? "\\@cdots\\," : "\\@cdots"
        }
        )),
        qn("\\dotsb", "\\cdots"),
        qn("\\dotsm", "\\cdots"),
        qn("\\dotsi", "\\!\\cdots"),
        qn("\\dotsx", "\\ldots\\,"),
        qn("\\DOTSI", "\\relax"),
        qn("\\DOTSB", "\\relax"),
        qn("\\DOTSX", "\\relax"),
        qn("\\tmspace", "\\TextOrMath{\\kern#1#3}{\\mskip#1#2}\\relax"),
        qn("\\,", "\\tmspace+{3mu}{.1667em}"),
        qn("\\thinspace", "\\,"),
        qn("\\>", "\\mskip{4mu}"),
        qn("\\:", "\\tmspace+{4mu}{.2222em}"),
        qn("\\medspace", "\\:"),
        qn("\\;", "\\tmspace+{5mu}{.2777em}"),
        qn("\\thickspace", "\\;"),
        qn("\\!", "\\tmspace-{3mu}{.1667em}"),
        qn("\\negthinspace", "\\!"),
        qn("\\negmedspace", "\\tmspace-{4mu}{.2222em}"),
        qn("\\negthickspace", "\\tmspace-{5mu}{.277em}"),
        qn("\\enspace", "\\kern.5em "),
        qn("\\enskip", "\\hskip.5em\\relax"),
        qn("\\quad", "\\hskip1em\\relax"),
        qn("\\qquad", "\\hskip2em\\relax"),
        qn("\\tag", "\\@ifstar\\tag@literal\\tag@paren"),
        qn("\\tag@paren", "\\tag@literal{({#1})}"),
        qn("\\tag@literal", (e => {
            if (e.macros.get("\\df@tag"))
                throw new d("Multiple \\tag");
            return "\\gdef\\df@tag{\\text{#1}}"
        }
        )),
        qn("\\bmod", "\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}\\mathbin{\\rm mod}\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}"),
        qn("\\pod", "\\allowbreak\\mathchoice{\\mkern18mu}{\\mkern8mu}{\\mkern8mu}{\\mkern8mu}(#1)"),
        qn("\\pmod", "\\pod{{\\rm mod}\\mkern6mu#1}"),
        qn("\\mod", "\\allowbreak\\mathchoice{\\mkern18mu}{\\mkern12mu}{\\mkern12mu}{\\mkern12mu}{\\rm mod}\\,\\,#1"),
        qn("\\newline", "\\\\\\relax"),
        qn("\\TeX", "\\textrm{\\html@mathml{T\\kern-.1667em\\raisebox{-.5ex}{E}\\kern-.125emX}{TeX}}");
        var qr = j(O["Main-Regular"]["T".charCodeAt(0)][1] - .7 * O["Main-Regular"]["A".charCodeAt(0)][1]);
        qn("\\LaTeX", "\\textrm{\\html@mathml{L\\kern-.36em\\raisebox{" + qr + "}{\\scriptstyle A}\\kern-.15em\\TeX}{LaTeX}}"),
        qn("\\KaTeX", "\\textrm{\\html@mathml{K\\kern-.17em\\raisebox{" + qr + "}{\\scriptstyle A}\\kern-.15em\\TeX}{KaTeX}}"),
        qn("\\hspace", "\\@ifstar\\@hspacer\\@hspace"),
        qn("\\@hspace", "\\hskip #1\\relax"),
        qn("\\@hspacer", "\\rule{0pt}{0pt}\\hskip #1\\relax"),
        qn("\\ordinarycolon", ":"),
        qn("\\vcentcolon", "\\mathrel{\\mathop\\ordinarycolon}"),
        qn("\\dblcolon", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}}{\\mathop{\\char"2237}}'),
        qn("\\coloneqq", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}}{\\mathop{\\char"2254}}'),
        qn("\\Coloneqq", '\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}=}}{\\mathop{\\char"2237\\char"3d}}'),
        qn("\\coloneq", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}}{\\mathop{\\char"3a\\char"2212}}'),
        qn("\\Coloneq", '\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}}{\\mathop{\\char"2237\\char"2212}}'),
        qn("\\eqqcolon", '\\html@mathml{\\mathrel{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}}{\\mathop{\\char"2255}}'),
        qn("\\Eqqcolon", '\\html@mathml{\\mathrel{=\\mathrel{\\mkern-1.2mu}\\dblcolon}}{\\mathop{\\char"3d\\char"2237}}'),
        qn("\\eqcolon", '\\html@mathml{\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}}{\\mathop{\\char"2239}}'),
        qn("\\Eqcolon", '\\html@mathml{\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}}{\\mathop{\\char"2212\\char"2237}}'),
        qn("\\colonapprox", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}}{\\mathop{\\char"3a\\char"2248}}'),
        qn("\\Colonapprox", '\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}}{\\mathop{\\char"2237\\char"2248}}'),
        qn("\\colonsim", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}}{\\mathop{\\char"3a\\char"223c}}'),
        qn("\\Colonsim", '\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}}{\\mathop{\\char"2237\\char"223c}}'),
        qn("∷", "\\dblcolon"),
        qn("∹", "\\eqcolon"),
        qn("≔", "\\coloneqq"),
        qn("≕", "\\eqqcolon"),
        qn("⩴", "\\Coloneqq"),
        qn("\\ratio", "\\vcentcolon"),
        qn("\\coloncolon", "\\dblcolon"),
        qn("\\colonequals", "\\coloneqq"),
        qn("\\coloncolonequals", "\\Coloneqq"),
        qn("\\equalscolon", "\\eqqcolon"),
        qn("\\equalscoloncolon", "\\Eqqcolon"),
        qn("\\colonminus", "\\coloneq"),
        qn("\\coloncolonminus", "\\Coloneq"),
        qn("\\minuscolon", "\\eqcolon"),
        qn("\\minuscoloncolon", "\\Eqcolon"),
        qn("\\coloncolonapprox", "\\Colonapprox"),
        qn("\\coloncolonsim", "\\Colonsim"),
        qn("\\simcolon", "\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\vcentcolon}"),
        qn("\\simcoloncolon", "\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\dblcolon}"),
        qn("\\approxcolon", "\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\vcentcolon}"),
        qn("\\approxcoloncolon", "\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\dblcolon}"),
        qn("\\notni", "\\html@mathml{\\not\\ni}{\\mathrel{\\char`∌}}"),
        qn("\\limsup", "\\DOTSB\\operatorname*{lim\\,sup}"),
        qn("\\liminf", "\\DOTSB\\operatorname*{lim\\,inf}"),
        qn("\\injlim", "\\DOTSB\\operatorname*{inj\\,lim}"),
        qn("\\projlim", "\\DOTSB\\operatorname*{proj\\,lim}"),
        qn("\\varlimsup", "\\DOTSB\\operatorname*{\\overline{lim}}"),
        qn("\\varliminf", "\\DOTSB\\operatorname*{\\underline{lim}}"),
        qn("\\varinjlim", "\\DOTSB\\operatorname*{\\underrightarrow{lim}}"),
        qn("\\varprojlim", "\\DOTSB\\operatorname*{\\underleftarrow{lim}}"),
        qn("\\gvertneqq", "\\html@mathml{\\@gvertneqq}{≩}"),
        qn("\\lvertneqq", "\\html@mathml{\\@lvertneqq}{≨}"),
        qn("\\ngeqq", "\\html@mathml{\\@ngeqq}{≱}"),
        qn("\\ngeqslant", "\\html@mathml{\\@ngeqslant}{≱}"),
        qn("\\nleqq", "\\html@mathml{\\@nleqq}{≰}"),
        qn("\\nleqslant", "\\html@mathml{\\@nleqslant}{≰}"),
        qn("\\nshortmid", "\\html@mathml{\\@nshortmid}{∤}"),
        qn("\\nshortparallel", "\\html@mathml{\\@nshortparallel}{∦}"),
        qn("\\nsubseteqq", "\\html@mathml{\\@nsubseteqq}{⊈}"),
        qn("\\nsupseteqq", "\\html@mathml{\\@nsupseteqq}{⊉}"),
        qn("\\varsubsetneq", "\\html@mathml{\\@varsubsetneq}{⊊}"),
        qn("\\varsubsetneqq", "\\html@mathml{\\@varsubsetneqq}{⫋}"),
        qn("\\varsupsetneq", "\\html@mathml{\\@varsupsetneq}{⊋}"),
        qn("\\varsupsetneqq", "\\html@mathml{\\@varsupsetneqq}{⫌}"),
        qn("\\imath", "\\html@mathml{\\@imath}{ı}"),
        qn("\\jmath", "\\html@mathml{\\@jmath}{ȷ}"),
        qn("\\llbracket", "\\html@mathml{\\mathopen{[\\mkern-3.2mu[}}{\\mathopen{\\char`⟦}}"),
        qn("\\rrbracket", "\\html@mathml{\\mathclose{]\\mkern-3.2mu]}}{\\mathclose{\\char`⟧}}"),
        qn("⟦", "\\llbracket"),
        qn("⟧", "\\rrbracket"),
        qn("\\lBrace", "\\html@mathml{\\mathopen{\\{\\mkern-3.2mu[}}{\\mathopen{\\char`⦃}}"),
        qn("\\rBrace", "\\html@mathml{\\mathclose{]\\mkern-3.2mu\\}}}{\\mathclose{\\char`⦄}}"),
        qn("⦃", "\\lBrace"),
        qn("⦄", "\\rBrace"),
        qn("\\minuso", "\\mathbin{\\html@mathml{{\\mathrlap{\\mathchoice{\\kern{0.145em}}{\\kern{0.145em}}{\\kern{0.1015em}}{\\kern{0.0725em}}\\circ}{-}}}{\\char`⦵}}"),
        qn("⦵", "\\minuso"),
        qn("\\darr", "\\downarrow"),
        qn("\\dArr", "\\Downarrow"),
        qn("\\Darr", "\\Downarrow"),
        qn("\\lang", "\\langle"),
        qn("\\rang", "\\rangle"),
        qn("\\uarr", "\\uparrow"),
        qn("\\uArr", "\\Uparrow"),
        qn("\\Uarr", "\\Uparrow"),
        qn("\\N", "\\mathbb{N}"),
        qn("\\R", "\\mathbb{R}"),
        qn("\\Z", "\\mathbb{Z}"),
        qn("\\alef", "\\aleph"),
        qn("\\alefsym", "\\aleph"),
        qn("\\Alpha", "\\mathrm{A}"),
        qn("\\Beta", "\\mathrm{B}"),
        qn("\\bull", "\\bullet"),
        qn("\\Chi", "\\mathrm{X}"),
        qn("\\clubs", "\\clubsuit"),
        qn("\\cnums", "\\mathbb{C}"),
        qn("\\Complex", "\\mathbb{C}"),
        qn("\\Dagger", "\\ddagger"),
        qn("\\diamonds", "\\diamondsuit"),
        qn("\\empty", "\\emptyset"),
        qn("\\Epsilon", "\\mathrm{E}"),
        qn("\\Eta", "\\mathrm{H}"),
        qn("\\exist", "\\exists"),
        qn("\\harr", "\\leftrightarrow"),
        qn("\\hArr", "\\Leftrightarrow"),
        qn("\\Harr", "\\Leftrightarrow"),
        qn("\\hearts", "\\heartsuit"),
        qn("\\image", "\\Im"),
        qn("\\infin", "\\infty"),
        qn("\\Iota", "\\mathrm{I}"),
        qn("\\isin", "\\in"),
        qn("\\Kappa", "\\mathrm{K}"),
        qn("\\larr", "\\leftarrow"),
        qn("\\lArr", "\\Leftarrow"),
        qn("\\Larr", "\\Leftarrow"),
        qn("\\lrarr", "\\leftrightarrow"),
        qn("\\lrArr", "\\Leftrightarrow"),
        qn("\\Lrarr", "\\Leftrightarrow"),
        qn("\\Mu", "\\mathrm{M}"),
        qn("\\natnums", "\\mathbb{N}"),
        qn("\\Nu", "\\mathrm{N}"),
        qn("\\Omicron", "\\mathrm{O}"),
        qn("\\plusmn", "\\pm"),
        qn("\\rarr", "\\rightarrow"),
        qn("\\rArr", "\\Rightarrow"),
        qn("\\Rarr", "\\Rightarrow"),
        qn("\\real", "\\Re"),
        qn("\\reals", "\\mathbb{R}"),
        qn("\\Reals", "\\mathbb{R}"),
        qn("\\Rho", "\\mathrm{P}"),
        qn("\\sdot", "\\cdot"),
        qn("\\sect", "\\S"),
        qn("\\spades", "\\spadesuit"),
        qn("\\sub", "\\subset"),
        qn("\\sube", "\\subseteq"),
        qn("\\supe", "\\supseteq"),
        qn("\\Tau", "\\mathrm{T}"),
        qn("\\thetasym", "\\vartheta"),
        qn("\\weierp", "\\wp"),
        qn("\\Zeta", "\\mathrm{Z}"),
        qn("\\argmin", "\\DOTSB\\operatorname*{arg\\,min}"),
        qn("\\argmax", "\\DOTSB\\operatorname*{arg\\,max}"),
        qn("\\plim", "\\DOTSB\\mathop{\\operatorname{plim}}\\limits"),
        qn("\\bra", "\\mathinner{\\langle{#1}|}"),
        qn("\\ket", "\\mathinner{|{#1}\\rangle}"),
        qn("\\braket", "\\mathinner{\\langle{#1}\\rangle}"),
        qn("\\Bra", "\\left\\langle#1\\right|"),
        qn("\\Ket", "\\left|#1\\right\\rangle");
        var Hr = e => t => {
            var n = t.consumeArg().tokens
              , r = t.consumeArg().tokens
              , i = t.consumeArg().tokens
              , s = t.consumeArg().tokens
              , o = t.macros.get("|")
              , a = t.macros.get("\\|");
            t.macros.beginGroup();
            var l = t => n => {
                e && (n.macros.set("|", o),
                i.length && n.macros.set("\\|", a));
                var s = t;
                !t && i.length && ("|" === n.future().text && (n.popToken(),
                s = !0));
                return {
                    tokens: s ? i : r,
                    numArgs: 0
                }
            }
            ;
            t.macros.set("|", l(!1)),
            i.length && t.macros.set("\\|", l(!0));
            var c = t.consumeArg().tokens
              , h = t.expandTokens([...s, ...c, ...n]);
            return t.macros.endGroup(),
            {
                tokens: h.reverse(),
                numArgs: 0
            }
        }
        ;
        qn("\\bra@ket", Hr(!1)),
        qn("\\bra@set", Hr(!0)),
        qn("\\Braket", "\\bra@ket{\\left\\langle}{\\,\\middle\\vert\\,}{\\,\\middle\\vert\\,}{\\right\\rangle}"),
        qn("\\Set", "\\bra@set{\\left\\{\\:}{\\;\\middle\\vert\\;}{\\;\\middle\\Vert\\;}{\\:\\right\\}}"),
        qn("\\set", "\\bra@set{\\{\\,}{\\mid}{}{\\,\\}}"),
        qn("\\angln", "{\\angl n}"),
        qn("\\blue", "\\textcolor{##6495ed}{#1}"),
        qn("\\orange", "\\textcolor{##ffa500}{#1}"),
        qn("\\pink", "\\textcolor{##ff00af}{#1}"),
        qn("\\red", "\\textcolor{##df0030}{#1}"),
        qn("\\green", "\\textcolor{##28ae7b}{#1}"),
        qn("\\gray", "\\textcolor{gray}{#1}"),
        qn("\\purple", "\\textcolor{##9d38bd}{#1}"),
        qn("\\blueA", "\\textcolor{##ccfaff}{#1}"),
        qn("\\blueB", "\\textcolor{##80f6ff}{#1}"),
        qn("\\blueC", "\\textcolor{##63d9ea}{#1}"),
        qn("\\blueD", "\\textcolor{##11accd}{#1}"),
        qn("\\blueE", "\\textcolor{##0c7f99}{#1}"),
        qn("\\tealA", "\\textcolor{##94fff5}{#1}"),
        qn("\\tealB", "\\textcolor{##26edd5}{#1}"),
        qn("\\tealC", "\\textcolor{##01d1c1}{#1}"),
        qn("\\tealD", "\\textcolor{##01a995}{#1}"),
        qn("\\tealE", "\\textcolor{##208170}{#1}"),
        qn("\\greenA", "\\textcolor{##b6ffb0}{#1}"),
        qn("\\greenB", "\\textcolor{##8af281}{#1}"),
        qn("\\greenC", "\\textcolor{##74cf70}{#1}"),
        qn("\\greenD", "\\textcolor{##1fab54}{#1}"),
        qn("\\greenE", "\\textcolor{##0d923f}{#1}"),
        qn("\\goldA", "\\textcolor{##ffd0a9}{#1}"),
        qn("\\goldB", "\\textcolor{##ffbb71}{#1}"),
        qn("\\goldC", "\\textcolor{##ff9c39}{#1}"),
        qn("\\goldD", "\\textcolor{##e07d10}{#1}"),
        qn("\\goldE", "\\textcolor{##a75a05}{#1}"),
        qn("\\redA", "\\textcolor{##fca9a9}{#1}"),
        qn("\\redB", "\\textcolor{##ff8482}{#1}"),
        qn("\\redC", "\\textcolor{##f9685d}{#1}"),
        qn("\\redD", "\\textcolor{##e84d39}{#1}"),
        qn("\\redE", "\\textcolor{##bc2612}{#1}"),
        qn("\\maroonA", "\\textcolor{##ffbde0}{#1}"),
        qn("\\maroonB", "\\textcolor{##ff92c6}{#1}"),
        qn("\\maroonC", "\\textcolor{##ed5fa6}{#1}"),
        qn("\\maroonD", "\\textcolor{##ca337c}{#1}"),
        qn("\\maroonE", "\\textcolor{##9e034e}{#1}"),
        qn("\\purpleA", "\\textcolor{##ddd7ff}{#1}"),
        qn("\\purpleB", "\\textcolor{##c6b9fc}{#1}"),
        qn("\\purpleC", "\\textcolor{##aa87ff}{#1}"),
        qn("\\purpleD", "\\textcolor{##7854ab}{#1}"),
        qn("\\purpleE", "\\textcolor{##543b78}{#1}"),
        qn("\\mintA", "\\textcolor{##f5f9e8}{#1}"),
        qn("\\mintB", "\\textcolor{##edf2df}{#1}"),
        qn("\\mintC", "\\textcolor{##e0e5cc}{#1}"),
        qn("\\grayA", "\\textcolor{##f6f7f7}{#1}"),
        qn("\\grayB", "\\textcolor{##f0f1f2}{#1}"),
        qn("\\grayC", "\\textcolor{##e3e5e6}{#1}"),
        qn("\\grayD", "\\textcolor{##d6d8da}{#1}"),
        qn("\\grayE", "\\textcolor{##babec2}{#1}"),
        qn("\\grayF", "\\textcolor{##888d93}{#1}"),
        qn("\\grayG", "\\textcolor{##626569}{#1}"),
        qn("\\grayH", "\\textcolor{##3b3e40}{#1}"),
        qn("\\grayI", "\\textcolor{##21242c}{#1}"),
        qn("\\kaBlue", "\\textcolor{##314453}{#1}"),
        qn("\\kaGreen", "\\textcolor{##71B307}{#1}");
        var Ur = {
            "^": !0,
            _: !0,
            "\\limits": !0,
            "\\nolimits": !0
        };
        class Gr {
            constructor(e, t, n) {
                this.settings = void 0,
                this.expansionCount = void 0,
                this.lexer = void 0,
                this.macros = void 0,
                this.stack = void 0,
                this.mode = void 0,
                this.settings = t,
                this.expansionCount = 0,
                this.feed(e),
                this.macros = new Or(Lr,t.macros),
                this.mode = n,
                this.stack = []
            }
            feed(e) {
                this.lexer = new Pr(e,this.settings)
            }
            switchMode(e) {
                this.mode = e
            }
            beginGroup() {
                this.macros.beginGroup()
            }
            endGroup() {
                this.macros.endGroup()
            }
            endGroups() {
                this.macros.endGroups()
            }
            future() {
                return 0 === this.stack.length && this.pushToken(this.lexer.lex()),
                this.stack[this.stack.length - 1]
            }
            popToken() {
                return this.future(),
                this.stack.pop()
            }
            pushToken(e) {
                this.stack.push(e)
            }
            pushTokens(e) {
                this.stack.push(...e)
            }
            scanArgument(e) {
                var t, n, r;
                if (e) {
                    if (this.consumeSpaces(),
                    "[" !== this.future().text)
                        return null;
                    t = this.popToken(),
                    ({tokens: r, end: n} = this.consumeArg(["]"]))
                } else
                    ({tokens: r, start: t, end: n} = this.consumeArg());
                return this.pushToken(new u("EOF",n.loc)),
                this.pushTokens(r),
                t.range(n, "")
            }
            consumeSpaces() {
                for (; ; ) {
                    if (" " !== this.future().text)
                        break;
                    this.stack.pop()
                }
            }
            consumeArg(e) {
                var t = []
                  , n = e && e.length > 0;
                n || this.consumeSpaces();
                var r, i = this.future(), s = 0, o = 0;
                do {
                    if (r = this.popToken(),
                    t.push(r),
                    "{" === r.text)
                        ++s;
                    else if ("}" === r.text) {
                        if (-1 === --s)
                            throw new d("Extra }",r)
                    } else if ("EOF" === r.text)
                        throw new d("Unexpected end of input in a macro argument, expected '" + (e && n ? e[o] : "}") + "'",r);
                    if (e && n)
                        if ((0 === s || 1 === s && "{" === e[o]) && r.text === e[o]) {
                            if (++o === e.length) {
                                t.splice(-o, o);
                                break
                            }
                        } else
                            o = 0
                } while (0 !== s || n);
                return "{" === i.text && "}" === t[t.length - 1].text && (t.pop(),
                t.shift()),
                t.reverse(),
                {
                    tokens: t,
                    start: i,
                    end: r
                }
            }
            consumeArgs(e, t) {
                if (t) {
                    if (t.length !== e + 1)
                        throw new d("The length of delimiters doesn't match the number of args!");
                    for (var n = t[0], r = 0; r < n.length; r++) {
                        var i = this.popToken();
                        if (n[r] !== i.text)
                            throw new d("Use of the macro doesn't match its definition",i)
                    }
                }
                for (var s = [], o = 0; o < e; o++)
                    s.push(this.consumeArg(t && t[o + 1]).tokens);
                return s
            }
            expandOnce(e) {
                var t = this.popToken()
                  , n = t.text
                  , r = t.noexpand ? null : this._getExpansion(n);
                if (null == r || e && r.unexpandable) {
                    if (e && null == r && "\\" === n[0] && !this.isDefined(n))
                        throw new d("Undefined control sequence: " + n);
                    return this.pushToken(t),
                    !1
                }
                if (this.expansionCount++,
                this.expansionCount > this.settings.maxExpand)
                    throw new d("Too many expansions: infinite loop or need to increase maxExpand setting");
                var i = r.tokens
                  , s = this.consumeArgs(r.numArgs, r.delimiters);
                if (r.numArgs)
                    for (var o = (i = i.slice()).length - 1; o >= 0; --o) {
                        var a = i[o];
                        if ("#" === a.text) {
                            if (0 === o)
                                throw new d("Incomplete placeholder at end of macro body",a);
                            if ("#" === (a = i[--o]).text)
                                i.splice(o + 1, 1);
                            else {
                                if (!/^[1-9]$/.test(a.text))
                                    throw new d("Not a valid argument number",a);
                                i.splice(o, 2, ...s[+a.text - 1])
                            }
                        }
                    }
                return this.pushTokens(i),
                i.length
            }
            expandAfterFuture() {
                return this.expandOnce(),
                this.future()
            }
            expandNextToken() {
                for (; ; )
                    if (!1 === this.expandOnce()) {
                        var e = this.stack.pop();
                        return e.treatAsRelax && (e.text = "\\relax"),
                        e
                    }
                throw new Error
            }
            expandMacro(e) {
                return this.macros.has(e) ? this.expandTokens([new u(e)]) : void 0
            }
            expandTokens(e) {
                var t = []
                  , n = this.stack.length;
                for (this.pushTokens(e); this.stack.length > n; )
                    if (!1 === this.expandOnce(!0)) {
                        var r = this.stack.pop();
                        r.treatAsRelax && (r.noexpand = !1,
                        r.treatAsRelax = !1),
                        t.push(r)
                    }
                return t
            }
            expandMacroAsText(e) {
                var t = this.expandMacro(e);
                return t ? t.map((e => e.text)).join("") : t
            }
            _getExpansion(e) {
                var t = this.macros.get(e);
                if (null == t)
                    return t;
                if (1 === e.length) {
                    var n = this.lexer.catcodes[e];
                    if (null != n && 13 !== n)
                        return
                }
                var r = "function" == typeof t ? t(this) : t;
                if ("string" == typeof r) {
                    var i = 0;
                    if (-1 !== r.indexOf("#"))
                        for (var s = r.replace(/##/g, ""); -1 !== s.indexOf("#" + (i + 1)); )
                            ++i;
                    for (var o = new Pr(r,this.settings), a = [], l = o.lex(); "EOF" !== l.text; )
                        a.push(l),
                        l = o.lex();
                    return a.reverse(),
                    {
                        tokens: a,
                        numArgs: i
                    }
                }
                return r
            }
            isDefined(e) {
                return this.macros.has(e) || Tr.hasOwnProperty(e) || ce.math.hasOwnProperty(e) || ce.text.hasOwnProperty(e) || Ur.hasOwnProperty(e)
            }
            isExpandable(e) {
                var t = this.macros.get(e);
                return null != t ? "string" == typeof t || "function" == typeof t || !t.unexpandable : Tr.hasOwnProperty(e) && !Tr[e].primitive
            }
        }
        var Wr = /^[₊₋₌₍₎₀₁₂₃₄₅₆₇₈₉ₐₑₕᵢⱼₖₗₘₙₒₚᵣₛₜᵤᵥₓᵦᵧᵨᵩᵪ]/
          , Vr = Object.freeze({
            "₊": "+",
            "₋": "-",
            "₌": "=",
            "₍": "(",
            "₎": ")",
            "₀": "0",
            "₁": "1",
            "₂": "2",
            "₃": "3",
            "₄": "4",
            "₅": "5",
            "₆": "6",
            "₇": "7",
            "₈": "8",
            "₉": "9",
            ₐ: "a",
            ₑ: "e",
            ₕ: "h",
            ᵢ: "i",
            ⱼ: "j",
            ₖ: "k",
            ₗ: "l",
            ₘ: "m",
            ₙ: "n",
            ₒ: "o",
            ₚ: "p",
            ᵣ: "r",
            ₛ: "s",
            ₜ: "t",
            ᵤ: "u",
            ᵥ: "v",
            ₓ: "x",
            ᵦ: "β",
            ᵧ: "γ",
            ᵨ: "ρ",
            ᵩ: "ϕ",
            ᵪ: "χ",
            "⁺": "+",
            "⁻": "-",
            "⁼": "=",
            "⁽": "(",
            "⁾": ")",
            "⁰": "0",
            "¹": "1",
            "²": "2",
            "³": "3",
            "⁴": "4",
            "⁵": "5",
            "⁶": "6",
            "⁷": "7",
            "⁸": "8",
            "⁹": "9",
            ᴬ: "A",
            ᴮ: "B",
            ᴰ: "D",
            ᴱ: "E",
            ᴳ: "G",
            ᴴ: "H",
            ᴵ: "I",
            ᴶ: "J",
            ᴷ: "K",
            ᴸ: "L",
            ᴹ: "M",
            ᴺ: "N",
            ᴼ: "O",
            ᴾ: "P",
            ᴿ: "R",
            ᵀ: "T",
            ᵁ: "U",
            ⱽ: "V",
            ᵂ: "W",
            ᵃ: "a",
            ᵇ: "b",
            ᶜ: "c",
            ᵈ: "d",
            ᵉ: "e",
            ᶠ: "f",
            ᵍ: "g",
            ʰ: "h",
            ⁱ: "i",
            ʲ: "j",
            ᵏ: "k",
            ˡ: "l",
            ᵐ: "m",
            ⁿ: "n",
            ᵒ: "o",
            ᵖ: "p",
            ʳ: "r",
            ˢ: "s",
            ᵗ: "t",
            ᵘ: "u",
            ᵛ: "v",
            ʷ: "w",
            ˣ: "x",
            ʸ: "y",
            ᶻ: "z",
            ᵝ: "β",
            ᵞ: "γ",
            ᵟ: "δ",
            ᵠ: "ϕ",
            ᵡ: "χ",
            ᶿ: "θ"
        })
          , $r = {
            "́": {
                text: "\\'",
                math: "\\acute"
            },
            "̀": {
                text: "\\`",
                math: "\\grave"
            },
            "̈": {
                text: '\\"',
                math: "\\ddot"
            },
            "̃": {
                text: "\\~",
                math: "\\tilde"
            },
            "̄": {
                text: "\\=",
                math: "\\bar"
            },
            "̆": {
                text: "\\u",
                math: "\\breve"
            },
            "̌": {
                text: "\\v",
                math: "\\check"
            },
            "̂": {
                text: "\\^",
                math: "\\hat"
            },
            "̇": {
                text: "\\.",
                math: "\\dot"
            },
            "̊": {
                text: "\\r",
                math: "\\mathring"
            },
            "̋": {
                text: "\\H"
            },
            "̧": {
                text: "\\c"
            }
        }
          , jr = {
            á: "á",
            à: "à",
            ä: "ä",
            ǟ: "ǟ",
            ã: "ã",
            ā: "ā",
            ă: "ă",
            ắ: "ắ",
            ằ: "ằ",
            ẵ: "ẵ",
            ǎ: "ǎ",
            â: "â",
            ấ: "ấ",
            ầ: "ầ",
            ẫ: "ẫ",
            ȧ: "ȧ",
            ǡ: "ǡ",
            å: "å",
            ǻ: "ǻ",
            ḃ: "ḃ",
            ć: "ć",
            ḉ: "ḉ",
            č: "č",
            ĉ: "ĉ",
            ċ: "ċ",
            ç: "ç",
            ď: "ď",
            ḋ: "ḋ",
            ḑ: "ḑ",
            é: "é",
            è: "è",
            ë: "ë",
            ẽ: "ẽ",
            ē: "ē",
            ḗ: "ḗ",
            ḕ: "ḕ",
            ĕ: "ĕ",
            ḝ: "ḝ",
            ě: "ě",
            ê: "ê",
            ế: "ế",
            ề: "ề",
            ễ: "ễ",
            ė: "ė",
            ȩ: "ȩ",
            ḟ: "ḟ",
            ǵ: "ǵ",
            ḡ: "ḡ",
            ğ: "ğ",
            ǧ: "ǧ",
            ĝ: "ĝ",
            ġ: "ġ",
            ģ: "ģ",
            ḧ: "ḧ",
            ȟ: "ȟ",
            ĥ: "ĥ",
            ḣ: "ḣ",
            ḩ: "ḩ",
            í: "í",
            ì: "ì",
            ï: "ï",
            ḯ: "ḯ",
            ĩ: "ĩ",
            ī: "ī",
            ĭ: "ĭ",
            ǐ: "ǐ",
            î: "î",
            ǰ: "ǰ",
            ĵ: "ĵ",
            ḱ: "ḱ",
            ǩ: "ǩ",
            ķ: "ķ",
            ĺ: "ĺ",
            ľ: "ľ",
            ļ: "ļ",
            ḿ: "ḿ",
            ṁ: "ṁ",
            ń: "ń",
            ǹ: "ǹ",
            ñ: "ñ",
            ň: "ň",
            ṅ: "ṅ",
            ņ: "ņ",
            ó: "ó",
            ò: "ò",
            ö: "ö",
            ȫ: "ȫ",
            õ: "õ",
            ṍ: "ṍ",
            ṏ: "ṏ",
            ȭ: "ȭ",
            ō: "ō",
            ṓ: "ṓ",
            ṑ: "ṑ",
            ŏ: "ŏ",
            ǒ: "ǒ",
            ô: "ô",
            ố: "ố",
            ồ: "ồ",
            ỗ: "ỗ",
            ȯ: "ȯ",
            ȱ: "ȱ",
            ő: "ő",
            ṕ: "ṕ",
            ṗ: "ṗ",
            ŕ: "ŕ",
            ř: "ř",
            ṙ: "ṙ",
            ŗ: "ŗ",
            ś: "ś",
            ṥ: "ṥ",
            š: "š",
            ṧ: "ṧ",
            ŝ: "ŝ",
            ṡ: "ṡ",
            ş: "ş",
            ẗ: "ẗ",
            ť: "ť",
            ṫ: "ṫ",
            ţ: "ţ",
            ú: "ú",
            ù: "ù",
            ü: "ü",
            ǘ: "ǘ",
            ǜ: "ǜ",
            ǖ: "ǖ",
            ǚ: "ǚ",
            ũ: "ũ",
            ṹ: "ṹ",
            ū: "ū",
            ṻ: "ṻ",
            ŭ: "ŭ",
            ǔ: "ǔ",
            û: "û",
            ů: "ů",
            ű: "ű",
            ṽ: "ṽ",
            ẃ: "ẃ",
            ẁ: "ẁ",
            ẅ: "ẅ",
            ŵ: "ŵ",
            ẇ: "ẇ",
            ẘ: "ẘ",
            ẍ: "ẍ",
            ẋ: "ẋ",
            ý: "ý",
            ỳ: "ỳ",
            ÿ: "ÿ",
            ỹ: "ỹ",
            ȳ: "ȳ",
            ŷ: "ŷ",
            ẏ: "ẏ",
            ẙ: "ẙ",
            ź: "ź",
            ž: "ž",
            ẑ: "ẑ",
            ż: "ż",
            Á: "Á",
            À: "À",
            Ä: "Ä",
            Ǟ: "Ǟ",
            Ã: "Ã",
            Ā: "Ā",
            Ă: "Ă",
            Ắ: "Ắ",
            Ằ: "Ằ",
            Ẵ: "Ẵ",
            Ǎ: "Ǎ",
            Â: "Â",
            Ấ: "Ấ",
            Ầ: "Ầ",
            Ẫ: "Ẫ",
            Ȧ: "Ȧ",
            Ǡ: "Ǡ",
            Å: "Å",
            Ǻ: "Ǻ",
            Ḃ: "Ḃ",
            Ć: "Ć",
            Ḉ: "Ḉ",
            Č: "Č",
            Ĉ: "Ĉ",
            Ċ: "Ċ",
            Ç: "Ç",
            Ď: "Ď",
            Ḋ: "Ḋ",
            Ḑ: "Ḑ",
            É: "É",
            È: "È",
            Ë: "Ë",
            Ẽ: "Ẽ",
            Ē: "Ē",
            Ḗ: "Ḗ",
            Ḕ: "Ḕ",
            Ĕ: "Ĕ",
            Ḝ: "Ḝ",
            Ě: "Ě",
            Ê: "Ê",
            Ế: "Ế",
            Ề: "Ề",
            Ễ: "Ễ",
            Ė: "Ė",
            Ȩ: "Ȩ",
            Ḟ: "Ḟ",
            Ǵ: "Ǵ",
            Ḡ: "Ḡ",
            Ğ: "Ğ",
            Ǧ: "Ǧ",
            Ĝ: "Ĝ",
            Ġ: "Ġ",
            Ģ: "Ģ",
            Ḧ: "Ḧ",
            Ȟ: "Ȟ",
            Ĥ: "Ĥ",
            Ḣ: "Ḣ",
            Ḩ: "Ḩ",
            Í: "Í",
            Ì: "Ì",
            Ï: "Ï",
            Ḯ: "Ḯ",
            Ĩ: "Ĩ",
            Ī: "Ī",
            Ĭ: "Ĭ",
            Ǐ: "Ǐ",
            Î: "Î",
            İ: "İ",
            Ĵ: "Ĵ",
            Ḱ: "Ḱ",
            Ǩ: "Ǩ",
            Ķ: "Ķ",
            Ĺ: "Ĺ",
            Ľ: "Ľ",
            Ļ: "Ļ",
            Ḿ: "Ḿ",
            Ṁ: "Ṁ",
            Ń: "Ń",
            Ǹ: "Ǹ",
            Ñ: "Ñ",
            Ň: "Ň",
            Ṅ: "Ṅ",
            Ņ: "Ņ",
            Ó: "Ó",
            Ò: "Ò",
            Ö: "Ö",
            Ȫ: "Ȫ",
            Õ: "Õ",
            Ṍ: "Ṍ",
            Ṏ: "Ṏ",
            Ȭ: "Ȭ",
            Ō: "Ō",
            Ṓ: "Ṓ",
            Ṑ: "Ṑ",
            Ŏ: "Ŏ",
            Ǒ: "Ǒ",
            Ô: "Ô",
            Ố: "Ố",
            Ồ: "Ồ",
            Ỗ: "Ỗ",
            Ȯ: "Ȯ",
            Ȱ: "Ȱ",
            Ő: "Ő",
            Ṕ: "Ṕ",
            Ṗ: "Ṗ",
            Ŕ: "Ŕ",
            Ř: "Ř",
            Ṙ: "Ṙ",
            Ŗ: "Ŗ",
            Ś: "Ś",
            Ṥ: "Ṥ",
            Š: "Š",
            Ṧ: "Ṧ",
            Ŝ: "Ŝ",
            Ṡ: "Ṡ",
            Ş: "Ş",
            Ť: "Ť",
            Ṫ: "Ṫ",
            Ţ: "Ţ",
            Ú: "Ú",
            Ù: "Ù",
            Ü: "Ü",
            Ǘ: "Ǘ",
            Ǜ: "Ǜ",
            Ǖ: "Ǖ",
            Ǚ: "Ǚ",
            Ũ: "Ũ",
            Ṹ: "Ṹ",
            Ū: "Ū",
            Ṻ: "Ṻ",
            Ŭ: "Ŭ",
            Ǔ: "Ǔ",
            Û: "Û",
            Ů: "Ů",
            Ű: "Ű",
            Ṽ: "Ṽ",
            Ẃ: "Ẃ",
            Ẁ: "Ẁ",
            Ẅ: "Ẅ",
            Ŵ: "Ŵ",
            Ẇ: "Ẇ",
            Ẍ: "Ẍ",
            Ẋ: "Ẋ",
            Ý: "Ý",
            Ỳ: "Ỳ",
            Ÿ: "Ÿ",
            Ỹ: "Ỹ",
            Ȳ: "Ȳ",
            Ŷ: "Ŷ",
            Ẏ: "Ẏ",
            Ź: "Ź",
            Ž: "Ž",
            Ẑ: "Ẑ",
            Ż: "Ż",
            ά: "ά",
            ὰ: "ὰ",
            ᾱ: "ᾱ",
            ᾰ: "ᾰ",
            έ: "έ",
            ὲ: "ὲ",
            ή: "ή",
            ὴ: "ὴ",
            ί: "ί",
            ὶ: "ὶ",
            ϊ: "ϊ",
            ΐ: "ΐ",
            ῒ: "ῒ",
            ῑ: "ῑ",
            ῐ: "ῐ",
            ό: "ό",
            ὸ: "ὸ",
            ύ: "ύ",
            ὺ: "ὺ",
            ϋ: "ϋ",
            ΰ: "ΰ",
            ῢ: "ῢ",
            ῡ: "ῡ",
            ῠ: "ῠ",
            ώ: "ώ",
            ὼ: "ὼ",
            Ύ: "Ύ",
            Ὺ: "Ὺ",
            Ϋ: "Ϋ",
            Ῡ: "Ῡ",
            Ῠ: "Ῠ",
            Ώ: "Ώ",
            Ὼ: "Ὼ"
        };
        class Kr {
            constructor(e, t) {
                this.mode = void 0,
                this.gullet = void 0,
                this.settings = void 0,
                this.leftrightDepth = void 0,
                this.nextToken = void 0,
                this.mode = "math",
                this.gullet = new Gr(e,t,this.mode),
                this.settings = t,
                this.leftrightDepth = 0
            }
            expect(e, t) {
                if (void 0 === t && (t = !0),
                this.fetch().text !== e)
                    throw new d("Expected '" + e + "', got '" + this.fetch().text + "'",this.fetch());
                t && this.consume()
            }
            consume() {
                this.nextToken = null
            }
            fetch() {
                return null == this.nextToken && (this.nextToken = this.gullet.expandNextToken()),
                this.nextToken
            }
            switchMode(e) {
                this.mode = e,
                this.gullet.switchMode(e)
            }
            parse() {
                this.settings.globalGroup || this.gullet.beginGroup(),
                this.settings.colorIsTextColor && this.gullet.macros.set("\\color", "\\textcolor");
                try {
                    var e = this.parseExpression(!1);
                    return this.expect("EOF"),
                    this.settings.globalGroup || this.gullet.endGroup(),
                    e
                } finally {
                    this.gullet.endGroups()
                }
            }
            subparse(e) {
                var t = this.nextToken;
                this.consume(),
                this.gullet.pushToken(new u("}")),
                this.gullet.pushTokens(e);
                var n = this.parseExpression(!1);
                return this.expect("}"),
                this.nextToken = t,
                n
            }
            parseExpression(e, t) {
                for (var n = []; ; ) {
                    "math" === this.mode && this.consumeSpaces();
                    var r = this.fetch();
                    if (-1 !== Kr.endOfExpression.indexOf(r.text))
                        break;
                    if (t && r.text === t)
                        break;
                    if (e && Tr[r.text] && Tr[r.text].infix)
                        break;
                    var i = this.parseAtom(t);
                    if (!i)
                        break;
                    "internal" !== i.type && n.push(i)
                }
                return "text" === this.mode && this.formLigatures(n),
                this.handleInfixNodes(n)
            }
            handleInfixNodes(e) {
                for (var t, n = -1, r = 0; r < e.length; r++)
                    if ("infix" === e[r].type) {
                        if (-1 !== n)
                            throw new d("only one infix operator per group",e[r].token);
                        n = r,
                        t = e[r].replaceWith
                    }
                if (-1 !== n && t) {
                    var i, s, o = e.slice(0, n), a = e.slice(n + 1);
                    return i = 1 === o.length && "ordgroup" === o[0].type ? o[0] : {
                        type: "ordgroup",
                        mode: this.mode,
                        body: o
                    },
                    s = 1 === a.length && "ordgroup" === a[0].type ? a[0] : {
                        type: "ordgroup",
                        mode: this.mode,
                        body: a
                    },
                    ["\\\\abovefrac" === t ? this.callFunction(t, [i, e[n], s], []) : this.callFunction(t, [i, s], [])]
                }
                return e
            }
            handleSupSubscript(e) {
                var t = this.fetch()
                  , n = t.text;
                this.consume(),
                this.consumeSpaces();
                var r = this.parseGroup(e);
                if (!r)
                    throw new d("Expected group after '" + n + "'",t);
                return r
            }
            formatUnsupportedCmd(e) {
                for (var t = [], n = 0; n < e.length; n++)
                    t.push({
                        type: "textord",
                        mode: "text",
                        text: e[n]
                    });
                var r = {
                    type: "text",
                    mode: this.mode,
                    body: t
                };
                return {
                    type: "color",
                    mode: this.mode,
                    color: this.settings.errorColor,
                    body: [r]
                }
            }
            parseAtom(e) {
                var t, n, r = this.parseGroup("atom", e);
                if ("text" === this.mode)
                    return r;
                for (; ; ) {
                    this.consumeSpaces();
                    var i = this.fetch();
                    if ("\\limits" === i.text || "\\nolimits" === i.text) {
                        if (r && "op" === r.type) {
                            var s = "\\limits" === i.text;
                            r.limits = s,
                            r.alwaysHandleSupSub = !0
                        } else {
                            if (!r || "operatorname" !== r.type)
                                throw new d("Limit controls must follow a math operator",i);
                            r.alwaysHandleSupSub && (r.limits = "\\limits" === i.text)
                        }
                        this.consume()
                    } else if ("^" === i.text) {
                        if (t)
                            throw new d("Double superscript",i);
                        t = this.handleSupSubscript("superscript")
                    } else if ("_" === i.text) {
                        if (n)
                            throw new d("Double subscript",i);
                        n = this.handleSupSubscript("subscript")
                    } else if ("'" === i.text) {
                        if (t)
                            throw new d("Double superscript",i);
                        var o = {
                            type: "textord",
                            mode: this.mode,
                            text: "\\prime"
                        }
                          , a = [o];
                        for (this.consume(); "'" === this.fetch().text; )
                            a.push(o),
                            this.consume();
                        "^" === this.fetch().text && a.push(this.handleSupSubscript("superscript")),
                        t = {
                            type: "ordgroup",
                            mode: this.mode,
                            body: a
                        }
                    } else {
                        if (!Vr[i.text])
                            break;
                        var l = Vr[i.text]
                          , c = Wr.test(i.text);
                        for (this.consume(); ; ) {
                            var h = this.fetch().text;
                            if (!Vr[h])
                                break;
                            if (Wr.test(h) !== c)
                                break;
                            this.consume(),
                            l += Vr[h]
                        }
                        var p = new Kr(l,this.settings).parse();
                        c ? n = {
                            type: "ordgroup",
                            mode: "math",
                            body: p
                        } : t = {
                            type: "ordgroup",
                            mode: "math",
                            body: p
                        }
                    }
                }
                return t || n ? {
                    type: "supsub",
                    mode: this.mode,
                    base: r,
                    sup: t,
                    sub: n
                } : r
            }
            parseFunction(e, t) {
                var n = this.fetch()
                  , r = n.text
                  , i = Tr[r];
                if (!i)
                    return null;
                if (this.consume(),
                t && "atom" !== t && !i.allowedInArgument)
                    throw new d("Got function '" + r + "' with no arguments" + (t ? " as " + t : ""),n);
                if ("text" === this.mode && !i.allowedInText)
                    throw new d("Can't use function '" + r + "' in text mode",n);
                if ("math" === this.mode && !1 === i.allowedInMath)
                    throw new d("Can't use function '" + r + "' in math mode",n);
                var {args: s, optArgs: o} = this.parseArguments(r, i);
                return this.callFunction(r, s, o, n, e)
            }
            callFunction(e, t, n, r, i) {
                var s = {
                    funcName: e,
                    parser: this,
                    token: r,
                    breakOnTokenText: i
                }
                  , o = Tr[e];
                if (o && o.handler)
                    return o.handler(s, t, n);
                throw new d("No function handler for " + e)
            }
            parseArguments(e, t) {
                var n = t.numArgs + t.numOptionalArgs;
                if (0 === n)
                    return {
                        args: [],
                        optArgs: []
                    };
                for (var r = [], i = [], s = 0; s < n; s++) {
                    var o = t.argTypes && t.argTypes[s]
                      , a = s < t.numOptionalArgs;
                    (t.primitive && null == o || "sqrt" === t.type && 1 === s && null == i[0]) && (o = "primitive");
                    var l = this.parseGroupOfType("argument to '" + e + "'", o, a);
                    if (a)
                        i.push(l);
                    else {
                        if (null == l)
                            throw new d("Null argument, please report this as a bug");
                        r.push(l)
                    }
                }
                return {
                    args: r,
                    optArgs: i
                }
            }
            parseGroupOfType(e, t, n) {
                switch (t) {
                case "color":
                    return this.parseColorGroup(n);
                case "size":
                    return this.parseSizeGroup(n);
                case "url":
                    return this.parseUrlGroup(n);
                case "math":
                case "text":
                    return this.parseArgumentGroup(n, t);
                case "hbox":
                    var r = this.parseArgumentGroup(n, "text");
                    return null != r ? {
                        type: "styling",
                        mode: r.mode,
                        body: [r],
                        style: "text"
                    } : null;
                case "raw":
                    var i = this.parseStringGroup("raw", n);
                    return null != i ? {
                        type: "raw",
                        mode: "text",
                        string: i.text
                    } : null;
                case "primitive":
                    if (n)
                        throw new d("A primitive argument cannot be optional");
                    var s = this.parseGroup(e);
                    if (null == s)
                        throw new d("Expected group as " + e,this.fetch());
                    return s;
                case "original":
                case null:
                case void 0:
                    return this.parseArgumentGroup(n);
                default:
                    throw new d("Unknown group type as " + e,this.fetch())
                }
            }
            consumeSpaces() {
                for (; " " === this.fetch().text; )
                    this.consume()
            }
            parseStringGroup(e, t) {
                var n = this.gullet.scanArgument(t);
                if (null == n)
                    return null;
                for (var r, i = ""; "EOF" !== (r = this.fetch()).text; )
                    i += r.text,
                    this.consume();
                return this.consume(),
                n.text = i,
                n
            }
            parseRegexGroup(e, t) {
                for (var n, r = this.fetch(), i = r, s = ""; "EOF" !== (n = this.fetch()).text && e.test(s + n.text); )
                    s += (i = n).text,
                    this.consume();
                if ("" === s)
                    throw new d("Invalid " + t + ": '" + r.text + "'",r);
                return r.range(i, s)
            }
            parseColorGroup(e) {
                var t = this.parseStringGroup("color", e);
                if (null == t)
                    return null;
                var n = /^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i.exec(t.text);
                if (!n)
                    throw new d("Invalid color: '" + t.text + "'",t);
                var r = n[0];
                return /^[0-9a-f]{6}$/i.test(r) && (r = "#" + r),
                {
                    type: "color-token",
                    mode: this.mode,
                    color: r
                }
            }
            parseSizeGroup(e) {
                var t, n = !1;
                if (this.gullet.consumeSpaces(),
                !(t = e || "{" === this.gullet.future().text ? this.parseStringGroup("size", e) : this.parseRegexGroup(/^[-+]? *(?:$|\d+|\d+\.\d*|\.\d*) *[a-z]{0,2} *$/, "size")))
                    return null;
                e || 0 !== t.text.length || (t.text = "0pt",
                n = !0);
                var r = /([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(t.text);
                if (!r)
                    throw new d("Invalid size: '" + t.text + "'",t);
                var i = {
                    number: +(r[1] + r[2]),
                    unit: r[3]
                };
                if (!V(i))
                    throw new d("Invalid unit: '" + i.unit + "'",t);
                return {
                    type: "size",
                    mode: this.mode,
                    value: i,
                    isBlank: n
                }
            }
            parseUrlGroup(e) {
                this.gullet.lexer.setCatcode("%", 13),
                this.gullet.lexer.setCatcode("~", 12);
                var t = this.parseStringGroup("url", e);
                if (this.gullet.lexer.setCatcode("%", 14),
                this.gullet.lexer.setCatcode("~", 13),
                null == t)
                    return null;
                var n = t.text.replace(/\\([#$%&~_^{}])/g, "$1");
                return {
                    type: "url",
                    mode: this.mode,
                    url: n
                }
            }
            parseArgumentGroup(e, t) {
                var n = this.gullet.scanArgument(e);
                if (null == n)
                    return null;
                var r = this.mode;
                t && this.switchMode(t),
                this.gullet.beginGroup();
                var i = this.parseExpression(!1, "EOF");
                this.expect("EOF"),
                this.gullet.endGroup();
                var s = {
                    type: "ordgroup",
                    mode: this.mode,
                    loc: n.loc,
                    body: i
                };
                return t && this.switchMode(r),
                s
            }
            parseGroup(e, t) {
                var n, r = this.fetch(), i = r.text;
                if ("{" === i || "\\begingroup" === i) {
                    this.consume();
                    var s = "{" === i ? "}" : "\\endgroup";
                    this.gullet.beginGroup();
                    var o = this.parseExpression(!1, s)
                      , a = this.fetch();
                    this.expect(s),
                    this.gullet.endGroup(),
                    n = {
                        type: "ordgroup",
                        mode: this.mode,
                        loc: p.range(r, a),
                        body: o,
                        semisimple: "\\begingroup" === i || void 0
                    }
                } else if (null == (n = this.parseFunction(t, e) || this.parseSymbol()) && "\\" === i[0] && !Ur.hasOwnProperty(i)) {
                    if (this.settings.throwOnError)
                        throw new d("Undefined control sequence: " + i,r);
                    n = this.formatUnsupportedCmd(i),
                    this.consume()
                }
                return n
            }
            formLigatures(e) {
                for (var t = e.length - 1, n = 0; n < t; ++n) {
                    var r = e[n]
                      , i = r.text;
                    "-" === i && "-" === e[n + 1].text && (n + 1 < t && "-" === e[n + 2].text ? (e.splice(n, 3, {
                        type: "textord",
                        mode: "text",
                        loc: p.range(r, e[n + 2]),
                        text: "---"
                    }),
                    t -= 2) : (e.splice(n, 2, {
                        type: "textord",
                        mode: "text",
                        loc: p.range(r, e[n + 1]),
                        text: "--"
                    }),
                    t -= 1)),
                    "'" !== i && "`" !== i || e[n + 1].text !== i || (e.splice(n, 2, {
                        type: "textord",
                        mode: "text",
                        loc: p.range(r, e[n + 1]),
                        text: i + i
                    }),
                    t -= 1)
                }
            }
            parseSymbol() {
                var e = this.fetch()
                  , t = e.text;
                if (/^\\verb[^a-zA-Z]/.test(t)) {
                    this.consume();
                    var n = t.slice(5)
                      , r = "*" === n.charAt(0);
                    if (r && (n = n.slice(1)),
                    n.length < 2 || n.charAt(0) !== n.slice(-1))
                        throw new d("\\verb assertion failed --\n                    please report what input caused this bug");
                    return {
                        type: "verb",
                        mode: "text",
                        body: n = n.slice(1, -1),
                        star: r
                    }
                }
                jr.hasOwnProperty(t[0]) && !ce[this.mode][t[0]] && (this.settings.strict && "math" === this.mode && this.settings.reportNonstrict("unicodeTextInMathMode", 'Accented Unicode text character "' + t[0] + '" used in math mode', e),
                t = jr[t[0]] + t.slice(1));
                var i, s = Rr.exec(t);
                if (s && ("i" === (t = t.substring(0, s.index)) ? t = "ı" : "j" === t && (t = "ȷ")),
                ce[this.mode][t]) {
                    this.settings.strict && "math" === this.mode && He.indexOf(t) >= 0 && this.settings.reportNonstrict("unicodeTextInMathMode", 'Latin-1/Unicode text character "' + t[0] + '" used in math mode', e);
                    var o, a = ce[this.mode][t].group, l = p.range(e);
                    if (ae.hasOwnProperty(a)) {
                        var c = a;
                        o = {
                            type: "atom",
                            mode: this.mode,
                            family: c,
                            loc: l,
                            text: t
                        }
                    } else
                        o = {
                            type: a,
                            mode: this.mode,
                            loc: l,
                            text: t
                        };
                    i = o
                } else {
                    if (!(t.charCodeAt(0) >= 128))
                        return null;
                    this.settings.strict && (I(t.charCodeAt(0)) ? "math" === this.mode && this.settings.reportNonstrict("unicodeTextInMathMode", 'Unicode text character "' + t[0] + '" used in math mode', e) : this.settings.reportNonstrict("unknownSymbol", 'Unrecognized Unicode character "' + t[0] + '" (' + t.charCodeAt(0) + ")", e)),
                    i = {
                        type: "textord",
                        mode: "text",
                        loc: p.range(e),
                        text: t
                    }
                }
                if (this.consume(),
                s)
                    for (var h = 0; h < s[0].length; h++) {
                        var u = s[0][h];
                        if (!$r[u])
                            throw new d("Unknown accent ' " + u + "'",e);
                        var m = $r[u][this.mode] || $r[u].text;
                        if (!m)
                            throw new d("Accent " + u + " unsupported in " + this.mode + " mode",e);
                        i = {
                            type: "accent",
                            mode: this.mode,
                            loc: p.range(e),
                            label: m,
                            isStretchy: !1,
                            isShifty: !0,
                            base: i
                        }
                    }
                return i
            }
        }
        Kr.endOfExpression = ["}", "\\endgroup", "\\end", "\\right", "&"];
        "undefined" != typeof document && "CSS1Compat" !== document.compatMode && ("undefined" != typeof console && console.warn("Warning: KaTeX doesn't work in quirks mode. Make sure your website has a suitable doctype."));
        var Zr = r.createContext(null);
        function Yr() {
            const e = r.useContext(Zr);
            return o(e, "CoordinateContext is not loaded. Are you rendering a Mafs component outside of Mafs?"),
            e
        }
        Zr.displayName = "CoordinateContext";
        var Xr = Zr;
        function Jr(e, t=0) {
            const n = Math.pow(10, t || 0);
            return Math.round(e * n) / n
        }
        function Qr(e, t, n=1) {
            const r = [];
            for (let i = e; i < t - n / 2; i += n)
                r.push(i);
            const i = r[r.length - 1] + n;
            return Math.abs(t - i) < n / 1e-6 ? r.push(t) : r.push(i),
            r
        }
        function ei(e, t, n) {
            return Math.min(Math.max(e, t), n)
        }
        var {round: ti, ceil: ni, floor: ri, log2: ii} = Math
          , si = r.createContext({
            xPanes: [],
            yPanes: [],
            xPaneRange: [0, 0],
            yPaneRange: [0, 0]
        });
        function oi() {
            return r.useContext(si)
        }
        function ai({children: e}) {
            const {xMin: t, xMax: n, yMin: i, yMax: s} = Yr()
              , o = 2 ** ti(ii(n - t) - 1)
              , l = 2 ** ti(ii(s - i) - 1)
              , c = 1 / 8
              , h = o * ri(t / o - c)
              , p = o * ni(n / o + c)
              , u = l * ri(i / l - c)
              , d = l * ni(s / l + c)
              , m = r.useMemo(( () => Qr(h, p - o, o).map((e => [e, e + o]))), [h, p, o])
              , f = r.useMemo(( () => Qr(u, d - l, l).map((e => [e, e + l]))), [u, d, l])
              , g = r.useMemo(( () => ({
                xPanes: m,
                yPanes: f,
                xPaneRange: [h, p],
                yPaneRange: [u, d]
            })), [m, f, h, p, u, d]);
            return (0,
            a.jsx)(si.Provider, {
                value: g,
                children: e
            })
        }
        si.displayName = "PaneContext",
        ai.displayName = "PaneManager";
        var li, ci = ai;
        function hi(e=1, t=0, n=0, r=1, i=0, s=0) {
            return [e, n, i, t, r, s]
        }
        (e => {
            function t(e, t) {
                return [e[0] + t[0], e[1] + t[1]]
            }
            function n(e, t) {
                return [e[0] - t[0], e[1] - t[1]]
            }
            function r(e) {
                return Math.sqrt(e[0] * e[0] + e[1] * e[1])
            }
            function i(e, i, o) {
                const a = n(i, e);
                return t(e, s(a, o * r(a)))
            }
            function s(e, t) {
                return o(e, t / r(e))
            }
            function o(e, t) {
                return [e[0] * t, e[1] * t]
            }
            function a(e, t) {
                return hi(e[0] * t[0] + e[1] * t[3], e[3] * t[0] + e[4] * t[3], e[0] * t[1] + e[1] * t[4], e[3] * t[1] + e[4] * t[4], e[0] * t[2] + e[1] * t[5] + e[2], e[3] * t[2] + e[4] * t[5] + e[5])
            }
            function l(e, t) {
                const n = Math.cos(t)
                  , r = Math.sin(t);
                return [e[0] * n - e[1] * r, e[0] * r + e[1] * n]
            }
            function c(e, t) {
                return Math.pow(t[0] - e[0], 2) + Math.pow(t[1] - e[1], 2)
            }
            function h(e) {
                return e[0] * e[4] - e[3] * e[1]
            }
            function p(e=null) {
                const t = e || hi();
                return {
                    mult: e => p(a(e, t)),
                    translate: (e, n) => p(a(hi(1, 0, 0, 1, e, n), t)),
                    rotate: e => {
                        const n = Math.cos(e)
                          , r = Math.sin(e);
                        return p(a(hi(n, r, -r, n), t))
                    }
                    ,
                    scale: (e, n) => p(a(hi(e, 0, 0, n), t)),
                    shear: (e, n) => p(a(hi(1, n, e, 1), t)),
                    get: () => [...t]
                }
            }
            e.add = t,
            e.sub = n,
            e.mag = r,
            e.normal = function(e) {
                return [-e[1], e[0]]
            }
            ,
            e.lerp = i,
            e.withMag = s,
            e.normalize = function(e) {
                return s(e, 1)
            }
            ,
            e.scale = o,
            e.transform = function(e, t) {
                return [e[0] * t[0] + e[1] * t[1] + t[2], e[0] * t[3] + e[1] * t[4] + t[5]]
            }
            ,
            e.matrixMult = a,
            e.rotate = l,
            e.rotateAbout = function(e, r, i) {
                return t(r, l(n(e, r), i))
            }
            ,
            e.midpoint = function(e, t) {
                return i(e, t, .5)
            }
            ,
            e.dist = function(e, t) {
                return Math.sqrt(c(e, t))
            }
            ,
            e.squareDist = c,
            e.dot = function(e, t) {
                return e[0] * t[0] + e[1] * t[1]
            }
            ,
            e.det = h,
            e.matrixInvert = function(e) {
                const t = h(e);
                if (!t)
                    return null;
                const n = 1 / t
                  , r = e[0]
                  , i = e[1]
                  , s = e[2]
                  , o = e[3]
                  , a = e[4]
                  , l = e[5];
                return hi(n * a, n * -o, n * -i, n * r, n * (l * i - s * a), n * (-l * r + s * o))
            }
            ,
            e.matrixBuilder = p,
            e.toCSS = function(e) {
                const [t,n,r,i,s,o] = e;
                return `matrix(${t}, ${i}, ${n}, ${s}, ${r}, ${o})`
            }
            ,
            e.identity = p().get()
        }
        )(li || (li = {}));
        var pi = r.createContext(null);
        function ui() {
            const e = r.useContext(pi);
            return o(e, "TransformContext is not loaded. Are you rendering a Mafs component outside of a MafsView?"),
            e
        }
        pi.displayName = "TransformContext";
        var di = r.createContext({
            xSpan: 0,
            ySpan: 0
        });
        di.displayName = "SpanContext";
        var mi = r.createContext({
            overrideHeight: void 0
        });
        mi.Provider;
        function fi({width: e="auto", height: t=500, pan: n=!0, zoom: i=!1, viewBox: s={
            x: [-3, 3],
            y: [-3, 3]
        }, preserveAspectRatio: o="contain", children: l, ssr: h=!1, onClick: p}) {
            const u = r.useContext(mi).overrideHeight ?? t
              , d = "auto" === e ? "100%" : `${e}px`
              , m = r.useRef(null)
              , {width: f=("auto" === e ? h ? 500 : 0 : e)} = c({
                ref: "auto" === e ? m : null
            });
            return (0,
            a.jsx)("div", {
                className: "MafsView",
                style: {
                    width: d,
                    height: u
                },
                tabIndex: n || i ? 0 : -1,
                ref: m,
                children: f > 0 && (0,
                a.jsx)(gi, {
                    width: f,
                    height: u,
                    desiredCssWidth: d,
                    rootRef: m,
                    pan: n,
                    zoom: i,
                    viewBox: s,
                    preserveAspectRatio: o,
                    ssr: h,
                    onClick: p,
                    children: l
                })
            })
        }
        function gi({width: e, height: t, desiredCssWidth: n, rootRef: i, pan: s, zoom: l, viewBox: c, preserveAspectRatio: p, children: u, onClick: d}) {
            let m = 1
              , f = 1;
            "object" == typeof l ? (o(l.min > 0 && l.min <= 1, "zoom.min must be in the range (0, 1]"),
            o(l.max >= 1, "zoom.max must be in the range [1, ∞)"),
            m = l.min,
            f = l.max) : l && (m = .5,
            f = 5);
            const g = function({minZoom: e, maxZoom: t}) {
                const [n,i] = r.useState(li.identity)
                  , s = r.useRef(li.identity);
                return {
                    matrix: n,
                    setBase() {
                        s.current = n
                    },
                    move({zoom: n, pan: r}) {
                        const o = 1 / (n?.scale ?? 1)
                          , a = n?.at ?? [0, 0]
                          , l = s.current[0]
                          , c = ei(o, 1 / t / l, 1 / e / l)
                          , h = li.matrixBuilder(s.current).translate(...li.scale(a, -1)).scale(c, c).translate(...li.scale(a, 1)).translate(...r ?? [0, 0]).get();
                        i(h)
                    }
                }
            }({
                minZoom: m,
                maxZoom: f
            })
              , v = c?.padding ?? .5;
            let y = (c?.x?.[0] ?? 0) - v
              , b = (c?.x?.[1] ?? 0) + v
              , x = (c?.y?.[0] ?? 0) - v
              , w = (c?.y?.[1] ?? 0) + v;
            if ("contain" === p) {
                const n = e / t;
                if ((b - y) / (w - x) > n) {
                    const e = (w + x) / 2
                      , t = (b - y) / n / 2;
                    x = e - t,
                    w = e + t
                } else {
                    const e = (b + y) / 2
                      , t = (w - x) * n / 2;
                    y = e - t,
                    b = e + t
                }
            }
            [y,x] = li.transform([y, x], g.matrix),
            [b,w] = li.transform([b, w], g.matrix);
            const k = b - y
              , S = w - x
              , E = r.useMemo(( () => {
                const n = Jr(1 / k * e, 5)
                  , r = Jr(-1 / S * t, 5);
                return li.matrixBuilder().scale(n, r).get()
            }
            ), [t, e, k, S])
              , M = Jr(y / (b - y) * e, 10)
              , C = Jr(w / (x - w) * t, 10)
              , T = li.matrixInvert(E)
              , _ = r.useRef([0, 0])
              , A = r.useRef([0, 0]);
            function I(e) {
                const t = i.current;
                o(t, "SVG is not mounted"),
                o(T, "View transform is not invertible");
                const n = t.getBoundingClientRect();
                return li.transform([e[0] - n.left + M, e[1] - n.top + C], T)
            }
            const R = function(e) {
                const [t,n] = r.useState(!1)
                  , i = r.useRef(0);
                return r.useEffect(( () => {
                    if (e)
                        return window.addEventListener("scroll", t),
                        () => window.removeEventListener("scroll", t);
                    function t() {
                        n(!1),
                        clearTimeout(i.current),
                        i.current = setTimeout(( () => {
                            n(!0)
                        }
                        ), 500)
                    }
                }
                ), [e]),
                {
                    wheelEnabled: !!e && t,
                    handleMouseMove() {
                        n(!0)
                    }
                }
            }(!!l)
              , N = r.useRef(!1);
            (0,
            h.useGesture)({
                onDrag: ({movement: n, first: r, event: i, type: s, pinching: o, memo: a=[0, 0], last: l}) => {
                    if (o)
                        return n;
                    r && g.setBase();
                    const [c,h] = li.sub(n, a);
                    g.move({
                        pan: [-c / e * k, h / t * S]
                    });
                    const p = s.includes("key");
                    return p && i?.preventDefault(),
                    l && (N.current = !0,
                    setTimeout(( () => N.current = !1), 10)),
                    !p && r ? n : a
                }
                ,
                onPinch: ({first: e, movement: [t], origin: n, event: r, last: i}) => {
                    if (!r.currentTarget || !T)
                        return;
                    e && (g.setBase(),
                    _.current = n,
                    A.current = s ? I(n) : [(y + b) / 2, (x + w) / 2]);
                    let o = [0, 0];
                    s && (o = li.transform(li.sub(n, _.current), T)),
                    g.move({
                        zoom: {
                            at: A.current,
                            scale: t
                        },
                        pan: li.scale(o, -1)
                    }),
                    i && g.setBase()
                }
                ,
                onWheel: ({pinching: e, event: t, delta: [,n]}) => {
                    if (e)
                        return;
                    const r = 2 / (1 + Math.exp(-n / 300))
                      , i = I([t.clientX, t.clientY]);
                    g.setBase(),
                    g.move({
                        zoom: {
                            at: i,
                            scale: 1 / r
                        }
                    })
                }
                ,
                onKeyDown: ({event: e}) => {
                    if (e.metaKey)
                        return;
                    const t = {
                        Equal: 1,
                        Minus: -1
                    }[e.code] ?? 0;
                    if (!t)
                        return;
                    let n = .1;
                    (e.altKey || e.metaKey) && (n = .01),
                    e.shiftKey && (n = .3);
                    const r = 1 + t * n
                      , i = [(b + y) / 2, (w + x) / 2];
                    g.setBase(),
                    g.move({
                        zoom: {
                            at: i,
                            scale: r
                        }
                    })
                }
                ,
                onMouseMove: () => {
                    R.handleMouseMove()
                }
                ,
                onClick: ({event: n}) => {
                    if (!d || !i.current || N.current)
                        return;
                    const r = i.current.getBoundingClientRect()
                      , s = n.clientX - r.left
                      , o = r.bottom - n.clientY;
                    d([s / e * k + y, o / t * S + x], n)
                }
            }, {
                drag: {
                    enabled: s,
                    eventOptions: {
                        passive: !1
                    },
                    threshold: 1
                },
                pinch: {
                    enabled: !!l,
                    eventOptions: {
                        passive: !1
                    }
                },
                wheel: {
                    enabled: R.wheelEnabled,
                    preventDefault: !0,
                    eventOptions: {
                        passive: !1
                    }
                },
                target: i
            });
            const P = li.toCSS(E)
              , O = r.useMemo(( () => ({
                xMin: y,
                xMax: b,
                yMin: x,
                yMax: w,
                height: t,
                width: e
            })), [y, b, x, w, t, e]);
            return (0,
            a.jsx)(Xr.Provider, {
                value: O,
                children: (0,
                a.jsx)(di.Provider, {
                    value: {
                        xSpan: k,
                        ySpan: S
                    },
                    children: (0,
                    a.jsx)(pi.Provider, {
                        value: {
                            userTransform: li.identity,
                            viewTransform: E
                        },
                        children: (0,
                        a.jsx)(ci, {
                            children: (0,
                            a.jsx)("svg", {
                                width: e,
                                height: t,
                                viewBox: `${M} ${C} ${e} ${t}`,
                                preserveAspectRatio: "xMidYMin",
                                style: {
                                    width: n,
                                    touchAction: s ? "none" : "auto",
                                    "--mafs-view-transform": P,
                                    "--mafs-user-transform": "translate(0, 0)"
                                },
                                children: u
                            })
                        })
                    })
                })
            })
        }
        fi.displayName = "Mafs";
        var vi = e => (0,
        a.jsxs)(a.Fragment, {
            children: [e, e < 0 && (0,
            a.jsx)("tspan", {
                visibility: "hidden",
                children: "-"
            })]
        })
          , yi = {
            axis: !0,
            lines: 1,
            labels: vi
        };
        function bi({separation: e, labelMaker: t}) {
            const {viewTransform: n} = ui()
              , {xPanes: r} = oi();
            return (0,
            a.jsx)("g", {
                className: "mafs-axis",
                children: r.map(( ([r,i]) => (0,
                a.jsx)("g", {
                    children: Si(r, i, e).filter((t => Math.abs(t) > e / 1e6)).map((e => (0,
                    a.jsx)("text", {
                        x: li.transform([e, 0], n)[0],
                        y: 5,
                        dominantBaseline: "hanging",
                        textAnchor: "middle",
                        style: {
                            fill: "var(--mafs-origin-color)",
                            paintOrder: "stroke"
                        },
                        children: t(e)
                    }, e)))
                }, `${r},${i}`)))
            })
        }
        function xi({separation: e, labelMaker: t}) {
            const {viewTransform: n} = ui()
              , {yPanes: r} = oi();
            return (0,
            a.jsx)("g", {
                className: "mafs-axis",
                children: r.map(( ([r,i]) => (0,
                a.jsx)("g", {
                    children: Si(r, i, e).filter((t => Math.abs(t) > e / 1e6)).map((e => (0,
                    a.jsx)("text", {
                        x: 5,
                        y: li.transform([0, e], n)[1],
                        dominantBaseline: "central",
                        style: {
                            fill: "var(--mafs-origin-color)",
                            paintOrder: "stroke"
                        },
                        children: t(e)
                    }, e)))
                }, `${r},${i}`)))
            })
        }
        bi.displayName = "CartesianCoordinates.XLabels",
        xi.displayName = "CartesianCoordinates.YLabels";
        var wi = 0;
        function ki({xAxis: e, yAxis: t, subdivisions: n=!1}) {
            const i = !1 !== e
              , s = !1 !== t
              , o = {
                subdivisions: n,
                ...yi,
                ...e
            }
              , l = {
                subdivisions: n,
                ...yi,
                ...t
            }
              , c = r.useMemo(( () => "cartesian-" + wi++), [])
              , {viewTransform: h} = ui()
              , {xPaneRange: p, yPaneRange: u} = oi()
              , [d,m] = p
              , [f,g] = u
              , [v,y] = li.transform([d, f], h)
              , [b,x] = li.transform([m, g], h)
              , w = o.lines || 1
              , k = l.lines || 1
              , [S,E] = li.transform([w, -k], h)
              , M = o.subdivisions || 1
              , C = l.subdivisions || 1
              , T = S / M
              , _ = E / C;
            return (0,
            a.jsxs)("g", {
                fill: "none",
                children: [(0,
                a.jsxs)("pattern", {
                    x: 0,
                    y: 0,
                    width: S,
                    height: E,
                    id: c,
                    patternUnits: "userSpaceOnUse",
                    children: [(0,
                    a.jsx)("pattern", {
                        width: T,
                        height: _,
                        id: `${c}-subdivision`,
                        patternUnits: "userSpaceOnUse",
                        children: (0,
                        a.jsxs)("g", {
                            stroke: "var(--grid-line-subdivision-color)",
                            children: [!1 !== i && M > 1 && (0,
                            a.jsxs)(a.Fragment, {
                                children: [(0,
                                a.jsx)("line", {
                                    x1: 0,
                                    y1: 0,
                                    x2: 0,
                                    y2: _
                                }), (0,
                                a.jsx)("line", {
                                    x1: T,
                                    y1: 0,
                                    x2: T,
                                    y2: _
                                })]
                            }), !1 !== s && C > 1 && (0,
                            a.jsxs)(a.Fragment, {
                                children: [(0,
                                a.jsx)("line", {
                                    x1: 0,
                                    y1: 0,
                                    x2: T,
                                    y2: 0
                                }), (0,
                                a.jsx)("line", {
                                    x1: 0,
                                    y1: _,
                                    x2: T,
                                    y2: _
                                })]
                            })]
                        })
                    }), (0,
                    a.jsx)("rect", {
                        width: S,
                        height: E,
                        fill: `url(#${c}-subdivision)`
                    }), (0,
                    a.jsxs)("g", {
                        stroke: "var(--mafs-line-color)",
                        children: [s && o.lines && (0,
                        a.jsxs)(a.Fragment, {
                            children: [(0,
                            a.jsx)("line", {
                                x1: 0,
                                y1: 0,
                                x2: S,
                                y2: 0
                            }), (0,
                            a.jsx)("line", {
                                x1: 0,
                                y1: E,
                                x2: S,
                                y2: E
                            })]
                        }), i && l.lines && (0,
                        a.jsxs)(a.Fragment, {
                            children: [(0,
                            a.jsx)("line", {
                                x1: 0,
                                y1: 0,
                                x2: 0,
                                y2: E
                            }), (0,
                            a.jsx)("line", {
                                x1: S,
                                y1: 0,
                                x2: S,
                                y2: E
                            })]
                        })]
                    })]
                }), (0,
                a.jsx)("rect", {
                    x: v,
                    y: x,
                    width: b - v,
                    height: y - x,
                    fill: `url(#${c})`
                }), (0,
                a.jsxs)("g", {
                    stroke: "var(--mafs-origin-color)",
                    strokeWidth: "var(--mafs-axis-stroke-width)",
                    children: [i && o.axis && (0,
                    a.jsx)("line", {
                        x1: v,
                        y1: 0,
                        x2: b,
                        y2: 0
                    }), s && l.axis && (0,
                    a.jsx)("line", {
                        x1: 0,
                        y1: y,
                        x2: 0,
                        y2: x
                    })]
                }), (0,
                a.jsxs)("g", {
                    className: "mafs-shadow",
                    children: [i && o.labels && (0,
                    a.jsx)(bi, {
                        separation: o.lines || 1,
                        labelMaker: o.labels
                    }), s && l.labels && (0,
                    a.jsx)(xi, {
                        separation: l.lines || 1,
                        labelMaker: l.labels
                    })]
                })]
            })
        }
        function Si(e, t, n) {
            const r = Math.floor(e / n) * n
              , i = Math.ceil(t / n) * n;
            return r === i - n ? [r] : Qr(r, i - n, n)
        }
        ki.displayName = "Coordinates.Cartesian";
        var Ei = Qr(0, 2 * Math.PI, Math.PI / 12);
        function Mi({xAxis: e, yAxis: t, lines: n=1, subdivisions: r}) {
            const i = !1 !== e
              , s = !1 !== t
              , o = {
                ...yi,
                ...e
            }
              , l = {
                ...yi,
                ...t
            }
              , {viewTransform: c} = ui()
              , {xPaneRange: h, yPaneRange: p} = oi()
              , [u,d] = h
              , [m,f] = p
              , g = [li.mag([u, m]), li.mag([u, f]), li.mag([d, m]), li.mag([d, f]), li.mag([(u + d) / 2, (m + f) / 2])]
              , v = n
              , y = Math.min(...g) < Math.max(d - u, f - m) ? 0 : Math.min(...g)
              , b = Math.max(...g)
              , x = Math.floor(y / v) * v
              , w = Math.ceil(b / v) * v
              , [k,S] = li.transform([u, m], c)
              , [E,M] = li.transform([d, f], c)
              , [C,T] = li.transform([1, -1], c)
              , _ = Qr(x, w, v)
              , A = null != r ? Qr(x, w, v / r) : [];
            return (0,
            a.jsxs)("g", {
                fill: "none",
                children: [(0,
                a.jsx)("g", {
                    stroke: "var(--grid-line-subdivision-color)",
                    children: Ei.map((e => (0,
                    a.jsx)("line", {
                        x1: 0,
                        y1: 0,
                        x2: Math.cos(e) * w * C,
                        y2: -Math.sin(e) * w * T
                    }, e)))
                }), A.map((e => (0,
                a.jsx)("ellipse", {
                    "data-r": e,
                    cx: 0,
                    cy: 0,
                    rx: e * C,
                    ry: e * T,
                    stroke: "var(--grid-line-subdivision-color)"
                }, e))), _.map((e => (0,
                a.jsx)("ellipse", {
                    "data-r": e,
                    cx: 0,
                    cy: 0,
                    rx: e * C,
                    ry: e * T,
                    stroke: "var(--mafs-line-color)"
                }, e))), (0,
                a.jsxs)("g", {
                    stroke: "var(--mafs-origin-color)",
                    strokeWidth: "var(--mafs-axis-stroke-width)",
                    children: [i && o.axis && (0,
                    a.jsx)("line", {
                        x1: k,
                        y1: 0,
                        x2: E,
                        y2: 0
                    }), s && l.axis && (0,
                    a.jsx)("line", {
                        x1: 0,
                        y1: S,
                        x2: 0,
                        y2: M
                    })]
                }), (0,
                a.jsxs)("g", {
                    className: "mafs-shadow",
                    children: [i && o.labels && (0,
                    a.jsx)(bi, {
                        separation: e?.lines || n || 1,
                        labelMaker: o.labels || vi
                    }), s && l.labels && (0,
                    a.jsx)(xi, {
                        separation: t?.lines || n || 1,
                        labelMaker: l.labels || vi
                    })]
                })]
            })
        }
        Mi.displayName = "Coordinates.Polar";
        var Ci = {
            Cartesian: ki,
            Polar: Mi
        };
        function Ti({domain: e, minDepth: t, maxDepth: n, threshold: r, fn: i, error: s, onPoint: o, lerp: a}) {
            const [l,c] = e;
            o(l, i(l)),
            function e(l, c, h, p, u) {
                const d = function(e, t) {
                    const n = 43758.5453 * Math.sin(12.9898 * e + 78.233 * t);
                    return .4 + .2 * (n - Math.floor(n))
                }(l, c)
                  , m = l + (c - l) * d
                  , f = i(m);
                function g() {
                    e(l, m, h + 1, p, f),
                    o(m, f),
                    e(m, c, h + 1, f, u)
                }
                if (h < t)
                    g();
                else if (h < n) {
                    const e = a(p, u, d);
                    s(f, e) > r && g()
                }
            }(l, c, 0, i(l), i(c)),
            o(c, i(c))
        }
        function _i({xy: e, domain: t, t: n, color: i, style: s="solid", weight: o=2, opacity: l=1, maxSamplingDepth: c=14, minSamplingDepth: h=8, svgPathProps: p={}}) {
            const {viewTransform: u} = ui()
              , d = -li.det(u)
              , [m,f] = t || n
              , g = .1 / d
              , v = r.useMemo(( () => function(e, t, n, r, i) {
                let s = "M ";
                return Ti({
                    fn: e,
                    error: (e, t) => li.squareDist(e, t),
                    onPoint: (e, [t,n]) => {
                        Number.isFinite(t) && Number.isFinite(n) && (s += `${t} ${n} L `)
                    }
                    ,
                    lerp: (e, t, n) => li.lerp(e, t, n),
                    domain: t,
                    minDepth: n,
                    maxDepth: r,
                    threshold: i
                }),
                s.substring(0, s.length - 2)
            }(e, [m, f], h, c, g)), [e, h, c, g, m, f]);
            return (0,
            a.jsx)("path", {
                d: v,
                strokeWidth: o,
                fill: "none",
                strokeLinecap: "round",
                strokeLinejoin: "round",
                ...p,
                style: {
                    stroke: i || "var(--mafs-fg)",
                    strokeOpacity: l,
                    strokeDasharray: "dashed" === s ? "var(--mafs-line-stroke-dash-style)" : void 0,
                    vectorEffect: "non-scaling-stroke",
                    transform: "var(--mafs-view-transform)",
                    ...p.style || {}
                }
            })
        }
        function Ai({y: e, domain: t, ...n}) {
            const [i,s] = t ?? [-1 / 0, 1 / 0]
              , {xPaneRange: [o,l]} = oi()
              , c = Math.max(i, o)
              , h = Math.min(s, l)
              , p = r.useCallback((t => [t, e(t)]), [e])
              , u = r.useMemo(( () => [c, h]), [c, h]);
            return (0,
            a.jsx)(_i, {
                xy: p,
                domain: u,
                ...n
            })
        }
        function Ii({x: e, domain: t, ...n}) {
            const [i,s] = t ?? [-1 / 0, 1 / 0]
              , {yPaneRange: [o,l]} = oi()
              , c = Math.max(i, o)
              , h = Math.min(s, l)
              , p = r.useCallback((t => [e(t), t]), [e])
              , u = r.useMemo(( () => [c, h]), [c, h]);
            return (0,
            a.jsx)(_i, {
                xy: p,
                domain: u,
                ...n
            })
        }
        _i.displayName = "Plot.Parametric",
        Ai.displayName = "Plot.OfX",
        Ii.displayName = "Plot.OfY";
        var Ri = {
            foreground: "var(--mafs-fg)",
            background: "var(--mafs-bg)",
            red: "var(--mafs-red)",
            orange: "var(--mafs-orange)",
            green: "var(--mafs-green)",
            blue: "var(--mafs-blue)",
            indigo: "var(--mafs-indigo)",
            violet: "var(--mafs-violet)",
            pink: "var(--mafs-pink)",
            yellow: "var(--mafs-yellow)"
        }
          , Ni = () => 1;
        function Pi({xy: e, step: t=1, xyOpacity: n=Ni, opacityStep: r=(n === Ni ? 1 : .2), color: i=Ri.foreground}) {
            const {viewTransform: s} = ui()
              , {xPanes: o, yPanes: l} = oi();
            r = Math.min(1, Math.max(.01, r));
            const c = function(e) {
                const t = []
                  , n = 1 / e;
                for (let e = 1; e > 0; e -= n) {
                    const n = {
                        d: "",
                        opacity: e
                    };
                    t.push(n)
                }
                return t
            }(Math.ceil(1 / r));
            function h(r, i, o, a) {
                for (let l = Math.floor(r); l <= Math.ceil(i); l += t)
                    for (let r = Math.floor(o); r <= Math.ceil(a); r += t) {
                        const i = [l, r]
                          , o = e([l, r])
                          , a = li.mag(o);
                        if (0 === a)
                            continue;
                        const h = li.scale(li.normalize(o), Math.min(a, .75 * t))
                          , p = li.add(i, h)
                          , u = li.transform(i, s)
                          , d = li.transform(h, s)
                          , m = li.mag(d)
                          , f = li.transform(p, s)
                          , g = li.scale(li.normalize(d), Math.min(m, 5))
                          , v = li.add(f, li.rotate(g, 5 / 6 * Math.PI))
                          , y = li.add(f, li.rotate(g, -5 / 6 * Math.PI))
                          , b = n([l, r]);
                        Oi(c, b).d += ` M ${u[0]} ${u[1]} L ${f[0]} ${f[1]}  L ${v[0]} ${v[1]}  L ${y[0]} ${y[1]}  L ${f[0]} ${f[1]} `
                    }
            }
            for (const [e,t] of o)
                for (const [n,r] of l)
                    h(e, t, n, r);
            return (0,
            a.jsx)(a.Fragment, {
                children: c.map(( (e, t) => (0,
                a.jsx)("path", {
                    d: e.d,
                    style: {
                        stroke: i,
                        fill: i,
                        opacity: e.opacity,
                        fillOpacity: e.opacity,
                        strokeOpacity: e.opacity
                    },
                    strokeLinecap: "round",
                    strokeLinejoin: "round"
                }, t)))
            })
        }
        function Oi(e, t) {
            t = ei(t, 0, 1);
            return e[e.length - 1 - Math.round(t * (e.length - 1))]
        }
        function Li({x: e, y: t, color: n=Ri.foreground, weight: r=2, strokeColor: i=n, strokeOpacity: s=1, fillColor: l=n, fillOpacity: c=.15, minSamplingDepth: h=10, maxSamplingDepth: p=14, upperColor: u=i, upperOpacity: d=s, upperWeight: m=r, lowerColor: f=i, lowerOpacity: g=s, lowerWeight: v=r, svgUpperPathProps: y={}, svgLowerPathProps: b={}, svgFillPathProps: x={}}) {
            const {xPaneRange: [w,k], yPaneRange: [S,E]} = oi()
              , M = t ? [w, k] : [S, E]
              , C = t ? [S, E] : [w, k]
              , T = t || e;
            o(T && void 0 === e != (void 0 === t), "You must pass either an x or y set of functions to Inequality (but not both)"),
            o(!(void 0 !== T["<"] && void 0 !== T["<="] || void 0 !== T[">"] && void 0 !== T[">="]), "You cannot pass both an inequality and an equality operator to Inequality");
            let _ = 0;
            "<="in T && (_ = 1),
            "<"in T && (_ = 2);
            let A = 0;
            ">="in T && (A = 1),
            ">"in T && (A = 2);
            let I = T["<"] ?? T["<="] ?? ( () => C[1])
              , R = T[">"] ?? T[">="] ?? ( () => C[0]);
            if ("number" == typeof I) {
                const e = I;
                I = () => e
            }
            if ("number" == typeof R) {
                const e = R;
                R = () => e
            }
            const N = function(e, t, n, r, i, s, o) {
                const a = {
                    fill: "",
                    upper: "",
                    lower: ""
                };
                let l = ""
                  , c = ""
                  , h = !1
                  , p = 0
                  , u = 0
                  , d = 0;
                function m(t, n) {
                    return "x" === e ? `${t} ${n}` : `${n} ${t}`
                }
                return Ti({
                    domain: r,
                    minDepth: i,
                    maxDepth: s,
                    threshold: o,
                    fn: e => [[e, n(e)], [e, t(e)]],
                    error: ([e,t], [n,r]) => Math.max(li.squareDist(e, n), li.squareDist(t, r)),
                    lerp: ([e,t], [n,r], i) => [li.lerp(e, n, i), li.lerp(t, r, i)],
                    onPoint: (e, [[,t],[,n]]) => {
                        const r = n > t && h;
                        if (n < t && !h) {
                            if (h = !0,
                            l && c) {
                                const r = (p + e) / 2
                                  , i = ((u + n) / 2 + (d + t) / 2) / 2;
                                l += ` ${m(r, i)} L `,
                                c = ` ${m(r, i)} L ` + c,
                                a.fill += ` M ${l} ${c.substring(0, c.length - 2)} z `,
                                a.upper += ` M ${l.substring(0, l.length - 2)} `,
                                a.lower += ` M ${c.substring(0, c.length - 2)} `,
                                l = "",
                                c = ""
                            }
                        } else if (r) {
                            h = !1;
                            const r = (p + e) / 2
                              , i = ((u + n) / 2 + (d + t) / 2) / 2;
                            l += ` ${m(r, i)} L `,
                            c = ` ${m(r, i)} L ` + c
                        }
                        h || (Number.isFinite(n) && (l += ` ${m(e, n)} L `),
                        Number.isFinite(t) && (c = ` ${m(e, t)} L ` + c)),
                        p = e,
                        u = n,
                        d = t
                    }
                }),
                l && c && (a.fill += ` M ${l} ${c.substring(0, c.length - 2)} z `,
                a.lower += ` M ${c.substring(0, c.length - 2)} `,
                a.upper += ` M ${l.substring(0, l.length - 2)} `),
                a
            }(t ? "x" : "y", I, R, M, h, p, .1);
            return (0,
            a.jsxs)("g", {
                children: [(0,
                a.jsx)("path", {
                    d: N.fill,
                    style: {
                        fill: l || "var(--mafs-fg)",
                        fillOpacity: c,
                        stroke: "none",
                        transform: "var(--mafs-view-transform)",
                        vectorEffect: "non-scaling-stroke",
                        ...x?.style
                    },
                    ...x
                }), 0 != _ && (0,
                a.jsx)("path", {
                    d: N.upper,
                    strokeWidth: m,
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                    strokeDasharray: 2 === _ ? "4,8" : "",
                    style: {
                        fill: "none",
                        stroke: u,
                        strokeOpacity: d,
                        transform: "var(--mafs-view-transform)",
                        vectorEffect: "non-scaling-stroke",
                        ...y?.style
                    },
                    ...y
                }), 0 != A && (0,
                a.jsx)("path", {
                    d: N.lower,
                    strokeWidth: v,
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                    strokeDasharray: 2 === A ? "4,8" : "",
                    style: {
                        fill: "none",
                        stroke: f,
                        strokeOpacity: g,
                        transform: "var(--mafs-view-transform)",
                        vectorEffect: "non-scaling-stroke",
                        ...b?.style
                    },
                    ...b
                })]
            })
        }
        Pi.displayName = "Plot.VectorField",
        Li.displayName = "Plot.Inequality";
        var Di = {
            OfX: Ai,
            OfY: Ii,
            Parametric: _i,
            VectorField: Pi,
            Inequality: Li
        };
        function Fi({point1: e, point2: t, color: n=Ri.foreground, style: r="solid", weight: i=2, opacity: s=1}) {
            const {xPaneRange: o, yPaneRange: l} = oi()
              , [c,h] = o
              , [p,u] = l
              , {userTransform: d} = ui()
              , m = li.transform(e, d)
              , f = li.transform(t, d)
              , g = (f[1] - m[1]) / (f[0] - m[0]);
            let v, y;
            return Math.abs(Math.atan(g)) > Math.PI / 4 ? (v = [(p - m[1]) / g + m[0], p],
            y = [(u - m[1]) / g + m[0], u]) : (v = [c, g * (c - m[0]) + m[1]],
            y = [h, g * (h - m[0]) + m[1]]),
            (0,
            a.jsx)("line", {
                x1: Jr(v[0], 2),
                y1: Jr(v[1], 2),
                x2: Jr(y[0], 2),
                y2: Jr(y[1], 2),
                style: {
                    stroke: n,
                    strokeDasharray: "dashed" === r ? "var(--mafs-line-stroke-dash-style)" : void 0,
                    transform: "var(--mafs-view-transform)",
                    vectorEffect: "non-scaling-stroke"
                },
                strokeWidth: i,
                opacity: s
            })
        }
        function zi({point: e, angle: t, ...n}) {
            const r = li.add(e, li.rotate([1, 0], t));
            return (0,
            a.jsx)(Fi, {
                point1: e,
                point2: r,
                ...n
            })
        }
        function Bi({point: e, slope: t, ...n}) {
            return (0,
            a.jsx)(zi, {
                point: e,
                angle: Math.atan(t),
                ...n
            })
        }
        function qi({point1: e, point2: t, color: n=Ri.foreground, style: r="solid", weight: i=2, opacity: s=1}) {
            const {viewTransform: o, userTransform: l} = ui()
              , c = li.matrixMult(o, l)
              , h = li.transform(e, c)
              , p = li.transform(t, c);
            return (0,
            a.jsx)("line", {
                x1: Jr(h[0], 2),
                y1: Jr(h[1], 2),
                x2: Jr(p[0], 2),
                y2: Jr(p[1], 2),
                style: {
                    stroke: n,
                    strokeDasharray: "dashed" === r ? "var(--mafs-line-stroke-dash-style)" : void 0
                },
                strokeWidth: i,
                opacity: s
            })
        }
        Fi.displayName = "Line.ThroughPoints",
        zi.displayName = "Line.PointAngle",
        Bi.displayName = "Line.PointSlope",
        qi.displayName = "Line.Segment";
        var Hi = {
            PointAngle: zi,
            PointSlope: Bi,
            ThroughPoints: Fi,
            Segment: qi
        };
        function Ui({center: e, radius: t, angle: n=0, strokeStyle: r="solid", strokeOpacity: i=1, weight: s=2, color: o=Ri.foreground, fillOpacity: l=.15, svgEllipseProps: c={}}) {
            const {viewTransform: h, userTransform: p} = ui()
              , u = li.matrixBuilder().translate(...e).mult(p).scale(1, -1).mult(h).scale(1, -1).get()
              , d = `\n    ${li.toCSS(u)}\n    rotate(${n * (180 / Math.PI)})\n  `;
            return (0,
            a.jsx)("ellipse", {
                cx: 0,
                cy: 0,
                rx: t[0],
                ry: t[1],
                strokeWidth: s,
                transform: d,
                ...c,
                style: {
                    stroke: o,
                    strokeDasharray: "dashed" === r ? "var(--mafs-line-stroke-dash-style)" : void 0,
                    fill: o,
                    fillOpacity: l,
                    strokeOpacity: i,
                    vectorEffect: "non-scaling-stroke",
                    ...c.style || {}
                }
            })
        }
        function Gi({radius: e, ...t}) {
            return (0,
            a.jsx)(Ui, {
                radius: [e, e],
                ...t
            })
        }
        function Wi({element: e, points: t, color: n=Ri.foreground, weight: r=2, fillOpacity: i=.15, strokeOpacity: s=1, strokeStyle: o="solid", svgPolyProps: l={}}) {
            const {userTransform: c} = ui()
              , h = t.map((e => li.transform(e, c).join(" "))).join(" ");
            return (0,
            a.jsx)(e, {
                points: h,
                strokeWidth: r,
                fillOpacity: i,
                strokeLinejoin: "round",
                ...l,
                style: {
                    fill: n,
                    fillOpacity: i,
                    stroke: n,
                    strokeDasharray: "dashed" === o ? "var(--mafs-line-stroke-dash-style)" : void 0,
                    strokeOpacity: s,
                    vectorEffect: "non-scaling-stroke",
                    transform: "var(--mafs-view-transform)",
                    ...l.style || {}
                }
            })
        }
        function Vi({svgPolygonProps: e, ...t}) {
            return (0,
            a.jsx)(Wi, {
                element: "polygon",
                svgPolyProps: e,
                ...t
            })
        }
        function $i({fillOpacity: e=0, svgPolylineProps: t, ...n}) {
            return (0,
            a.jsx)(Wi, {
                element: "polyline",
                fillOpacity: e,
                svgPolyProps: t,
                ...n
            })
        }
        function ji({x: e, y: t, color: n=Ri.foreground, opacity: r=1, svgCircleProps: i={}}) {
            const {viewTransform: s, userTransform: o} = ui()
              , [l,c] = li.transform([e, t], li.matrixMult(s, o));
            return (0,
            a.jsx)("circle", {
                cx: l,
                cy: c,
                r: 6,
                ...i,
                style: {
                    fill: n,
                    opacity: r,
                    ...i.style
                }
            })
        }
        Ui.displayName = "Ellipse",
        Gi.displayName = "Circle",
        Vi.displayName = "Polygon",
        $i.displayName = "Polyline",
        ji.displayName = "Point";
        function Ki({children: e, x: t, y: n, color: r, size: i=30, svgTextProps: s={}, attach: o, attachDistance: l=0}) {
            const {viewTransform: c, userTransform: h} = ui();
            let p = 0
              , u = "middle";
            o?.includes("w") ? (u = "end",
            p = -1) : o?.includes("e") && (u = "start",
            p = 1);
            let d = 0
              , m = "middle";
            o?.includes("n") ? (m = "baseline",
            d = 1) : o?.includes("s") && (m = "hanging",
            d = -1);
            let[f,g] = [0, 0];
            0 === p && 0 === d || ([f,g] = li.withMag([p, d], l));
            const v = li.transform([t, n], li.matrixMult(c, h));
            return (0,
            a.jsx)("text", {
                x: v[0] + f,
                y: v[1] + g,
                fontSize: i,
                dominantBaseline: m,
                textAnchor: u,
                style: {
                    fill: r || "var(--mafs-fg)",
                    vectorEffect: "non-scaling-stroke"
                },
                className: "mafs-shadow",
                ...s,
                children: e
            })
        }
        function Zi(e) {
            const {gestureTarget: t, onMove: n, point: i, constrain: s} = e
              , [a,l] = r.useState(!1)
              , {xSpan: c, ySpan: p} = function() {
                const e = r.useContext(di);
                return o(e, "SpanContext is not defined"),
                e
            }()
              , {viewTransform: u, userTransform: d} = ui()
              , m = li.matrixInvert(u);
            o(m, "The view transform must be invertible.");
            const f = r.useMemo(( () => function(e) {
                const t = li.matrixInvert(e);
                return o(null !== t, "Could not invert transform matrix. A parent transformation matrix might be degenerative (mapping 2D space to a line)."),
                t
            }(d)), [d])
              , g = r.useRef([0, 0]);
            return (0,
            h.useDrag)((e => {
                const {type: t, event: r} = e;
                r?.stopPropagation();
                if (t.includes("key")) {
                    r?.preventDefault();
                    const {direction: t, altKey: o, metaKey: a, shiftKey: l} = e
                      , h = [t[0], -t[1]]
                      , u = Math.abs(h[0]) ? c : p;
                    let m = 50;
                    (o || a) && (m = 200),
                    l && (m = 10);
                    const g = u / (2 * m)
                      , v = Qr(u / m, u / 2, u / m);
                    for (const e of v) {
                        const t = li.scale(h, e)
                          , r = s(li.transform(li.add(li.transform(i, d), t), f));
                        if (li.dist(r, i) > g) {
                            n(r);
                            break
                        }
                    }
                } else {
                    const {last: t, movement: r, first: o} = e;
                    if (l(!t),
                    o && (g.current = li.transform(i, d)),
                    0 === li.mag(r))
                        return;
                    const a = li.transform(r, m);
                    n(s(li.transform(li.add(g.current, a), f)))
                }
            }
            ), {
                target: t,
                eventOptions: {
                    passive: !1
                }
            }),
            {
                dragging: a
            }
        }
        Ki.displayName = "Text";
        var Yi = r.forwardRef(( (e, t) => {
            const {color: n=Ri.pink, ringRadiusPx: i=15, dragging: s, point: o} = e
              , {viewTransform: l, userTransform: c} = ui()
              , h = r.useMemo(( () => li.matrixMult(l, c)), [l, c])
              , [p,u] = li.transform(o, h);
            return (0,
            a.jsxs)("g", {
                ref: t,
                style: {
                    "--movable-point-color": n,
                    "--movable-point-ring-size": `${i}px`
                },
                className: "mafs-movable-point " + (s ? "mafs-movable-point-dragging" : ""),
                tabIndex: 0,
                children: [(0,
                a.jsx)("circle", {
                    className: "mafs-movable-point-hitbox",
                    r: 30,
                    cx: p,
                    cy: u
                }), (0,
                a.jsx)("circle", {
                    className: "mafs-movable-point-focus",
                    r: i + 1,
                    cx: p,
                    cy: u
                }), (0,
                a.jsx)("circle", {
                    className: "mafs-movable-point-ring",
                    r: i,
                    cx: p,
                    cy: u
                }), (0,
                a.jsx)("circle", {
                    className: "mafs-movable-point-point",
                    r: 6,
                    cx: p,
                    cy: u
                })]
            })
        }
        ));
        function Xi({point: e, onMove: t, constrain: n=(e => e), color: i=Ri.pink}) {
            const s = r.useRef(null)
              , {dragging: o} = Zi({
                gestureTarget: s,
                onMove: t,
                point: e,
                constrain: n
            });
            return (0,
            a.jsx)(Yi, {
                ref: s,
                point: e,
                color: i,
                dragging: o
            })
        }
        function Ji(e, {constrain: t, color: n=Ri.pink}={}) {
            const [i,s] = e
              , [o,l] = r.useState(e)
              , [c,h] = o
              , p = r.useMemo(( () => "horizontal" === t ? ([e]) => [e, s] : "vertical" === t ? ([,e]) => [i, e] : "function" == typeof t ? t : ([e,t]) => [e, t]), [t, i, s]);
            return {
                x: c,
                y: h,
                point: [c, h],
                element: r.useMemo(( () => (0,
                a.jsx)(Xi, {
                    point: o,
                    color: n,
                    constrain: p,
                    onMove: l
                })), [o, n, p]),
                setPoint: l
            }
        }
        function Qi(e) {
            const {userTransform: t, viewTransform: n} = ui();
            let r = li.matrixBuilder();
            const {matrix: i, children: s, ...o} = e;
            i && (r = r.mult(i));
            for (const [e,t] of Object.entries(o))
                if (null != t)
                    switch (e) {
                    case "translate":
                        r = r.translate(...t);
                        break;
                    case "scale":
                        r = "number" == typeof t ? r.scale(t, t) : r.scale(...t);
                        break;
                    case "shear":
                        r = r.shear(...t);
                        break;
                    case "rotate":
                        r = r.rotate(t)
                    }
            r = r.mult(t);
            const l = r.get();
            return (0,
            a.jsx)(pi.Provider, {
                value: {
                    userTransform: l,
                    viewTransform: n
                },
                children: (0,
                a.jsx)("g", {
                    style: {
                        "--mafs-user-transform": li.toCSS(l)
                    },
                    children: s
                })
            })
        }
        function es({precision: e=3}) {
            const {xMin: t, xMax: n, yMin: r, yMax: i} = Yr()
              , {viewTransform: s} = ui()
              , {xPanes: o, yPanes: l} = oi()
              , [c,h] = li.transform([t, r], s)
              , p = o.map((e => `(${e.join(", ")})`)).join("   ")
              , u = l.map((e => `(${e.join(", ")})`)).join("   ");
            return (0,
            a.jsxs)("g", {
                className: "mafs-shadow",
                fontFamily: "monospace",
                children: [(0,
                a.jsxs)("text", {
                    x: c + 10,
                    y: h - 70,
                    children: ["x: (", t.toFixed(e), ", ", n.toFixed(e), ")"]
                }), (0,
                a.jsxs)("text", {
                    x: c + 10,
                    y: h - 50,
                    children: ["y: (", r.toFixed(e), ", ", i.toFixed(e), ")"]
                }), (0,
                a.jsxs)("text", {
                    x: c + 10,
                    y: h - 30,
                    children: ["xPanes: ", p]
                }), (0,
                a.jsxs)("text", {
                    x: c + 10,
                    y: h - 10,
                    children: ["yPanes: ", u]
                })]
            })
        }
        function ts({children: e}) {
            const t = Ji([0, 0])
              , n = Ji([1, 1], {
                color: Ri.blue
            })
              , r = Ji([1, 0], {
                color: Ri.green,
                constrain: e => li.normalize(e)
            })
              , i = Math.atan2(r.point[1], r.point[0]);
            return (0,
            a.jsxs)(a.Fragment, {
                children: [(0,
                a.jsxs)(Qi, {
                    translate: t.point,
                    children: [(0,
                    a.jsxs)(Qi, {
                        rotate: i,
                        children: [(0,
                        a.jsxs)(Qi, {
                            scale: n.point,
                            children: [e, (0,
                            a.jsx)(Vi, {
                                points: [[0, 0], [0, 1], [1, 1], [1, 0]],
                                color: Ri.blue
                            })]
                        }), (0,
                        a.jsx)(Gi, {
                            center: [0, 0],
                            radius: 1,
                            strokeStyle: "dashed",
                            strokeOpacity: .5,
                            fillOpacity: 0,
                            color: Ri.green
                        }), n.element]
                    }), r.element]
                }), t.element]
            })
        }
        Yi.displayName = "MovablePointDisplay",
        Xi.displayName = "MovablePoint",
        Qi.displayName = "Transform",
        es.displayName = "Debug.ViewportInfo",
        ts.displayName = "Debug.TransformWidget"
    }
    ,
    48765: function(e) {
        /**
 * @license
 * MathQuill v0.10.1, by Han, Jeanine, and Mary
 * http://mathquill.com | maintainers@mathquill.com
 *
 * This Source Code Form is subject to the terms of the
 * Mozilla Public License, v. 2.0. If a copy of the MPL
 * was not distributed with this file, You can obtain
 * one at http://mozilla.org/MPL/2.0/.
 */
        function t() {}
        function n(e) {
            for (; e; ) {
                if (!e.parent)
                    return e;
                e = e.parent
            }
        }
        function r(e, t, r) {
            var i, s, o, a, l, c;
            if (!t) {
                if (i = new Error("prayer failed: " + e),
                r)
                    for (o in s = {},
                    i.dcgExtraErrorMetaData = s,
                    r)
                        a = r[o],
                        l = s[o] = {},
                        a ? (l.localLatex = a.latex(),
                        (c = n(a)) && (l.rootLatex = c.latex())) : l.emptyNode = !0;
                throw i
            }
        }
        function i(e) {
            r("a direction was passed", e === mt || e === ft)
        }
        function s(e) {
            var t, n = document.implementation.createHTMLDocument("");
            if (n.body.innerHTML = e,
            1 === n.body.children.length)
                return n.body.children[0];
            for (t = document.createDocumentFragment(); n.body.firstChild; )
                t.appendChild(n.body.firstChild);
            return t
        }
        function o(e, t) {
            var n, r, i, s, o;
            if ("function" == typeof (null === (n = e) || void 0 === n ? void 0 : n.closest))
                return e.closest(t);
            if (!(e instanceof HTMLElement))
                return null;
            s = Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector,
            o = e;
            do {
                if (s.call(o, t))
                    return o;
                o = null !== (i = null !== (r = null == o ? void 0 : o.parentElement) && void 0 !== r ? r : null == o ? void 0 : o.parentNode) && void 0 !== i ? i : null
            } while (null !== o && 1 === o.nodeType);
            return null
        }
        function a(e) {
            return e.getClientRects().length ? e.getBoundingClientRect() : {
                top: 0,
                left: 0,
                height: 0,
                width: 0,
                x: 0,
                y: 0,
                bottom: 0,
                right: 0
            }
        }
        function l(e, t) {
            var n, r = e[mt];
            if (r && (n = e[ft]))
                for (n = n[ft]; r !== n && !1 !== t(r); r = r[ft])
                    ;
        }
        function c(e, t, n) {
            var r, i = e[mt];
            if (!i)
                return t;
            if (!(r = e[ft]))
                return t;
            for (r = r[ft]; i !== r; i = i[ft])
                t = n(t, i);
            return t
        }
        function h(e, t, n) {
            r("a parent is always present", e),
            r("leftward is properly set up", t ? t[ft] === n && t.parent === e : e.getEnd(mt) === n, {
                parent: e,
                leftward: t,
                leftwardL: t && t[mt],
                leftwardR: t && t[ft],
                rightwardL: n && n[mt],
                rightwardR: n && n[ft]
            }),
            r("rightward is properly set up", n ? n[mt] === t && n.parent === e : e.getEnd(ft) === t, {
                parent: e,
                rightward: n,
                leftwardL: t && t[mt],
                leftwardR: t && t[ft],
                rightwardL: n && n[mt],
                rightwardR: n && n[ft],
                rightwardParent: n && n.parent
            })
        }
        function p(e) {
            return e && e.prototype instanceof te
        }
        function u(e) {
            return V(),
            $ || ($ = d(1)),
            $(e)
        }
        function d(e) {
            function t(e, t) {
                var n, r, s;
                for (n in t)
                    if (t.hasOwnProperty(n)) {
                        if ("substituteKeyboardEvents" === n && i >= 3)
                            throw new Error(["As of interface version 3, the 'substituteKeyboardEvents'", "option is no longer supported. Use 'overrideTypedText' and", "'overrideKeystroke' instead."].join(" "));
                        r = t[n],
                        s = o[n],
                        e[n] = s ? s(r) : r
                    }
            }
            function n(e, t) {
                function n(n, r) {
                    var s, o;
                    return n && n.nodeType ? (s = p(n))instanceof t ? s : ((o = new ce(new t.RootBlock,n,new a(i))).KIND_OF_MQ = e,
                    new t(o).__mathquillify(r || {}, i)) : null
                }
                return r(e + " is defined", t),
                n.prototype = t.prototype,
                n
            }
            var i, s, o, a, l, c, h, p;
            if (1 !== e && 2 !== e && 3 !== e)
                throw "Only interface versions between " + j + " and " + K + " supported. You specified: " + e;
            if ((i = e) < 3) {
                if (!(s = window.jQuery))
                    throw "MathQuill interface version ".concat(i, " requires jQuery 1.5.2+ to be loaded first");
                G.prototype.jQuery = s
            }
            return o = dt(dt({}, U), {
                handlers: function(e) {
                    return {
                        fns: e || {},
                        APIClasses: h
                    }
                }
            }),
            a = i < 3 ? G : function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return ut(t, e),
                t
            }(G),
            l = function(e) {
                function n(t) {
                    var n = e.call(this) || this;
                    return n.__controller = t,
                    n.__options = t.options,
                    n.id = t.id,
                    n.data = t.data,
                    n
                }
                return ut(n, e),
                n.prototype.mathquillify = function(e) {
                    var t, n = this.__controller, r = n.root, s = n.container;
                    n.createTextarea(),
                    t = I(s).addClass(e).children().detach(),
                    r.setDOM(I(yt("span", {
                        class: "mq-root-block",
                        "aria-hidden": !0
                    })).appendTo(s).oneElement()),
                    N.linkElementByBlockNode(r.domFrag().oneElement(), r),
                    this.latex(t.text()),
                    this.revert = function() {
                        return n.removeMouseEventListener(),
                        I(s).removeClass("mq-editable-field mq-math-mode mq-text-mode").empty().append(t),
                        i < 3 ? this.__options.assertJquery()(s) : s
                    }
                }
                ,
                n.prototype.setAriaLabel = function(e) {
                    return this.__controller.setAriaLabel(e),
                    this
                }
                ,
                n.prototype.getAriaLabel = function() {
                    return this.__controller.getAriaLabel()
                }
                ,
                n.prototype.config = function(e) {
                    return t(this.__options, e),
                    this
                }
                ,
                n.prototype.el = function() {
                    return this.__controller.container
                }
                ,
                n.prototype.text = function() {
                    return this.__controller.exportText()
                }
                ,
                n.prototype.mathspeak = function() {
                    return this.__controller.exportMathSpeak()
                }
                ,
                n.prototype.latex = function(e) {
                    if (arguments.length > 0) {
                        this.__controller.renderLatexMath(e);
                        var t = this.__controller.cursor;
                        return this.__controller.blurred && t.hide().parent.blur(t),
                        this
                    }
                    return this.__controller.exportLatex()
                }
                ,
                n.prototype.selection = function() {
                    return this.__controller.exportLatexSelection()
                }
                ,
                n.prototype.html = function() {
                    return this.__controller.root.domFrag().oneElement().innerHTML.replace(/ jQuery\d+="(?:\d+|null)"/g, "").replace(/ mathquill-(?:command|block)-id="?\d+"?/g, "").replace(/<span class="?mq-cursor( mq-blink)?"?>.?<\/span>/i, "").replace(/ mq-hasCursor|mq-hasCursor ?/, "").replace(/ class=(""|(?= |>))/g, "")
                }
                ,
                n.prototype.reflow = function() {
                    return this.__controller.root.postOrder((function(e) {
                        e.reflow()
                    }
                    )),
                    this
                }
                ,
                n.prototype.cursor = function() {
                    return this.__controller.cursor
                }
                ,
                n.prototype.controller = function() {
                    return this.__controller
                }
                ,
                n.prototype.setAriaStringsOverrideMap = function(e) {
                    return this.__controller.setAriaStringsOverrideMap(e),
                    this
                }
                ,
                n
            }(W),
            c = function(e) {
                function t() {
                    var t = null !== e && e.apply(this, arguments) || this;
                    return t.setMathspeakOverride = function(e) {
                        return N.prototype.mathspeakOverride = e,
                        t
                    }
                    ,
                    t
                }
                return ut(t, e),
                t.prototype.mathquillify = function(t) {
                    return e.prototype.mathquillify.call(this, t),
                    this.__controller.editable = !0,
                    this.__controller.addMouseEventListener(),
                    this.__controller.editablesTextareaEvents(),
                    this
                }
                ,
                t.prototype.focus = function() {
                    return this.__controller.getTextareaOrThrow().focus(),
                    this.__controller.scrollHoriz(),
                    this
                }
                ,
                t.prototype.blur = function() {
                    return this.__controller.getTextareaOrThrow().blur(),
                    this
                }
                ,
                t.prototype.write = function(e) {
                    this.__controller.writeLatex(e),
                    this.__controller.scrollHoriz();
                    var t = this.__controller.cursor;
                    return this.__controller.blurred && t.hide().parent.blur(t),
                    this
                }
                ,
                t.prototype.empty = function() {
                    var e, t = this.__controller.root, n = this.__controller.cursor;
                    return t.setEnds(((e = {})[mt] = 0,
                    e[ft] = 0,
                    e)),
                    t.domFrag().empty(),
                    delete n.selection,
                    n.insAtRightEnd(t),
                    this
                }
                ,
                t.prototype.cmd = function(e) {
                    var t, n, r = this.__controller.notify(void 0), i = r.cursor;
                    return /^\\[a-z]+$/i.test(e) && !i.isTooDeep() ? (e = e.slice(1),
                    (t = O[e]) && (n = t.constructor ? new t(e) : t(e),
                    i.selection && n.replaces(i.replaceSelection()),
                    n.createLeftOf(i.show()))) : i.parent.write(i, e),
                    r.scrollHoriz(),
                    r.blurred && i.hide().parent.blur(i),
                    this
                }
                ,
                t.prototype.select = function() {
                    return this.__controller.selectAll(),
                    this
                }
                ,
                t.prototype.clearSelection = function() {
                    return this.__controller.cursor.clearSelection(),
                    this
                }
                ,
                t.prototype.moveToDirEnd = function(e) {
                    return this.__controller.notify("move").cursor.insAtDirEnd(e, this.__controller.root),
                    this
                }
                ,
                t.prototype.moveToLeftEnd = function() {
                    return this.moveToDirEnd(mt)
                }
                ,
                t.prototype.moveToRightEnd = function() {
                    return this.moveToDirEnd(ft)
                }
                ,
                t.prototype.keystroke = function(e, t) {
                    var n, r = e.replace(/^\s+|\s+$/g, "").split(/\s+/);
                    for (n = 0; n < r.length; n += 1)
                        this.__controller.keystroke(r[n], t);
                    return this
                }
                ,
                t.prototype.typedText = function(e) {
                    for (var t = 0; t < e.length; t += 1)
                        this.__controller.typedText(e.charAt(t));
                    return this
                }
                ,
                t.prototype.dropEmbedded = function(e, t, n) {
                    var r = e - (void 0 !== window.pageXOffset ? window.pageXOffset : (document.documentElement || document.body.parentNode || document.body).scrollLeft)
                      , i = t - (void 0 !== window.pageYOffset ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop)
                      , s = document.elementFromPoint(r, i);
                    this.__controller.seek(s, r, i),
                    (new ot).setOptions(n).createLeftOf(this.__controller.cursor)
                }
                ,
                t.prototype.setAriaPostLabel = function(e, t) {
                    return this.__controller.setAriaPostLabel(e, t),
                    this
                }
                ,
                t.prototype.getAriaPostLabel = function() {
                    return this.__controller.getAriaPostLabel()
                }
                ,
                t.prototype.clickAt = function(e, t, n) {
                    var r, i;
                    return n = n || document.elementFromPoint(e, t),
                    (i = (r = this.__controller).root.domFrag().oneElement()).contains(n) || (n = i),
                    r.seek(n, e, t),
                    r.blurred && this.focus(),
                    this
                }
                ,
                t.prototype.ignoreNextMousedown = function(e) {
                    return this.__controller.cursor.options.ignoreNextMousedown = e,
                    this
                }
                ,
                t
            }(l),
            h = {
                AbstractMathQuill: l,
                EditableField: c
            },
            r("API.StaticMath defined", q.StaticMath),
            h.StaticMath = q.StaticMath(h),
            r("API.MathField defined", q.MathField),
            h.MathField = q.MathField(h),
            r("API.InnerMathField defined", q.InnerMathField),
            h.InnerMathField = q.InnerMathField(h),
            q.TextField && (h.TextField = q.TextField(h)),
            p = function(e) {
                var t, n, r, i, s, o, a;
                if (!e || !e.nodeType)
                    return null;
                for (n = 0,
                r = I(e).children().toElementArray(); n < r.length; n++)
                    if ((i = r[n]).classList.contains("mq-root-block")) {
                        t = i;
                        break
                    }
                return a = (o = (s = N.getNodeOfElement(t)) && s.controller) && h[o.KIND_OF_MQ],
                o && a ? new a(o) : null
            }
            ,
            p.L = mt,
            p.R = ft,
            p.config = function(e) {
                return t(a.prototype, e),
                this
            }
            ,
            p.registerEmbed = function(e, t) {
                if (!/^[a-z][a-z0-9]*$/i.test(e))
                    throw "Embed name must start with letter and be only letters and digits";
                H[e] = t
            }
            ,
            p.StaticMath = n("StaticMath", h.StaticMath),
            p.MathField = n("MathField", h.MathField),
            p.InnerMathField = n("InnerMathField", h.InnerMathField),
            h.TextField && (p.TextField = n("TextField", h.TextField)),
            p.prototype = l.prototype,
            p.EditableField = function() {
                throw "wtf don't call me, I'm 'abstract'"
            }
            ,
            p.EditableField.prototype = c.prototype,
            i < 3 && (p.saneKeyboardEvents = g),
            p
        }
        function m(e) {
            e.moveOutOf = function(e) {
                r("controller is defined", this.controller),
                this.controller.handle("moveOutOf", e)
            }
            ,
            e.deleteOutOf = function(e) {
                r("controller is defined", this.controller),
                this.controller.handle("deleteOutOf", e)
            }
            ,
            e.selectOutOf = function(e) {
                r("controller is defined", this.controller),
                this.controller.handle("selectOutOf", e)
            }
            ,
            e.upOutOf = function() {
                r("controller is defined", this.controller),
                this.controller.handle("upOutOf")
            }
            ,
            e.downOutOf = function() {
                r("controller is defined", this.controller),
                this.controller.handle("downOutOf")
            }
            ,
            e.reflow = function() {
                r("controller is defined", this.controller),
                this.controller.handle("reflow"),
                this.controller.handle("edited"),
                this.controller.handle("edit")
            }
        }
        function f(e, t) {
            throw "Parse Error: " + t + " at " + (e = e ? "'" + e + "'" : "EOF")
        }
        function g(e, t) {
            return X(e[0], t)
        }
        function v(e, t, n) {
            return function() {
                return new me(e,t ? yt.entityText(t) : void 0,n)
            }
        }
        function y(e, t, n, r) {
            return function() {
                return new fe(e,t ? yt.entityText(t) : void 0,n,r)
            }
        }
        function b(e, t, n) {
            return function() {
                return new xe(e,yt.entityText(t))
            }
        }
        function x(e) {
            if (!e)
                return !1;
            var t = e[mt];
            return t ? !(t instanceof fe || /^(\\ )|[,;:\(\[]$/.test(t.ctrlSeq)) : !!(e.parent && e.parent.parent && e.parent.parent.isStyleBlock()) && x(e.parent.parent)
        }
        function w(e) {
            if (!e)
                return "";
            var t = "";
            return e.eachChild((function(e) {
                void 0 !== e.ctrlSeq && (t += e.ctrlSeq)
            }
            )),
            t
        }
        function k(e) {
            var t = this.parent
              , n = e;
            do {
                if (n[ft])
                    return e.insLeftOf(t);
                n = n.parent.parent
            } while (n !== t);
            e.insRightOf(t)
        }
        function S(e, t, n) {
            var r, i;
            t = t || e,
            r = et[e],
            i = et[t],
            L[e] = function() {
                return new Qe(mt,e,r,t,i)
            }
            ,
            L[r] = function() {
                return new Qe(ft,e,r,t,i)
            }
            ,
            tt[e] = tt[r] = n
        }
        function E(e) {
            var t, n, i;
            if (e.domFrag().oneElement().normalize(),
            !(t = e.domFrag().children()).isEmpty())
                return r("only node in TextBlock span is Text node", 3 === (n = t.oneText()).nodeType),
                (i = new lt(n.data)).setDOM(n),
                e.children().disown(),
                i.adopt(e, 0, 0),
                i
        }
        function M(e, t, n, r) {
            return function(i) {
                function s() {
                    var n = null !== i && i.apply(this, arguments) || this;
                    return n.ctrlSeq = e,
                    n.mathspeakTemplate = ["Start" + t, "End" + t],
                    n.ariaLabel = t,
                    n
                }
                return ut(s, i),
                s.prototype.html = function() {
                    var e = yt(n, r, [yt.text(this.textContents())]);
                    return this.setDOM(e),
                    N.linkElementByCmdNode(e, this),
                    e
                }
                ,
                s
            }(at)
        }
        var C, T, _, A, I, R, N, P, O, L, D, F, z, B, q, H, U, G, W, V, $, j, K, Z, Y, X, J, Q, ee, te, ne, re, ie, se, oe, ae, le, ce, he, pe, ue, de, me, fe, ge, ve, ye, be, xe, we, ke, Se, Ee, Me, Ce, Te, _e, Ae, Ie, Re, Ne, Pe, Oe, Le, De, Fe, ze, Be, qe, He, Ue, Ge, We, Ve, $e, je, Ke, Ze, Ye, Xe, Je, Qe, et, tt, nt, rt, it, st, ot, at, lt, ct, ht, pt, ut = this && this.__extends || (pt = function(e, t) {
            return (pt = Object.setPrototypeOf || {
                __proto__: []
            }instanceof Array && function(e, t) {
                e.__proto__ = t
            }
            || function(e, t) {
                for (var n in t)
                    Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n])
            }
            )(e, t)
        }
        ,
        function(e, t) {
            function n() {
                this.constructor = e
            }
            if ("function" != typeof t && null !== t)
                throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
            pt(e, t),
            e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype,
            new n)
        }
        ), dt = this && this.__assign || function() {
            return dt = Object.assign || function(e) {
                var t, n, r, i;
                for (n = 1,
                r = arguments.length; n < r; n++)
                    for (i in t = arguments[n])
                        Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                return e
            }
            ,
            dt.apply(this, arguments)
        }
        , mt = -1, ft = 1, gt = Math.min, vt = Math.max, yt = function(e, t, n) {
            var r, i, s, o;
            switch (e) {
            case "svg":
            case "path":
                r = document.createElementNS("http://www.w3.org/2000/svg", e);
                break;
            default:
                r = document.createElement(e)
            }
            for (i in t)
                void 0 !== (s = t[i]) && r.setAttribute(i, "string" == typeof s ? s : String(s));
            if (n)
                for (o = 0; o < n.length; o++)
                    r.appendChild(n[o]);
            return r
        };
        for (Me in yt.text = function(e) {
            return document.createTextNode(e)
        }
        ,
        yt.block = function(e, t, n) {
            var r = yt(e, t, [n.html()]);
            return n.setDOM(r),
            N.linkElementByBlockNode(r, n),
            r
        }
        ,
        yt.entityText = function(e) {
            var t = s(e);
            return r("entity parses to a single text node", t instanceof DocumentFragment && 1 === t.childNodes.length && t.childNodes[0]instanceof Text),
            t.childNodes[0]
        }
        ,
        " ",
        C = "​",
        "˙",
        "∑",
        "∏",
        "∐",
        "∫",
        T = function() {
            var e, t;
            return "function" == typeof requestAnimationFrame && "function" == typeof cancelAnimationFrame ? (e = requestAnimationFrame,
            t = cancelAnimationFrame) : (e = function(e) {
                return window.setTimeout(e, 13)
            }
            ,
            t = clearTimeout),
            function(n, r) {
                function i() {
                    var e = (Date.now() - l) / n;
                    e <= c ? o() : c = e,
                    r(c, o, s)
                }
                function s() {
                    void 0 !== a && t(a),
                    a = void 0
                }
                function o() {
                    s(),
                    a = e(i)
                }
                var a, l = Date.now(), c = 0;
                r(n <= 0 ? 1 : 0, o, s)
            }
        }(),
        _ = function() {
            function e(e) {
                this.span = yt("span", {
                    class: "mq-aria-alert",
                    "aria-live": "assertive",
                    "aria-atomic": "true"
                }),
                this.msg = "",
                this.items = [],
                this.controller = e
            }
            return e.prototype.attach = function() {
                var e = this.controller.container;
                this.span.parentNode !== e && I(e).prepend(I(this.span))
            }
            ,
            e.prototype.queue = function(e, t) {
                return void 0 === t && (t = !1),
                this.items.push(this.processQueueItems(e, t)),
                this
            }
            ,
            e.prototype.processQueueItems = function(e, t) {
                var n;
                return void 0 === t && (t = !1),
                n = (Array.isArray(e) ? e : [e]).map((function(e) {
                    if (e instanceof te) {
                        var n = e.mathspeak({
                            ignoreShorthand: !0
                        });
                        if (t) {
                            if (e.parent && e.parent.ariaLabel && "block" === e.ariaLabel)
                                return e.parent.ariaLabel + " " + n;
                            if (e.ariaLabel)
                                return e.ariaLabel + " " + n
                        }
                        return n
                    }
                    return e || ""
                }
                )),
                n.join(" ")
            }
            ,
            e.prototype.queueDirOf = function(e, t, n) {
                void 0 === n && (n = !1),
                i(e);
                var r = e === mt ? "before" : "after";
                return this.queueDir(r, t, n)
            }
            ,
            e.prototype.queueDirEndOf = function(e, t, n) {
                void 0 === n && (n = !1),
                i(e);
                var r = e === mt ? "beginning of" : "end of";
                return this.queueDir(r, t, n)
            }
            ,
            e.prototype.queueDir = function(e, t, n) {
                var r;
                return void 0 === n && (n = !1),
                (null === (r = this.controller.ariaStringsOverrideMap) || void 0 === r ? void 0 : r[e]) ? this.queue(this.controller.ariaStringsOverrideMap[e](this.processQueueItems(t, n))) : this.queue(e).queue(t, n)
            }
            ,
            e.prototype.queueSelected = function(e, t) {
                return void 0 === t && (t = !1),
                this.controller.ariaStringsOverrideMap && this.controller.ariaStringsOverrideMap.selected ? this.queue(this.controller.ariaStringsOverrideMap.selected(this.processQueueItems(e, t)), t) : this.queue(e, t).queue(" selected")
            }
            ,
            e.prototype.queueTranslatableString = function(e) {
                var t, n = null === (t = this.controller.ariaStringsOverrideMap) || void 0 === t ? void 0 : t[e];
                return n && "string" == typeof n ? this.queue(n) : this.queue(e)
            }
            ,
            e.prototype.alert = function(e) {
                return this.attach(),
                e && this.queue(e),
                this.items.length && (this.msg = this.items.join(" ").replace(/ +(?= )/g, "").trim(),
                this.controller.containerHasFocus() && (this.controller.options.logAriaAlerts && this.msg && console.log(this.msg),
                this.span.textContent = this.msg)),
                this.clear()
            }
            ,
            e.prototype.clear = function() {
                return this.items.length = 0,
                this
            }
            ,
            e
        }(),
        A = function() {
            function e(e, t) {
                var n;
                1 === arguments.length && (t = e),
                e && t && (this.ends = ((n = {})[mt] = e,
                n[ft] = t,
                n))
            }
            return e.create = function(t, n) {
                1 === arguments.length && (n = t),
                r("No half-empty DOMFragments", !!t == !!n);
                var i = new e(t,n);
                return r("last is a forward sibling of first", i.isValid()),
                i
            }
            ,
            e.prototype.isEmpty = function() {
                return void 0 === this.ends
            }
            ,
            e.prototype.isOneNode = function() {
                return !(!this.ends || this.ends[mt] !== this.ends[ft])
            }
            ,
            e.prototype.isValid = function() {
                return !this.ends || (this.ends[mt] === this.ends[ft] || (this.eachNode((function(t) {
                    return e = t
                }
                )),
                e === this.ends[ft]));
                var e
            }
            ,
            e.prototype.firstNode = function() {
                return r("Fragment is not empty", this.ends),
                this.ends[mt]
            }
            ,
            e.prototype.lastNode = function() {
                return r("Fragment is not empty", this.ends),
                this.ends[ft]
            }
            ,
            e.prototype.children = function() {
                var t = this.oneNode()
                  , n = t.firstChild
                  , r = t.lastChild;
                return n && r ? new e(n,r) : new e
            }
            ,
            e.prototype.join = function(t) {
                var n, i;
                if (!this.ends)
                    return t;
                if (!t.ends)
                    return this;
                for (n = !1,
                i = this.ends[ft].nextSibling; i; ) {
                    if (i === t.ends[mt]) {
                        n = !0;
                        break
                    }
                    i = i.nextSibling
                }
                return r("sibling must be a forward DOM sibling of this fragment", n),
                new e(this.ends[mt],t.ends[ft])
            }
            ,
            e.prototype.oneNode = function() {
                return r("Fragment has a single node", this.ends && this.ends[mt] === this.ends[ft]),
                this.ends[mt]
            }
            ,
            e.prototype.oneElement = function() {
                var e = this.oneNode();
                return r("Node is an Element", e.nodeType === Node.ELEMENT_NODE),
                e
            }
            ,
            e.prototype.oneText = function() {
                var e = this.oneNode();
                return r("Node is Text", e.nodeType === Node.TEXT_NODE),
                e
            }
            ,
            e.prototype.eachNode = function(e) {
                var t, n, r;
                if (!this.ends)
                    return this;
                for (t = this.ends[ft],
                n = this.ends[mt],
                r = void 0; n && (r = n.nextSibling,
                e(n),
                n !== t); n = r)
                    ;
                return this
            }
            ,
            e.prototype.eachElement = function(e) {
                return this.eachNode((function(t) {
                    t.nodeType === Node.ELEMENT_NODE && e(t)
                }
                )),
                this
            }
            ,
            e.prototype.text = function() {
                var e = "";
                return this.eachNode((function(t) {
                    e += t.textContent || ""
                }
                )),
                e
            }
            ,
            e.prototype.toNodeArray = function() {
                var e = [];
                return this.eachNode((function(t) {
                    return e.push(t)
                }
                )),
                e
            }
            ,
            e.prototype.toElementArray = function() {
                var e = [];
                return this.eachElement((function(t) {
                    return e.push(t)
                }
                )),
                e
            }
            ,
            e.prototype.toDocumentFragment = function() {
                var e = document.createDocumentFragment();
                return this.eachNode((function(t) {
                    return e.appendChild(t)
                }
                )),
                e
            }
            ,
            e.prototype.insertBefore = function(e) {
                return this.insDirOf(mt, e)
            }
            ,
            e.prototype.insertAfter = function(e) {
                return this.insDirOf(ft, e)
            }
            ,
            e.prototype.append = function(e) {
                return e.appendTo(this.oneElement()),
                this
            }
            ,
            e.prototype.prepend = function(e) {
                return e.prependTo(this.oneElement()),
                this
            }
            ,
            e.prototype.appendTo = function(e) {
                return this.insAtDirEnd(ft, e)
            }
            ,
            e.prototype.prependTo = function(e) {
                return this.insAtDirEnd(mt, e)
            }
            ,
            e.prototype.parent = function() {
                if (!this.ends)
                    return this;
                var t = this.ends[mt].parentNode;
                return t ? new e(t) : new e
            }
            ,
            e.prototype.wrapAll = function(e) {
                var t, n;
                return e.textContent = "",
                this.ends ? (t = this.ends[mt].parentNode,
                n = this.ends[ft].nextSibling,
                this.appendTo(e),
                t && t.insertBefore(e, n),
                this) : this
            }
            ,
            e.prototype.replaceWith = function(e) {
                var t, n, r = null === (t = this.ends) || void 0 === t ? void 0 : t[ft], i = null == r ? void 0 : r.parentNode, s = null == r ? void 0 : r.nextSibling;
                return this.detach(),
                n = e.toDocumentFragment(),
                r && i ? (i.insertBefore(n, s || null),
                this) : this
            }
            ,
            e.prototype.nthElement = function(e) {
                if (this.ends && !(e < 0 || e !== Math.floor(e)))
                    for (var t = this.ends[mt]; t; ) {
                        if (t.nodeType === Node.ELEMENT_NODE) {
                            if (e <= 0)
                                return t;
                            e -= 1
                        }
                        if (t === this.ends[ft])
                            return;
                        t = t.nextSibling
                    }
            }
            ,
            e.prototype.firstElement = function() {
                return this.nthElement(0)
            }
            ,
            e.prototype.lastElement = function() {
                if (this.ends)
                    for (var e = this.ends[ft]; e; ) {
                        if (e.nodeType === Node.ELEMENT_NODE)
                            return e;
                        if (e === this.ends[mt])
                            return;
                        e = e.previousSibling
                    }
            }
            ,
            e.prototype.first = function() {
                return new e(this.firstElement())
            }
            ,
            e.prototype.last = function() {
                return new e(this.lastElement())
            }
            ,
            e.prototype.eq = function(t) {
                return new e(this.nthElement(t))
            }
            ,
            e.prototype.slice = function(t) {
                if (!this.ends)
                    return this;
                var n = this.nthElement(t);
                return n ? new e(n,this.ends[ft]) : new e
            }
            ,
            e.prototype.next = function() {
                for (var t = this.oneNode(); t; )
                    if ((t = t.nextSibling) && t.nodeType === Node.ELEMENT_NODE)
                        return new e(t);
                return new e
            }
            ,
            e.prototype.prev = function() {
                for (var t = this.oneNode(); t; )
                    if ((t = t.previousSibling) && t.nodeType === Node.ELEMENT_NODE)
                        return new e(t);
                return new e
            }
            ,
            e.prototype.empty = function() {
                return this.eachElement((function(e) {
                    e.textContent = ""
                }
                )),
                this
            }
            ,
            e.prototype.remove = function() {
                return this.toDocumentFragment(),
                this
            }
            ,
            e.prototype.detach = function() {
                return this.remove()
            }
            ,
            e.prototype.insDirOf = function(e, t) {
                var n, r;
                return this.ends ? (r = null === (n = t.ends) || void 0 === n ? void 0 : n[e]) && r.parentNode ? (function(e, t, n, r) {
                    t.insertBefore(n, e === mt ? r : r.nextSibling)
                }(e, r.parentNode, this.toDocumentFragment(), r),
                this) : this.detach() : this
            }
            ,
            e.prototype.insAtDirEnd = function(e, t) {
                return this.ends ? (function(e, t, n) {
                    e === mt ? n.insertBefore(t, n.firstChild) : n.appendChild(t)
                }(e, this.toDocumentFragment(), t),
                this) : this
            }
            ,
            e.prototype.hasClass = function(e) {
                var t = !1;
                return this.eachElement((function(n) {
                    n.classList.contains(e) && (t = !0)
                }
                )),
                t
            }
            ,
            e.prototype.addClass = function(e) {
                var t, n, r = function(e) {
                    if (!e)
                        return "continue";
                    i.eachElement((function(t) {
                        t.classList.add(e)
                    }
                    ))
                }, i = this;
                for (t = 0,
                n = e.split(/\s+/); t < n.length; t++)
                    r(n[t]);
                return this
            }
            ,
            e.prototype.removeClass = function(e) {
                var t, n, r = function(e) {
                    if (!e)
                        return "continue";
                    i.eachElement((function(t) {
                        t.classList.remove(e)
                    }
                    ))
                }, i = this;
                for (t = 0,
                n = e.split(/\s+/); t < n.length; t++)
                    r(n[t]);
                return this
            }
            ,
            e.prototype.toggleClass = function(e, t) {
                var n, r, i, s;
                if (!0 === t)
                    return this.addClass(e);
                if (!1 === t)
                    return this.removeClass(e);
                for (n = function(e) {
                    if (!e)
                        return "continue";
                    r.eachElement((function(t) {
                        t.classList.toggle(e)
                    }
                    ))
                }
                ,
                r = this,
                i = 0,
                s = e.split(/\s+/); i < s.length; i++)
                    n(s[i]);
                return this
            }
            ,
            e
        }(),
        I = A.create,
        R = function() {
            function e(e, t, n) {
                this.init(e, t, n)
            }
            return e.prototype.init = function(e, t, n) {
                this.parent = e,
                this[mt] = t,
                this[ft] = n
            }
            ,
            e.copy = function(t) {
                return new e(t.parent,t[mt],t[ft])
            }
            ,
            e
        }(),
        N = function() {
            function e() {
                var r;
                this[t] = 0,
                this[n] = 0,
                this.parent = 0,
                this.ends = ((r = {})[mt] = 0,
                r[ft] = 0,
                r),
                this.id = e.uniqueNodeId()
            }
            var t, n;
            return e.uniqueNodeId = function() {
                return e.idCounter += 1
            }
            ,
            e.getNodeOfElement = function(e) {
                if (e) {
                    if (!e.nodeType)
                        throw new Error("must pass an Element to NodeBase.getNodeOfElement");
                    var t = e;
                    return t.mqBlockNode || t.mqCmdNode
                }
            }
            ,
            e.linkElementByBlockNode = function(e, t) {
                e.mqBlockNode = t
            }
            ,
            e.linkElementByCmdNode = function(e, t) {
                e.mqCmdNode = t
            }
            ,
            e.prototype.setEnds = function(e) {
                this.ends = e,
                r("No half-empty node ends", !!this.ends[mt] == !!this.ends[ft])
            }
            ,
            e.prototype.getEnd = function(e) {
                return this.ends[e]
            }
            ,
            e.prototype.toString = function() {
                return "{{ MathQuill Node #" + this.id + " }}"
            }
            ,
            e.prototype.setDOM = function(e) {
                return e && r("DOM is an element or a text node", e.nodeType === Node.ELEMENT_NODE || e.nodeType === Node.TEXT_NODE),
                this._el = e,
                this
            }
            ,
            e.prototype.domFrag = function() {
                return I(this._el)
            }
            ,
            e.prototype.createDir = function(e, t) {
                i(e);
                var n = this;
                return n.html(),
                n.domFrag().insDirOf(e, t.domFrag()),
                t[e] = n.adopt(t.parent, t[mt], t[ft]),
                n
            }
            ,
            e.prototype.createLeftOf = function(e) {
                this.createDir(mt, e)
            }
            ,
            e.prototype.selectChildren = function(e, t) {
                return new z(e,t)
            }
            ,
            e.prototype.bubble = function(e) {
                var t;
                for (t = this.getSelfNode(); t && !1 !== e(t); t = t.parent)
                    ;
                return this
            }
            ,
            e.prototype.postOrder = function(e) {
                var t = this.getSelfNode();
                return function t(n) {
                    return !!n && (n.eachChild(t),
                    e(n),
                    !0)
                }(t),
                t
            }
            ,
            e.prototype.isEmpty = function() {
                return 0 === this.ends[mt] && 0 === this.ends[ft]
            }
            ,
            e.prototype.isQuietEmptyDelimiter = function(e) {
                if (!this.isEmpty())
                    return !1;
                if (!e)
                    return !1;
                if (!this.parent || void 0 === this.parent.ctrlSeq)
                    return !1;
                var t = this.parent.ctrlSeq.replace(/^\\(left|right)?/, "");
                return e.hasOwnProperty(t)
            }
            ,
            e.prototype.isStyleBlock = function() {
                return !1
            }
            ,
            e.prototype.isTextBlock = function() {
                return !1
            }
            ,
            e.prototype.children = function() {
                return new P(this.getEnd(mt),this.getEnd(ft))
            }
            ,
            e.prototype.eachChild = function(e) {
                return l(this.ends, e),
                this
            }
            ,
            e.prototype.foldChildren = function(e, t) {
                return c(this.ends, e, t)
            }
            ,
            e.prototype.withDirAdopt = function(e, t, n, r) {
                var i = this.getSelfNode();
                return new P(i,i).withDirAdopt(e, t, n, r),
                this
            }
            ,
            e.prototype.adopt = function(e, t, n) {
                var r = this.getSelfNode();
                return new P(r,r).adopt(e, t, n),
                this.getSelfNode()
            }
            ,
            e.prototype.disown = function() {
                var e = this.getSelfNode();
                return new P(e,e).disown(),
                this
            }
            ,
            e.prototype.remove = function() {
                return this.domFrag().remove(),
                this.disown()
            }
            ,
            e.prototype.shouldIgnoreSubstitutionInSimpleSubscript = function(e) {
                return !!e.disableAutoSubstitutionInSubscripts && !!this.parent && this.parent.parent instanceof He && !!this.parent.domFrag().hasClass("mq-sub")
            }
            ,
            e.prototype.getSelfNode = function() {
                return this
            }
            ,
            e.prototype.parser = function() {
                r("Abstract parser() method is never called", !1)
            }
            ,
            e.prototype.html = function() {
                throw new Error("html() unimplemented in NodeBase")
            }
            ,
            e.prototype.text = function() {
                return ""
            }
            ,
            e.prototype.latex = function() {
                var e = {
                    latex: "",
                    startIndex: -1,
                    endIndex: -1
                };
                return this.latexRecursive(e),
                e.latex
            }
            ,
            e.prototype.latexRecursive = function(e) {}
            ,
            e.prototype.checkCursorContextOpen = function(e) {
                e.startSelectionBefore === this && (e.startIndex = e.latex.length),
                e.endSelectionBefore === this && (e.endIndex = e.latex.length)
            }
            ,
            e.prototype.checkCursorContextClose = function(e) {
                e.startSelectionAfter === this && (e.startIndex = e.latex.length),
                e.endSelectionAfter === this && (e.endIndex = e.latex.length)
            }
            ,
            e.prototype.finalizeTree = function(e, t) {}
            ,
            e.prototype.contactWeld = function(e, t) {}
            ,
            e.prototype.blur = function(e) {}
            ,
            e.prototype.focus = function() {}
            ,
            e.prototype.intentionalBlur = function() {}
            ,
            e.prototype.reflow = function() {}
            ,
            e.prototype.registerInnerField = function(e, t) {}
            ,
            e.prototype.chToCmd = function(e, t) {
                r("Abstract chToCmd() method is never called", !1)
            }
            ,
            e.prototype.mathspeak = function(e) {
                return this.mathspeakOverride ? this.mathspeakOverride(this.latex()) : ""
            }
            ,
            e.prototype.seek = function(e, t) {}
            ,
            e.prototype.siblingDeleted = function(e, t) {}
            ,
            e.prototype.siblingCreated = function(e, t) {}
            ,
            e.prototype.finalizeInsert = function(e, t) {}
            ,
            e.prototype.fixDigitGrouping = function(e) {}
            ,
            e.prototype.writeLatex = function(e, t) {}
            ,
            e.prototype.write = function(e, t) {}
            ,
            t = mt,
            n = ft,
            e.idCounter = 0,
            e
        }(),
        P = function() {
            function e(e, t, n) {
                var s, o, a, l;
                this.disowned = !1,
                void 0 === n && (n = mt),
                i(n),
                r("no half-empty fragments", !e == !t, {
                    withDir: e,
                    oppDir: t
                }),
                e && t ? (r("withDir is passed to Fragment", e instanceof te),
                r("oppDir is passed to Fragment", t instanceof te),
                r("withDir and oppDir have the same parent", e.parent === t.parent),
                (o = {})[n] = e,
                o[-n] = t,
                a = o,
                this.setEnds(a),
                l = 0,
                this.each((function(e) {
                    l = e
                }
                )),
                r("following direction siblings from start reaches end", l === a[ft])) : this.setEnds(((s = {})[mt] = 0,
                s[ft] = 0,
                s))
            }
            return e.prototype.getDOMFragFromEnds = function() {
                var e = this.ends[mt]
                  , t = this.ends[ft];
                return 0 === e || 0 === t ? I() : e === t ? e.domFrag() : e.domFrag().join(t.domFrag())
            }
            ,
            e.prototype.setEnds = function(e) {
                this.ends = e
            }
            ,
            e.prototype.getEnd = function(e) {
                return this.ends ? this.ends[e] : 0
            }
            ,
            e.prototype.domFrag = function() {
                return this.getDOMFragFromEnds()
            }
            ,
            e.prototype.withDirAdopt = function(e, t, n, r) {
                return e === mt ? this.adopt(t, n, r) : this.adopt(t, r, n)
            }
            ,
            e.prototype.adopt = function(e, t, n) {
                var r, i, s, o, a;
                return h(e, t, n),
                i = this,
                this.disowned = !1,
                (s = i.ends[mt]) && (o = i.ends[ft]) ? ((r = {})[mt] = e.getEnd(mt),
                r[ft] = e.getEnd(ft),
                a = r,
                t || (a[mt] = s),
                n ? n[mt] = o : a[ft] = o,
                e.setEnds(a),
                o[ft] = n,
                i.each((function(n) {
                    return n[mt] = t,
                    n.parent = e,
                    t && (t[ft] = n),
                    t = n,
                    !0
                }
                )),
                i) : this
            }
            ,
            e.prototype.disown = function() {
                var e, t, n, r, i = this, s = i.ends[mt];
                return !s || i.disowned ? i : (this.disowned = !0,
                (t = i.ends[ft]) ? (h(n = s.parent, s[mt], s),
                h(n, t, t[ft]),
                (e = {})[mt] = n.getEnd(mt),
                e[ft] = n.getEnd(ft),
                r = e,
                s[mt] ? s[mt][ft] = t[ft] : r[mt] = t[ft],
                t[ft] ? t[ft][mt] = s[mt] : r[ft] = s[mt],
                r[mt] && r[ft] ? n.setEnds(r) : n.ends = r,
                i) : i)
            }
            ,
            e.prototype.remove = function() {
                return this.domFrag().remove(),
                this.disown()
            }
            ,
            e.prototype.each = function(e) {
                return l(this.ends, e),
                this
            }
            ,
            e.prototype.fold = function(e, t) {
                return c(this.ends, e, t)
            }
            ,
            e
        }(),
        O = {},
        L = {},
        D = function(e) {
            function t(t, n, r) {
                var i = e.call(this, t, n, r) || this;
                return i.ancestors = {},
                i
            }
            return ut(t, e),
            t.fromCursor = function(e) {
                return new t(e.parent,e[mt],e[ft])
            }
            ,
            t
        }(R),
        F = function(e) {
            function t(t, n, r) {
                var i = e.call(this, t, 0, 0) || this;
                return i.upDownCache = {},
                i.cursorElement = yt("span", {
                    class: "mq-cursor"
                }, [yt.text(C)]),
                i._domFrag = I(),
                i.controller = r,
                i.options = n,
                i.setDOMFrag(I(i.cursorElement)),
                i.blink = function() {
                    I(i.cursorElement).toggleClass("mq-blink")
                }
                ,
                i
            }
            return ut(t, e),
            t.prototype.setDOMFrag = function(e) {
                return this._domFrag = e,
                this
            }
            ,
            t.prototype.domFrag = function() {
                return this._domFrag
            }
            ,
            t.prototype.show = function() {
                var e, t;
                return I(this.cursorElement).removeClass("mq-blink"),
                this.setDOMFrag(I(this.cursorElement)),
                this.intervalId ? clearInterval(this.intervalId) : ((e = this[ft]) ? (t = this.selection) && t.getEnd(mt)[mt] === this[mt] ? this.domFrag().insertBefore(t.domFrag()) : this.domFrag().insertBefore(e.domFrag()) : this.domFrag().appendTo(this.parent.domFrag().oneElement()),
                this.parent.focus()),
                this.intervalId = setInterval(this.blink, 500),
                this
            }
            ,
            t.prototype.hide = function() {
                return this.intervalId && clearInterval(this.intervalId),
                this.intervalId = 0,
                this.domFrag().detach(),
                this.setDOMFrag(I()),
                this
            }
            ,
            t.prototype.withDirInsertAt = function(e, t, n, r) {
                var i = this.parent;
                this.parent = t,
                this[e] = n,
                this[-e] = r,
                i !== t && i.blur && i.blur(this)
            }
            ,
            t.prototype.insDirOf = function(e, t) {
                return i(e),
                this.domFrag().insDirOf(e, t.domFrag()),
                this.withDirInsertAt(e, t.parent, t[e], t),
                this.parent.domFrag().addClass("mq-hasCursor"),
                this
            }
            ,
            t.prototype.insLeftOf = function(e) {
                return this.insDirOf(mt, e)
            }
            ,
            t.prototype.insRightOf = function(e) {
                return this.insDirOf(ft, e)
            }
            ,
            t.prototype.insAtDirEnd = function(e, t) {
                return i(e),
                this.domFrag().insAtDirEnd(e, t.domFrag().oneElement()),
                this.withDirInsertAt(e, t, 0, t.getEnd(e)),
                t.focus(),
                this
            }
            ,
            t.prototype.insAtLeftEnd = function(e) {
                return this.insAtDirEnd(mt, e)
            }
            ,
            t.prototype.insAtRightEnd = function(e) {
                return this.insAtDirEnd(ft, e)
            }
            ,
            t.prototype.jumpUpDown = function(e, t) {
                var n, r, i, s = this;
                s.upDownCache[e.id] = R.copy(s),
                (n = s.upDownCache[t.id]) ? (r = n[ft]) ? s.insLeftOf(r) : s.insAtRightEnd(n.parent) : (i = s.getBoundingClientRectWithoutMargin().left,
                t.seek(i, s)),
                s.controller.aria.queue(t, !0)
            }
            ,
            t.prototype.getBoundingClientRectWithoutMargin = function() {
                var e, t, n, r = this.domFrag();
                return r.removeClass("mq-cursor"),
                t = (e = a(r.oneElement())).left,
                n = e.right,
                r.addClass("mq-cursor"),
                {
                    left: t,
                    right: n
                }
            }
            ,
            t.prototype.unwrapGramp = function() {
                var e, t, n, r, i, s = this.parent.parent, o = s.parent, a = s[ft], l = s[mt];
                if (s.disown().eachChild((function(e) {
                    return !!e.isEmpty() || (e.children().adopt(o, l, a).each((function(e) {
                        return e.domFrag().insertBefore(s.domFrag()),
                        !0
                    }
                    )),
                    l = e.getEnd(ft),
                    !0)
                }
                )),
                !this[ft])
                    if (e = this[mt])
                        this[ft] = e[ft];
                    else
                        for (; !this[ft]; ) {
                            if (!(t = this.parent[ft])) {
                                this[ft] = s[ft],
                                this.parent = o;
                                break
                            }
                            this.parent = t,
                            this[ft] = t.getEnd(mt)
                        }
                (n = this[ft]) ? this.insLeftOf(n) : this.insAtRightEnd(o),
                s.domFrag().remove(),
                r = s[mt],
                i = s[ft],
                r && r.siblingDeleted(this.options, ft),
                i && i.siblingDeleted(this.options, mt)
            }
            ,
            t.prototype.startSelection = function() {
                var e, t = this.anticursor = D.fromCursor(this), n = t.ancestors;
                for (e = t; e.parent; e = e.parent)
                    n[e.parent.id] = e
            }
            ,
            t.prototype.endSelection = function() {
                delete this.anticursor
            }
            ,
            t.prototype.select = function() {
                var e, t, n, i, s, o, a, l, c, h = this.anticursor;
                if (this[mt] === h[mt] && this.parent === h.parent)
                    return !1;
                for (t = this; t.parent; t = t.parent)
                    if (t.parent.id in h.ancestors) {
                        e = t.parent;
                        break
                    }
                if (r("cursor and anticursor in the same tree", e),
                n = e,
                i = h.ancestors[n.id],
                a = ft,
                t[mt] !== i)
                    for (l = t; l; l = l[ft])
                        if (l[ft] === i[ft]) {
                            a = mt,
                            s = t,
                            o = i;
                            break
                        }
                return a === ft && (s = i,
                o = t),
                s instanceof R && (s = s[ft]),
                o instanceof R && (o = o[mt]),
                this.hide().selection = n.selectChildren(s, o),
                c = this.selection.getEnd(a),
                this.insDirOf(a, c),
                this.selectionChanged(),
                !0
            }
            ,
            t.prototype.resetToEnd = function(e) {
                this.clearSelection();
                var t = e.root;
                this[ft] = 0,
                this[mt] = t.getEnd(ft),
                this.parent = t
            }
            ,
            t.prototype.clearSelection = function() {
                return this.selection && (this.selection.clear(),
                delete this.selection,
                this.selectionChanged()),
                this
            }
            ,
            t.prototype.deleteSelection = function() {
                var e = this.selection;
                e && (this[mt] = e.getEnd(mt)[mt],
                this[ft] = e.getEnd(ft)[ft],
                e.remove(),
                this.selectionChanged(),
                delete this.selection)
            }
            ,
            t.prototype.replaceSelection = function() {
                var e = this.selection;
                return e && (this[mt] = e.getEnd(mt)[mt],
                this[ft] = e.getEnd(ft)[ft],
                delete this.selection),
                e
            }
            ,
            t.prototype.depth = function() {
                for (var e = this, t = 0; e = e.parent; )
                    t += e instanceof ge ? 1 : 0;
                return t
            }
            ,
            t.prototype.isTooDeep = function(e) {
                return void 0 !== this.options.maxDepth && this.depth() + (e || 0) > this.options.maxDepth
            }
            ,
            t.prototype.selectionChanged = function() {}
            ,
            t
        }(R),
        z = function(e) {
            function t(t, n, r) {
                var i = e.call(this, t, n, r) || this;
                return i._el = yt("span", {
                    class: "mq-selection"
                }),
                i.getDOMFragFromEnds().wrapAll(i._el),
                i
            }
            return ut(t, e),
            t.prototype.isCleared = function() {
                return void 0 === this._el
            }
            ,
            t.prototype.domFrag = function() {
                return this.isCleared() ? this.getDOMFragFromEnds() : I(this._el)
            }
            ,
            t.prototype.setEnds = function(e) {
                r("Selection ends are never empty", e[mt] && e[ft]),
                this.ends = e
            }
            ,
            t.prototype.getEnd = function(e) {
                return this.ends[e]
            }
            ,
            t.prototype.adopt = function(t, n, r) {
                return this.clear(),
                e.prototype.adopt.call(this, t, n, r)
            }
            ,
            t.prototype.clear = function() {
                var e = this.getDOMFragFromEnds();
                return this.domFrag().replaceWith(e),
                this._el = void 0,
                this
            }
            ,
            t.prototype.join = function(e, t) {
                return void 0 === t && (t = ""),
                this.fold("", (function(n, r) {
                    return n + t + r[e]()
                }
                ))
            }
            ,
            t
        }(P),
        B = function() {
            function e(e, t, n) {
                this.textareaEventListeners = {},
                this.id = e.id,
                this.data = {},
                this.root = e,
                this.container = t,
                this.options = n,
                this.aria = new _(this.getControllerSelf()),
                this.ariaLabel = "Math Input",
                this.ariaPostLabel = "",
                this.mathSpeakCallback = void 0,
                e.controller = this.getControllerSelf(),
                this.cursor = e.cursor = new F(e,n,this.getControllerSelf())
            }
            return e.prototype.getControllerSelf = function() {
                return this
            }
            ,
            e.prototype.handle = function(e, t) {
                var n, i, s, o = this.options.handlers, a = null === (n = this.options.handlers) || void 0 === n ? void 0 : n.fns[e];
                a && (r("APIClass is defined", i = null == o ? void 0 : o.APIClasses[this.KIND_OF_MQ]),
                s = new i(this),
                t === mt || t === ft ? a(t, s) : a(s))
            }
            ,
            e.onNotify = function(t) {
                e.notifyees.push(t)
            }
            ,
            e.prototype.notify = function(t) {
                for (var n = 0; n < e.notifyees.length; n += 1)
                    e.notifyees[n](this.cursor, t);
                return this
            }
            ,
            e.prototype.setAriaLabel = function(e) {
                var t = this.getAriaLabel();
                return e && "string" == typeof e && "" !== e ? this.ariaLabel = e : this.editable ? this.ariaLabel = "Math Input" : this.ariaLabel = "",
                this.ariaLabel === t || this.containerHasFocus() || this.updateMathspeak(),
                this
            }
            ,
            e.prototype.getAriaLabel = function() {
                return "Math Input" !== this.ariaLabel ? this.ariaLabel : this.editable ? "Math Input" : ""
            }
            ,
            e.prototype.setAriaPostLabel = function(e, t) {
                var n = this;
                return e && "string" == typeof e && "" !== e ? (e !== this.ariaPostLabel && "number" == typeof t && (this._ariaAlertTimeout && clearTimeout(this._ariaAlertTimeout),
                this._ariaAlertTimeout = window.setTimeout((function() {
                    n.containerHasFocus() ? n.aria.alert(n.root.mathspeak().trim() + " " + e.trim()) : n.updateMathspeak()
                }
                ), t)),
                this.ariaPostLabel = e) : (this._ariaAlertTimeout && clearTimeout(this._ariaAlertTimeout),
                this.ariaPostLabel = ""),
                this
            }
            ,
            e.prototype.getAriaPostLabel = function() {
                return this.ariaPostLabel || ""
            }
            ,
            e.prototype.containerHasFocus = function() {
                return document.activeElement && this.container.contains(document.activeElement)
            }
            ,
            e.prototype.getTextareaOrThrow = function() {
                var e = this.textarea;
                if (!e)
                    throw new Error("expected a textarea");
                return e
            }
            ,
            e.prototype.getTextareaSpanOrThrow = function() {
                var e = this.textareaSpan;
                if (!e)
                    throw new Error("expected a textareaSpan");
                return e
            }
            ,
            e.prototype.addTextareaEventListeners = function(e) {
                var t, n;
                if (this.textarea)
                    for (t in e)
                        n = t,
                        this.removeTextareaEventListener(n),
                        this.textarea.addEventListener(n, e[n])
            }
            ,
            e.prototype.removeTextareaEventListener = function(e) {
                if (this.textarea) {
                    var t = this.textareaEventListeners[e];
                    t && this.textarea.removeEventListener(e, t)
                }
            }
            ,
            e.prototype.exportMathSpeak = function() {
                return this.root.mathspeak()
            }
            ,
            e.prototype.setAriaStringsOverrideMap = function(e) {
                return this.ariaStringsOverrideMap = e,
                this
            }
            ,
            e.prototype.updateMathspeak = function() {}
            ,
            e.prototype.scrollHoriz = function() {}
            ,
            e.prototype.selectionChanged = function() {}
            ,
            e.prototype.setOverflowClasses = function() {}
            ,
            e.notifyees = [],
            e
        }(),
        q = {},
        H = {},
        {
            handlers: !0,
            autoCommands: !0,
            quietEmptyDelimiters: !0,
            autoParenthesizedFunctions: !0,
            autoOperatorNames: !0,
            leftRightIntoCmdGoes: !0,
            maxDepth: !0,
            interpretTildeAsSim: !0
        },
        U = {},
        G = function() {
            function e(e) {
                this.version = e
            }
            return e.prototype.assertJquery = function() {
                return r("Interface versions > 2 do not depend on JQuery", this.version <= 2),
                r("JQuery is set for interface v < 3", this.jQuery),
                this.jQuery
            }
            ,
            e
        }(),
        W = function() {}
        ,
        V = function() {
            window.console && console.warn('You are using the MathQuill API without specifying an interface version, which will fail in v1.0.0. Easiest fix is to do the following before doing anything else:\n\n    MathQuill = MathQuill.getInterface(1);\n    // now MathQuill.MathField() works like it used to\n\nSee also the "`dev` branch (2014–2015) → v0.10.0 Migration Guide" at\n  https://github.com/mathquill/mathquill/wiki/%60dev%60-branch-(2014%E2%80%932015)-%E2%86%92-v0.10.0-Migration-Guide')
        }
        ,
        u.prototype = W.prototype,
        u.VERSION = "v0.10.1",
        u.interfaceVersion = function(e) {
            if (1 !== e)
                throw "Only interface version 1 supported. You specified: " + e;
            return (V = function() {
                window.console && console.warn('You called MathQuill.interfaceVersion(1); to specify the interface version, which will fail in v1.0.0. You can fix this easily by doing this before doing anything else:\n\n    MathQuill = MathQuill.getInterface(1);\n    // now MathQuill.MathField() works like it used to\n\nSee also the "`dev` branch (2014–2015) → v0.10.0 Migration Guide" at\n  https://github.com/mathquill/mathquill/wiki/%60dev%60-branch-(2014%E2%80%932015)-%E2%86%92-v0.10.0-Migration-Guide')
            }
            )(),
            u
        }
        ,
        u.getInterface = d,
        j = d.MIN = 1,
        K = d.MAX = 3,
        Z = function() {
            function e(e) {
                this._ = e
            }
            return e.prototype.parse = function(t) {
                return this.skip(e.eof)._("" + t, (function(e, t) {
                    return t
                }
                ), f)
            }
            ,
            e.prototype.or = function(t) {
                r("or is passed a parser", t instanceof e);
                var n = this;
                return new e((function(e, r, i) {
                    return n._(e, r, (function(n) {
                        return t._(e, r, i)
                    }
                    ))
                }
                ))
            }
            ,
            e.prototype.then = function(t) {
                var n = this;
                return new e((function(i, s, o) {
                    return n._(i, (function(n, i) {
                        var a = t instanceof e ? t : t(i);
                        return r("a parser is returned", a instanceof e),
                        a._(n, s, o)
                    }
                    ), o)
                }
                ))
            }
            ,
            e.prototype.many = function() {
                var t = this;
                return new e((function(e, n, r) {
                    function i(t, n) {
                        return e = t,
                        o.push(n),
                        !0
                    }
                    function s() {
                        return !1
                    }
                    for (var o = []; t._(e, i, s); )
                        ;
                    return n(e, o)
                }
                ))
            }
            ,
            e.prototype.times = function(t, n) {
                arguments.length < 2 && (n = t);
                var r = this;
                return new e((function(e, i, s) {
                    function o(t, n) {
                        return p.push(n),
                        e = t,
                        !0
                    }
                    function a(t, n) {
                        return c = n,
                        e = t,
                        !1
                    }
                    function l(e, t) {
                        return !1
                    }
                    var c, h, p = [], u = !0;
                    for (h = 0; h < t; h += 1)
                        if (!(u = !!r._(e, o, a)))
                            return s(e, c);
                    for (; h < n && u; h += 1)
                        r._(e, o, l);
                    return i(e, p)
                }
                ))
            }
            ,
            e.prototype.result = function(t) {
                return this.then(e.succeed(t))
            }
            ,
            e.prototype.atMost = function(e) {
                return this.times(0, e)
            }
            ,
            e.prototype.atLeast = function(e) {
                var t = this;
                return t.times(e).then((function(e) {
                    return t.many().map((function(t) {
                        return e.concat(t)
                    }
                    ))
                }
                ))
            }
            ,
            e.prototype.map = function(t) {
                return this.then((function(n) {
                    return e.succeed(t(n))
                }
                ))
            }
            ,
            e.prototype.skip = function(e) {
                return this.then((function(t) {
                    return e.result(t)
                }
                ))
            }
            ,
            e.string = function(t) {
                var n = t.length
                  , r = "expected '" + t + "'";
                return new e((function(e, i, s) {
                    var o = e.slice(0, n);
                    return o === t ? i(e.slice(n), o) : s(e, r)
                }
                ))
            }
            ,
            e.regex = function(t) {
                r("regexp parser is anchored", "^" === t.toString().charAt(1));
                var n = "expected " + t;
                return new e((function(e, r, i) {
                    var s, o = t.exec(e);
                    return o ? (s = o[0],
                    r(e.slice(s.length), s)) : i(e, n)
                }
                ))
            }
            ,
            e.succeed = function(t) {
                return new e((function(e, n) {
                    return n(e, t)
                }
                ))
            }
            ,
            e.fail = function(t) {
                return new e((function(e, n, r) {
                    return r(e, t)
                }
                ))
            }
            ,
            e.letter = e.regex(/^[a-z]/i),
            e.letters = e.regex(/^[a-z]*/i),
            e.digit = e.regex(/^[0-9]/),
            e.digits = e.regex(/^[0-9]*/),
            e.whitespace = e.regex(/^\s+/),
            e.optWhitespace = e.regex(/^\s*/),
            e.any = new e((function(e, t, n) {
                return e ? t(e.slice(1), e.charAt(0)) : n(e, "expected any character")
            }
            )),
            e.all = new e((function(e, t, n) {
                return t("", e)
            }
            )),
            e.eof = new e((function(e, t, n) {
                return e ? n(e, "expected EOF") : t(e, e)
            }
            )),
            e
        }(),
        Y = function() {
            function e() {
                this.fn = t
            }
            return e.prototype.listen = function(e) {
                this.fn = e,
                clearTimeout(this.timeoutId),
                this.timeoutId = window.setTimeout(this.fn)
            }
            ,
            e.prototype.listenOnce = function(e) {
                var t = this;
                this.listen((function() {
                    var n, r = [];
                    for (n = 0; n < arguments.length; n++)
                        r[n] = arguments[n];
                    t.clearListener(),
                    e.apply(void 0, r)
                }
                ))
            }
            ,
            e.prototype.clearListener = function() {
                this.fn = t,
                clearTimeout(this.timeoutId)
            }
            ,
            e.prototype.trigger = function() {
                var e, t = [];
                for (e = 0; e < arguments.length; e++)
                    t[e] = arguments[e];
                this.fn.apply(this, t)
            }
            ,
            e
        }(),
        X = function() {
            function e(e) {
                switch (t(e)) {
                case "Right":
                case "Left":
                case "Down":
                case "Up":
                    return !0
                }
                return !1
            }
            function t(e) {
                var t, n;
                return void 0 === e.key ? (n = e.which || e.keyCode,
                r[n] || String.fromCharCode(n)) : function(e) {
                    return 1 === e.length && e >= "a" && e <= "z"
                }(e.key) ? e.key.toUpperCase() : null !== (t = i[e.key]) && void 0 !== t ? t : e.key
            }
            function n(e) {
                var n = t(e)
                  , r = [];
                return e.ctrlKey && r.push("Ctrl"),
                e.metaKey && r.push("Meta"),
                e.altKey && r.push("Alt"),
                e.shiftKey && r.push("Shift"),
                r.length ? ("Alt" !== n && "Control" !== n && "Meta" !== n && "Shift" !== n && r.push(n),
                r.join("-")) : n
            }
            var r = {
                8: "Backspace",
                9: "Tab",
                10: "Enter",
                13: "Enter",
                16: "Shift",
                17: "Control",
                18: "Alt",
                20: "CapsLock",
                27: "Esc",
                32: "Spacebar",
                33: "PageUp",
                34: "PageDown",
                35: "End",
                36: "Home",
                37: "Left",
                38: "Up",
                39: "Right",
                40: "Down",
                45: "Insert",
                46: "Del",
                144: "NumLock"
            }
              , i = {
                ArrowRight: "Right",
                ArrowLeft: "Left",
                ArrowDown: "Down",
                ArrowUp: "Up",
                Delete: "Del",
                Escape: "Esc",
                " ": "Spacebar"
            };
            return function(t, r) {
                function i() {
                    try {
                        t instanceof HTMLTextAreaElement && t.select()
                    } catch (e) {}
                }
                function s() {
                    r.options && r.options.overrideKeystroke ? r.options.overrideKeystroke(n(d), d) : r.keystroke(n(d), d)
                }
                function o(e) {
                    f.trigger(e),
                    e.target === t && (d = e,
                    m = null,
                    g && f.listenOnce((function(e) {
                        e && "focusout" === e.type || i()
                    }
                    )),
                    s())
                }
                function a(n) {
                    f.trigger(n),
                    n.target === t && (d && m && s(),
                    m = n,
                    e(n) ? f.listenOnce(h) : f.listen(c))
                }
                function l(n) {
                    f.trigger(n),
                    n.target === t && d && !m && (e(n) ? f.listenOnce(h) : f.listen(c))
                }
                function c() {
                    if (!("selectionStart"in t && t instanceof HTMLTextAreaElement && t.selectionStart !== t.selectionEnd) && t instanceof HTMLTextAreaElement) {
                        var e = t.value;
                        (!d || d.altKey || !d.ctrlKey || d.metaKey || !d.shiftKey || "U" !== d.key && "Unidentified" !== d.key && "Process" !== d.key) && (1 === e.length ? (t.value = "",
                        r.options && r.options.overrideTypedText ? r.options.overrideTypedText(e) : r.typedText(e)) : h())
                    }
                }
                function h() {
                    t instanceof HTMLTextAreaElement && t.value.length > 1 && i()
                }
                function p() {
                    d = null,
                    m = null,
                    f.clearListener(),
                    t instanceof HTMLTextAreaElement && (t.value = "")
                }
                function u(e) {
                    f.trigger(e)
                }
                var d = null
                  , m = null
                  , f = new Y
                  , g = !1;
                return r.options && r.options.disableCopyPaste ? r.addTextareaEventListeners({
                    keydown: o,
                    keypress: a,
                    keyup: l,
                    focusout: p,
                    copy: function(e) {
                        e.preventDefault()
                    },
                    cut: function(e) {
                        e.preventDefault()
                    },
                    paste: function(e) {
                        f.trigger(),
                        e.preventDefault()
                    },
                    input: u
                }) : r.addTextareaEventListeners({
                    keydown: o,
                    keypress: a,
                    keyup: l,
                    focusout: p,
                    cut: function() {
                        f.listenOnce((function() {
                            r.cut()
                        }
                        ))
                    },
                    copy: function() {
                        f.listenOnce((function() {
                            r.copy()
                        }
                        ))
                    },
                    paste: function(e) {
                        f.trigger(),
                        e.target === t && (document.activeElement !== t && t.focus(),
                        f.listen((function() {
                            if (t instanceof HTMLTextAreaElement) {
                                var e = t.value;
                                t.value = "",
                                e && r.paste(e)
                            }
                        }
                        )))
                    },
                    input: u
                }),
                {
                    select: function(e) {
                        f.trigger(),
                        f.clearListener(),
                        t instanceof HTMLTextAreaElement && (t.value = e),
                        e && i(),
                        g = !!e
                    }
                }
            }
        }(),
        J = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return ut(t, e),
            t.prototype.exportText = function() {
                return this.root.foldChildren("", (function(e, t) {
                    return e + t.text()
                }
                ))
            }
            ,
            t
        }(B),
        B.onNotify((function(e, t) {
            if ("edit" === t || "replace" === t || void 0 === t) {
                var n = e.controller;
                if (!n)
                    return;
                if (!n.options.enableDigitGrouping)
                    return;
                if (!1 !== n.blurred)
                    return;
                n.disableGroupingForSeconds(1)
            }
        }
        )),
        Q = function(e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.handleTextareaFocusEditable = function() {
                    var e = t.cursor;
                    t.updateMathspeak(),
                    t.blurred = !1,
                    clearTimeout(t.blurTimeout),
                    I(t.container).addClass("mq-focused"),
                    e.parent || e.insAtRightEnd(t.root),
                    e.selection ? (e.selection.domFrag().removeClass("mq-blur"),
                    t.selectionChanged()) : e.show(),
                    t.setOverflowClasses()
                }
                ,
                t.handleTextareaBlurEditable = function() {
                    t.textareaSelectionTimeout && (clearTimeout(t.textareaSelectionTimeout),
                    t.textareaSelectionTimeout = 0),
                    t.disableGroupingForSeconds(0),
                    t.blurred = !0,
                    t.blurTimeout = window.setTimeout((function() {
                        t.root.postOrder((function(e) {
                            e.intentionalBlur()
                        }
                        )),
                        t.cursor.clearSelection().endSelection(),
                        t.blur(),
                        t.updateMathspeak(),
                        t.scrollHoriz()
                    }
                    )),
                    window.addEventListener("blur", t.handleWindowBlur)
                }
                ,
                t.handleTextareaFocusStatic = function() {
                    t.blurred = !1
                }
                ,
                t.handleTextareaBlurStatic = function() {
                    t.cursor.selection && t.cursor.selection.clear(),
                    window.setTimeout((function() {
                        I(t.getTextareaSpanOrThrow()).detach(),
                        t.blurred = !0
                    }
                    ))
                }
                ,
                t.handleWindowBlur = function() {
                    clearTimeout(t.blurTimeout),
                    t.cursor.selection && t.cursor.selection.domFrag().addClass("mq-blur"),
                    t.blur(),
                    t.updateMathspeak()
                }
                ,
                t
            }
            return ut(t, e),
            t.prototype.disableGroupingForSeconds = function(e) {
                var t = this;
                clearTimeout(this.__disableGroupingTimeout),
                0 === e ? this.root.domFrag().removeClass("mq-suppress-grouping") : (this.root.domFrag().addClass("mq-suppress-grouping"),
                this.__disableGroupingTimeout = window.setTimeout((function() {
                    t.root.domFrag().removeClass("mq-suppress-grouping")
                }
                ), 1e3 * e))
            }
            ,
            t.prototype.blur = function() {
                this.cursor.hide().parent.blur(this.cursor),
                I(this.container).removeClass("mq-focused"),
                window.removeEventListener("blur", this.handleWindowBlur),
                this.options && this.options.resetCursorOnBlur && this.cursor.resetToEnd(this)
            }
            ,
            t.prototype.addEditableFocusBlurListeners = function() {
                var e = this.cursor;
                this.addTextareaEventListeners({
                    focus: this.handleTextareaFocusEditable,
                    blur: this.handleTextareaBlurEditable
                }),
                this.blurred = !0,
                e.hide().parent.blur(e)
            }
            ,
            t.prototype.addStaticFocusBlurListeners = function() {
                this.addTextareaEventListeners({
                    focus: this.handleTextareaFocusStatic,
                    blur: this.handleTextareaBlurStatic
                })
            }
            ,
            t
        }(J),
        ee = !1,
        te = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return ut(t, e),
            t.prototype.keystroke = function(e, n, r) {
                var i = r.cursor;
                switch (e) {
                case "Ctrl-Shift-Backspace":
                case "Ctrl-Backspace":
                    r.ctrlDeleteDir(mt);
                    break;
                case "Shift-Backspace":
                case "Backspace":
                    r.backspace();
                    break;
                case "Esc":
                case "Tab":
                    return void r.escapeDir(ft, e, n);
                case "Shift-Tab":
                case "Shift-Esc":
                    return void r.escapeDir(mt, e, n);
                case "End":
                    r.notify("move").cursor.insAtRightEnd(i.parent),
                    r.aria.queueDirEndOf(ft, i.parent, !0);
                    break;
                case "Ctrl-End":
                    r.notify("move").cursor.insAtRightEnd(r.root),
                    r.aria.queueDirEndOf(ft, [r.ariaLabel, r.root, r.ariaPostLabel]);
                    break;
                case "Shift-End":
                    r.selectToBlockEndInDir(ft);
                    break;
                case "Ctrl-Shift-End":
                    r.selectToRootEndInDir(ft);
                    break;
                case "Home":
                    r.notify("move").cursor.insAtLeftEnd(i.parent),
                    r.aria.queueDirEndOf(mt, i.parent, !0);
                    break;
                case "Ctrl-Home":
                    r.notify("move").cursor.insAtLeftEnd(r.root),
                    r.aria.queueDirEndOf(mt, [r.ariaLabel, r.root, r.ariaPostLabel]);
                    break;
                case "Shift-Home":
                    r.selectToBlockEndInDir(mt);
                    break;
                case "Ctrl-Shift-Home":
                    r.selectToRootEndInDir(mt);
                    break;
                case "Left":
                    r.moveLeft();
                    break;
                case "Shift-Left":
                    r.selectLeft();
                    break;
                case "Ctrl-Left":
                case "Ctrl-Right":
                case "Ctrl-Up":
                case "Ctrl-Down":
                    break;
                case "Right":
                    r.moveRight();
                    break;
                case "Shift-Right":
                    r.selectRight();
                    break;
                case "Up":
                    r.moveUp();
                    break;
                case "Down":
                    r.moveDown();
                    break;
                case "Shift-Up":
                    r.withIncrementalSelection((function(e) {
                        if (i[mt])
                            for (; i[mt]; )
                                e(mt);
                        else
                            e(mt)
                    }
                    ));
                    break;
                case "Shift-Down":
                    r.withIncrementalSelection((function(e) {
                        if (i[ft])
                            for (; i[ft]; )
                                e(ft);
                        else
                            e(ft)
                    }
                    ));
                    break;
                case "Ctrl-Shift-Del":
                case "Ctrl-Del":
                    r.ctrlDeleteDir(ft);
                    break;
                case "Shift-Del":
                case "Del":
                    r.deleteForward();
                    break;
                case "Meta-A":
                case "Ctrl-A":
                    r.selectAll();
                    break;
                case "Ctrl-Alt-Up":
                    i.parent.parent && i.parent.parent instanceof t ? r.aria.queue(i.parent.parent) : r.aria.queueTranslatableString("nothing above");
                    break;
                case "Ctrl-Alt-Down":
                    i.parent && i.parent instanceof t ? r.aria.queue(i.parent) : r.aria.queueTranslatableString("block is empty");
                    break;
                case "Ctrl-Alt-Left":
                    i.parent.parent && i.parent.parent.getEnd(mt) ? r.aria.queue(i.parent.parent.getEnd(mt)) : r.aria.queueTranslatableString("nothing to the left");
                    break;
                case "Ctrl-Alt-Right":
                    i.parent.parent && i.parent.parent.getEnd(ft) ? r.aria.queue(i.parent.parent.getEnd(ft)) : r.aria.queueTranslatableString("nothing to the right");
                    break;
                case "Ctrl-Alt-Shift-Down":
                    i.selection ? r.aria.queueSelected(i.selection.join("mathspeak", " ").trim()) : r.aria.queueTranslatableString("nothing selected");
                    break;
                case "Ctrl-Alt-=":
                case "Ctrl-Alt-Shift-Right":
                    r.ariaPostLabel.length ? r.aria.queue(r.ariaPostLabel) : r.aria.queueTranslatableString("no answer");
                    break;
                default:
                    return
                }
                r.aria.alert(),
                null == n || n.preventDefault(),
                r.scrollHoriz()
            }
            ,
            t.prototype.moveOutOf = function(e, t, n) {
                r("overridden or never called on this node", !1)
            }
            ,
            t.prototype.moveTowards = function(e, t, n) {
                r("overridden or never called on this node", !1)
            }
            ,
            t.prototype.deleteOutOf = function(e, t) {
                r("overridden or never called on this node", !1)
            }
            ,
            t.prototype.deleteTowards = function(e, t) {
                r("overridden or never called on this node", !1)
            }
            ,
            t.prototype.unselectInto = function(e, t) {
                r("overridden or never called on this node", !1)
            }
            ,
            t.prototype.selectOutOf = function(e, t) {
                r("overridden or never called on this node", !1)
            }
            ,
            t.prototype.selectTowards = function(e, t) {
                r("overridden or never called on this node", !1)
            }
            ,
            t
        }(N),
        B.onNotify((function(e, t) {
            "move" !== t && "upDown" !== t || e.show().clearSelection()
        }
        )),
        U.leftRightIntoCmdGoes = function(e) {
            if (e && "up" !== e && "down" !== e)
                throw '"up" or "down" required for leftRightIntoCmdGoes option, got "' + e + '"';
            return e
        }
        ,
        B.onNotify((function(e, t) {
            "upDown" !== t && (e.upDownCache = {})
        }
        )),
        B.onNotify((function(e, t) {
            "edit" === t && e.show().deleteSelection()
        }
        )),
        B.onNotify((function(e, t) {
            "select" !== t && e.endSelection()
        }
        )),
        ne = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return ut(t, e),
            t.prototype.keystroke = function(e, t) {
                this.cursor.parent.keystroke(e, t, this.getControllerSelf())
            }
            ,
            t.prototype.escapeDir = function(e, t, n) {
                i(e);
                var r = this.cursor;
                if (r.parent !== this.root && (null == n || n.preventDefault()),
                r.parent !== this.root)
                    return r.clearSelection(),
                    r.parent.moveOutOf(e, r),
                    r.controller.aria.alert(),
                    this.notify("move")
            }
            ,
            t.prototype.moveDir = function(e) {
                var t, n, r;
                return i(e),
                n = (t = this.cursor).options.leftRightIntoCmdGoes,
                r = t[e],
                t.selection ? t.insDirOf(e, t.selection.getEnd(e)) : r ? r.moveTowards(e, t, n) : t.parent.moveOutOf(e, t, n),
                this.notify("move")
            }
            ,
            t.prototype.moveLeft = function() {
                return this.moveDir(mt)
            }
            ,
            t.prototype.moveRight = function() {
                return this.moveDir(ft)
            }
            ,
            t.prototype.moveUp = function() {
                return this.moveUpDown("up")
            }
            ,
            t.prototype.moveDown = function() {
                return this.moveUpDown("down")
            }
            ,
            t.prototype.moveUpDown = function(e) {
                var t, n, r, i, s, o, a = this.notify("upDown").cursor;
                return "up" === e ? (t = "upInto",
                n = "upOutOf") : (t = "downInto",
                n = "downOutOf"),
                r = a[mt],
                s = (i = a[ft]) && i[t],
                o = r && r[t],
                s ? a.insAtLeftEnd(s) : o ? a.insAtRightEnd(o) : a.parent.bubble((function(e) {
                    var t = e[n];
                    if (t && ("function" == typeof t && (t = t.call(e, a)),
                    t instanceof te && a.jumpUpDown(e, t),
                    !0 !== t))
                        return !1
                }
                )),
                this
            }
            ,
            t.prototype.deleteDir = function(e) {
                var t, n, r, s, o, a, l, c, h, p;
                return i(e),
                n = (t = this.cursor)[e],
                r = t.parent.parent,
                s = t.controller,
                n && n instanceof te ? n.sides ? s.aria.queue(n.parent.chToCmd(n.sides[-e].ch).mathspeak({
                    createdLeftOf: t
                })) : n.blocks || "\\text" === n.parent.ctrlSeq || s.aria.queue(n) : r && r instanceof te && (r.sides ? s.aria.queue(r.parent.chToCmd(r.sides[e].ch).mathspeak({
                    createdLeftOf: t
                })) : r.blocks && r.mathspeakTemplate ? r.upInto && r.downInto ? s.aria.queue(r.mathspeakTemplate[1]) : (o = r.mathspeakTemplate,
                a = e === mt ? o[0] : o[o.length - 1],
                s.aria.queue(a)) : s.aria.queue(r)),
                l = t.selection,
                this.notify("edit"),
                l || ((c = t[e]) ? c.deleteTowards(e, t) : t.parent.deleteOutOf(e, t)),
                h = t[mt],
                p = t[ft],
                h.siblingDeleted && h.siblingDeleted(t.options, ft),
                p.siblingDeleted && p.siblingDeleted(t.options, mt),
                t.parent.bubble((function(e) {
                    e.reflow()
                }
                )),
                this
            }
            ,
            t.prototype.ctrlDeleteDir = function(e) {
                var t, n, r, s;
                return i(e),
                !(t = this.cursor)[e] || t.selection ? this.deleteDir(e) : (this.notify("edit"),
                n = e === mt ? new P(t.parent.getEnd(mt),t[mt]) : new P(t[ft],t.parent.getEnd(ft)),
                t.controller.aria.queue(n),
                n.remove(),
                t.insAtDirEnd(e, t.parent),
                r = t[mt],
                s = t[ft],
                r && r.siblingDeleted(t.options, ft),
                s && s.siblingDeleted(t.options, mt),
                t.parent.bubble((function(e) {
                    e.reflow()
                }
                )),
                this)
            }
            ,
            t.prototype.backspace = function() {
                return this.deleteDir(mt)
            }
            ,
            t.prototype.deleteForward = function() {
                return this.deleteDir(ft)
            }
            ,
            t.prototype.startIncrementalSelection = function() {
                r("Multiple selections can't be simultaneously open", !ee),
                ee = !0,
                this.notify("select");
                var e = this.cursor;
                e.anticursor || e.startSelection()
            }
            ,
            t.prototype.selectDirIncremental = function(e) {
                var t, n, s;
                r("A selection is open", ee),
                ee = !0,
                n = (t = this.cursor).selection,
                i(e),
                (s = t[e]) ? n && n.getEnd(e) === s && t.anticursor[-e] !== s ? s.unselectInto(e, t) : s.selectTowards(e, t) : t.parent.selectOutOf(e, t)
            }
            ,
            t.prototype.finishIncrementalSelection = function() {
                var e, t;
                r("A selection is open", ee),
                (e = this.cursor).clearSelection(),
                e.select() || e.show(),
                (t = e.selection) && e.controller.aria.clear().queueSelected(t.join("mathspeak", " ").trim()),
                ee = !1
            }
            ,
            t.prototype.withIncrementalSelection = function(e) {
                var t = this;
                try {
                    this.startIncrementalSelection();
                    try {
                        e((function(e) {
                            return t.selectDirIncremental(e)
                        }
                        ))
                    } finally {
                        this.finishIncrementalSelection()
                    }
                } finally {
                    ee = !1
                }
            }
            ,
            t.prototype.selectDir = function(e) {
                this.withIncrementalSelection((function(t) {
                    return t(e)
                }
                ))
            }
            ,
            t.prototype.selectLeft = function() {
                return this.selectDir(mt)
            }
            ,
            t.prototype.selectRight = function() {
                return this.selectDir(ft)
            }
            ,
            t.prototype.selectAll = function() {
                this.notify("move");
                var e = this.cursor;
                e.insAtRightEnd(this.root),
                this.withIncrementalSelection((function(t) {
                    for (; e[mt]; )
                        t(mt)
                }
                ))
            }
            ,
            t.prototype.selectToBlockEndInDir = function(e) {
                var t = this.cursor;
                this.withIncrementalSelection((function(n) {
                    for (; t[e]; )
                        n(e)
                }
                ))
            }
            ,
            t.prototype.selectToRootEndInDir = function(e) {
                var t = this
                  , n = this.cursor;
                this.withIncrementalSelection((function(r) {
                    for (; n[e] || n.parent !== t.root; )
                        r(e)
                }
                ))
            }
            ,
            t
        }(Q),
        function(e) {
            function t(t) {
                return e.call(this) || this
            }
            return ut(t, e),
            t
        }(te),
        re = function() {
            function e(e) {
                var t, n = e[0] || new ge;
                for (t = 1; t < e.length; t += 1)
                    e[t].children().adopt(n, n.getEnd(ft), 0);
                return n
            }
            var t = Z.string
              , n = Z.regex
              , r = Z.letter
              , i = Z.digit
              , s = Z.any
              , o = Z.optWhitespace
              , a = Z.succeed
              , l = Z.fail
              , c = r.map((function(e) {
                return new we(e)
            }
            ))
              , h = i.map((function(e) {
                return new be(e)
            }
            ))
              , p = n(/^[^${}\\_^]/).map((function(e) {
                return new me(e)
            }
            ))
              , u = n(/^[^\\a-eg-zA-Z]/).or(t("\\").then(n(/^[a-z]+/i).or(n(/^\s+/).result(" ")).or(s))).then((function(e) {
                var t = O[e];
                return t ? t.constructor ? new t(e).parser() : t(e).parser() : l("unknown command: \\" + e)
            }
            ))
              , d = u.or(c).or(h).or(p)
              , m = t("{").then((function() {
                return g
            }
            )).skip(t("}"))
              , f = o.then(m.or(d.map((function(e) {
                var t = new ge;
                return e.adopt(t, 0, 0),
                t
            }
            ))))
              , g = f.many().map(e).skip(o)
              , v = t("[").then(f.then((function(e) {
                return "]" !== e.join("latex") ? a(e) : l("")
            }
            )).many().map(e).skip(o)).skip(t("]"))
              , y = g;
            return y.block = f,
            y.optBlock = v,
            y
        }(),
        U.maxDepth = function(e) {
            return "number" == typeof e ? e : void 0
        }
        ,
        ie = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return ut(t, e),
            t.prototype.cleanLatex = function(e) {
                return e.replace(/(\\[a-z]+) (?![a-z])/gi, "$1")
            }
            ,
            t.prototype.exportLatex = function() {
                return this.cleanLatex(this.root.latex())
            }
            ,
            t.prototype.writeLatex = function(e) {
                var t = this.notify("edit").cursor;
                return t.parent.writeLatex(t, e),
                this
            }
            ,
            t.prototype.exportLatexSelection = function() {
                var e, t, n, r, i, s, o, a, l, c, h = {
                    latex: "",
                    startIndex: -1,
                    endIndex: -1
                }, p = this.cursor.selection;
                for (p ? (h.startSelectionBefore = p.getEnd(mt),
                h.endSelectionAfter = p.getEnd(ft)) : ((n = this.cursor[mt]) ? h.startSelectionAfter = n : h.startSelectionBefore = this.cursor.parent,
                (r = this.cursor[ft]) ? h.endSelectionBefore = r : h.endSelectionAfter = this.cursor.parent),
                null === (t = (e = this.root).latexRecursive) || void 0 === t || t.call(e, h),
                i = h.latex,
                s = this.cleanLatex(i),
                o = h.startIndex,
                a = h.endIndex,
                l = 0,
                c = 0; c < h.endIndex; c++)
                    i[c] !== s[l] ? (c < h.startIndex && (o -= 1),
                    a -= 1) : l += 1;
                return {
                    latex: s,
                    startIndex: o,
                    endIndex: a
                }
            }
            ,
            t.prototype.classifyLatexForEfficientUpdate = function(e) {
                if ("string" == typeof e) {
                    var t = e.match(/-?[0-9.]+$/g);
                    return t && 1 === t.length ? {
                        latex: e,
                        prefix: e.substr(0, e.length - t[0].length),
                        digits: t[0]
                    } : void 0
                }
            }
            ,
            t.prototype.updateLatexMathEfficiently = function(e, t) {
                var n, r, i, s, o, a, l, c, h, p, u, d, m, f, g, v, y, b, x, w, k, S, E, M, C = this.root, T = this.classifyLatexForEfficientUpdate(e);
                if (!T)
                    return !1;
                if (!(o = this.classifyLatexForEfficientUpdate(t)) || o.prefix !== T.prefix)
                    return !1;
                for (a = o.digits,
                l = T.digits,
                c = !1,
                h = !1,
                "-" === a[0] && (c = !0,
                a = a.substr(1)),
                "-" === l[0] && (h = !0,
                l = l.substr(1)),
                p = this.root.getEnd(ft),
                u = [],
                d = a.length - 1; d >= 0; d--) {
                    if (!p || p.ctrlSeq !== a[d])
                        return !1;
                    if (p.parent !== C)
                        return !1;
                    u.unshift(p),
                    p = p[mt]
                }
                if (c && !h) {
                    if (!(m = p))
                        return !1;
                    if ("-" !== m.ctrlSeq)
                        return !1;
                    if (m[ft] !== u[0])
                        return !1;
                    if (m.parent !== C)
                        return !1;
                    if ((f = m[mt]) && f.parent !== C)
                        return !1;
                    u[0][mt] = m[mt],
                    C.getEnd(mt) === m && C.setEnds(((n = {})[mt] = u[0],
                    n[ft] = C.getEnd(ft),
                    n)),
                    f && (f[ft] = u[0]),
                    m.domFrag().remove()
                }
                for (!c && h && (g = new _e("-"),
                (v = document.createElement("span")).textContent = "-",
                g.setDOM(v),
                (y = u[0][mt]) && (y[ft] = g),
                C.getEnd(mt) === u[0] && C.setEnds(((r = {})[mt] = g,
                r[ft] = C.getEnd(ft),
                r)),
                g.parent = C,
                g[mt] = u[0][mt],
                g[ft] = u[0],
                u[0][mt] = g,
                g.contactWeld(this.cursor),
                g.domFrag().insertBefore(u[0].domFrag())),
                b = Math.min(a.length, l.length),
                d = 0; d < b; d++)
                    x = l[d],
                    (p = u[d]).ctrlSeq !== x && (p.ctrlSeq = x,
                    p.domFrag().oneElement().textContent = x,
                    p.mathspeakName = x);
                if (a.length > l.length)
                    for (p = u[l.length - 1],
                    C.setEnds(((i = {})[mt] = C.getEnd(mt),
                    i[ft] = p,
                    i)),
                    p[ft] = 0,
                    d = a.length - 1; d >= b; d--)
                        u[d].domFrag().remove();
                if (l.length > a.length) {
                    for (w = document.createDocumentFragment(),
                    d = b; d < l.length; d++)
                        (k = document.createElement("span")).className = "mq-digit",
                        k.textContent = l[d],
                        (S = new be(l[d])).parent = C,
                        S.setDOM(k),
                        w.appendChild(k),
                        S[mt] = C.getEnd(ft),
                        S[ft] = 0,
                        S[mt][ft] = S,
                        C.setEnds(((s = {})[mt] = C.getEnd(mt),
                        s[ft] = S,
                        s));
                    C.domFrag().oneElement().appendChild(w)
                }
                return (E = this.exportLatex()) !== e ? (console.warn("tried updating latex efficiently but did not work. Attempted: " + e + " but wrote: " + E),
                !1) : ((M = C.getEnd(ft)) && M.fixDigitGrouping(this.cursor.options),
                !0)
            }
            ,
            t.prototype.renderLatexMathFromScratch = function(e) {
                var t, n, r = this.root, i = this.cursor, s = Z.all, o = Z.eof, a = re.skip(o).or(s.result(!1)).parse(e);
                r.setEnds(((t = {})[mt] = 0,
                t[ft] = 0,
                t)),
                a && a.children().adopt(r, 0, 0),
                a ? ((n = r.domFrag()).children().remove(),
                n.oneElement().appendChild(a.html()),
                r.finalizeInsert(i.options, i)) : r.domFrag().empty()
            }
            ,
            t.prototype.renderLatexMath = function(e) {
                var t, n = this.cursor, r = this.root;
                this.notify("replace"),
                n.clearSelection(),
                t = this.exportLatex(),
                r.getEnd(mt) && r.getEnd(ft) && t === e || (this.updateLatexMathEfficiently(e, t) || this.renderLatexMathFromScratch(e),
                this.updateMathspeak()),
                n.insAtRightEnd(r)
            }
            ,
            t.prototype.renderLatexText = function(e) {
                var t, n, r, i, s, o, a, l, c, h = this.root, p = this.cursor;
                if (h.domFrag().children().slice(1).remove(),
                h.setEnds(((t = {})[mt] = 0,
                t[ft] = 0,
                t)),
                delete p.selection,
                p.show().insAtRightEnd(h),
                n = Z.regex,
                r = Z.string,
                i = Z.eof,
                s = Z.all,
                o = r("$").then(re).skip(r("$").or(i)).map((function(e) {
                    var t, n = new ct(p);
                    return n.createBlocks(),
                    t = n.getEnd(mt),
                    e.children().adopt(t, 0, 0),
                    n
                }
                )),
                a = r("\\$").result("$").or(n(/^[^$]/)).map((function(e) {
                    return new me(e)
                }
                )),
                l = o.or(a).many().skip(i).or(s.result(!1)).parse(e)) {
                    for (c = 0; c < l.length; c += 1)
                        l[c].adopt(h, h.getEnd(ft), 0);
                    I(h.html()).appendTo(h.domFrag().oneElement()),
                    h.finalizeInsert(p.options, p)
                }
            }
            ,
            t
        }(ne),
        se = function(e) {
            return !1
        }
        ,
        G.prototype.ignoreNextMousedown = se,
        B.onNotify((function(e, t) {
            "edit" !== t && "replace" !== t || oe && oe.cursor === e && oe.cb()
        }
        )),
        ae = function(e) {
            function n() {
                var n = null !== e && e.apply(this, arguments) || this;
                return n.handleMouseDown = function(e) {
                    function r(e) {
                        c = e.target
                    }
                    function i(e) {
                        f.anticursor || f.startSelection(),
                        m.seek(c, e.clientX, e.clientY).cursor.select(),
                        f.selection && f.controller.aria.clear().queue(f.selection.join("mathspeak") + " selected").alert(),
                        c = null
                    }
                    function s() {
                        null == p || p.removeEventListener("mousemove", r),
                        null == d || d.removeEventListener("mousemove", i),
                        null == d || d.removeEventListener("mouseup", l),
                        oe = void 0
                    }
                    function a() {
                        m.editable ? (f.show(),
                        f.controller.aria.queue(f.parent).alert()) : I(v).detach()
                    }
                    function l() {
                        f.blink = g,
                        f.selection || a(),
                        s()
                    }
                    var c, h, p = o(e.target, ".mq-root-block"), u = p && N.getNodeOfElement(p) || N.getNodeOfElement(n.root.domFrag().oneElement()), d = u.domFrag().firstNode().ownerDocument, m = u.controller, f = m.cursor, g = f.blink, v = m.getTextareaSpanOrThrow(), y = m.getTextareaOrThrow();
                    if (e.preventDefault(),
                    e.target.unselectable = !0,
                    !f.options.ignoreNextMousedown(e) && !o(e.target, ".mq-ignore-mousedown")) {
                        if (3 === e.detail)
                            return void m.selectAll();
                        c = null,
                        oe = {
                            cursor: f,
                            cb: function() {
                                h = !0,
                                f.blink = g,
                                f.clearSelection(),
                                a(),
                                s()
                            }
                        },
                        m.blurred && (p && !m.editable && I(p).prepend(I(v)),
                        y.focus(),
                        h) || (f.blink = t,
                        m.seek(e.target, e.clientX, e.clientY).cursor.startSelection(),
                        null == p || p.addEventListener("mousemove", r),
                        null == d || d.addEventListener("mousemove", i),
                        null == d || d.addEventListener("mouseup", l))
                    }
                }
                ,
                n
            }
            return ut(n, e),
            n.prototype.addMouseEventListener = function() {
                this.container.addEventListener("mousedown", this.handleMouseDown)
            }
            ,
            n.prototype.removeMouseEventListener = function() {
                this.container.removeEventListener("mousedown", this.handleMouseDown)
            }
            ,
            n.prototype.seek = function(e, t, n) {
                for (var r, i = this.notify("select").cursor; e && !(r = N.getNodeOfElement(e)); )
                    e = e.parentElement;
                return r || (r = this.root),
                i.clearSelection().show(),
                r.seek(t, i),
                this.scrollHoriz(),
                this
            }
            ,
            n
        }(ie),
        le = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return ut(t, e),
            t.prototype.setOverflowClasses = function() {
                var e, t, n = this.root.domFrag().oneElement(), r = !1, i = !1;
                this.blurred || (e = a(n).width,
                r = n.scrollWidth > e + (t = n.scrollLeft),
                i = t > 0),
                n.classList.contains("mq-editing-overflow-right") !== r && n.classList.toggle("mq-editing-overflow-right"),
                n.classList.contains("mq-editing-overflow-left") !== i && n.classList.toggle("mq-editing-overflow-left")
            }
            ,
            t.prototype.scrollHoriz = function() {
                var e, t, n, r, i, s, o, l, c, h, p = this, u = this.cursor, d = u.selection, m = a(this.root.domFrag().oneElement());
                if (u.domFrag().isEmpty() && !d)
                    return this.cancelScrollHoriz && (this.cancelScrollHoriz(),
                    this.cancelScrollHoriz = void 0),
                    e = this.root.domFrag().oneElement(),
                    t = e.scrollLeft,
                    void T(this.getScrollAnimationDuration(), (function(n, r, i) {
                        n >= 1 ? (p.cancelScrollHoriz = void 0,
                        e.scrollLeft = 0,
                        p.setOverflowClasses()) : (p.cancelScrollHoriz = i,
                        r(),
                        e.scrollLeft = Math.round((1 - n) * t))
                    }
                    ));
                if (d)
                    if (s = (i = a(d.domFrag().oneElement())).left - (m.left + 20),
                    o = i.right - (m.right - 20),
                    d.getEnd(mt) === u[ft])
                        if (s < 0)
                            r = s;
                        else {
                            if (!(o > 0))
                                return;
                            r = i.left - o < m.left + 20 ? s : o
                        }
                    else if (o > 0)
                        r = o;
                    else {
                        if (!(s < 0))
                            return;
                        r = i.right - s > m.right - 20 ? o : s
                    }
                else if ((n = a(u.domFrag().oneElement()).left) > m.right - 20)
                    r = n - (m.right - 20);
                else {
                    if (!(n < m.left + 20))
                        return;
                    r = n - (m.left + 20)
                }
                l = this.root.domFrag().oneElement(),
                r < 0 && 0 === l.scrollLeft || r > 0 && l.scrollWidth <= l.scrollLeft + m.width || (this.cancelScrollHoriz && (this.cancelScrollHoriz(),
                this.cancelScrollHoriz = void 0),
                c = this.root.domFrag().oneElement(),
                h = c.scrollLeft,
                T(this.getScrollAnimationDuration(), (function(e, t, n) {
                    e >= 1 ? (p.cancelScrollHoriz = void 0,
                    c.scrollLeft = Math.round(h + r),
                    p.setOverflowClasses()) : (p.cancelScrollHoriz = n,
                    t(),
                    c.scrollLeft = Math.round(h + e * r))
                }
                )))
            }
            ,
            t.prototype.getScrollAnimationDuration = function() {
                var e;
                return null !== (e = this.options.scrollAnimationDuration) && void 0 !== e ? e : 100
            }
            ,
            t
        }(ae),
        G.prototype.substituteTextarea = function() {
            return yt("textarea", {
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                spellcheck: !1,
                "x-palm-disable-ste-all": !0
            })
        }
        ,
        G.prototype.substituteKeyboardEvents = g,
        ce = function(e) {
            function n() {
                var n = null !== e && e.apply(this, arguments) || this;
                return n.selectFn = t,
                n
            }
            return ut(n, e),
            n.prototype.createTextarea = function() {
                var e, t;
                if (this.textareaSpan = yt("span", {
                    class: "mq-textarea"
                }),
                !(e = this.options.substituteTextarea()).nodeType)
                    throw "substituteTextarea() must return a DOM element, got " + e;
                this.textarea = I(e).appendTo(this.textareaSpan).oneElement(),
                (t = this).cursor.selectionChanged = function() {
                    t.selectionChanged()
                }
            }
            ,
            n.prototype.selectionChanged = function() {
                var e = this;
                e.textareaSelectionTimeout || (e.textareaSelectionTimeout = window.setTimeout((function() {
                    e.setTextareaSelection()
                }
                )))
            }
            ,
            n.prototype.setTextareaSelection = function() {
                this.textareaSelectionTimeout = 0;
                var e = "";
                this.cursor.selection && (e = this.cleanLatex(this.cursor.selection.join("latex")),
                this.options.statelessClipboard && (e = "$" + e + "$")),
                this.selectFn(e)
            }
            ,
            n.prototype.staticMathTextareaEvents = function() {
                var e = this;
                this.removeTextareaEventListener("cut"),
                this.removeTextareaEventListener("paste"),
                e.options.disableCopyPaste ? this.removeTextareaEventListener("copy") : this.addTextareaEventListeners({
                    copy: function() {
                        e.setTextareaSelection()
                    }
                }),
                this.addStaticFocusBlurListeners(),
                e.selectFn = function(t) {
                    var n = e.getTextareaOrThrow();
                    n instanceof HTMLTextAreaElement && (n.value = t,
                    t && n.select())
                }
            }
            ,
            n.prototype.editablesTextareaEvents = function() {
                var e, t, n, r = this.getTextareaOrThrow(), i = this.getTextareaSpanOrThrow();
                this.options.version < 3 ? (e = this.options.assertJquery(),
                t = this.options.substituteKeyboardEvents(e(r), this),
                this.selectFn = function(e) {
                    t.select(e)
                }
                ) : (n = X(r, this).select,
                this.selectFn = n),
                I(this.container).prepend(I(i)),
                this.addEditableFocusBlurListeners(),
                this.updateMathspeak()
            }
            ,
            n.prototype.unbindEditablesEvents = function() {
                var e = this
                  , t = e.getTextareaOrThrow()
                  , n = e.getTextareaSpanOrThrow();
                this.selectFn = function(e) {
                    t instanceof HTMLTextAreaElement && (t.value = e,
                    e && t.select())
                }
                ,
                I(n).remove(),
                this.removeTextareaEventListener("focus"),
                this.removeTextareaEventListener("blur"),
                e.blurred = !0,
                this.removeTextareaEventListener("cut"),
                this.removeTextareaEventListener("paste")
            }
            ,
            n.prototype.typedText = function(e) {
                if ("\n" === e)
                    return this.handle("enter");
                var t = this.notify(void 0).cursor;
                t.parent.write(t, e),
                this.scrollHoriz()
            }
            ,
            n.prototype.cut = function() {
                var e = this
                  , t = e.cursor;
                t.selection && window.setTimeout((function() {
                    e.notify("edit"),
                    t.parent.bubble((function(e) {
                        e.reflow()
                    }
                    )),
                    e.options && e.options.onCut && e.options.onCut()
                }
                ))
            }
            ,
            n.prototype.copy = function() {
                this.setTextareaSelection()
            }
            ,
            n.prototype.paste = function(e) {
                this.options.statelessClipboard && (e = "$" === e.slice(0, 1) && "$" === e.slice(-1) ? e.slice(1, -1) : "\\text{" + e + "}"),
                this.writeLatex(e).cursor.show(),
                this.scrollHoriz(),
                this.options && this.options.onPaste && this.options.onPaste()
            }
            ,
            n.prototype.setupStaticField = function() {
                this.mathspeakSpan = yt("span", {
                    class: "mq-mathspeak"
                }),
                I(this.container).prepend(I(this.mathspeakSpan)),
                this.updateMathspeak(),
                this.blurred = !0,
                this.cursor.hide().parent.blur(this.cursor)
            }
            ,
            n.prototype.updateMathspeak = function() {
                var e, t, n, r = this, i = r.getAriaLabel(), s = /[A-Za-z0-9]$/.test(i) ? i + ":" : i, o = r.root.mathspeak().trim();
                this.aria.clear(),
                t = (null === (e = r.ariaStringsOverrideMap) || void 0 === e ? void 0 : e.labelValue) ? r.ariaStringsOverrideMap.labelValue(i, o) : s + " " + o,
                n = r.getTextareaOrThrow(),
                r.mathspeakSpan ? (n.setAttribute("aria-label", ""),
                r.mathspeakSpan.textContent = t.trim()) : n.setAttribute("aria-label", [t, r.ariaPostLabel].join(" ").trim())
            }
            ,
            n
        }(le),
        he = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return ut(t, e),
            t.prototype.finalizeInsert = function(e, t) {
                var n, r, i = this;
                i.postOrder((function(t) {
                    t.finalizeTree(e)
                }
                )),
                i.postOrder((function(e) {
                    e.contactWeld(t)
                }
                )),
                i.postOrder((function(e) {
                    e.blur(t)
                }
                )),
                i.postOrder((function(e) {
                    e.reflow()
                }
                )),
                n = i[ft],
                r = i[mt],
                n && n.siblingCreated(e, mt),
                r && r.siblingCreated(e, ft),
                i.bubble((function(e) {
                    e.reflow()
                }
                ))
            }
            ,
            t.prototype.prepareInsertionAt = function(e) {
                var t, n = e.options.maxDepth;
                if (void 0 !== n) {
                    if ((t = e.depth()) > n)
                        return !1;
                    this.removeNodesDeeperThan(n - t)
                }
                return !0
            }
            ,
            t.prototype.removeNodesDeeperThan = function(e) {
                for (var t, n, r = 0, i = [[this, r]]; t = i.shift(); )
                    (n = t)[0].children().each((function(t) {
                        var s = t instanceof ge ? 1 : 0;
                        (r = n[1] + s) <= e ? i.push([t, r]) : (s ? t.children() : t).remove()
                    }
                    ))
            }
            ,
            t
        }(te),
        pe = function(e, t) {
            this.childCount = e,
            this.render = t
        }
        ,
        ue = function(e) {
            function t(t, n, r) {
                var i = e.call(this) || this;
                return i.textTemplate = [""],
                i.mathspeakTemplate = [""],
                i.setCtrlSeqHtmlAndText(t, n, r),
                i
            }
            return ut(t, e),
            t.prototype.setEnds = function(e) {
                r("MathCommand ends are never empty", e[mt] && e[ft]),
                this.ends = e
            }
            ,
            t.prototype.getEnd = function(e) {
                return this.ends[e]
            }
            ,
            t.prototype.setCtrlSeqHtmlAndText = function(e, t, n) {
                this.ctrlSeq || (this.ctrlSeq = e),
                t && (this.domView = t),
                n && (this.textTemplate = n)
            }
            ,
            t.prototype.replaces = function(e) {
                e.disown(),
                this.replacedFragment = e
            }
            ,
            t.prototype.isEmpty = function() {
                return this.foldChildren(!0, (function(e, t) {
                    return e && t.isEmpty()
                }
                ))
            }
            ,
            t.prototype.parser = function() {
                var e = this;
                return re.block.times(this.numBlocks()).map((function(t) {
                    e.blocks = t;
                    for (var n = 0; n < t.length; n += 1)
                        t[n].adopt(e, e.getEnd(ft), 0);
                    return e
                }
                ))
            }
            ,
            t.prototype.createLeftOf = function(t) {
                var n, r = this, i = r.replacedFragment;
                r.createBlocks(),
                e.prototype.createLeftOf.call(this, t),
                i && (n = r.getEnd(mt),
                i.adopt(n, 0, 0),
                i.domFrag().appendTo(n.domFrag().oneElement()),
                r.placeCursor(t),
                r.prepareInsertionAt(t)),
                r.finalizeInsert(t.options, t),
                r.placeCursor(t)
            }
            ,
            t.prototype.createBlocks = function() {
                var e, t = this, n = t.numBlocks(), r = t.blocks = Array(n);
                for (e = 0; e < n; e += 1)
                    (r[e] = new ge).adopt(t, t.getEnd(ft), 0)
            }
            ,
            t.prototype.placeCursor = function(e) {
                e.insAtRightEnd(this.foldChildren(this.getEnd(mt), (function(e, t) {
                    return e.isEmpty() ? e : t
                }
                )))
            }
            ,
            t.prototype.moveTowards = function(e, t, n) {
                var r, i;
                "up" === n ? r = this.upInto : "down" === n && (r = this.downInto),
                i = r || this.getEnd(-e),
                t.insAtDirEnd(-e, i),
                t.controller.aria.queueDirEndOf(-e, t.parent, !0)
            }
            ,
            t.prototype.deleteTowards = function(e, t) {
                this.isEmpty() ? t[e] = this.remove()[e] : this.moveTowards(e, t)
            }
            ,
            t.prototype.selectTowards = function(e, t) {
                t[-e] = this,
                t[e] = this[e]
            }
            ,
            t.prototype.selectChildren = function() {
                return new z(this,this)
            }
            ,
            t.prototype.unselectInto = function(e, t) {
                var n = t.anticursor.ancestors[this.id];
                t.insAtDirEnd(-e, n)
            }
            ,
            t.prototype.seek = function(e, t) {
                function n(e) {
                    var t, n = e.domFrag().oneElement(), r = a(n).left, i = r + n.offsetWidth;
                    return (t = {})[mt] = r,
                    t[ft] = i,
                    t
                }
                var r, i = this, s = n(i);
                return e < s[mt] ? t.insLeftOf(i) : e > s[ft] ? t.insRightOf(i) : (r = s[mt],
                void i.eachChild((function(o) {
                    var a = n(o);
                    return e < a[mt] ? (e - r < a[mt] - e ? o[mt] ? t.insAtRightEnd(o[mt]) : t.insLeftOf(i) : t.insAtLeftEnd(o),
                    !1) : e > a[ft] ? void (o[ft] ? r = a[ft] : s[ft] - e < e - a[ft] ? t.insRightOf(i) : t.insAtRightEnd(o)) : (o.seek(e, t),
                    !1)
                }
                )))
            }
            ,
            t.prototype.numBlocks = function() {
                return this.domView.childCount
            }
            ,
            t.prototype.html = function() {
                var e, t = this.blocks;
                return r("domView is defined", this.domView),
                e = this.domView.render(t || []),
                this.setDOM(e),
                N.linkElementByCmdNode(e, this),
                e
            }
            ,
            t.prototype.latexRecursive = function(e) {
                this.checkCursorContextOpen(e),
                e.latex += this.ctrlSeq || "",
                this.eachChild((function(t) {
                    var n, r;
                    e.latex += "{",
                    r = e.latex.length,
                    null === (n = t.latexRecursive) || void 0 === n || n.call(t, e),
                    r === e.latex.length && (e.latex += " "),
                    e.latex += "}"
                }
                )),
                this.checkCursorContextClose(e)
            }
            ,
            t.prototype.text = function() {
                var e = this
                  , t = 0;
                return e.foldChildren(e.textTemplate[t], (function(n, r) {
                    t += 1;
                    var i = r.text();
                    return n && "(" === e.textTemplate[t] && "(" === i[0] && ")" === i.slice(-1) ? n + i.slice(1, -1) + e.textTemplate[t] : n + i + (e.textTemplate[t] || "")
                }
                ))
            }
            ,
            t.prototype.mathspeak = function() {
                var e, t, n;
                return this.mathspeakOverride && (e = this.latex(),
                !/^(\\)+$/.test(e)) ? this.mathspeakOverride(e) : (n = 0,
                (t = this).foldChildren(t.mathspeakTemplate[n] || "Start" + t.ctrlSeq + " ", (function(e, r) {
                    return n += 1,
                    e + " " + r.mathspeak() + " " + (t.mathspeakTemplate[n] + " " || 0)
                }
                )))
            }
            ,
            t
        }(he),
        de = function(e) {
            function t(t, n, r, i) {
                var s = e.call(this) || this;
                return s.setCtrlSeqHtmlTextAndMathspeak(t, n ? new pe(0,(function() {
                    return n.cloneNode(!0)
                }
                )) : void 0, r, i),
                s
            }
            return ut(t, e),
            t.prototype.setCtrlSeqHtmlTextAndMathspeak = function(t, n, r, i) {
                !r && t && (r = t.replace(/^\\/, "")),
                this.mathspeakName = i || r,
                e.prototype.setCtrlSeqHtmlAndText.call(this, t, n, [r || ""])
            }
            ,
            t.prototype.parser = function() {
                return Z.succeed(this)
            }
            ,
            t.prototype.numBlocks = function() {
                return 0
            }
            ,
            t.prototype.replaces = function(e) {
                e.remove()
            }
            ,
            t.prototype.createBlocks = function() {}
            ,
            t.prototype.moveTowards = function(e, t) {
                t.domFrag().insDirOf(e, this.domFrag()),
                t[-e] = this,
                t[e] = this[e],
                t.controller.aria.queue(this)
            }
            ,
            t.prototype.deleteTowards = function(e, t) {
                t[e] = this.remove()[e]
            }
            ,
            t.prototype.seek = function(e, t) {
                var n = this.domFrag().oneElement();
                return e - a(n).left < n.offsetWidth / 2 ? t.insLeftOf(this) : t.insRightOf(this),
                t
            }
            ,
            t.prototype.latexRecursive = function(e) {
                this.checkCursorContextOpen(e),
                e.latex += this.ctrlSeq || "",
                this.checkCursorContextClose(e)
            }
            ,
            t.prototype.text = function() {
                return this.textTemplate.join("")
            }
            ,
            t.prototype.mathspeak = function(t) {
                return this.mathspeakOverride ? e.prototype.mathspeak.call(this) : this.mathspeakName || ""
            }
            ,
            t.prototype.placeCursor = function() {}
            ,
            t.prototype.isEmpty = function() {
                return !0
            }
            ,
            t
        }(ue),
        me = function(e) {
            function t(t, n, r) {
                return e.call(this, t, yt("span", {}, [n || yt.text(t)]), void 0, r) || this
            }
            return ut(t, e),
            t
        }(de),
        fe = function(e) {
            function t(t, n, r, i, s) {
                return s ? e.call(this, t, yt("span", {}, [n || yt.text(t || "")]), void 0, i) || this : e.call(this, t, yt("span", {
                    class: "mq-binary-operator"
                }, n ? [n] : []), r, i) || this
            }
            return ut(t, e),
            t
        }(de),
        ge = function(e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.ariaLabel = "block",
                t
            }
            return ut(t, e),
            t.prototype.join = function(e) {
                return this.foldChildren("", (function(t, n) {
                    return t + n[e]()
                }
                ))
            }
            ,
            t.prototype.html = function() {
                var e = document.createDocumentFragment();
                return this.eachChild((function(t) {
                    var n = t.html();
                    e.appendChild(n)
                }
                )),
                e
            }
            ,
            t.prototype.latexRecursive = function(e) {
                this.checkCursorContextOpen(e),
                this.eachChild((function(t) {
                    var n;
                    return null === (n = t.latexRecursive) || void 0 === n ? void 0 : n.call(t, e)
                }
                )),
                this.checkCursorContextClose(e)
            }
            ,
            t.prototype.text = function() {
                var e = this.getEnd(mt);
                return e === this.getEnd(ft) && 0 !== e ? e.text() : this.join("text")
            }
            ,
            t.prototype.mathspeak = function() {
                var e = ""
                  , t = {};
                return this.controller && (t = this.controller.options.autoOperatorNames),
                this.foldChildren([], (function(n, r) {
                    var i, s, o;
                    return r.isPartOfOperator ? e += r.mathspeak() : ("" !== e && (t._maxLength > 0 && "string" == typeof (i = t[e.toLowerCase()]) && (e = i),
                    n.push(e + " "),
                    e = ""),
                    s = r.mathspeak(),
                    o = r.ctrlSeq,
                    !isNaN(o) || "." === o || r.parent && r.parent.parent && r.parent.parent.isTextBlock() || (s = " " + s + " "),
                    n.push(s)),
                    n
                }
                )).join("").replace(/ +(?= )/g, "").replace(/(\.)([0-9]+)/g, (function(e, t, n) {
                    return t + n.split("").join(" ").trim()
                }
                ))
            }
            ,
            t.prototype.keystroke = function(t, n, r) {
                return !r.options.spaceBehavesLikeTab || "Spacebar" !== t && "Shift-Spacebar" !== t ? e.prototype.keystroke.call(this, t, n, r) : (null == n || n.preventDefault(),
                void r.escapeDir("Shift-Spacebar" === t ? mt : ft, t, n))
            }
            ,
            t.prototype.moveOutOf = function(e, t, n) {
                var r, i;
                "up" === n ? r = this.parent.upInto : "down" === n && (r = this.parent.downInto),
                !r && this[e] ? (i = -e,
                t.insAtDirEnd(i, this[e]),
                t.controller.aria.queueDirEndOf(i, t.parent, !0)) : (t.insDirOf(e, this.parent),
                t.controller.aria.queueDirOf(e, this.parent))
            }
            ,
            t.prototype.selectOutOf = function(e, t) {
                t.insDirOf(e, this.parent)
            }
            ,
            t.prototype.deleteOutOf = function(e, t) {
                t.unwrapGramp()
            }
            ,
            t.prototype.seek = function(e, t) {
                var n, r = this.getEnd(ft);
                if (!r)
                    return t.insAtRightEnd(this);
                if (a(n = r.domFrag().oneElement()).left + n.offsetWidth < e)
                    return t.insAtRightEnd(this);
                if (e < a(this.getEnd(mt).domFrag().oneElement()).left)
                    return t.insAtLeftEnd(this);
                for (; e < a(r.domFrag().oneElement()).left; )
                    r = r[mt];
                return r.seek(e, t)
            }
            ,
            t.prototype.chToCmd = function(e, t) {
                var n;
                return e.match(/^[a-eg-zA-Z]$/) ? new we(e) : /^\d$/.test(e) ? new be(e) : t && t.typingSlashWritesDivisionSymbol && "/" === e ? O["÷"](e) : t && t.typingAsteriskWritesTimesSymbol && "*" === e ? O["×"](e) : t && t.typingPercentWritesPercentOf && "%" === e ? O.percentof(e) : (n = L[e] || O[e]) ? n.constructor ? new n(e) : n(e) : new me(e)
            }
            ,
            t.prototype.write = function(e, t) {
                var n = this.chToCmd(t, e.options);
                e.selection && n.replaces(e.replaceSelection()),
                e.isTooDeep() || (n.createLeftOf(e.show()),
                "/" === t ? e.controller.aria.alert("over") : e.controller.aria.alert(n.mathspeak({
                    createdLeftOf: e
                })))
            }
            ,
            t.prototype.writeLatex = function(e, t) {
                var n, r, i, s, o = Z.all, a = Z.eof, l = re.skip(a).or(o.result(!1)).parse(t);
                l && !l.isEmpty() && l.prepareInsertionAt(e) && (l.children().adopt(e.parent, e[mt], e[ft]),
                I(l.html()).insertBefore(e.domFrag()),
                e[mt] = l.getEnd(ft),
                l.finalizeInsert(e.options, e),
                n = l.getEnd(ft),
                r = l.getEnd(mt),
                i = n[ft],
                s = r[mt],
                i && i.siblingCreated(e.options, mt),
                s && s.siblingCreated(e.options, ft),
                e.parent.bubble((function(e) {
                    e.reflow()
                }
                )))
            }
            ,
            t.prototype.focus = function() {
                return this.domFrag().addClass("mq-hasCursor"),
                this.domFrag().removeClass("mq-empty"),
                this
            }
            ,
            t.prototype.blur = function(e) {
                return this.domFrag().removeClass("mq-hasCursor"),
                this.isEmpty() && (this.domFrag().addClass("mq-empty"),
                e && this.isQuietEmptyDelimiter(e.options.quietEmptyDelimiters) && this.domFrag().addClass("mq-quiet-delimiter")),
                this
            }
            ,
            t
        }(he),
        G.prototype.mouseEvents = !0,
        q.StaticMath = function(e) {
            var t;
            return t = function(t) {
                function n(n) {
                    var r = t.call(this, n) || this
                      , i = r.innerFields = [];
                    return r.__controller.root.postOrder((function(t) {
                        t.registerInnerField(i, e.InnerMathField)
                    }
                    )),
                    r
                }
                return ut(n, t),
                n.prototype.__mathquillify = function(e, n) {
                    return this.config(e),
                    t.prototype.mathquillify.call(this, "mq-math-mode"),
                    this.__controller.setupStaticField(),
                    this.__options.mouseEvents && (this.__controller.addMouseEventListener(),
                    this.__controller.staticMathTextareaEvents()),
                    this
                }
                ,
                n.prototype.latex = function(n) {
                    var r, i = t.prototype.latex.apply(this, arguments);
                    return arguments.length > 0 && (r = this.innerFields = [],
                    this.__controller.root.postOrder((function(t) {
                        t.registerInnerField(r, e.InnerMathField)
                    }
                    )),
                    this.__controller.updateMathspeak()),
                    i
                }
                ,
                n.prototype.setAriaLabel = function(e) {
                    return this.__controller.setAriaLabel(e),
                    this
                }
                ,
                n.prototype.getAriaLabel = function() {
                    return this.__controller.getAriaLabel()
                }
                ,
                n
            }(e.AbstractMathQuill),
            t.RootBlock = ge,
            t
        }
        ,
        ve = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return ut(t, e),
            t
        }(ge),
        m(ve.prototype),
        q.MathField = function(e) {
            var n;
            return n = function(e) {
                function n() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return ut(n, e),
                n.prototype.__mathquillify = function(n, r) {
                    return this.config(n),
                    r > 1 && (this.__controller.root.reflow = t),
                    e.prototype.mathquillify.call(this, "mq-editable-field mq-math-mode"),
                    delete this.__controller.root.reflow,
                    this
                }
                ,
                n
            }(e.EditableField),
            n.RootBlock = ve,
            n
        }
        ,
        q.InnerMathField = function(e) {
            return r("MathField class is defined", e.MathField),
            function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return ut(t, e),
                t.prototype.makeStatic = function() {
                    this.__controller.editable = !1,
                    this.__controller.root.blur(),
                    this.__controller.unbindEditablesEvents(),
                    I(this.__controller.container).removeClass("mq-editable-field")
                }
                ,
                t.prototype.makeEditable = function() {
                    this.__controller.editable = !0,
                    this.__controller.editablesTextareaEvents(),
                    this.__controller.cursor.insAtRightEnd(this.__controller.root),
                    I(this.__controller.container).addClass("mq-editable-field")
                }
                ,
                t
            }(e.MathField)
        }
        ,
        O.notin = O.cong = O.equiv = O.oplus = O.otimes = function(e) {
            return new fe("\\" + e + " ",yt.entityText("&" + e + ";"))
        }
        ,
        O["∗"] = O.ast = O.star = O.loast = O.lowast = y("\\ast ", "&lowast;", "low asterisk"),
        O.therefor = O.therefore = y("\\therefore ", "&there4;", "therefore"),
        O.cuz = O.because = y("\\because ", "&#8757;", "because"),
        O.prop = O.propto = y("\\propto ", "&prop;", "proportional to"),
        O["≈"] = O.asymp = O.approx = y("\\approx ", "&asymp;", "approximately equal to"),
        O.isin = O.in = y("\\in ", "&isin;", "is in"),
        O.ni = O.contains = y("\\ni ", "&ni;", "is not in"),
        O.notni = O.niton = O.notcontains = O.doesnotcontain = y("\\not\\ni ", "&#8716;", "does not contain"),
        O.sub = O.subset = y("\\subset ", "&sub;", "subset"),
        O.sup = O.supset = O.superset = y("\\supset ", "&sup;", "superset"),
        O.nsub = O.notsub = O.nsubset = O.notsubset = y("\\not\\subset ", "&#8836;", "not a subset"),
        O.nsup = O.notsup = O.nsupset = O.notsupset = O.nsuperset = O.notsuperset = y("\\not\\supset ", "&#8837;", "not a superset"),
        O.sube = O.subeq = O.subsete = O.subseteq = y("\\subseteq ", "&sube;", "subset or equal to"),
        O.supe = O.supeq = O.supsete = O.supseteq = O.supersete = O.superseteq = y("\\supseteq ", "&supe;", "superset or equal to"),
        O.nsube = O.nsubeq = O.notsube = O.notsubeq = O.nsubsete = O.nsubseteq = O.notsubsete = O.notsubseteq = y("\\not\\subseteq ", "&#8840;", "not subset or equal to"),
        O.nsupe = O.nsupeq = O.notsupe = O.notsupeq = O.nsupsete = O.nsupseteq = O.notsupsete = O.notsupseteq = O.nsupersete = O.nsuperseteq = O.notsupersete = O.notsuperseteq = y("\\not\\supseteq ", "&#8841;", "not superset or equal to"),
        O.mathbb = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return ut(t, e),
            t.prototype.createLeftOf = function(e) {}
            ,
            t.prototype.numBlocks = function() {
                return 1
            }
            ,
            t.prototype.parser = function() {
                var e = Z.string
                  , t = Z.regex
                  , n = Z.optWhitespace;
                return n.then(e("{")).then(n).then(t(/^[NPZQRCH]/)).skip(n).skip(e("}")).map((function(e) {
                    var t = O[e];
                    return p(t) ? new t : t()
                }
                ))
            }
            ,
            t
        }(ue),
        O.N = O.naturals = O.Naturals = v("\\mathbb{N}", "&#8469;", "naturals"),
        O.P = O.primes = O.Primes = O.projective = O.Projective = O.probability = O.Probability = v("\\mathbb{P}", "&#8473;", "P"),
        O.Z = O.integers = O.Integers = v("\\mathbb{Z}", "&#8484;", "integers"),
        O.Q = O.rationals = O.Rationals = v("\\mathbb{Q}", "&#8474;", "rationals"),
        O.R = O.reals = O.Reals = v("\\mathbb{R}", "&#8477;", "reals"),
        O.C = O.complex = O.Complex = O.complexes = O.Complexes = O.complexplane = O.Complexplane = O.ComplexPlane = v("\\mathbb{C}", "&#8450;", "complexes"),
        O.H = O.Hamiltonian = O.quaternions = O.Quaternions = v("\\mathbb{H}", "&#8461;", "quaternions"),
        O.quad = O.emsp = v("\\quad ", "    ", "4 spaces"),
        O.qquad = v("\\qquad ", "        ", "8 spaces"),
        O.diamond = v("\\diamond ", "&#9671;", "diamond"),
        O.bigtriangleup = v("\\bigtriangleup ", "&#9651;", "triangle up"),
        O.ominus = v("\\ominus ", "&#8854;", "o minus"),
        O.uplus = v("\\uplus ", "&#8846;", "disjoint union"),
        O.bigtriangledown = v("\\bigtriangledown ", "&#9661;", "triangle down"),
        O.sqcap = v("\\sqcap ", "&#8851;", "greatest lower bound"),
        O.triangleleft = v("\\triangleleft ", "&#8882;", "triangle left"),
        O.sqcup = v("\\sqcup ", "&#8852;", "least upper bound"),
        O.triangleright = v("\\triangleright ", "&#8883;", "triangle right"),
        O.odot = O.circledot = v("\\odot ", "&#8857;", "circle dot"),
        O.bigcirc = v("\\bigcirc ", "&#9711;", "circle"),
        O.dagger = v("\\dagger ", "&#0134;", "dagger"),
        O.ddagger = v("\\ddagger ", "&#135;", "big dagger"),
        O.wr = v("\\wr ", "&#8768;", "wreath"),
        O.amalg = v("\\amalg ", "&#8720;", "amalgam"),
        O.models = v("\\models ", "&#8872;", "models"),
        O.prec = v("\\prec ", "&#8826;", "precedes"),
        O.succ = v("\\succ ", "&#8827;", "succeeds"),
        O.preceq = v("\\preceq ", "&#8828;", "precedes or equals"),
        O.succeq = v("\\succeq ", "&#8829;", "succeeds or equals"),
        O.simeq = v("\\simeq ", "&#8771;", "similar or equal to"),
        O.mid = v("\\mid ", "&#8739;", "divides"),
        O.ll = v("\\ll ", "&#8810;", "ll"),
        O.gg = v("\\gg ", "&#8811;", "gg"),
        O.parallel = v("\\parallel ", "&#8741;", "parallel with"),
        O.nparallel = v("\\nparallel ", "&#8742;", "not parallel with"),
        O.bowtie = v("\\bowtie ", "&#8904;", "bowtie"),
        O.sqsubset = v("\\sqsubset ", "&#8847;", "square subset"),
        O.sqsupset = v("\\sqsupset ", "&#8848;", "square superset"),
        O.smile = v("\\smile ", "&#8995;", "smile"),
        O.sqsubseteq = v("\\sqsubseteq ", "&#8849;", "square subset or equal to"),
        O.sqsupseteq = v("\\sqsupseteq ", "&#8850;", "square superset or equal to"),
        O.doteq = v("\\doteq ", "&#8784;", "dotted equals"),
        O.frown = v("\\frown ", "&#8994;", "frown"),
        O.vdash = v("\\vdash ", "&#8870;", "v dash"),
        O.dashv = v("\\dashv ", "&#8867;", "dash v"),
        O.nless = v("\\nless ", "&#8814;", "not less than"),
        O.ngtr = v("\\ngtr ", "&#8815;", "not greater than"),
        O.longleftarrow = v("\\longleftarrow ", "&#8592;", "left arrow"),
        O.longrightarrow = v("\\longrightarrow ", "&#8594;", "right arrow"),
        O.Longleftarrow = v("\\Longleftarrow ", "&#8656;", "left arrow"),
        O.Longrightarrow = v("\\Longrightarrow ", "&#8658;", "right arrow"),
        O.longleftrightarrow = v("\\longleftrightarrow ", "&#8596;", "left and right arrow"),
        O.updownarrow = v("\\updownarrow ", "&#8597;", "up and down arrow"),
        O.Longleftrightarrow = v("\\Longleftrightarrow ", "&#8660;", "left and right arrow"),
        O.Updownarrow = v("\\Updownarrow ", "&#8661;", "up and down arrow"),
        O.mapsto = v("\\mapsto ", "&#8614;", "maps to"),
        O.nearrow = v("\\nearrow ", "&#8599;", "northeast arrow"),
        O.hookleftarrow = v("\\hookleftarrow ", "&#8617;", "hook left arrow"),
        O.hookrightarrow = v("\\hookrightarrow ", "&#8618;", "hook right arrow"),
        O.searrow = v("\\searrow ", "&#8600;", "southeast arrow"),
        O.leftharpoonup = v("\\leftharpoonup ", "&#8636;", "left harpoon up"),
        O.rightharpoonup = v("\\rightharpoonup ", "&#8640;", "right harpoon up"),
        O.swarrow = v("\\swarrow ", "&#8601;", "southwest arrow"),
        O.leftharpoondown = v("\\leftharpoondown ", "&#8637;", "left harpoon down"),
        O.rightharpoondown = v("\\rightharpoondown ", "&#8641;", "right harpoon down"),
        O.nwarrow = v("\\nwarrow ", "&#8598;", "northwest arrow"),
        O.ldots = v("\\ldots ", "&#8230;", "l dots"),
        O.cdots = v("\\cdots ", "&#8943;", "c dots"),
        O.vdots = v("\\vdots ", "&#8942;", "v dots"),
        O.ddots = v("\\ddots ", "&#8945;", "d dots"),
        O.surd = v("\\surd ", "&#8730;", "unresolved root"),
        O.triangle = v("\\triangle ", "&#9651;", "triangle"),
        O.ell = v("\\ell ", "&#8467;", "ell"),
        O.top = v("\\top ", "&#8868;", "top"),
        O.flat = v("\\flat ", "&#9837;", "flat"),
        O.natural = v("\\natural ", "&#9838;", "natural"),
        O.sharp = v("\\sharp ", "&#9839;", "sharp"),
        O.wp = v("\\wp ", "&#8472;", "wp"),
        O.bot = v("\\bot ", "&#8869;", "bot"),
        O.clubsuit = v("\\clubsuit ", "&#9827;", "club suit"),
        O.diamondsuit = v("\\diamondsuit ", "&#9826;", "diamond suit"),
        O.heartsuit = v("\\heartsuit ", "&#9825;", "heart suit"),
        O.spadesuit = v("\\spadesuit ", "&#9824;", "spade suit"),
        O.parallelogram = v("\\parallelogram ", "&#9649;", "parallelogram"),
        O.square = v("\\square ", "&#11036;", "square"),
        O.oint = v("\\oint ", "&#8750;", "o int"),
        O.bigcap = v("\\bigcap ", "&#8745;", "big cap"),
        O.bigcup = v("\\bigcup ", "&#8746;", "big cup"),
        O.bigsqcup = v("\\bigsqcup ", "&#8852;", "big square cup"),
        O.bigvee = v("\\bigvee ", "&#8744;", "big vee"),
        O.bigwedge = v("\\bigwedge ", "&#8743;", "big wedge"),
        O.bigodot = v("\\bigodot ", "&#8857;", "big o dot"),
        O.bigotimes = v("\\bigotimes ", "&#8855;", "big o times"),
        O.bigoplus = v("\\bigoplus ", "&#8853;", "big o plus"),
        O.biguplus = v("\\biguplus ", "&#8846;", "big u plus"),
        O.lfloor = v("\\lfloor ", "&#8970;", "left floor"),
        O.rfloor = v("\\rfloor ", "&#8971;", "right floor"),
        O.lceil = v("\\lceil ", "&#8968;", "left ceiling"),
        O.rceil = v("\\rceil ", "&#8969;", "right ceiling"),
        O.opencurlybrace = O.lbrace = v("\\lbrace ", "{", "left brace"),
        O.closecurlybrace = O.rbrace = v("\\rbrace ", "}", "right brace"),
        O.lbrack = v("[", "left bracket"),
        O.rbrack = v("]", "right bracket"),
        O.slash = v("/", "slash"),
        O.vert = v("|", "vertical bar"),
        O.perp = O.perpendicular = v("\\perp ", "&perp;", "perpendicular"),
        O.nabla = O.del = v("\\nabla ", "&nabla;"),
        O.hbar = v("\\hbar ", "&#8463;", "horizontal bar"),
        O.AA = O.Angstrom = O.angstrom = v("\\text\\AA ", "&#8491;", "AA"),
        O.ring = O.circ = O.circle = v("\\circ ", "&#8728;", "circle"),
        O.bull = O.bullet = v("\\bullet ", "&bull;", "bullet"),
        O.setminus = O.smallsetminus = v("\\setminus ", "&#8726;", "set minus"),
        O.not = O["¬"] = O.neg = v("\\neg ", "&not;", "not"),
        O["…"] = O.dots = O.ellip = O.hellip = O.ellipsis = O.hellipsis = v("\\dots ", "&hellip;", "ellipsis"),
        O.converges = O.darr = O.dnarr = O.dnarrow = O.downarrow = v("\\downarrow ", "&darr;", "converges with"),
        O.dArr = O.dnArr = O.dnArrow = O.Downarrow = v("\\Downarrow ", "&dArr;", "down arrow"),
        O.diverges = O.uarr = O.uparrow = v("\\uparrow ", "&uarr;", "diverges from"),
        O.uArr = O.Uparrow = v("\\Uparrow ", "&uArr;", "up arrow"),
        O.rarr = O.rightarrow = v("\\rightarrow ", "&rarr;", "right arrow"),
        O.implies = y("\\Rightarrow ", "&rArr;", "implies"),
        O.rArr = O.Rightarrow = v("\\Rightarrow ", "&rArr;", "right arrow"),
        O.gets = y("\\gets ", "&larr;", "gets"),
        O.larr = O.leftarrow = v("\\leftarrow ", "&larr;", "left arrow"),
        O.impliedby = y("\\Leftarrow ", "&lArr;", "implied by"),
        O.lArr = O.Leftarrow = v("\\Leftarrow ", "&lArr;", "left arrow"),
        O.harr = O.lrarr = O.leftrightarrow = v("\\leftrightarrow ", "&harr;", "left and right arrow"),
        O.iff = y("\\Leftrightarrow ", "&hArr;", "if and only if"),
        O.hArr = O.lrArr = O.Leftrightarrow = v("\\Leftrightarrow ", "&hArr;", "left and right arrow"),
        O.Re = O.Real = O.real = v("\\Re ", "&real;", "real"),
        O.Im = O.imag = O.image = O.imagin = O.imaginary = O.Imaginary = v("\\Im ", "&image;", "imaginary"),
        O.part = O.partial = v("\\partial ", "&part;", "partial"),
        O.pounds = v("\\pounds ", "&pound;"),
        O.alef = O.alefsym = O.aleph = O.alephsym = v("\\aleph ", "&alefsym;", "alef sym"),
        O.xist = O.xists = O.exist = O.exists = v("\\exists ", "&exist;", "there exists at least 1"),
        O.nexists = O.nexist = v("\\nexists ", "&#8708;", "there is no"),
        O.and = O.land = O.wedge = y("\\wedge ", "&and;", "and"),
        O.or = O.lor = O.vee = y("\\vee ", "&or;", "or"),
        O.o = O.O = O.empty = O.emptyset = O.oslash = O.Oslash = O.nothing = O.varnothing = y("\\varnothing ", "&empty;", "nothing"),
        O.cup = O.union = y("\\cup ", "&cup;", "union"),
        O.cap = O.intersect = O.intersection = y("\\cap ", "&cap;", "intersection"),
        O.deg = O.degree = v("\\degree ", "&deg;", "degrees"),
        O.ang = O.angle = v("\\angle ", "&ang;", "angle"),
        O.measuredangle = v("\\measuredangle ", "&#8737;", "measured angle"),
        ye = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return ut(t, e),
            t.prototype.finalizeTree = function(e, t) {
                this.sharedSiblingMethod(e, t)
            }
            ,
            t.prototype.siblingDeleted = function(e, t) {
                this.sharedSiblingMethod(e, t)
            }
            ,
            t.prototype.siblingCreated = function(e, t) {
                this.sharedSiblingMethod(e, t)
            }
            ,
            t.prototype.sharedSiblingMethod = function(e, n) {
                n !== mt && this[ft]instanceof t || this.fixDigitGrouping(e)
            }
            ,
            t.prototype.fixDigitGrouping = function(e) {
                var t, n, r, i, s, o;
                if (e.enableDigitGrouping) {
                    n = this,
                    r = 0,
                    i = [],
                    s = "\\ ",
                    ".",
                    o = t = this;
                    do {
                        if (/^[0-9]$/.test(o.ctrlSeq))
                            t = o;
                        else if (o.ctrlSeq === s)
                            t = o,
                            r += 1;
                        else {
                            if ("." !== o.ctrlSeq)
                                break;
                            t = o,
                            i.push(o)
                        }
                    } while (o = t[mt]);
                    for (; o = n[ft]; )
                        if (/^[0-9]$/.test(o.ctrlSeq))
                            n = o;
                        else if (o.ctrlSeq === s)
                            n = o,
                            r += 1;
                        else {
                            if ("." !== o.ctrlSeq)
                                break;
                            n = o,
                            i.push(o)
                        }
                    for (; n !== t && t && t.ctrlSeq === s; )
                        t = t[ft],
                        r -= 1;
                    for (; n !== t && n && n.ctrlSeq === s; )
                        n = n[mt],
                        r -= 1;
                    t === n && t && t.ctrlSeq === s || (r > 0 || i.length > 1 ? this.removeGroupingBetween(t, n) : i[0] ? (i[0] !== t && this.addGroupingBetween(i[0][mt], t),
                    i[0] !== n && this.removeGroupingBetween(i[0][ft], n)) : this.addGroupingBetween(n, t))
                }
            }
            ,
            t.prototype.removeGroupingBetween = function(e, n) {
                var r = e;
                do {
                    if (r instanceof t && r.setGroupingClass(void 0),
                    !r || r === n)
                        break
                } while (r = r[ft])
            }
            ,
            t.prototype.addGroupingBetween = function(e, n) {
                var r, i, s = e, o = 0, a = 0;
                for (s = e; s && (a += 1,
                s !== n); )
                    s = s[mt];
                for (0 === (r = a % 3) && (r = 3),
                s = e; s && (o += 1,
                i = void 0,
                a >= 4 && (o === a ? i = "mq-group-leading-" + r : o % 3 == 0 && o !== a && (i = "mq-group-start"),
                i || (i = "mq-group-other")),
                s instanceof t && s.setGroupingClass(i),
                s !== n); )
                    s = s[mt]
            }
            ,
            t.prototype.setGroupingClass = function(e) {
                this._groupingClass !== e && (this._groupingClass && this.domFrag().removeClass(this._groupingClass),
                e && this.domFrag().addClass(e),
                this._groupingClass = e)
            }
            ,
            t
        }(de),
        be = function(e) {
            function t(t, n) {
                return e.call(this, t, yt("span", {
                    class: "mq-digit"
                }, [yt.text(t)]), void 0, n) || this
            }
            return ut(t, e),
            t.prototype.createLeftOf = function(t) {
                var n = t[mt]
                  , r = n && n[mt]
                  , i = t.parent.parent instanceof He ? t.parent.parent.sub : void 0;
                t.options.autoSubscriptNumerals && t.parent !== i && (n instanceof xe && !1 !== n.isItalic || n instanceof He && r instanceof xe && !1 !== r.isItalic) ? ((new Ue).createLeftOf(t),
                e.prototype.createLeftOf.call(this, t),
                t.insRightOf(t.parent.parent)) : e.prototype.createLeftOf.call(this, t)
            }
            ,
            t.prototype.mathspeak = function(t) {
                var n, r, i, s;
                return t && t.createdLeftOf && (i = (r = (n = t.createdLeftOf)[mt]) && r[mt],
                s = n.parent.parent instanceof He ? n.parent.parent.sub : void 0,
                n.options.autoSubscriptNumerals && n.parent !== s && (r instanceof xe && !1 !== r.isItalic || n[mt]instanceof He && i instanceof xe && !1 !== i.isItalic)) ? "Subscript " + e.prototype.mathspeak.call(this) + " Baseline" : e.prototype.mathspeak.call(this)
            }
            ,
            t
        }(ye),
        xe = function(e) {
            function t(t, n) {
                return e.call(this, t, yt("var", {}, [n || yt.text(t)])) || this
            }
            return ut(t, e),
            t.prototype.text = function() {
                var e = this.ctrlSeq || "";
                return this.isPartOfOperator ? "\\" == e[0] ? e = e.slice(1, e.length) : " " == e[e.length - 1] && (e = e.slice(0, -1)) : (!this[mt] || this[mt]instanceof t || this[mt]instanceof fe || "\\ " === this[mt].ctrlSeq || (e = "*" + e),
                !this[ft] || this[ft]instanceof fe || this[ft]instanceof He || (e += "*")),
                e
            }
            ,
            t.prototype.mathspeak = function() {
                var t = this.ctrlSeq || "";
                return this.isPartOfOperator || t.length > 1 || this.parent && this.parent.parent && this.parent.parent.isTextBlock() ? e.prototype.mathspeak.call(this) : '"' + t + '"'
            }
            ,
            t
        }(de),
        G.prototype.autoCommands = {
            _maxLength: 0
        },
        U.autoCommands = function(e) {
            var t, n, r, i, s;
            if ("string" != typeof e || !/^[a-z]+(?: [a-z]+)*$/i.test(e))
                throw '"' + e + '" not a space-delimited list of only letters';
            for (t = e.split(" "),
            n = {},
            r = 0,
            i = 0; i < t.length; i += 1) {
                if ((s = t[i]).length < 2)
                    throw 'autocommand "' + s + '" not minimum length of 2';
                if (O[s] === Ee)
                    throw '"' + s + '" is a built-in operator name';
                n[s] = 1,
                r = vt(r, s.length)
            }
            return n._maxLength = r,
            n
        }
        ,
        G.prototype.quietEmptyDelimiters = {},
        U.quietEmptyDelimiters = function(e) {
            var t, n, r;
            for (void 0 === e && (e = ""),
            t = e.split(" "),
            n = {},
            r = 0; r < t.length; r += 1)
                n[t[r]] = 1;
            return n
        }
        ,
        G.prototype.autoParenthesizedFunctions = {
            _maxLength: 0
        },
        U.autoParenthesizedFunctions = function(e) {
            var t, n, r, i, s;
            if ("string" != typeof e || !/^[a-z]+(?: [a-z]+)*$/i.test(e))
                throw '"' + e + '" not a space-delimited list of only letters';
            for (t = e.split(" "),
            n = {},
            r = 0,
            i = 0; i < t.length; i += 1) {
                if ((s = t[i]).length < 2)
                    throw 'autocommand "' + s + '" not minimum length of 2';
                n[s] = 1,
                r = vt(r, s.length)
            }
            return n._maxLength = r,
            n
        }
        ,
        we = function(e) {
            function t(t) {
                var n = e.call(this, t) || this;
                return n.letter = t,
                n
            }
            return ut(t, e),
            t.prototype.checkAutoCmds = function(e) {
                var n, r, i, s, o, a;
                if (!this.shouldIgnoreSubstitutionInSimpleSubscript(e.options) && (r = (n = e.options.autoCommands)._maxLength || 0) > 0) {
                    for (i = "",
                    s = this,
                    o = 0; s instanceof t && s.ctrlSeq === s.letter && o < r; )
                        i = s.letter + i,
                        s = s[mt],
                        o += 1;
                    for (; i.length; ) {
                        if (n.hasOwnProperty(i)) {
                            for (s = this,
                            o = 1; s && o < i.length; o += 1,
                            s = s[mt])
                                ;
                            return new P(s,this).remove(),
                            e[mt] = s[mt],
                            (p(a = O[i]) ? new a(i) : a(i)).createLeftOf(e)
                        }
                        i = i.slice(1)
                    }
                }
            }
            ,
            t.prototype.autoParenthesize = function(e) {
                var n, r, i, s, o, a, l = e.parent.getEnd(ft);
                if (!(l && l instanceof Qe && "\\left(" === l.ctrlSeq || this.shouldIgnoreSubstitutionInSimpleSubscript(e.options))) {
                    for (n = "",
                    r = this,
                    i = 0,
                    o = (s = e.options.autoParenthesizedFunctions)._maxLength || 0,
                    a = e.options.autoOperatorNames; r instanceof t && i < o; )
                        n = r.letter + n,
                        r = r[mt],
                        i += 1;
                    for (; n.length; ) {
                        if (s.hasOwnProperty(n) && a.hasOwnProperty(n))
                            return e.parent.write(e, "(");
                        n = n.slice(1)
                    }
                }
            }
            ,
            t.prototype.createLeftOf = function(t) {
                e.prototype.createLeftOf.call(this, t),
                this.checkAutoCmds(t),
                this.autoParenthesize(t)
            }
            ,
            t.prototype.italicize = function(e) {
                return this.isItalic = e,
                this.isPartOfOperator = !e,
                this.domFrag().toggleClass("mq-operator-name", !e),
                this
            }
            ,
            t.prototype.finalizeTree = function(e, t) {
                this.sharedSiblingMethod(e, t)
            }
            ,
            t.prototype.siblingDeleted = function(e, t) {
                this.sharedSiblingMethod(e, t)
            }
            ,
            t.prototype.siblingCreated = function(e, t) {
                this.sharedSiblingMethod(e, t)
            }
            ,
            t.prototype.sharedSiblingMethod = function(e, n) {
                n !== mt && this[ft]instanceof t || this.autoUnItalicize(e)
            }
            ,
            t.prototype.autoUnItalicize = function(e) {
                var n, r, i, s, o, a, l, c, h, p, u, d, m, f, g, v, y, b = e.autoOperatorNames;
                if (0 !== b._maxLength && !this.shouldIgnoreSubstitutionInSimpleSubscript(e)) {
                    for (n = this.letter,
                    r = this[mt]; r instanceof t; r = r[mt])
                        n = r.letter + n;
                    for (i = this[ft]; i instanceof t; i = i[ft])
                        n += i.letter;
                    s = r && r[ft],
                    o = i && i[mt],
                    new P(s || this.parent.getEnd(mt),o || this.parent.getEnd(ft)).each((function(e) {
                        e instanceof t && (e.italicize(!0).domFrag().removeClass("mq-first mq-last mq-followed-by-supsub"),
                        e.ctrlSeq = e.letter)
                    }
                    )),
                    a = b._maxLength || 0;
                    e: for (l = 0,
                    c = r[ft] || this.parent.getEnd(mt); c && l < n.length; l += 1,
                    c = c[ft])
                        for (h = gt(a, n.length - l); h > 0; h -= 1)
                            if (p = n.slice(l, l + h),
                            u = void 0,
                            b.hasOwnProperty(p)) {
                                for (d = 0,
                                m = c; d < h; d += 1,
                                m = m[ft])
                                    m instanceof t && (m.italicize(!1),
                                    u = m);
                                f = ke.hasOwnProperty(p),
                                c.ctrlSeq = (f ? "\\" : "\\operatorname{") + c.ctrlSeq,
                                u.ctrlSeq += f ? " " : "}",
                                Se.hasOwnProperty(p) && ((v = (g = u[mt]) && g[mt]) && v[mt]).domFrag().addClass("mq-last"),
                                this.shouldOmitPadding(c[mt]) || c.domFrag().addClass("mq-first"),
                                this.shouldOmitPadding(u[ft]) || (u[ft]instanceof He ? ((y = u[ft]).siblingCreated = y.siblingDeleted = function() {
                                    y.domFrag().toggleClass("mq-after-operator-name", !(y[ft]instanceof Qe))
                                }
                                )() : u.domFrag().toggleClass("mq-last", !(u[ft]instanceof Qe))),
                                l += h - 1,
                                c = u;
                                continue e
                            }
                }
            }
            ,
            t.prototype.shouldOmitPadding = function(e) {
                return !e || "." === e.ctrlSeq || e instanceof fe || e instanceof Ge
            }
            ,
            t
        }(xe),
        ke = {},
        G.prototype.autoOperatorNames = function() {
            var e, t, n, r, i = {
                _maxLength: 9
            }, s = "arg deg det dim exp gcd hom inf ker lg lim ln log max min sup limsup liminf injlim projlim Pr".split(" ");
            for (e = 0; e < s.length; e += 1)
                ke[s[e]] = i[s[e]] = 1;
            for (t = "sin cos tan arcsin arccos arctan sinh cosh tanh sec csc cot coth".split(" "),
            e = 0; e < t.length; e += 1)
                ke[t[e]] = 1;
            for (n = "sin cos tan sec cosec csc cotan cot ctg".split(" "),
            e = 0; e < n.length; e += 1)
                i[n[e]] = i["arc" + n[e]] = i[n[e] + "h"] = i["ar" + n[e] + "h"] = i["arc" + n[e] + "h"] = 1;
            for (r = "gcf hcf lcm proj span".split(" "),
            e = 0; e < r.length; e += 1)
                i[r[e]] = 1;
            return i
        }(),
        Se = {
            limsup: 1,
            liminf: 1,
            projlim: 1,
            injlim: 1
        },
        U.autoOperatorNames = function(e) {
            var t, n, r, i, s, o;
            if ("string" != typeof e)
                throw '"' + e + '" not a space-delimited list';
            if (!/^[a-z\|\-]+(?: [a-z\|\-]+)*$/i.test(e))
                throw '"' + e + '" not a space-delimited list of letters or "|"';
            for (t = e.split(" "),
            n = {},
            r = 0,
            i = 0; i < t.length; i += 1) {
                if ((s = t[i]).length < 2)
                    throw '"' + s + '" not minimum length of 2';
                if (s.indexOf("|") < 0)
                    n[s] = s,
                    r = vt(r, s.length);
                else {
                    if ((o = s.split("|")).length > 2)
                        throw '"' + s + '" has more than 1 mathspeak delimiter';
                    if (o[0].length < 2)
                        throw '"' + s[0] + '" not minimum length of 2';
                    n[o[0]] = o[1].replace(/-/g, " "),
                    r = vt(r, o[0].length)
                }
            }
            return n._maxLength = r,
            n
        }
        ,
        Ee = function(e) {
            function t(t) {
                return e.call(this, t || "") || this
            }
            return ut(t, e),
            t.prototype.createLeftOf = function(e) {
                var t, n = this.ctrlSeq;
                for (t = 0; t < n.length; t += 1)
                    new we(n.charAt(t)).createLeftOf(e)
            }
            ,
            t.prototype.parser = function() {
                var e, t = this.ctrlSeq, n = new ge;
                for (e = 0; e < t.length; e += 1)
                    new we(t.charAt(e)).adopt(n, n.getEnd(ft), 0);
                return Z.succeed(n.children())
            }
            ,
            t
        }(de),
        G.prototype.autoOperatorNames)
            G.prototype.autoOperatorNames.hasOwnProperty(Me) && (O[Me] = Ee);
        O.operatorname = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return ut(t, e),
            t.prototype.createLeftOf = function() {}
            ,
            t.prototype.numBlocks = function() {
                return 1
            }
            ,
            t.prototype.parser = function() {
                return re.block.map((function(e) {
                    var t = !0
                      , n = ""
                      , r = e.children();
                    return r.each((function(e) {
                        e instanceof we ? n += e.letter : t = !1
                    }
                    )),
                    t && "ans" === n ? $e() : r
                }
                ))
            }
            ,
            t
        }(ue),
        O.f = function(e) {
            function t() {
                var t = this;
                return (t = e.call(this, "f") || this).letter = "f",
                t.domView = new pe(0,(function() {
                    return yt("var", {
                        class: "mq-f"
                    }, [yt.text("f")])
                }
                )),
                t
            }
            return ut(t, e),
            t.prototype.italicize = function(t) {
                return this.domFrag().eachElement((function(e) {
                    return e.textContent = "f"
                }
                )),
                this.domFrag().toggleClass("mq-f", t),
                e.prototype.italicize.call(this, t)
            }
            ,
            t
        }(we),
        O[" "] = O.space = function() {
            return new ye("\\ ",yt("span", {}, [yt.text(" ")])," ")
        }
        ,
        O["."] = function() {
            return new ye(".",yt("span", {
                class: "mq-digit"
            }, [yt.text(".")]),".")
        }
        ,
        O["'"] = O.prime = v("'", "&prime;", "prime"),
        O["″"] = O.dprime = v("″", "&Prime;", "double prime"),
        O.backslash = v("\\backslash ", "\\", "backslash"),
        L["\\"] || (L["\\"] = O.backslash),
        O.$ = v("\\$", "$", "dollar"),
        O.square = v("\\square ", "□", "square"),
        O.mid = v("\\mid ", "∣", "mid"),
        Ce = function(e) {
            function t(t, n, r) {
                return e.call(this, t, yt("span", {
                    class: "mq-nonSymbola"
                }, [n || yt.text(t)])) || this
            }
            return ut(t, e),
            t
        }(de),
        O["@"] = function() {
            return new Ce("@")
        }
        ,
        O["&"] = function() {
            return new Ce("\\&",yt.entityText("&amp;"),"and")
        }
        ,
        O["%"] = function(e) {
            function t() {
                return e.call(this, "\\%", yt.text("%"), "percent") || this
            }
            return ut(t, e),
            t.prototype.parser = function() {
                var t = Z.optWhitespace
                  , n = Z.string;
                return t.then(n("\\operatorname{of}").map((function() {
                    return je()
                }
                ))).or(e.prototype.parser.call(this))
            }
            ,
            t
        }(Ce),
        O["∥"] = O.parallel = v("\\parallel ", "&#x2225;", "parallel"),
        O["∦"] = O.nparallel = v("\\nparallel ", "&#x2226;", "not parallel"),
        O["⟂"] = O.perp = v("\\perp ", "&#x27C2;", "perpendicular"),
        O.alpha = O.beta = O.gamma = O.delta = O.zeta = O.eta = O.theta = O.iota = O.kappa = O.mu = O.nu = O.xi = O.rho = O.sigma = O.tau = O.chi = O.psi = O.omega = function(e) {
            return new xe("\\" + e + " ",yt.entityText("&" + e + ";"))
        }
        ,
        O.phi = b("\\phi ", "&#981;"),
        O.phiv = O.varphi = b("\\varphi ", "&phi;"),
        O.epsilon = b("\\epsilon ", "&#1013;"),
        O.epsiv = O.varepsilon = b("\\varepsilon ", "&epsilon;"),
        O.piv = O.varpi = b("\\varpi ", "&piv;"),
        O.sigmaf = O.sigmav = O.varsigma = b("\\varsigma ", "&sigmaf;"),
        O.thetav = O.vartheta = O.thetasym = b("\\vartheta ", "&thetasym;"),
        O.upsilon = O.upsi = b("\\upsilon ", "&upsilon;"),
        O.gammad = O.Gammad = O.digamma = b("\\digamma ", "&#989;"),
        O.kappav = O.varkappa = b("\\varkappa ", "&#1008;"),
        O.rhov = O.varrho = b("\\varrho ", "&#1009;"),
        O.pi = O["π"] = function() {
            return new Ce("\\pi ",yt.entityText("&pi;"),"pi")
        }
        ,
        O.lambda = function() {
            return new Ce("\\lambda ",yt.entityText("&lambda;"),"lambda")
        }
        ,
        O.Upsilon = O.Upsi = O.upsih = O.Upsih = function() {
            return new de("\\Upsilon ",yt("var", {
                style: "font-family: serif"
            }, [yt.entityText("&upsih;")]),"capital upsilon")
        }
        ,
        O.Gamma = O.Delta = O.Theta = O.Lambda = O.Xi = O.Pi = O.Sigma = O.Phi = O.Psi = O.Omega = O.forall = function(e) {
            return new me("\\" + e + " ",yt.entityText("&" + e + ";"))
        }
        ,
        Te = function(e) {
            function t(t) {
                var n = e.call(this) || this;
                return n.latexStr = t,
                n
            }
            return ut(t, e),
            t.prototype.createLeftOf = function(e) {
                var t, n, r, i, s = re.parse(this.latexStr);
                s.children().adopt(e.parent, e[mt], e[ft]),
                e[mt] = s.getEnd(ft),
                I(s.html()).insertBefore(e.domFrag()),
                s.finalizeInsert(e.options, e),
                (n = (t = s.getEnd(ft)) && t[ft]) && n.siblingCreated(e.options, mt),
                (i = (r = s.getEnd(mt)) && r[mt]) && i.siblingCreated(e.options, ft),
                e.parent.bubble((function(e) {
                    e.reflow()
                }
                ))
            }
            ,
            t.prototype.mathspeak = function() {
                return this.mathspeakOverride ? e.prototype.mathspeak.call(this) : re.parse(this.latexStr).mathspeak()
            }
            ,
            t.prototype.parser = function() {
                var e = re.parse(this.latexStr).children();
                return Z.succeed(e)
            }
            ,
            t
        }(ue),
        O["⁰"] = function() {
            return new Te("^0")
        }
        ,
        O["¹"] = function() {
            return new Te("^1")
        }
        ,
        O["²"] = function() {
            return new Te("^2")
        }
        ,
        O["³"] = function() {
            return new Te("^3")
        }
        ,
        O["⁴"] = function() {
            return new Te("^4")
        }
        ,
        O["⁵"] = function() {
            return new Te("^5")
        }
        ,
        O["⁶"] = function() {
            return new Te("^6")
        }
        ,
        O["⁷"] = function() {
            return new Te("^7")
        }
        ,
        O["⁸"] = function() {
            return new Te("^8")
        }
        ,
        O["⁹"] = function() {
            return new Te("^9")
        }
        ,
        O["¼"] = function() {
            return new Te("\\frac14")
        }
        ,
        O["½"] = function() {
            return new Te("\\frac12")
        }
        ,
        O["¾"] = function() {
            return new Te("\\frac34")
        }
        ,
        O["√"] = function() {
            return new Te("\\sqrt{}")
        }
        ,
        _e = function(e) {
            function t(t, n, r) {
                return e.call(this, t, n, void 0, r, !0) || this
            }
            return ut(t, e),
            t.prototype.contactWeld = function(e, t) {
                this.sharedSiblingMethod(e.options, t)
            }
            ,
            t.prototype.siblingCreated = function(e, t) {
                this.sharedSiblingMethod(e, t)
            }
            ,
            t.prototype.siblingDeleted = function(e, t) {
                this.sharedSiblingMethod(e, t)
            }
            ,
            t.prototype.sharedSiblingMethod = function(e, t) {
                if (t !== ft)
                    return this.domFrag().oneElement().className = x(this) ? "mq-binary-operator" : "",
                    this
            }
            ,
            t
        }(fe),
        O["+"] = function(e) {
            function t() {
                return e.call(this, "+", yt.text("+")) || this
            }
            return ut(t, e),
            t.prototype.mathspeak = function() {
                return x(this) ? "plus" : "positive"
            }
            ,
            t
        }(_e),
        Ae = function(e) {
            function t() {
                return e.call(this, "-", yt.entityText("&minus;")) || this
            }
            return ut(t, e),
            t.prototype.mathspeak = function() {
                return x(this) ? "minus" : "negative"
            }
            ,
            t
        }(_e),
        O["−"] = O["—"] = O["–"] = O["-"] = Ae,
        O["±"] = O.pm = O.plusmn = O.plusminus = function() {
            return new _e("\\pm ",yt.entityText("&plusmn;"),"plus-or-minus")
        }
        ,
        O.mp = O.mnplus = O.minusplus = function() {
            return new _e("\\mp ",yt.entityText("&#8723;"),"minus-or-plus")
        }
        ,
        L["*"] = O.sdot = O.cdot = y("\\cdot ", "&middot;", "*", "times"),
        Ie = function(e) {
            function t() {
                return e.call(this, "\\to ", yt.entityText("&rarr;"), "to") || this
            }
            return ut(t, e),
            t.prototype.deleteTowards = function(t, n) {
                if (t === mt) {
                    var r = n[mt];
                    return new P(r,this).remove(),
                    n[mt] = r[mt],
                    (new Ae).createLeftOf(n),
                    void n[mt].bubble((function(e) {
                        e.reflow()
                    }
                    ))
                }
                e.prototype.deleteTowards.call(this, t, n)
            }
            ,
            t
        }(fe),
        O["→"] = O.to = Ie,
        Re = function(e) {
            function t(t, n) {
                var r = this
                  , i = n ? "Strict" : "";
                return (r = e.call(this, t["ctrlSeq".concat(i)], yt.entityText(t["htmlEntity".concat(i)]), t["text".concat(i)], t["mathspeak".concat(i)]) || this).data = t,
                r.strict = n,
                r
            }
            return ut(t, e),
            t.prototype.swap = function(e) {
                this.strict = e;
                var t = e ? "Strict" : "";
                this.ctrlSeq = this.data["ctrlSeq".concat(t)],
                this.domFrag().children().replaceWith(I(yt.entityText(this.data["htmlEntity".concat(t)]))),
                this.textTemplate = [this.data["text".concat(t)]],
                this.mathspeakName = this.data["mathspeak".concat(t)]
            }
            ,
            t.prototype.deleteTowards = function(t, n) {
                if (t === mt && !this.strict)
                    return this.swap(!0),
                    void this.bubble((function(e) {
                        e.reflow()
                    }
                    ));
                e.prototype.deleteTowards.call(this, t, n)
            }
            ,
            t
        }(fe),
        Ne = {
            ctrlSeq: "\\le ",
            htmlEntity: "&le;",
            text: "≤",
            mathspeak: "less than or equal to",
            ctrlSeqStrict: "<",
            htmlEntityStrict: "&lt;",
            textStrict: "<",
            mathspeakStrict: "less than"
        },
        Pe = {
            ctrlSeq: "\\ge ",
            htmlEntity: "&ge;",
            text: "≥",
            mathspeak: "greater than or equal to",
            ctrlSeqStrict: ">",
            htmlEntityStrict: "&gt;",
            textStrict: ">",
            mathspeakStrict: "greater than"
        },
        Oe = function(e) {
            function t() {
                return e.call(this, Pe, !0) || this
            }
            return ut(t, e),
            t.prototype.createLeftOf = function(t) {
                var n, r = t[mt];
                if (r instanceof fe && "-" === r.ctrlSeq)
                    return n = r,
                    t[mt] = n[mt],
                    n.remove(),
                    (new Ie).createLeftOf(t),
                    void t[mt].bubble((function(e) {
                        e.reflow()
                    }
                    ));
                e.prototype.createLeftOf.call(this, t)
            }
            ,
            t
        }(Re),
        O["<"] = O.lt = function() {
            return new Re(Ne,!0)
        }
        ,
        O[">"] = O.gt = Oe,
        O["≤"] = O.le = O.leq = function() {
            return new Re(Ne,!1)
        }
        ,
        O["≥"] = O.ge = O.geq = function() {
            return new Re(Pe,!1)
        }
        ,
        O.infty = O.infin = O.infinity = v("\\infty ", "&infin;", "infinity"),
        O["≠"] = O.ne = O.neq = y("\\ne ", "&ne;", "not equal"),
        Le = function(e) {
            function t() {
                return e.call(this, "=", yt.text("="), "=", "equals") || this
            }
            return ut(t, e),
            t.prototype.createLeftOf = function(t) {
                var n = t[mt];
                if (n instanceof Re && n.strict)
                    return n.swap(!1),
                    void n.bubble((function(e) {
                        e.reflow()
                    }
                    ));
                e.prototype.createLeftOf.call(this, t)
            }
            ,
            t
        }(fe),
        O["="] = Le,
        O["×"] = O.times = O.cross = y("\\times ", "&times;", "[x]", "times"),
        O["÷"] = O.div = O.divide = O.divides = y("\\div ", "&divide;", "[/]", "over"),
        De = function(e) {
            function t() {
                return e.call(this, "\\sim ", yt.text("~"), "~", "tilde") || this
            }
            return ut(t, e),
            t.prototype.createLeftOf = function(n) {
                if (n[mt]instanceof t) {
                    var r = n[mt];
                    return n[mt] = r[mt],
                    r.remove(),
                    (new Fe).createLeftOf(n),
                    void n[mt].bubble((function(e) {
                        e.reflow()
                    }
                    ))
                }
                e.prototype.createLeftOf.call(this, n)
            }
            ,
            t
        }(fe),
        Fe = function(e) {
            function t() {
                return e.call(this, "\\approx ", yt.entityText("&approx;"), "≈", "approximately equal") || this
            }
            return ut(t, e),
            t.prototype.deleteTowards = function(t, n) {
                if (t === mt) {
                    var r = n[mt];
                    return new P(r,this).remove(),
                    n[mt] = r[mt],
                    (new De).createLeftOf(n),
                    void n[mt].bubble((function(e) {
                        e.reflow()
                    }
                    ))
                }
                e.prototype.deleteTowards.call(this, t, n)
            }
            ,
            t
        }(fe),
        O.tildeNbsp = v("~", " ", " "),
        O.sim = De,
        O["≈"] = O.approx = Fe,
        L["~"] = O.sim,
        O["~"] = O.tildeNbsp,
        U.interpretTildeAsSim = function(e) {
            var t = !!e;
            return O["~"] = t ? O.sim : O.tildeNbsp,
            t
        }
        ,
        ze = {
            sqrt: {
                width: "",
                html: function() {
                    return yt("svg", {
                        preserveAspectRatio: "none",
                        viewBox: "0 0 32 54"
                    }, [yt("path", {
                        d: "M0 33 L7 27 L12.5 47 L13 47 L30 0 L32 0 L13 54 L11 54 L4.5 31 L0 33"
                    })])
                }
            },
            "|": {
                width: ".4em",
                html: function() {
                    return yt("svg", {
                        preserveAspectRatio: "none",
                        viewBox: "0 0 10 54"
                    }, [yt("path", {
                        d: "M4.4 0 L4.4 54 L5.6 54 L5.6 0"
                    })])
                }
            },
            "[": {
                width: ".55em",
                html: function() {
                    return yt("svg", {
                        preserveAspectRatio: "none",
                        viewBox: "0 0 11 24"
                    }, [yt("path", {
                        d: "M8 0 L3 0 L3 24 L8 24 L8 23 L4 23 L4 1 L8 1"
                    })])
                }
            },
            "]": {
                width: ".55em",
                html: function() {
                    return yt("svg", {
                        preserveAspectRatio: "none",
                        viewBox: "0 0 11 24"
                    }, [yt("path", {
                        d: "M3 0 L8 0 L8 24 L3 24 L3 23 L7 23 L7 1 L3 1"
                    })])
                }
            },
            "(": {
                width: ".55em",
                html: function() {
                    return yt("svg", {
                        preserveAspectRatio: "none",
                        viewBox: "3 0 106 186"
                    }, [yt("path", {
                        d: "M85 0 A61 101 0 0 0 85 186 L75 186 A75 101 0 0 1 75 0"
                    })])
                }
            },
            ")": {
                width: ".55em",
                html: function() {
                    return yt("svg", {
                        preserveAspectRatio: "none",
                        viewBox: "3 0 106 186"
                    }, [yt("path", {
                        d: "M24 0 A61 101 0 0 1 24 186 L34 186 A75 101 0 0 0 34 0"
                    })])
                }
            },
            "{": {
                width: ".7em",
                html: function() {
                    return yt("svg", {
                        preserveAspectRatio: "none",
                        viewBox: "10 0 210 350"
                    }, [yt("path", {
                        d: "M170 0 L170 6 A47 52 0 0 0 123 60 L123 127 A35 48 0 0 1 88 175 A35 48 0 0 1 123 223 L123 290 A47 52 0 0 0 170 344 L170 350 L160 350 A58 49 0 0 1 102 301 L103 220 A45 40 0 0 0 58 180 L58 170 A45 40 0 0 0 103 130 L103 49 A58 49 0 0 1 161 0"
                    })])
                }
            },
            "}": {
                width: ".7em",
                html: function() {
                    return yt("svg", {
                        preserveAspectRatio: "none",
                        viewBox: "10 0 210 350"
                    }, [yt("path", {
                        d: "M60 0 L60 6 A47 52 0 0 1 107 60 L107 127 A35 48 0 0 0 142 175 A35 48 0 0 0 107 223 L107 290 A47 52 0 0 1 60 344 L60 350 L70 350 A58 49 0 0 0 128 301 L127 220 A45 40 0 0 1 172 180 L172 170 A45 40 0 0 1 127 130 L127 49 A58 49 0 0 0 70 0"
                    })])
                }
            },
            "&#8741;": {
                width: ".7em",
                html: function() {
                    return yt("svg", {
                        preserveAspectRatio: "none",
                        viewBox: "0 0 10 54"
                    }, [yt("path", {
                        d: "M3.2 0 L3.2 54 L4 54 L4 0 M6.8 0 L6.8 54 L6 54 L6 0"
                    })])
                }
            },
            "&lang;": {
                width: ".55em",
                html: function() {
                    return yt("svg", {
                        preserveAspectRatio: "none",
                        viewBox: "0 0 10 54"
                    }, [yt("path", {
                        d: "M6.8 0 L3.2 27 L6.8 54 L7.8 54 L4.2 27 L7.8 0"
                    })])
                }
            },
            "&rang;": {
                width: ".55em",
                html: function() {
                    return yt("svg", {
                        preserveAspectRatio: "none",
                        viewBox: "0 0 10 54"
                    }, [yt("path", {
                        d: "M3.2 0 L6.8 27 L3.2 54 L2.2 54 L5.8 27 L2.2 0"
                    })])
                }
            }
        },
        Be = function(e) {
            function t(t, n, r, i, s) {
                var o = e.call(this, t, new pe(1,(function(e) {
                    return yt.block(n, r, e[0])
                }
                ))) || this;
                return o.ariaLabel = i || t.replace(/^\\/, ""),
                o.mathspeakTemplate = ["Start" + o.ariaLabel + ",", "End" + o.ariaLabel],
                o.shouldNotSpeakDelimiters = s && s.shouldNotSpeakDelimiters,
                o
            }
            return ut(t, e),
            t.prototype.mathspeak = function(t) {
                return !this.shouldNotSpeakDelimiters || t && t.ignoreShorthand ? e.prototype.mathspeak.call(this) : this.foldChildren("", (function(e, n) {
                    return e + " " + n.mathspeak(t)
                }
                )).trim()
            }
            ,
            t
        }(ue),
        O.mathrm = function(e) {
            function t() {
                return e.call(this, "\\mathrm", "span", {
                    class: "mq-roman mq-font"
                }, "Roman Font", {
                    shouldNotSpeakDelimiters: !0
                }) || this
            }
            return ut(t, e),
            t.prototype.isTextBlock = function() {
                return !0
            }
            ,
            t
        }(Be),
        O.mathit = function() {
            return new Be("\\mathit","i",{
                class: "mq-font"
            },"Italic Font")
        }
        ,
        O.mathbf = function() {
            return new Be("\\mathbf","b",{
                class: "mq-font"
            },"Bold Font")
        }
        ,
        O.mathsf = function() {
            return new Be("\\mathsf","span",{
                class: "mq-sans-serif mq-font"
            },"Serif Font")
        }
        ,
        O.mathtt = function() {
            return new Be("\\mathtt","span",{
                class: "mq-monospace mq-font"
            },"Math Text")
        }
        ,
        O.underline = function() {
            return new Be("\\underline","span",{
                class: "mq-non-leaf mq-underline"
            },"Underline")
        }
        ,
        O.overline = O.bar = function() {
            return new Be("\\overline","span",{
                class: "mq-non-leaf mq-overline"
            },"Overline")
        }
        ,
        O.overrightarrow = function() {
            return new Be("\\overrightarrow","span",{
                class: "mq-non-leaf mq-overarrow mq-arrow-right"
            },"Over Right Arrow")
        }
        ,
        O.overleftarrow = function() {
            return new Be("\\overleftarrow","span",{
                class: "mq-non-leaf mq-overarrow mq-arrow-left"
            },"Over Left Arrow")
        }
        ,
        O.overleftrightarrow = function() {
            return new Be("\\overleftrightarrow ","span",{
                class: "mq-non-leaf mq-overarrow mq-arrow-leftright"
            },"Over Left and Right Arrow")
        }
        ,
        O.overarc = function() {
            return new Be("\\overarc","span",{
                class: "mq-non-leaf mq-overarc"
            },"Over Arc")
        }
        ,
        O.dot = function() {
            return new ue("\\dot",new pe(1,(function(e) {
                return yt("span", {
                    class: "mq-non-leaf"
                }, [yt("span", {
                    class: "mq-dot-recurring-inner"
                }, [yt("span", {
                    class: "mq-dot-recurring"
                }, [yt.text("˙")]), yt.block("span", {
                    class: "mq-empty-box"
                }, e[0])])])
            }
            )))
        }
        ,
        O.textcolor = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return ut(t, e),
            t.prototype.setColor = function(e) {
                this.color = e,
                this.domView = new pe(1,(function(t) {
                    return yt.block("span", {
                        class: "mq-textcolor",
                        style: "color:" + e
                    }, t[0])
                }
                )),
                this.ariaLabel = e.replace(/^\\/, ""),
                this.mathspeakTemplate = ["Start " + this.ariaLabel + ",", "End " + this.ariaLabel]
            }
            ,
            t.prototype.latexRecursive = function(e) {
                var t, n;
                this.checkCursorContextOpen(e),
                n = this.blocks[0],
                e.latex += "\\textcolor{" + this.color + "}{",
                null === (t = n.latexRecursive) || void 0 === t || t.call(n, e),
                e.latex += "}",
                this.checkCursorContextClose(e)
            }
            ,
            t.prototype.parser = function() {
                var t = this
                  , n = Z.optWhitespace
                  , r = Z.string
                  , i = Z.regex;
                return n.then(r("{")).then(i(/^[#\w\s.,()%-]*/)).skip(r("}")).then((function(n) {
                    return t.setColor(n),
                    e.prototype.parser.call(t)
                }
                ))
            }
            ,
            t.prototype.isStyleBlock = function() {
                return !0
            }
            ,
            t
        }(ue),
        O.class = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return ut(t, e),
            t.prototype.parser = function() {
                var t = this
                  , n = Z.string
                  , r = Z.regex;
                return Z.optWhitespace.then(n("{")).then(r(/^[-\w\s\\\xA0-\xFF]*/)).skip(n("}")).then((function(n) {
                    return t.cls = n || "",
                    t.domView = new pe(1,(function(e) {
                        return yt.block("span", {
                            class: "mq-class ".concat(n)
                        }, e[0])
                    }
                    )),
                    t.ariaLabel = n + " class",
                    t.mathspeakTemplate = ["Start " + t.ariaLabel + ",", "End " + t.ariaLabel],
                    e.prototype.parser.call(t)
                }
                ))
            }
            ,
            t.prototype.latexRecursive = function(e) {
                var t, n;
                this.checkCursorContextOpen(e),
                n = this.blocks[0],
                e.latex += "\\class{" + this.cls + "}{",
                null === (t = n.latexRecursive) || void 0 === t || t.call(n, e),
                e.latex += "}",
                this.checkCursorContextClose(e)
            }
            ,
            t.prototype.isStyleBlock = function() {
                return !0
            }
            ,
            t
        }(ue),
        qe = /^[\+\-]?[\d]+$/,
        G.prototype.charsThatBreakOutOfSupSub = "",
        He = function(e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.ctrlSeq = "_{...}^{...}",
                t
            }
            return ut(t, e),
            t.prototype.setEnds = function(e) {
                r("SupSub ends must be MathBlocks", e[mt]instanceof ge && e[ft]instanceof ge),
                this.ends = e
            }
            ,
            t.prototype.getEnd = function(e) {
                return this.ends[e]
            }
            ,
            t.prototype.createLeftOf = function(t) {
                if (this.replacedFragment || t[mt] || !t.options.supSubsRequireOperand)
                    return e.prototype.createLeftOf.call(this, t)
            }
            ,
            t.prototype.contactWeld = function(e) {
                var n, r, i, s, o, a, l;
                for (n = mt; n; n = n === mt && ft)
                    if (i = void 0,
                    (r = this[n])instanceof t) {
                        for (s = "sub"; s; s = "sub" === s && "sup")
                            o = this[s],
                            a = r[s],
                            o && (a ? o.isEmpty() ? i = new R(a,0,a.getEnd(mt)) : (o.domFrag().children().insAtDirEnd(-n, a.domFrag().oneElement()),
                            l = o.children().disown(),
                            i = new R(a,l.getEnd(ft),a.getEnd(mt)),
                            n === mt ? l.adopt(a, a.getEnd(ft), 0) : l.adopt(a, 0, a.getEnd(mt))) : r.addBlock(o.disown()),
                            this.placeCursor = function(e, t) {
                                return function(r) {
                                    r.insAtDirEnd(-n, e || t)
                                }
                            }(a, o));
                        this.remove(),
                        e && e[mt] === this && (n === ft && i ? i[mt] ? e.insRightOf(i[mt]) : e.insAtLeftEnd(i.parent) : e.insRightOf(r));
                        break
                    }
            }
            ,
            t.prototype.finalizeTree = function() {
                this.getEnd(mt).write = function(e, t) {
                    if (e.options.autoSubscriptNumerals && this === this.parent.sub && "0123456789".indexOf(t) >= 0) {
                        var n = this.chToCmd(t, e.options);
                        return n instanceof de ? e.deleteSelection() : e.clearSelection().insRightOf(this.parent),
                        n.createLeftOf(e.show()),
                        void e.controller.aria.queueTranslatableString("Baseline").alert(n.mathspeak({
                            createdLeftOf: e
                        }))
                    }
                    e[mt] && !e[ft] && !e.selection && e.options.charsThatBreakOutOfSupSub.indexOf(t) > -1 && (e.insRightOf(this.parent),
                    e.controller.aria.queueTranslatableString("Baseline")),
                    ge.prototype.write.call(this, e, t)
                }
            }
            ,
            t.prototype.moveTowards = function(t, n, r) {
                n.options.autoSubscriptNumerals && !this.sup ? n.insDirOf(t, this) : e.prototype.moveTowards.call(this, t, n, r)
            }
            ,
            t.prototype.deleteTowards = function(t, n) {
                if (n.options.autoSubscriptNumerals && this.sub) {
                    var r = this.sub.getEnd(-t);
                    r instanceof de ? r.remove() : r && r.deleteTowards(t, n.insAtDirEnd(-t, this.sub)),
                    this.sub.isEmpty() && (this.sub.deleteOutOf(mt, n.insAtLeftEnd(this.sub)),
                    this.sup && n.insDirOf(-t, this))
                } else
                    e.prototype.deleteTowards.call(this, t, n)
            }
            ,
            t.prototype.latexRecursive = function(e) {
                var t, n, r, i, s;
                this.checkCursorContextOpen(e),
                this.sub && (e.latex += "_{",
                s = e.latex.length,
                null === (n = (t = this.sub).latexRecursive) || void 0 === n || n.call(t, e),
                s === e.latex.length && (e.latex += " "),
                e.latex += "}"),
                this.sup && (e.latex += "^{",
                s = e.latex.length,
                null === (i = (r = this.sup).latexRecursive) || void 0 === i || i.call(r, e),
                s === e.latex.length && (e.latex += " "),
                e.latex += "}"),
                this.checkCursorContextClose(e)
            }
            ,
            t.prototype.text = function() {
                function e(e, t) {
                    var n = t && t.text() || "";
                    return t ? e + (1 === n.length ? n : "(" + (n || " ") + ")") : ""
                }
                return e("_", this.sub) + e("^", this.sup)
            }
            ,
            t.prototype.addBlock = function(e) {
                "sub" === this.supsub ? (this.sup = this.upInto = this.sub.upOutOf = e,
                e.adopt(this, this.sub, 0).downOutOf = this.sub,
                e.setDOM(I(yt("span", {
                    class: "mq-sup"
                })).append(e.domFrag().children()).prependTo(this.domFrag().oneElement()).oneElement()),
                N.linkElementByBlockNode(e.domFrag().oneElement(), e)) : (this.sub = this.downInto = this.sup.downOutOf = e,
                e.adopt(this, 0, this.sup).upOutOf = this.sup,
                this.domFrag().removeClass("mq-sup-only"),
                e.setDOM(I(yt("span", {
                    class: "mq-sub"
                })).append(e.domFrag().children()).appendTo(this.domFrag().oneElement()).oneElement()),
                N.linkElementByBlockNode(e.domFrag().oneElement(), e),
                this.domFrag().append(I(yt("span", {
                    style: "display:inline-block;width:0"
                }, [yt.text(C)]))));
                for (var t = 0; t < 2; t += 1)
                    !function(e, t, n, r) {
                        e[t].deleteOutOf = function(i, s) {
                            var o, a;
                            s.insDirOf(this[i] ? -i : i, this.parent),
                            this.isEmpty() || (o = this.getEnd(i),
                            this.children().disown().withDirAdopt(i, s.parent, s[i], s[-i]).domFrag().insDirOf(-i, s.domFrag()),
                            s[-i] = o),
                            e.supsub = n,
                            delete e[t],
                            delete e["".concat(r, "Into")],
                            (a = e[n])["".concat(r, "OutOf")] = k,
                            delete a.deleteOutOf,
                            "sub" === t && e.domFrag().addClass("mq-sup-only").children().last().remove(),
                            this.remove()
                        }
                    }(this, "sub sup".split(" ")[t], "sup sub".split(" ")[t], "down up".split(" ")[t])
            }
            ,
            t
        }(ue),
        Ue = function(e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.supsub = "sub",
                t.domView = new pe(1,(function(e) {
                    return yt("span", {
                        class: "mq-supsub mq-non-leaf"
                    }, [yt.block("span", {
                        class: "mq-sub"
                    }, e[0]), yt("span", {
                        style: "display:inline-block;width:0"
                    }, [yt.text(C)])])
                }
                )),
                t.textTemplate = ["_"],
                t.mathspeakTemplate = ["Subscript,", ", Baseline"],
                t.ariaLabel = "subscript",
                t
            }
            return ut(t, e),
            t.prototype.finalizeTree = function() {
                this.downInto = this.sub = this.getEnd(mt),
                this.sub.upOutOf = k,
                e.prototype.finalizeTree.call(this)
            }
            ,
            t
        }(He),
        O.subscript = O._ = Ue,
        O.superscript = O.supscript = O["^"] = function(e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.supsub = "sup",
                t.domView = new pe(1,(function(e) {
                    return yt("span", {
                        class: "mq-supsub mq-non-leaf mq-sup-only"
                    }, [yt.block("span", {
                        class: "mq-sup"
                    }, e[0])])
                }
                )),
                t.textTemplate = ["^(", ")"],
                t.ariaLabel = "superscript",
                t.mathspeakTemplate = ["Superscript,", ", Baseline"],
                t
            }
            return ut(t, e),
            t.prototype.mathspeak = function(t) {
                var n, r, i;
                return this.mathspeakOverride ? e.prototype.mathspeak.call(this) : void 0 === (n = this.upInto) || (r = w(n),
                t && t.ignoreShorthand || !qe.test(r)) ? e.prototype.mathspeak.call(this) : "0" === r ? "to the 0 power" : "2" === r ? "squared" : "3" === r ? "cubed" : (i = "",
                /^[+-]?\d{1,3}$/.test(r) && (/(11|12|13|4|5|6|7|8|9|0)$/.test(r) ? i = "th" : /1$/.test(r) ? i = "st" : /2$/.test(r) ? i = "nd" : /3$/.test(r) && (i = "rd")),
                "to the " + ("object" == typeof n ? n.mathspeak() : r) + i + " power")
            }
            ,
            t.prototype.finalizeTree = function() {
                this.upInto = this.sup = this.getEnd(ft),
                this.sup.downOutOf = k,
                e.prototype.finalizeTree.call(this)
            }
            ,
            t
        }(He),
        Ge = function(e) {
            function t(t, n, r) {
                var i, s = e.call(this) || this;
                return s.ariaLabel = r || t.replace(/^\\/, ""),
                i = new pe(2,(function(e) {
                    return yt("span", {
                        class: "mq-large-operator mq-non-leaf"
                    }, [yt("span", {
                        class: "mq-to"
                    }, [yt.block("span", {}, e[1])]), yt("big", {}, [yt.text(n)]), yt("span", {
                        class: "mq-from"
                    }, [yt.block("span", {}, e[0])])])
                }
                )),
                de.prototype.setCtrlSeqHtmlTextAndMathspeak.call(s, t, i),
                s
            }
            return ut(t, e),
            t.prototype.createLeftOf = function(t) {
                e.prototype.createLeftOf.call(this, t),
                t.options.sumStartsWithNEquals && (new we("n").createLeftOf(t),
                (new Le).createLeftOf(t))
            }
            ,
            t.prototype.latexRecursive = function(e) {
                var t, n, r, i, s;
                this.checkCursorContextOpen(e),
                e.latex += this.ctrlSeq + "_{",
                s = e.latex.length,
                null === (n = (t = this.getEnd(mt)).latexRecursive) || void 0 === n || n.call(t, e),
                e.latex.length === s && (e.latex += " "),
                e.latex += "}^{",
                s = e.latex.length,
                null === (i = (r = this.getEnd(ft)).latexRecursive) || void 0 === i || i.call(r, e),
                s === e.latex.length && (e.latex += " "),
                e.latex += "}",
                this.checkCursorContextClose(e)
            }
            ,
            t.prototype.mathspeak = function() {
                return this.mathspeakOverride ? e.prototype.mathspeak.call(this) : "Start " + this.ariaLabel + " from " + this.getEnd(mt).mathspeak() + " to " + this.getEnd(ft).mathspeak() + ", end " + this.ariaLabel + ", "
            }
            ,
            t.prototype.parser = function() {
                var e, t = Z.string, n = Z.optWhitespace, r = Z.succeed, i = re.block, s = this, o = s.blocks = [new ge, new ge];
                for (e = 0; e < o.length; e += 1)
                    o[e].adopt(s, s.getEnd(ft), 0);
                return n.then(t("_").or(t("^"))).then((function(e) {
                    var t = o["_" === e ? 0 : 1];
                    return i.then((function(e) {
                        return e.children().adopt(t, t.getEnd(ft), 0),
                        r(s)
                    }
                    ))
                }
                )).many().result(s)
            }
            ,
            t.prototype.finalizeTree = function() {
                var e = this.getEnd(mt)
                  , t = this.getEnd(ft);
                e.ariaLabel = "lower bound",
                t.ariaLabel = "upper bound",
                this.downInto = e,
                this.upInto = t,
                e.upOutOf = t,
                t.downOutOf = e
            }
            ,
            t
        }(ue),
        O["∑"] = O.sum = O.summation = function() {
            return new Ge("\\sum ","∑","sum")
        }
        ,
        O["∏"] = O.prod = O.product = function() {
            return new Ge("\\prod ","∏","product")
        }
        ,
        O.coprod = O.coproduct = function() {
            return new Ge("\\coprod ","∐","co product")
        }
        ,
        O["∫"] = O.int = O.integral = function(e) {
            function t() {
                var t = e.call(this, "\\int ", "", "integral") || this;
                return t.ariaLabel = "integral",
                t.domView = new pe(2,(function(e) {
                    return yt("span", {
                        class: "mq-int mq-non-leaf"
                    }, [yt("big", {}, [yt.text("∫")]), yt("span", {
                        class: "mq-supsub mq-non-leaf"
                    }, [yt("span", {
                        class: "mq-sup"
                    }, [yt.block("span", {
                        class: "mq-sup-inner"
                    }, e[1])]), yt.block("span", {
                        class: "mq-sub"
                    }, e[0]), yt("span", {
                        style: "display:inline-block;width:0"
                    }, [yt.text(C)])])])
                }
                )),
                t
            }
            return ut(t, e),
            t.prototype.createLeftOf = function(e) {
                ue.prototype.createLeftOf.call(this, e)
            }
            ,
            t
        }(Ge),
        We = O.frac = O.dfrac = O.cfrac = O.fraction = function(e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.ctrlSeq = "\\frac",
                t.domView = new pe(2,(function(e) {
                    return yt("span", {
                        class: "mq-fraction mq-non-leaf"
                    }, [yt.block("span", {
                        class: "mq-numerator"
                    }, e[0]), yt.block("span", {
                        class: "mq-denominator"
                    }, e[1]), yt("span", {
                        style: "display:inline-block;width:0"
                    }, [yt.text(C)])])
                }
                )),
                t.textTemplate = ["(", ")/(", ")"],
                t
            }
            return ut(t, e),
            t.prototype.finalizeTree = function() {
                var e = this.getEnd(mt)
                  , t = this.getEnd(ft);
                this.upInto = t.upOutOf = e,
                this.downInto = e.downOutOf = t,
                e.ariaLabel = "numerator",
                t.ariaLabel = "denominator",
                this.getFracDepth() > 1 ? this.mathspeakTemplate = ["StartNestedFraction,", "NestedOver", ", EndNestedFraction"] : this.mathspeakTemplate = ["StartFraction,", "Over", ", EndFraction"]
            }
            ,
            t.prototype.mathspeak = function(t) {
                var n, r, i, s, o, a, l;
                if (t && t.createdLeftOf)
                    return t.createdLeftOf.parent.mathspeak();
                if (this.mathspeakOverride)
                    return e.prototype.mathspeak.call(this);
                if (n = w(this.getEnd(mt)),
                r = w(this.getEnd(ft)),
                (!t || !t.ignoreShorthand) && qe.test(n) && qe.test(r) && (i = "1" === n || "-1" === n,
                s = "",
                "2" === r ? s = i ? "half" : "halves" : "3" === r ? s = i ? "third" : "thirds" : "4" === r ? s = i ? "quarter" : "quarters" : "5" === r ? s = i ? "fifth" : "fifths" : "6" === r ? s = i ? "sixth" : "sixths" : "7" === r ? s = i ? "seventh" : "sevenths" : "8" === r ? s = i ? "eighth" : "eighths" : "9" === r && (s = i ? "ninth" : "ninths"),
                "" !== s)) {
                    for (o = "",
                    a = !1,
                    l = this[mt]; l && void 0 !== l[mt]; l = l[mt])
                        if ("\\ " !== l.ctrlSeq) {
                            if (!qe.test(l.ctrlSeq || "")) {
                                a = !1;
                                break
                            }
                            a = !0
                        }
                    return a && (o += "and "),
                    o + (this.getEnd(mt).mathspeak() + " ") + s
                }
                return e.prototype.mathspeak.call(this)
            }
            ,
            t.prototype.getFracDepth = function() {
                var e = function(t, n) {
                    return t instanceof te && t.ctrlSeq && t.ctrlSeq.toLowerCase().search("frac") >= 0 && (n += 1),
                    t && t.parent ? e(t.parent, n) : n
                };
                return e(this, 0)
            }
            ,
            t
        }(ue),
        Ve = O.over = L["/"] = function(e) {
            function n() {
                return null !== e && e.apply(this, arguments) || this
            }
            return ut(n, e),
            n.prototype.createLeftOf = function(n) {
                var r, i, s;
                if (!this.replacedFragment) {
                    if (r = n[mt],
                    !n.options.typingSlashCreatesNewFraction)
                        for (; r && !(r instanceof fe || r instanceof (O.text || t) || r instanceof Ge || "\\ " === r.ctrlSeq || /^[,;:]$/.test(r.ctrlSeq)); )
                            r = r[mt];
                    r instanceof Ge && r[ft]instanceof He && ((i = (r = r[ft])[ft])instanceof He && i.ctrlSeq != r.ctrlSeq && (r = r[ft])),
                    r === n[mt] || n.isTooDeep(1) || (i = r[ft],
                    s = n[mt],
                    this.replaces(new P(i || n.parent.getEnd(mt),s)),
                    n[mt] = r)
                }
                e.prototype.createLeftOf.call(this, n)
            }
            ,
            n
        }(We),
        $e = function() {
            return new de("\\operatorname{ans}",yt("span", {
                class: "mq-ans"
            }, [yt.text("ans")]),"ans")
        }
        ,
        O.ans = $e,
        je = function() {
            return new de("\\%\\operatorname{of}",yt("span", {
                class: "mq-nonSymbola mq-operator-name"
            }, [yt.text("% of ")]),"percent of")
        }
        ,
        O.percent = O.percentof = je,
        Ke = function(e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.tokenId = "",
                t.ctrlSeq = "\\token",
                t.textTemplate = ["token(", ")"],
                t.mathspeakTemplate = ["StartToken,", ", EndToken"],
                t.ariaLabel = "token",
                t
            }
            return ut(t, e),
            t.prototype.html = function() {
                var e = yt("span", {
                    class: "mq-token mq-ignore-mousedown",
                    "data-mq-token": this.tokenId
                });
                return this.setDOM(e),
                N.linkElementByCmdNode(e, this),
                e
            }
            ,
            t.prototype.latexRecursive = function(e) {
                this.checkCursorContextOpen(e),
                e.latex += "\\token{" + this.tokenId + "}",
                this.checkCursorContextClose(e)
            }
            ,
            t.prototype.mathspeak = function() {
                if (this.mathspeakOverride)
                    return e.prototype.mathspeak.call(this);
                var t = [];
                return this.domFrag().children().eachElement((function(e) {
                    var n = e.getAttribute("aria-label");
                    "string" == typeof n && "" !== n && t.push(n)
                }
                )),
                t.length > 0 ? t.join(" ").trim() : "token " + this.tokenId
            }
            ,
            t.prototype.parser = function() {
                var e = this;
                return re.block.map((function(t) {
                    var n = t.getEnd(mt);
                    if (n)
                        for (e.tokenId += n.ctrlSeq; n = n[ft]; )
                            e.tokenId += n.ctrlSeq;
                    return e
                }
                ))
            }
            ,
            t
        }(de),
        O.token = Ke,
        Ze = function(e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.ctrlSeq = "\\sqrt",
                t.domView = new pe(1,(function(e) {
                    return yt("span", {
                        class: "mq-non-leaf mq-sqrt-container"
                    }, [yt("span", {
                        class: "mq-scaled mq-sqrt-prefix"
                    }, [ze.sqrt.html()]), yt.block("span", {
                        class: "mq-non-leaf mq-sqrt-stem"
                    }, e[0])])
                }
                )),
                t.textTemplate = ["sqrt(", ")"],
                t.mathspeakTemplate = ["StartRoot,", ", EndRoot"],
                t.ariaLabel = "root",
                t
            }
            return ut(t, e),
            t.prototype.parser = function() {
                return re.optBlock.then((function(e) {
                    return re.block.map((function(t) {
                        var n = new Ye;
                        return n.blocks = [e, t],
                        e.adopt(n, 0, 0),
                        t.adopt(n, e, 0),
                        n
                    }
                    ))
                }
                )).or(e.prototype.parser.call(this))
            }
            ,
            t
        }(ue),
        O.sqrt = Ze,
        O.hat = function(e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.ctrlSeq = "\\hat",
                t.domView = new pe(1,(function(e) {
                    return yt("span", {
                        class: "mq-non-leaf"
                    }, [yt("span", {
                        class: "mq-hat-prefix"
                    }, [yt.text("^")]), yt.block("span", {
                        class: "mq-hat-stem"
                    }, e[0])])
                }
                )),
                t.textTemplate = ["hat(", ")"],
                t
            }
            return ut(t, e),
            t
        }(ue),
        Ye = function(e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.domView = new pe(2,(function(e) {
                    return yt("span", {
                        class: "mq-nthroot-container mq-non-leaf"
                    }, [yt.block("sup", {
                        class: "mq-nthroot mq-non-leaf"
                    }, e[0]), yt("span", {
                        class: "mq-scaled mq-sqrt-container"
                    }, [yt("span", {
                        class: "mq-sqrt-prefix mq-scaled"
                    }, [ze.sqrt.html()]), yt.block("span", {
                        class: "mq-sqrt-stem mq-non-leaf"
                    }, e[1])])])
                }
                )),
                t.textTemplate = ["sqrt[", "](", ")"],
                t
            }
            return ut(t, e),
            t.prototype.latexRecursive = function(e) {
                var t, n, r, i;
                this.checkCursorContextOpen(e),
                e.latex += "\\sqrt[",
                null === (n = (t = this.getEnd(mt)).latexRecursive) || void 0 === n || n.call(t, e),
                e.latex += "]{",
                null === (i = (r = this.getEnd(ft)).latexRecursive) || void 0 === i || i.call(r, e),
                e.latex += "}",
                this.checkCursorContextClose(e)
            }
            ,
            t.prototype.mathspeak = function() {
                var t, n;
                return this.mathspeakOverride ? e.prototype.mathspeak.call(this) : (t = this.getEnd(mt).mathspeak(),
                n = this.getEnd(ft).mathspeak(),
                this.getEnd(mt).ariaLabel = "Index",
                this.getEnd(ft).ariaLabel = "Radicand",
                "3" === t ? "Start Cube Root, " + n + ", End Cube Root" : "Root Index " + t + ", Start Root, " + n + ", End Root")
            }
            ,
            t
        }(Ze),
        O.nthroot = Ye,
        O.cbrt = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return ut(t, e),
            t.prototype.createLeftOf = function(t) {
                e.prototype.createLeftOf.call(this, t),
                new be("3").createLeftOf(t),
                t.controller.moveRight()
            }
            ,
            t
        }(Ye),
        Xe = function(e) {
            function t(t, n, r) {
                var i = new pe(1,(function(e) {
                    return yt("span", {
                        class: "mq-non-leaf"
                    }, [yt("span", {
                        class: "mq-diacritic-above"
                    }, [n]), yt.block("span", {
                        class: "mq-diacritic-stem"
                    }, e[0])])
                }
                ));
                return e.call(this, t, i, r) || this
            }
            return ut(t, e),
            t
        }(ue),
        O.vec = function() {
            return new Xe("\\vec",yt.entityText("&rarr;"),["vec(", ")"])
        }
        ,
        O.tilde = function() {
            return new Xe("\\tilde",yt.text("~"),["tilde(", ")"])
        }
        ,
        Je = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return ut(t, e),
            t.prototype.setDOM = function(t) {
                var n, r;
                return e.prototype.setDOM.call(this, t),
                (r = this.domFrag().children()).isEmpty() || (this.delimFrags = ((n = {})[mt] = r.first(),
                n[ft] = r.last(),
                n)),
                this
            }
            ,
            t
        }(ue),
        Qe = function(e) {
            function t(t, n, r, i, s) {
                var o, a = e.call(this, "\\left" + i, void 0, [n, r]) || this;
                return a.side = t,
                a.sides = ((o = {})[mt] = {
                    ch: n,
                    ctrlSeq: i
                },
                o[ft] = {
                    ch: r,
                    ctrlSeq: s
                },
                o),
                a
            }
            return ut(t, e),
            t.prototype.numBlocks = function() {
                return 1
            }
            ,
            t.prototype.html = function() {
                var t = this
                  , n = this.getSymbol(mt)
                  , r = this.getSymbol(ft);
                return this.domView = new pe(1,(function(e) {
                    return yt("span", {
                        class: "mq-non-leaf mq-bracket-container"
                    }, [yt("span", {
                        style: "width:" + n.width,
                        class: "mq-scaled mq-bracket-l mq-paren" + (t.side === ft ? " mq-ghost" : "")
                    }, [n.html()]), yt.block("span", {
                        style: "margin-left:" + n.width + ";margin-right:" + r.width,
                        class: "mq-bracket-middle mq-non-leaf"
                    }, e[0]), yt("span", {
                        style: "width:" + r.width,
                        class: "mq-scaled mq-bracket-r mq-paren" + (t.side === mt ? " mq-ghost" : "")
                    }, [r.html()])])
                }
                )),
                e.prototype.html.call(this)
            }
            ,
            t.prototype.getSymbol = function(e) {
                var t = this.sides[e || ft].ch;
                return ze[t] || {
                    width: "0",
                    html: ""
                }
            }
            ,
            t.prototype.latexRecursive = function(e) {
                var t, n;
                this.checkCursorContextOpen(e),
                e.latex += "\\left" + this.sides[mt].ctrlSeq,
                null === (n = (t = this.getEnd(mt)).latexRecursive) || void 0 === n || n.call(t, e),
                e.latex += "\\right" + this.sides[ft].ctrlSeq,
                this.checkCursorContextClose(e)
            }
            ,
            t.prototype.mathspeak = function(t) {
                var n, r, i;
                if (this.mathspeakOverride)
                    return (null == t ? void 0 : t.createdLeftOf) ? this.mathspeakOverride(this.sides[this.side].ch) : e.prototype.mathspeak.call(this);
                if (n = this.sides[mt].ch,
                r = this.sides[ft].ch,
                "|" === n && "|" === r)
                    this.mathspeakTemplate = ["StartAbsoluteValue,", ", EndAbsoluteValue"],
                    this.ariaLabel = "absolute value";
                else {
                    if (t && t.createdLeftOf && this.side)
                        return i = "",
                        this.side === mt ? i = this.textTemplate[0] : this.side === ft && (i = this.textTemplate[1]),
                        (this.side === mt ? "left " : "right ") + tt[i];
                    this.mathspeakTemplate = ["left " + tt[n] + ",", ", right " + tt[r]],
                    this.ariaLabel = tt[n] + " block"
                }
                return e.prototype.mathspeak.call(this)
            }
            ,
            t.prototype.matchBrack = function(e, n, r) {
                return r instanceof t && r.side && r.side !== -n && (!e.restrictMismatchedBrackets || et[this.sides[this.side].ch] === r.sides[r.side].ch || {
                    "(": "]",
                    "[": ")"
                }[this.sides[mt].ch] === r.sides[ft].ch) && r
            }
            ,
            t.prototype.closeOpposing = function(e) {
                e.side = 0,
                e.sides[this.side] = this.sides[this.side];
                var t = e.delimFrags[this.side === mt ? mt : ft].removeClass("mq-ghost");
                this.replaceBracket(t, this.side)
            }
            ,
            t.prototype.createLeftOf = function(t) {
                var n, r, i;
                this.replacedFragment || (r = t.options,
                n = "|" === this.sides[mt].ch ? this.matchBrack(r, ft, t[ft]) || this.matchBrack(r, mt, t[mt]) || this.matchBrack(r, 0, t.parent.parent) : this.matchBrack(r, -this.side, t[-this.side]) || this.matchBrack(r, -this.side, t.parent.parent)),
                n ? (i = this.side = -n.side,
                this.closeOpposing(n),
                n === t.parent.parent && t[i] && new P(t[i],t.parent.getEnd(i),-i).disown().withDirAdopt(-i, n.parent, n, n[i]).domFrag().insDirOf(i, n.domFrag()),
                n.bubble((function(e) {
                    e.reflow()
                }
                ))) : (i = (n = this).side,
                n.replacedFragment ? n.side = 0 : t[-i] && (n.replaces(new P(t[-i],t.parent.getEnd(-i),i)),
                t[-i] = 0),
                e.prototype.createLeftOf.call(this, t)),
                i === mt ? t.insAtLeftEnd(n.getEnd(mt)) : t.insRightOf(n)
            }
            ,
            t.prototype.placeCursor = function() {}
            ,
            t.prototype.unwrap = function() {
                this.getEnd(mt).children().disown().adopt(this.parent, this, this[ft]).domFrag().insertAfter(this.domFrag()),
                this.remove()
            }
            ,
            t.prototype.deleteSide = function(e, t, n) {
                var r, i, s, o, a, l = this.parent, c = this[e], h = l.getEnd(e);
                if (e === this.side)
                    return this.unwrap(),
                    void (c ? n.insDirOf(-e, c) : n.insAtDirEnd(e, l));
                if (r = n.options,
                i = !this.side,
                this.side = -e,
                this.matchBrack(r, e, this.getEnd(mt).getEnd(this.side)))
                    this.closeOpposing(this.getEnd(mt).getEnd(this.side)),
                    s = this.getEnd(mt).getEnd(e),
                    this.unwrap(),
                    s && s.siblingCreated(n.options, e),
                    c ? n.insDirOf(-e, c) : n.insAtDirEnd(e, l);
                else {
                    if (this.matchBrack(r, e, this.parent.parent))
                        this.parent.parent.closeOpposing(this),
                        this.parent.parent.unwrap();
                    else {
                        if (t && i)
                            return this.unwrap(),
                            void (c ? n.insDirOf(-e, c) : n.insAtDirEnd(e, l));
                        this.sides[e] = function(e) {
                            var t = e.side
                              , n = e.sides[t];
                            return {
                                ch: et[n.ch],
                                ctrlSeq: et[n.ctrlSeq]
                            }
                        }(this),
                        this.delimFrags[mt].removeClass("mq-ghost"),
                        this.delimFrags[ft].removeClass("mq-ghost"),
                        o = this.delimFrags[e].addClass("mq-ghost"),
                        this.replaceBracket(o, e)
                    }
                    c ? (s = (a = this.getEnd(mt)).getEnd(e),
                    a.domFrag().removeClass("mq-empty"),
                    new P(c,h,-e).disown().withDirAdopt(-e, a, s, 0).domFrag().insAtDirEnd(e, a.domFrag().oneElement()),
                    s && s.siblingCreated(n.options, e),
                    n.insDirOf(-e, c)) : t ? n.insDirOf(e, this) : n.insAtDirEnd(e, this.getEnd(mt))
                }
            }
            ,
            t.prototype.replaceBracket = function(e, t) {
                var n, r, i = this.getSymbol(t);
                e.children().replaceWith(I(i.html())),
                e.oneElement().style.width = i.width,
                t === mt ? (n = e.next()).isEmpty() || (n.oneElement().style.marginLeft = i.width) : (r = e.prev()).isEmpty() || (r.oneElement().style.marginRight = i.width)
            }
            ,
            t.prototype.deleteTowards = function(e, t) {
                this.deleteSide(-e, !1, t)
            }
            ,
            t.prototype.finalizeTree = function() {
                this.getEnd(mt).deleteOutOf = function(e, t) {
                    this.parent.deleteSide(e, !0, t)
                }
                ,
                this.finalizeTree = this.intentionalBlur = function() {
                    this.delimFrags[this.side === mt ? ft : mt].removeClass("mq-ghost"),
                    this.side = 0
                }
            }
            ,
            t.prototype.siblingCreated = function(e, t) {
                t === -this.side && this.finalizeTree()
            }
            ,
            t
        }(Je),
        et = {
            "(": ")",
            ")": "(",
            "[": "]",
            "]": "[",
            "{": "}",
            "}": "{",
            "\\{": "\\}",
            "\\}": "\\{",
            "&lang;": "&rang;",
            "&rang;": "&lang;",
            "\\langle ": "\\rangle ",
            "\\rangle ": "\\langle ",
            "|": "|",
            "\\lVert ": "\\rVert ",
            "\\rVert ": "\\lVert "
        },
        tt = {
            "&lang;": "angle-bracket",
            "&rang;": "angle-bracket",
            "|": "pipe"
        },
        S("(", "", "parenthesis"),
        S("[", "", "bracket"),
        S("{", "\\{", "brace"),
        O.langle = function() {
            return new Qe(mt,"&lang;","&rang;","\\langle ","\\rangle ")
        }
        ,
        O.rangle = function() {
            return new Qe(ft,"&lang;","&rang;","\\langle ","\\rangle ")
        }
        ,
        L["|"] = function() {
            return new Qe(mt,"|","|","|","|")
        }
        ,
        O.lVert = function() {
            return new Qe(mt,"&#8741;","&#8741;","\\lVert ","\\rVert ")
        }
        ,
        O.rVert = function() {
            return new Qe(ft,"&#8741;","&#8741;","\\lVert ","\\rVert ")
        }
        ,
        O.left = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return ut(t, e),
            t.prototype.parser = function() {
                var e = Z.regex
                  , t = Z.string
                  , n = Z.optWhitespace;
                return n.then(e(/^(?:[([|]|\\\{|\\langle(?![a-zA-Z])|\\lVert(?![a-zA-Z]))/)).then((function(r) {
                    var i = r.replace(/^\\/, "");
                    return "\\langle" == r && (i = "&lang;",
                    r += " "),
                    "\\lVert" == r && (i = "&#8741;",
                    r += " "),
                    re.then((function(s) {
                        return t("\\right").skip(n).then(e(/^(?:[\])|]|\\\}|\\rangle(?![a-zA-Z])|\\rVert(?![a-zA-Z]))/)).map((function(e) {
                            var t, n = e.replace(/^\\/, "");
                            return "\\rangle" == e && (n = "&rang;",
                            e += " "),
                            "\\rVert" == e && (n = "&#8741;",
                            e += " "),
                            (t = new Qe(0,i,n,r,e)).blocks = [s],
                            s.adopt(t, 0, 0),
                            t
                        }
                        ))
                    }
                    ))
                }
                ))
            }
            ,
            t
        }(ue),
        O.right = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return ut(t, e),
            t.prototype.parser = function() {
                return Z.fail("unmatched \\right")
            }
            ,
            t
        }(ue),
        nt = ze["("],
        rt = ze[")"],
        it = function(e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.ctrlSeq = "\\binom",
                t.domView = new pe(2,(function(e) {
                    return yt("span", {
                        class: "mq-non-leaf mq-bracket-container"
                    }, [yt("span", {
                        style: "width:" + nt.width,
                        class: "mq-paren mq-bracket-l mq-scaled"
                    }, [nt.html()]), yt("span", {
                        style: "margin-left:" + nt.width + "; margin-right:" + rt.width,
                        class: "mq-non-leaf mq-bracket-middle"
                    }, [yt("span", {
                        class: "mq-array mq-non-leaf"
                    }, [yt.block("span", {}, e[0]), yt.block("span", {}, e[1])])]), yt("span", {
                        style: "width:" + rt.width,
                        class: "mq-paren mq-bracket-r mq-scaled"
                    }, [rt.html()])])
                }
                )),
                t.textTemplate = ["choose(", ",", ")"],
                t.mathspeakTemplate = ["StartBinomial,", "Choose", ", EndBinomial"],
                t.ariaLabel = "binomial",
                t
            }
            return ut(t, e),
            t
        }(Je),
        O.binom = O.binomial = it,
        O.choose = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return ut(t, e),
            t.prototype.createLeftOf = function(e) {
                Ve.prototype.createLeftOf(e)
            }
            ,
            t
        }(it),
        st = function(e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.ctrlSeq = "\\MathQuillMathField",
                t.domView = new pe(1,(function(e) {
                    return yt("span", {
                        class: "mq-editable-field"
                    }, [yt.block("span", {
                        class: "mq-root-block",
                        "aria-hidden": "true"
                    }, e[0])])
                }
                )),
                t
            }
            return ut(t, e),
            t.prototype.parser = function() {
                var t = this
                  , n = Z.string
                  , r = Z.regex
                  , i = Z.succeed;
                return n("[").then(r(/^[a-z][a-z0-9]*/i)).skip(n("]")).map((function(e) {
                    t.name = e
                }
                )).or(i(void 0)).then(e.prototype.parser.call(this))
            }
            ,
            t.prototype.finalizeTree = function(e) {
                var t = new ce(this.getEnd(mt),this.domFrag().oneElement(),e);
                t.KIND_OF_MQ = "MathField",
                t.editable = !0,
                t.createTextarea(),
                t.editablesTextareaEvents(),
                t.cursor.insAtRightEnd(t.root),
                m(t.root),
                function e(t) {
                    if (t.parentNode && !I(t).hasClass("mq-root-block") && e(t.parentNode),
                    t.nodeType === Node.ELEMENT_NODE) {
                        var n = t;
                        "true" === n.getAttribute("aria-hidden") && (n.removeAttribute("aria-hidden"),
                        I(t).children().eachElement((function(e) {
                            e.setAttribute("aria-hidden", "true")
                        }
                        )))
                    }
                }(this.domFrag().parent().oneElement()),
                this.domFrag().oneElement().removeAttribute("aria-hidden")
            }
            ,
            t.prototype.registerInnerField = function(e, t) {
                var n = new t(this.getEnd(mt).controller);
                e[this.name] = n,
                e.push(n)
            }
            ,
            t.prototype.latexRecursive = function(e) {
                var t, n;
                this.checkCursorContextOpen(e),
                null === (n = (t = this.getEnd(mt)).latexRecursive) || void 0 === n || n.call(t, e),
                this.checkCursorContextClose(e)
            }
            ,
            t.prototype.text = function() {
                return this.getEnd(mt).text()
            }
            ,
            t
        }(ue),
        O.editable = O.MathQuillMathField = st,
        ot = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return ut(t, e),
            t.prototype.setOptions = function(e) {
                function t() {
                    return ""
                }
                return this.text = e.text || t,
                this.domView = new pe(0,(function() {
                    return yt("span", {}, [s(e.htmlString || "")])
                }
                )),
                this.latex = e.latex || t,
                this
            }
            ,
            t.prototype.latexRecursive = function(e) {
                this.checkCursorContextOpen(e),
                e.latex += this.latex(),
                this.checkCursorContextClose(e)
            }
            ,
            t.prototype.parser = function() {
                var e = this
                  , t = Z.string
                  , n = Z.regex
                  , r = Z.succeed;
                return t("{").then(n(/^[a-z][a-z0-9]*/i)).skip(t("}")).then((function(i) {
                    return t("[").then(n(/^[-\w\s]*/)).skip(t("]")).or(r(void 0)).map((function(t) {
                        return e.setOptions(H[i](t))
                    }
                    ))
                }
                ))
            }
            ,
            t
        }(de),
        O.embed = ot,
        at = function(e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.ctrlSeq = "\\text",
                t.ariaLabel = "Text",
                t.mathspeakTemplate = ["StartText", "EndText"],
                t
            }
            return ut(t, e),
            t.prototype.replaces = function(e) {
                e instanceof P ? this.replacedText = e.remove().domFrag().text() : "string" == typeof e && (this.replacedText = e)
            }
            ,
            t.prototype.setDOMFrag = function(t) {
                var n, r;
                return e.prototype.setDOM.call(this, t),
                (n = this.getEnd(mt)) && ((r = this.domFrag().children()).isEmpty() || n.setDOM(r.oneText())),
                this
            }
            ,
            t.prototype.createLeftOf = function(t) {
                var n, r, i, s = this;
                if (e.prototype.createLeftOf.call(this, t),
                t.insAtRightEnd(s),
                s.replacedText)
                    for (n = 0; n < s.replacedText.length; n += 1)
                        s.write(t, s.replacedText.charAt(n));
                (r = s[ft]) && r.siblingCreated(t.options, mt),
                (i = s[mt]) && i.siblingCreated(t.options, ft),
                s.bubble((function(e) {
                    e.reflow()
                }
                ))
            }
            ,
            t.prototype.parser = function() {
                var e = this
                  , t = Z.string
                  , n = Z.regex;
                return Z.optWhitespace.then(t("{")).then(n(/^[^}]*/)).skip(t("}")).map((function(t) {
                    return 0 === t.length ? new P(0,0) : (new lt(t).adopt(e, 0, 0),
                    e)
                }
                ))
            }
            ,
            t.prototype.textContents = function() {
                return this.foldChildren("", (function(e, t) {
                    return e + t.textStr
                }
                ))
            }
            ,
            t.prototype.text = function() {
                return '"' + this.textContents() + '"'
            }
            ,
            t.prototype.latexRecursive = function(e) {
                this.checkCursorContextOpen(e);
                var t = this.textContents();
                t.length > 0 && (e.latex += this.ctrlSeq + "{",
                e.latex += t.replace(/\\/g, "\\backslash ").replace(/[{}]/g, "\\$&"),
                e.latex += "}"),
                this.checkCursorContextClose(e)
            }
            ,
            t.prototype.html = function() {
                var e = yt("span", {
                    class: "mq-text-mode"
                }, [yt.text(this.textContents())]);
                return this.setDOM(e),
                N.linkElementByCmdNode(e, this),
                e
            }
            ,
            t.prototype.mathspeak = function(t) {
                return t && t.ignoreShorthand ? this.mathspeakOverride ? e.prototype.mathspeak.call(this) : this.mathspeakTemplate[0] + ", " + this.textContents() + ", " + this.mathspeakTemplate[1] : this.textContents()
            }
            ,
            t.prototype.isTextBlock = function() {
                return !0
            }
            ,
            t.prototype.moveTowards = function(e, t) {
                t.insAtDirEnd(-e, this),
                t.controller.aria.queueDirEndOf(-e, t.parent, !0)
            }
            ,
            t.prototype.moveOutOf = function(e, t) {
                t.insDirOf(e, this),
                t.controller.aria.queueDirOf(e, this)
            }
            ,
            t.prototype.unselectInto = function(e, t) {
                this.moveTowards(e, t)
            }
            ,
            t.prototype.selectTowards = function(e, t) {
                ue.prototype.selectTowards.call(this, e, t)
            }
            ,
            t.prototype.deleteTowards = function(e, t) {
                ue.prototype.deleteTowards.call(this, e, t)
            }
            ,
            t.prototype.selectOutOf = function(e, t) {
                t.insDirOf(e, this)
            }
            ,
            t.prototype.deleteOutOf = function(e, t) {
                this.isEmpty() && t.insRightOf(this)
            }
            ,
            t.prototype.write = function(n, r) {
                var i, s, o;
                n.show().deleteSelection(),
                "$" !== r ? (i = n[mt]) ? i instanceof lt && i.appendText(r) : new lt(r).createLeftOf(n) : this.isEmpty() ? (n.insRightOf(this),
                new me("\\$",yt.text("$")).createLeftOf(n)) : n[ft] ? n[mt] ? (s = new t,
                (o = this.getEnd(mt)) && (o.disown().domFrag().detach(),
                o.adopt(s, 0, 0)),
                n.insLeftOf(this),
                e.prototype.createLeftOf.call(s, n)) : n.insLeftOf(this) : n.insRightOf(this),
                this.bubble((function(e) {
                    e.reflow()
                }
                )),
                n.controller.aria.alert(r)
            }
            ,
            t.prototype.writeLatex = function(e, t) {
                var n = e[mt];
                n ? n instanceof lt && n.appendText(t) : new lt(t).createLeftOf(e),
                this.bubble((function(e) {
                    e.reflow()
                }
                ))
            }
            ,
            t.prototype.seek = function(e, t) {
                var n, r, i, s, o, a, l, c, h, p, u, d, m, f, g;
                if (t.hide(),
                n = E(this)) {
                    for (r = this.domFrag().children().oneText(),
                    (i = document.createRange()).selectNodeContents(r),
                    1 === (s = i.getClientRects()).length ? (a = (o = s[0]).width,
                    l = o.left,
                    c = a / this.textContents().length,
                    (h = Math.round((e - l) / c)) <= 0 ? t.insAtLeftEnd(this) : h >= n.textStr.length ? t.insAtRightEnd(this) : t.insLeftOf(n.splitRight(h))) : t.insAtLeftEnd(this),
                    d = u = (p = e - t.show().getBoundingClientRectWithoutMargin().left) && p < 0 ? mt : ft; t[u] && p * d > 0; )
                        t[u].moveTowards(u, t),
                        d = p,
                        p = e - t.getBoundingClientRectWithoutMargin().left;
                    u * p < -u * d && t[-u].moveTowards(-u, t),
                    t.anticursor ? t.anticursor.parent === this && (f = (m = t[mt]) && m.textStr.length,
                    this.anticursorPosition === f ? t.anticursor = D.fromCursor(t) : (this.anticursorPosition < f ? (g = m.splitRight(this.anticursorPosition),
                    t[mt] = g) : g = t[ft].splitRight(this.anticursorPosition - f),
                    t.anticursor = new D(this,g[mt],g))) : (m = t[mt],
                    this.anticursorPosition = m && m.textStr.length)
                }
            }
            ,
            t.prototype.blur = function(e) {
                ge.prototype.blur.call(this, e),
                e && ("" === this.textContents() ? (this.remove(),
                e[mt] === this ? e[mt] = this[mt] : e[ft] === this && (e[ft] = this[ft])) : E(this))
            }
            ,
            t.prototype.focus = function() {
                ge.prototype.focus.call(this)
            }
            ,
            t
        }(te),
        lt = function(e) {
            function t(t) {
                var n = e.call(this) || this;
                return n.textStr = t,
                n
            }
            return ut(t, e),
            t.prototype.html = function() {
                var e = yt.text(this.textStr);
                return this.setDOM(e),
                e
            }
            ,
            t.prototype.appendText = function(e) {
                this.textStr += e,
                this.domFrag().oneText().appendData(e)
            }
            ,
            t.prototype.prependText = function(e) {
                this.textStr = e + this.textStr,
                this.domFrag().oneText().insertData(0, e)
            }
            ,
            t.prototype.insTextAtDirEnd = function(e, t) {
                i(t),
                t === ft ? this.appendText(e) : this.prependText(e)
            }
            ,
            t.prototype.splitRight = function(e) {
                var n = new t(this.textStr.slice(e)).adopt(this.parent, this, this[ft]);
                return n.setDOM(this.domFrag().oneText().splitText(e)),
                this.textStr = this.textStr.slice(0, e),
                n
            }
            ,
            t.prototype.endChar = function(e, t) {
                return t.charAt(e === mt ? 0 : -1 + t.length)
            }
            ,
            t.prototype.moveTowards = function(e, n) {
                var r, s;
                return i(e),
                r = this.endChar(-e, this.textStr),
                (s = this[-e])instanceof t ? s.insTextAtDirEnd(r, e) : new t(r).createDir(-e, n),
                this.deleteTowards(e, n)
            }
            ,
            t.prototype.mathspeak = function() {
                return this.textStr
            }
            ,
            t.prototype.latexRecursive = function(e) {
                this.checkCursorContextOpen(e),
                e.latex += this.textStr,
                this.checkCursorContextClose(e)
            }
            ,
            t.prototype.deleteTowards = function(e, t) {
                var n;
                this.textStr.length > 1 ? (e === ft ? (this.domFrag().oneText().deleteData(0, 1),
                n = this.textStr[0],
                this.textStr = this.textStr.slice(1)) : (this.domFrag().oneText().deleteData(-1 + this.textStr.length, 1),
                n = this.textStr[this.textStr.length - 1],
                this.textStr = this.textStr.slice(0, -1)),
                t.controller.aria.queue(n)) : (this.remove(),
                t[e] = this[e],
                t.controller.aria.queue(this.textStr))
            }
            ,
            t.prototype.selectTowards = function(e, n) {
                var r, s, o, a, l;
                if (i(e),
                r = n.anticursor)
                    return s = this.endChar(-e, this.textStr),
                    r[e] === this ? (o = new t(s).createDir(e, n),
                    r[e] = o,
                    n.insDirOf(e, o)) : ((a = this[-e])instanceof t ? a.insTextAtDirEnd(s, e) : (o = new t(s).createDir(-e, n),
                    (l = n.selection) && o.domFrag().insDirOf(-e, l.domFrag())),
                    1 === this.textStr.length && r[-e] === this && (r[-e] = this[-e])),
                    this.deleteTowards(e, n)
            }
            ,
            t
        }(te),
        O.text = O.textnormal = O.textrm = O.textup = O.textmd = at,
        O.em = O.italic = O.italics = O.emph = O.textit = O.textsl = M("\\textit", "Italic", "i", {
            class: "mq-text-mode"
        }),
        O.strong = O.bold = O.textbf = M("\\textbf", "Bold", "b", {
            class: "mq-text-mode"
        }),
        O.sf = O.textsf = M("\\textsf", "Sans serif font", "span", {
            class: "mq-sans-serif mq-text-mode"
        }),
        O.tt = O.texttt = M("\\texttt", "Mono space font", "span", {
            class: "mq-monospace mq-text-mode"
        }),
        O.textsc = M("\\textsc", "Variable font", "span", {
            style: "font-variant:small-caps",
            class: "mq-text-mode"
        }),
        O.uppercase = M("\\uppercase", "Uppercase", "span", {
            style: "text-transform:uppercase",
            class: "mq-text-mode"
        }),
        O.lowercase = M("\\lowercase", "Lowercase", "span", {
            style: "text-transform:lowercase",
            class: "mq-text-mode"
        }),
        ct = function(e) {
            function t(t) {
                var n = e.call(this, "$") || this;
                return n.domView = new pe(1,(function(e) {
                    return yt.block("span", {
                        class: "mq-math-mode"
                    }, e[0])
                }
                )),
                n.cursor = t,
                n
            }
            return ut(t, e),
            t.prototype.createBlocks = function() {
                e.prototype.createBlocks.call(this);
                var t = this.getEnd(mt);
                t.cursor = this.cursor,
                t.write = function(e, t) {
                    "$" !== t ? ge.prototype.write.call(this, e, t) : this.isEmpty() ? (e.insRightOf(this.parent),
                    this.parent.deleteTowards(void 0, e),
                    new me("\\$",yt.text("$")).createLeftOf(e.show())) : e[ft] ? e[mt] ? ge.prototype.write.call(this, e, t) : e.insLeftOf(this.parent) : e.insRightOf(this.parent)
                }
            }
            ,
            t.prototype.latexRecursive = function(e) {
                var t, n;
                this.checkCursorContextOpen(e),
                e.latex += "$",
                null === (n = (t = this.getEnd(mt)).latexRecursive) || void 0 === n || n.call(t, e),
                e.latex += "$",
                this.checkCursorContextClose(e)
            }
            ,
            t
        }(ue),
        ht = function(e) {
            function t() {
                return null !== e && e.apply(this, arguments) || this
            }
            return ut(t, e),
            t.prototype.keystroke = function(t, n, r) {
                if ("Spacebar" !== t && "Shift-Spacebar" !== t)
                    return e.prototype.keystroke.call(this, t, n, r)
            }
            ,
            t.prototype.write = function(e, t) {
                var n;
                (e.show().deleteSelection(),
                "$" === t) ? new ct(e).createLeftOf(e) : ("<" === t ? n = yt.entityText("&lt;") : ">" === t && (n = yt.entityText("&gt;")),
                new me(t,n).createLeftOf(e))
            }
            ,
            t
        }(ve),
        q.TextField = function(e) {
            var t;
            return t = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return ut(t, e),
                t.prototype.__mathquillify = function() {
                    return e.prototype.mathquillify.call(this, "mq-editable-field mq-text-mode"),
                    this
                }
                ,
                t.prototype.latex = function(e) {
                    return e ? (this.__controller.renderLatexText(e),
                    this.__controller.blurred && this.__controller.cursor.hide().parent.blur(),
                    this) : this.__controller.exportLatex()
                }
                ,
                t
            }(e.EditableField),
            t.RootBlock = ht,
            t
        }
        ,
        L["\\"] = function(e) {
            function t() {
                var t = null !== e && e.apply(this, arguments) || this;
                return t.ctrlSeq = "\\",
                t.domView = new pe(1,(function(e) {
                    return yt("span", {
                        class: "mq-latex-command-input-wrapper mq-non-leaf"
                    }, [yt("span", {
                        class: "mq-latex-command-input mq-non-leaf"
                    }, [yt.text("\\"), yt.block("span", {}, e[0])])])
                }
                )),
                t.textTemplate = ["\\"],
                t
            }
            return ut(t, e),
            t.prototype.replaces = function(e) {
                this._replacedFragment = e.disown(),
                this.isEmpty = function() {
                    return !1
                }
            }
            ,
            t.prototype.createBlocks = function() {
                var t, n;
                e.prototype.createBlocks.call(this),
                (t = this.getEnd(mt)).focus = function() {
                    return this.parent.domFrag().addClass("mq-hasCursor"),
                    this.isEmpty() && this.parent.domFrag().removeClass("mq-empty"),
                    this
                }
                ,
                t.blur = function() {
                    return this.parent.domFrag().removeClass("mq-hasCursor"),
                    this.isEmpty() && this.parent.domFrag().addClass("mq-empty"),
                    this
                }
                ,
                t.write = function(e, t) {
                    if (e.show().deleteSelection(),
                    t.match(/[a-z]/i))
                        new me(t).createLeftOf(e),
                        e.controller.aria.alert(t);
                    else {
                        var n = this.parent.renderCommand(e);
                        e.controller.aria.queue(n.mathspeak({
                            createdLeftOf: e
                        })),
                        "\\" === t && this.isEmpty() ? e.controller.aria.alert() : e.parent.write(e, t)
                    }
                }
                ,
                n = t.keystroke,
                t.keystroke = function(e, t, r) {
                    if ("Tab" === e || "Enter" === e || "Spacebar" === e) {
                        var i = this.parent.renderCommand(r.cursor);
                        return r.aria.alert(i.mathspeak({
                            createdLeftOf: r.cursor
                        })),
                        void (null == t || t.preventDefault())
                    }
                    return n.call(this, e, t, r)
                }
            }
            ,
            t.prototype.createLeftOf = function(t) {
                var n, r, i;
                e.prototype.createLeftOf.call(this, t),
                this._replacedFragment && (n = this.domFrag(),
                r = n.oneElement(),
                this._replacedFragment.domFrag().addClass("mq-blur"),
                i = function(e) {
                    return e.target = r,
                    r.dispatchEvent(e),
                    !1
                }
                ,
                r.addEventListener("mousedown", i),
                r.addEventListener("mouseup", i),
                this._replacedFragment.domFrag().insertBefore(n.children().first()))
            }
            ,
            t.prototype.latexRecursive = function(e) {
                var t, n;
                this.checkCursorContextOpen(e),
                e.latex += "\\",
                null === (n = (t = this.getEnd(mt)).latexRecursive) || void 0 === n || n.call(t, e),
                e.latex += " ",
                this.checkCursorContextClose(e)
            }
            ,
            t.prototype.renderCommand = function(e) {
                var t, n, r;
                return this.setDOM(this.domFrag().children().lastElement()),
                this.remove(),
                this[ft] ? e.insLeftOf(this[ft]) : e.insAtRightEnd(this.parent),
                (t = this.getEnd(mt).latex()) || (t = " "),
                (n = O[t]) ? (r = void 0,
                r = p(n) ? new n(t) : n(t),
                this._replacedFragment && r.replaces(this._replacedFragment),
                r.createLeftOf(e),
                r) : ((r = new at).replaces(t),
                r.createLeftOf(e),
                e.insRightOf(r),
                this._replacedFragment && this._replacedFragment.remove(),
                r)
            }
            ,
            t
        }(ue),
        e.exports = u
    },
    246451: (e, t, n) => {
        "use strict";
        e.exports = n.p + "images/bccc26004e73e5de783a-caret-up.svg"
    }
    ,
    848963: (e, t, n) => {
        "use strict";
        e.exports = n.p + "images/fd79277404b3662b50b7-corners-out.svg"
    }
    ,
    891974: (e, t, n) => {
        "use strict";
        e.exports = n.p + "images/fd9a87cfce2abaa91130-question.svg"
    }
}]);
//# sourceMappingURL=sourcemaps/en/99961.8f657453721e1d8c0c73.js.map
